"use strict";
function makeMap(str, expectsLowerCase) {
  const map = /* @__PURE__ */ Object.create(null);
  const list = str.split(",");
  for (let i2 = 0; i2 < list.length; i2++) {
    map[list[i2]] = true;
  }
  return expectsLowerCase ? (val) => !!map[val.toLowerCase()] : (val) => !!map[val];
}
function normalizeStyle(value) {
  if (isArray(value)) {
    const res = {};
    for (let i2 = 0; i2 < value.length; i2++) {
      const item = value[i2];
      const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);
      if (normalized) {
        for (const key in normalized) {
          res[key] = normalized[key];
        }
      }
    }
    return res;
  } else if (isString(value)) {
    return value;
  } else if (isObject$2(value)) {
    return value;
  }
}
const listDelimiterRE = /;(?![^(]*\))/g;
const propertyDelimiterRE = /:([^]+)/;
const styleCommentRE = /\/\*.*?\*\//gs;
function parseStringStyle(cssText) {
  const ret = {};
  cssText.replace(styleCommentRE, "").split(listDelimiterRE).forEach((item) => {
    if (item) {
      const tmp = item.split(propertyDelimiterRE);
      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return ret;
}
function normalizeClass(value) {
  let res = "";
  if (isString(value)) {
    res = value;
  } else if (isArray(value)) {
    for (let i2 = 0; i2 < value.length; i2++) {
      const normalized = normalizeClass(value[i2]);
      if (normalized) {
        res += normalized + " ";
      }
    }
  } else if (isObject$2(value)) {
    for (const name in value) {
      if (value[name]) {
        res += name + " ";
      }
    }
  }
  return res.trim();
}
const toDisplayString = (val) => {
  return isString(val) ? val : val == null ? "" : isArray(val) || isObject$2(val) && (val.toString === objectToString || !isFunction(val.toString)) ? JSON.stringify(val, replacer, 2) : String(val);
};
const replacer = (_key, val) => {
  if (val && val.__v_isRef) {
    return replacer(_key, val.value);
  } else if (isMap(val)) {
    return {
      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val2]) => {
        entries[`${key} =>`] = val2;
        return entries;
      }, {})
    };
  } else if (isSet(val)) {
    return {
      [`Set(${val.size})`]: [...val.values()]
    };
  } else if (isObject$2(val) && !isArray(val) && !isPlainObject$1(val)) {
    return String(val);
  }
  return val;
};
const EMPTY_OBJ = Object.freeze({});
const EMPTY_ARR = Object.freeze([]);
const NOOP = () => {
};
const NO = () => false;
const onRE = /^on[^a-z]/;
const isOn = (key) => onRE.test(key);
const isModelListener = (key) => key.startsWith("onUpdate:");
const extend = Object.assign;
const remove = (arr, el) => {
  const i2 = arr.indexOf(el);
  if (i2 > -1) {
    arr.splice(i2, 1);
  }
};
const hasOwnProperty$1 = Object.prototype.hasOwnProperty;
const hasOwn$1 = (val, key) => hasOwnProperty$1.call(val, key);
const isArray = Array.isArray;
const isMap = (val) => toTypeString(val) === "[object Map]";
const isSet = (val) => toTypeString(val) === "[object Set]";
const isFunction = (val) => typeof val === "function";
const isString = (val) => typeof val === "string";
const isSymbol = (val) => typeof val === "symbol";
const isObject$2 = (val) => val !== null && typeof val === "object";
const isPromise$1 = (val) => {
  return isObject$2(val) && isFunction(val.then) && isFunction(val.catch);
};
const objectToString = Object.prototype.toString;
const toTypeString = (value) => objectToString.call(value);
const toRawType = (value) => {
  return toTypeString(value).slice(8, -1);
};
const isPlainObject$1 = (val) => toTypeString(val) === "[object Object]";
const isIntegerKey = (key) => isString(key) && key !== "NaN" && key[0] !== "-" && "" + parseInt(key, 10) === key;
const isReservedProp = /* @__PURE__ */ makeMap(
  ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
);
const isBuiltInDirective = /* @__PURE__ */ makeMap("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo");
const cacheStringFunction = (fn2) => {
  const cache = /* @__PURE__ */ Object.create(null);
  return (str) => {
    const hit = cache[str];
    return hit || (cache[str] = fn2(str));
  };
};
const camelizeRE = /-(\w)/g;
const camelize = cacheStringFunction((str) => {
  return str.replace(camelizeRE, (_2, c2) => c2 ? c2.toUpperCase() : "");
});
const hyphenateRE = /\B([A-Z])/g;
const hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, "-$1").toLowerCase());
const capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));
const toHandlerKey = cacheStringFunction((str) => str ? `on${capitalize(str)}` : ``);
const hasChanged = (value, oldValue) => !Object.is(value, oldValue);
const invokeArrayFns$1 = (fns, arg) => {
  for (let i2 = 0; i2 < fns.length; i2++) {
    fns[i2](arg);
  }
};
const def = (obj, key, value) => {
  Object.defineProperty(obj, key, {
    configurable: true,
    enumerable: false,
    value
  });
};
const toNumber = (val) => {
  const n2 = parseFloat(val);
  return isNaN(n2) ? val : n2;
};
const isObject$1 = (val) => val !== null && typeof val === "object";
const defaultDelimiters = ["{", "}"];
class BaseFormatter {
  constructor() {
    this._caches = /* @__PURE__ */ Object.create(null);
  }
  interpolate(message, values, delimiters = defaultDelimiters) {
    if (!values) {
      return [message];
    }
    let tokens = this._caches[message];
    if (!tokens) {
      tokens = parse(message, delimiters);
      this._caches[message] = tokens;
    }
    return compile$1(tokens, values);
  }
}
const RE_TOKEN_LIST_VALUE = /^(?:\d)+/;
const RE_TOKEN_NAMED_VALUE = /^(?:\w)+/;
function parse(format, [startDelimiter, endDelimiter]) {
  const tokens = [];
  let position = 0;
  let text = "";
  while (position < format.length) {
    let char = format[position++];
    if (char === startDelimiter) {
      if (text) {
        tokens.push({ type: "text", value: text });
      }
      text = "";
      let sub = "";
      char = format[position++];
      while (char !== void 0 && char !== endDelimiter) {
        sub += char;
        char = format[position++];
      }
      const isClosed = char === endDelimiter;
      const type = RE_TOKEN_LIST_VALUE.test(sub) ? "list" : isClosed && RE_TOKEN_NAMED_VALUE.test(sub) ? "named" : "unknown";
      tokens.push({ value: sub, type });
    } else {
      text += char;
    }
  }
  text && tokens.push({ type: "text", value: text });
  return tokens;
}
function compile$1(tokens, values) {
  const compiled = [];
  let index2 = 0;
  const mode = Array.isArray(values) ? "list" : isObject$1(values) ? "named" : "unknown";
  if (mode === "unknown") {
    return compiled;
  }
  while (index2 < tokens.length) {
    const token = tokens[index2];
    switch (token.type) {
      case "text":
        compiled.push(token.value);
        break;
      case "list":
        compiled.push(values[parseInt(token.value, 10)]);
        break;
      case "named":
        if (mode === "named") {
          compiled.push(values[token.value]);
        } else {
          {
            console.warn(`Type of token '${token.type}' and format of value '${mode}' don't match!`);
          }
        }
        break;
      case "unknown":
        {
          console.warn(`Detect 'unknown' type of token!`);
        }
        break;
    }
    index2++;
  }
  return compiled;
}
const LOCALE_ZH_HANS = "zh-Hans";
const LOCALE_ZH_HANT = "zh-Hant";
const LOCALE_EN = "en";
const LOCALE_FR = "fr";
const LOCALE_ES = "es";
const hasOwnProperty = Object.prototype.hasOwnProperty;
const hasOwn = (val, key) => hasOwnProperty.call(val, key);
const defaultFormatter = new BaseFormatter();
function include(str, parts) {
  return !!parts.find((part) => str.indexOf(part) !== -1);
}
function startsWith(str, parts) {
  return parts.find((part) => str.indexOf(part) === 0);
}
function normalizeLocale(locale, messages) {
  if (!locale) {
    return;
  }
  locale = locale.trim().replace(/_/g, "-");
  if (messages && messages[locale]) {
    return locale;
  }
  locale = locale.toLowerCase();
  if (locale === "chinese") {
    return LOCALE_ZH_HANS;
  }
  if (locale.indexOf("zh") === 0) {
    if (locale.indexOf("-hans") > -1) {
      return LOCALE_ZH_HANS;
    }
    if (locale.indexOf("-hant") > -1) {
      return LOCALE_ZH_HANT;
    }
    if (include(locale, ["-tw", "-hk", "-mo", "-cht"])) {
      return LOCALE_ZH_HANT;
    }
    return LOCALE_ZH_HANS;
  }
  const lang = startsWith(locale, [LOCALE_EN, LOCALE_FR, LOCALE_ES]);
  if (lang) {
    return lang;
  }
}
class I18n {
  constructor({ locale, fallbackLocale, messages, watcher, formater }) {
    this.locale = LOCALE_EN;
    this.fallbackLocale = LOCALE_EN;
    this.message = {};
    this.messages = {};
    this.watchers = [];
    if (fallbackLocale) {
      this.fallbackLocale = fallbackLocale;
    }
    this.formater = formater || defaultFormatter;
    this.messages = messages || {};
    this.setLocale(locale || LOCALE_EN);
    if (watcher) {
      this.watchLocale(watcher);
    }
  }
  setLocale(locale) {
    const oldLocale = this.locale;
    this.locale = normalizeLocale(locale, this.messages) || this.fallbackLocale;
    if (!this.messages[this.locale]) {
      this.messages[this.locale] = {};
    }
    this.message = this.messages[this.locale];
    if (oldLocale !== this.locale) {
      this.watchers.forEach((watcher) => {
        watcher(this.locale, oldLocale);
      });
    }
  }
  getLocale() {
    return this.locale;
  }
  watchLocale(fn2) {
    const index2 = this.watchers.push(fn2) - 1;
    return () => {
      this.watchers.splice(index2, 1);
    };
  }
  add(locale, message, override = true) {
    const curMessages = this.messages[locale];
    if (curMessages) {
      if (override) {
        Object.assign(curMessages, message);
      } else {
        Object.keys(message).forEach((key) => {
          if (!hasOwn(curMessages, key)) {
            curMessages[key] = message[key];
          }
        });
      }
    } else {
      this.messages[locale] = message;
    }
  }
  f(message, values, delimiters) {
    return this.formater.interpolate(message, values, delimiters).join("");
  }
  t(key, locale, values) {
    let message = this.message;
    if (typeof locale === "string") {
      locale = normalizeLocale(locale, this.messages);
      locale && (message = this.messages[locale]);
    } else {
      values = locale;
    }
    if (!hasOwn(message, key)) {
      console.warn(`Cannot translate the value of keypath ${key}. Use the value of keypath as default.`);
      return key;
    }
    return this.formater.interpolate(message[key], values).join("");
  }
}
function watchAppLocale(appVm, i18n) {
  if (appVm.$watchLocale) {
    appVm.$watchLocale((newLocale) => {
      i18n.setLocale(newLocale);
    });
  } else {
    appVm.$watch(() => appVm.$locale, (newLocale) => {
      i18n.setLocale(newLocale);
    });
  }
}
function getDefaultLocale() {
  if (typeof index$1 !== "undefined" && index$1.getLocale) {
    return index$1.getLocale();
  }
  if (typeof global !== "undefined" && global.getLocale) {
    return global.getLocale();
  }
  return LOCALE_EN;
}
function initVueI18n(locale, messages = {}, fallbackLocale, watcher) {
  if (typeof locale !== "string") {
    [locale, messages] = [
      messages,
      locale
    ];
  }
  if (typeof locale !== "string") {
    locale = getDefaultLocale();
  }
  if (typeof fallbackLocale !== "string") {
    fallbackLocale = typeof __uniConfig !== "undefined" && __uniConfig.fallbackLocale || LOCALE_EN;
  }
  const i18n = new I18n({
    locale,
    fallbackLocale,
    messages,
    watcher
  });
  let t2 = (key, values) => {
    if (typeof getApp !== "function") {
      t2 = function(key2, values2) {
        return i18n.t(key2, values2);
      };
    } else {
      let isWatchedAppLocale = false;
      t2 = function(key2, values2) {
        const appVm = getApp().$vm;
        if (appVm) {
          appVm.$locale;
          if (!isWatchedAppLocale) {
            isWatchedAppLocale = true;
            watchAppLocale(appVm, i18n);
          }
        }
        return i18n.t(key2, values2);
      };
    }
    return t2(key, values);
  };
  return {
    i18n,
    f(message, values, delimiters) {
      return i18n.f(message, values, delimiters);
    },
    t(key, values) {
      return t2(key, values);
    },
    add(locale2, message, override = true) {
      return i18n.add(locale2, message, override);
    },
    watch(fn2) {
      return i18n.watchLocale(fn2);
    },
    getLocale() {
      return i18n.getLocale();
    },
    setLocale(newLocale) {
      return i18n.setLocale(newLocale);
    }
  };
}
const LINEFEED = "\n";
const SLOT_DEFAULT_NAME = "d";
const ON_SHOW = "onShow";
const ON_HIDE = "onHide";
const ON_LAUNCH = "onLaunch";
const ON_ERROR = "onError";
const ON_THEME_CHANGE = "onThemeChange";
const ON_PAGE_NOT_FOUND = "onPageNotFound";
const ON_UNHANDLE_REJECTION = "onUnhandledRejection";
const ON_LOAD = "onLoad";
const ON_READY = "onReady";
const ON_UNLOAD = "onUnload";
const ON_INIT = "onInit";
const ON_SAVE_EXIT_STATE = "onSaveExitState";
const ON_RESIZE = "onResize";
const ON_BACK_PRESS = "onBackPress";
const ON_PAGE_SCROLL = "onPageScroll";
const ON_TAB_ITEM_TAP = "onTabItemTap";
const ON_REACH_BOTTOM = "onReachBottom";
const ON_PULL_DOWN_REFRESH = "onPullDownRefresh";
const ON_SHARE_TIMELINE = "onShareTimeline";
const ON_ADD_TO_FAVORITES = "onAddToFavorites";
const ON_SHARE_APP_MESSAGE = "onShareAppMessage";
const ON_NAVIGATION_BAR_BUTTON_TAP = "onNavigationBarButtonTap";
const ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED = "onNavigationBarSearchInputClicked";
const ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED = "onNavigationBarSearchInputChanged";
const ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED = "onNavigationBarSearchInputConfirmed";
const ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED = "onNavigationBarSearchInputFocusChanged";
const customizeRE = /:/g;
function customizeEvent(str) {
  return camelize(str.replace(customizeRE, "-"));
}
function hasLeadingSlash(str) {
  return str.indexOf("/") === 0;
}
function addLeadingSlash(str) {
  return hasLeadingSlash(str) ? str : "/" + str;
}
const invokeArrayFns = (fns, arg) => {
  let ret;
  for (let i2 = 0; i2 < fns.length; i2++) {
    ret = fns[i2](arg);
  }
  return ret;
};
function once(fn2, ctx = null) {
  let res;
  return (...args) => {
    if (fn2) {
      res = fn2.apply(ctx, args);
      fn2 = null;
    }
    return res;
  };
}
function getValueByDataPath(obj, path) {
  if (!isString(path)) {
    return;
  }
  path = path.replace(/\[(\d+)\]/g, ".$1");
  const parts = path.split(".");
  let key = parts[0];
  if (!obj) {
    obj = {};
  }
  if (parts.length === 1) {
    return obj[key];
  }
  return getValueByDataPath(obj[key], parts.slice(1).join("."));
}
function sortObject(obj) {
  let sortObj = {};
  if (isPlainObject$1(obj)) {
    Object.keys(obj).sort().forEach((key) => {
      const _key = key;
      sortObj[_key] = obj[_key];
    });
  }
  return !Object.keys(sortObj) ? obj : sortObj;
}
const encode = encodeURIComponent;
function stringifyQuery(obj, encodeStr = encode) {
  const res = obj ? Object.keys(obj).map((key) => {
    let val = obj[key];
    if (typeof val === void 0 || val === null) {
      val = "";
    } else if (isPlainObject$1(val)) {
      val = JSON.stringify(val);
    }
    return encodeStr(key) + "=" + encodeStr(val);
  }).filter((x2) => x2.length > 0).join("&") : null;
  return res ? `?${res}` : "";
}
const PAGE_HOOKS = [
  ON_INIT,
  ON_LOAD,
  ON_SHOW,
  ON_HIDE,
  ON_UNLOAD,
  ON_BACK_PRESS,
  ON_PAGE_SCROLL,
  ON_TAB_ITEM_TAP,
  ON_REACH_BOTTOM,
  ON_PULL_DOWN_REFRESH,
  ON_SHARE_TIMELINE,
  ON_SHARE_APP_MESSAGE,
  ON_ADD_TO_FAVORITES,
  ON_SAVE_EXIT_STATE,
  ON_NAVIGATION_BAR_BUTTON_TAP,
  ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED,
  ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED,
  ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED,
  ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED
];
function isRootHook(name) {
  return PAGE_HOOKS.indexOf(name) > -1;
}
const UniLifecycleHooks = [
  ON_SHOW,
  ON_HIDE,
  ON_LAUNCH,
  ON_ERROR,
  ON_THEME_CHANGE,
  ON_PAGE_NOT_FOUND,
  ON_UNHANDLE_REJECTION,
  ON_INIT,
  ON_LOAD,
  ON_READY,
  ON_UNLOAD,
  ON_RESIZE,
  ON_BACK_PRESS,
  ON_PAGE_SCROLL,
  ON_TAB_ITEM_TAP,
  ON_REACH_BOTTOM,
  ON_PULL_DOWN_REFRESH,
  ON_SHARE_TIMELINE,
  ON_ADD_TO_FAVORITES,
  ON_SHARE_APP_MESSAGE,
  ON_SAVE_EXIT_STATE,
  ON_NAVIGATION_BAR_BUTTON_TAP,
  ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED,
  ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED,
  ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED,
  ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED
];
const MINI_PROGRAM_PAGE_RUNTIME_HOOKS = /* @__PURE__ */ (() => {
  return {
    onPageScroll: 1,
    onShareAppMessage: 1 << 1,
    onShareTimeline: 1 << 2
  };
})();
function isUniLifecycleHook(name, value, checkType = true) {
  if (checkType && !isFunction(value)) {
    return false;
  }
  if (UniLifecycleHooks.indexOf(name) > -1) {
    return true;
  } else if (name.indexOf("on") === 0) {
    return true;
  }
  return false;
}
let vueApp;
const createVueAppHooks = [];
function onCreateVueApp(hook) {
  if (vueApp) {
    return hook(vueApp);
  }
  createVueAppHooks.push(hook);
}
function invokeCreateVueAppHook(app) {
  vueApp = app;
  createVueAppHooks.forEach((hook) => hook(app));
}
const invokeCreateErrorHandler = once((app, createErrorHandler2) => {
  if (isFunction(app._component.onError)) {
    return createErrorHandler2(app);
  }
});
const E$1 = function() {
};
E$1.prototype = {
  on: function(name, callback, ctx) {
    var e2 = this.e || (this.e = {});
    (e2[name] || (e2[name] = [])).push({
      fn: callback,
      ctx
    });
    return this;
  },
  once: function(name, callback, ctx) {
    var self2 = this;
    function listener() {
      self2.off(name, listener);
      callback.apply(ctx, arguments);
    }
    listener._ = callback;
    return this.on(name, listener, ctx);
  },
  emit: function(name) {
    var data = [].slice.call(arguments, 1);
    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();
    var i2 = 0;
    var len = evtArr.length;
    for (i2; i2 < len; i2++) {
      evtArr[i2].fn.apply(evtArr[i2].ctx, data);
    }
    return this;
  },
  off: function(name, callback) {
    var e2 = this.e || (this.e = {});
    var evts = e2[name];
    var liveEvents = [];
    if (evts && callback) {
      for (var i2 = 0, len = evts.length; i2 < len; i2++) {
        if (evts[i2].fn !== callback && evts[i2].fn._ !== callback)
          liveEvents.push(evts[i2]);
      }
    }
    liveEvents.length ? e2[name] = liveEvents : delete e2[name];
    return this;
  }
};
var E$1$1 = E$1;
function getBaseSystemInfo() {
  return wx.getSystemInfoSync();
}
function validateProtocolFail(name, msg) {
  console.warn(`${name}: ${msg}`);
}
function validateProtocol(name, data, protocol, onFail) {
  if (!onFail) {
    onFail = validateProtocolFail;
  }
  for (const key in protocol) {
    const errMsg = validateProp$1(key, data[key], protocol[key], !hasOwn$1(data, key));
    if (isString(errMsg)) {
      onFail(name, errMsg);
    }
  }
}
function validateProtocols(name, args, protocol, onFail) {
  if (!protocol) {
    return;
  }
  if (!isArray(protocol)) {
    return validateProtocol(name, args[0] || /* @__PURE__ */ Object.create(null), protocol, onFail);
  }
  const len = protocol.length;
  const argsLen = args.length;
  for (let i2 = 0; i2 < len; i2++) {
    const opts = protocol[i2];
    const data = /* @__PURE__ */ Object.create(null);
    if (argsLen > i2) {
      data[opts.name] = args[i2];
    }
    validateProtocol(name, data, { [opts.name]: opts }, onFail);
  }
}
function validateProp$1(name, value, prop, isAbsent) {
  if (!isPlainObject$1(prop)) {
    prop = { type: prop };
  }
  const { type, required, validator } = prop;
  if (required && isAbsent) {
    return 'Missing required args: "' + name + '"';
  }
  if (value == null && !required) {
    return;
  }
  if (type != null) {
    let isValid = false;
    const types = isArray(type) ? type : [type];
    const expectedTypes = [];
    for (let i2 = 0; i2 < types.length && !isValid; i2++) {
      const { valid, expectedType } = assertType$1(value, types[i2]);
      expectedTypes.push(expectedType || "");
      isValid = valid;
    }
    if (!isValid) {
      return getInvalidTypeMessage$1(name, value, expectedTypes);
    }
  }
  if (validator) {
    return validator(value);
  }
}
const isSimpleType$1 = /* @__PURE__ */ makeMap("String,Number,Boolean,Function,Symbol");
function assertType$1(value, type) {
  let valid;
  const expectedType = getType$1(type);
  if (isSimpleType$1(expectedType)) {
    const t2 = typeof value;
    valid = t2 === expectedType.toLowerCase();
    if (!valid && t2 === "object") {
      valid = value instanceof type;
    }
  } else if (expectedType === "Object") {
    valid = isObject$2(value);
  } else if (expectedType === "Array") {
    valid = isArray(value);
  } else {
    {
      valid = value instanceof type;
    }
  }
  return {
    valid,
    expectedType
  };
}
function getInvalidTypeMessage$1(name, value, expectedTypes) {
  let message = `Invalid args: type check failed for args "${name}". Expected ${expectedTypes.map(capitalize).join(", ")}`;
  const expectedType = expectedTypes[0];
  const receivedType = toRawType(value);
  const expectedValue = styleValue$1(value, expectedType);
  const receivedValue = styleValue$1(value, receivedType);
  if (expectedTypes.length === 1 && isExplicable$1(expectedType) && !isBoolean$1(expectedType, receivedType)) {
    message += ` with value ${expectedValue}`;
  }
  message += `, got ${receivedType} `;
  if (isExplicable$1(receivedType)) {
    message += `with value ${receivedValue}.`;
  }
  return message;
}
function getType$1(ctor) {
  const match = ctor && ctor.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : "";
}
function styleValue$1(value, type) {
  if (type === "String") {
    return `"${value}"`;
  } else if (type === "Number") {
    return `${Number(value)}`;
  } else {
    return `${value}`;
  }
}
function isExplicable$1(type) {
  const explicitTypes = ["string", "number", "boolean"];
  return explicitTypes.some((elem) => type.toLowerCase() === elem);
}
function isBoolean$1(...args) {
  return args.some((elem) => elem.toLowerCase() === "boolean");
}
function tryCatch(fn2) {
  return function() {
    try {
      return fn2.apply(fn2, arguments);
    } catch (e2) {
      console.error(e2);
    }
  };
}
let invokeCallbackId = 1;
const invokeCallbacks = {};
function addInvokeCallback(id, name, callback, keepAlive = false) {
  invokeCallbacks[id] = {
    name,
    keepAlive,
    callback
  };
  return id;
}
function invokeCallback(id, res, extras) {
  if (typeof id === "number") {
    const opts = invokeCallbacks[id];
    if (opts) {
      if (!opts.keepAlive) {
        delete invokeCallbacks[id];
      }
      return opts.callback(res, extras);
    }
  }
  return res;
}
const API_SUCCESS = "success";
const API_FAIL = "fail";
const API_COMPLETE = "complete";
function getApiCallbacks(args) {
  const apiCallbacks = {};
  for (const name in args) {
    const fn2 = args[name];
    if (isFunction(fn2)) {
      apiCallbacks[name] = tryCatch(fn2);
      delete args[name];
    }
  }
  return apiCallbacks;
}
function normalizeErrMsg$1(errMsg, name) {
  if (!errMsg || errMsg.indexOf(":fail") === -1) {
    return name + ":ok";
  }
  return name + errMsg.substring(errMsg.indexOf(":fail"));
}
function createAsyncApiCallback(name, args = {}, { beforeAll, beforeSuccess } = {}) {
  if (!isPlainObject$1(args)) {
    args = {};
  }
  const { success, fail, complete } = getApiCallbacks(args);
  const hasSuccess = isFunction(success);
  const hasFail = isFunction(fail);
  const hasComplete = isFunction(complete);
  const callbackId = invokeCallbackId++;
  addInvokeCallback(callbackId, name, (res) => {
    res = res || {};
    res.errMsg = normalizeErrMsg$1(res.errMsg, name);
    isFunction(beforeAll) && beforeAll(res);
    if (res.errMsg === name + ":ok") {
      isFunction(beforeSuccess) && beforeSuccess(res, args);
      hasSuccess && success(res);
    } else {
      hasFail && fail(res);
    }
    hasComplete && complete(res);
  });
  return callbackId;
}
const HOOK_SUCCESS = "success";
const HOOK_FAIL = "fail";
const HOOK_COMPLETE = "complete";
const globalInterceptors = {};
const scopedInterceptors = {};
function wrapperHook(hook) {
  return function(data) {
    return hook(data) || data;
  };
}
function queue$1(hooks, data) {
  let promise = false;
  for (let i2 = 0; i2 < hooks.length; i2++) {
    const hook = hooks[i2];
    if (promise) {
      promise = Promise.resolve(wrapperHook(hook));
    } else {
      const res = hook(data);
      if (isPromise$1(res)) {
        promise = Promise.resolve(res);
      }
      if (res === false) {
        return {
          then() {
          },
          catch() {
          }
        };
      }
    }
  }
  return promise || {
    then(callback) {
      return callback(data);
    },
    catch() {
    }
  };
}
function wrapperOptions(interceptors2, options = {}) {
  [HOOK_SUCCESS, HOOK_FAIL, HOOK_COMPLETE].forEach((name) => {
    const hooks = interceptors2[name];
    if (!isArray(hooks)) {
      return;
    }
    const oldCallback = options[name];
    options[name] = function callbackInterceptor(res) {
      queue$1(hooks, res).then((res2) => {
        return isFunction(oldCallback) && oldCallback(res2) || res2;
      });
    };
  });
  return options;
}
function wrapperReturnValue(method, returnValue) {
  const returnValueHooks = [];
  if (isArray(globalInterceptors.returnValue)) {
    returnValueHooks.push(...globalInterceptors.returnValue);
  }
  const interceptor = scopedInterceptors[method];
  if (interceptor && isArray(interceptor.returnValue)) {
    returnValueHooks.push(...interceptor.returnValue);
  }
  returnValueHooks.forEach((hook) => {
    returnValue = hook(returnValue) || returnValue;
  });
  return returnValue;
}
function getApiInterceptorHooks(method) {
  const interceptor = /* @__PURE__ */ Object.create(null);
  Object.keys(globalInterceptors).forEach((hook) => {
    if (hook !== "returnValue") {
      interceptor[hook] = globalInterceptors[hook].slice();
    }
  });
  const scopedInterceptor = scopedInterceptors[method];
  if (scopedInterceptor) {
    Object.keys(scopedInterceptor).forEach((hook) => {
      if (hook !== "returnValue") {
        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);
      }
    });
  }
  return interceptor;
}
function invokeApi(method, api, options, params) {
  const interceptor = getApiInterceptorHooks(method);
  if (interceptor && Object.keys(interceptor).length) {
    if (isArray(interceptor.invoke)) {
      const res = queue$1(interceptor.invoke, options);
      return res.then((options2) => {
        return api(wrapperOptions(interceptor, options2), ...params);
      });
    } else {
      return api(wrapperOptions(interceptor, options), ...params);
    }
  }
  return api(options, ...params);
}
function hasCallback(args) {
  if (isPlainObject$1(args) && [API_SUCCESS, API_FAIL, API_COMPLETE].find((cb) => isFunction(args[cb]))) {
    return true;
  }
  return false;
}
function handlePromise(promise) {
  return promise;
}
function promisify$1(name, fn2) {
  return (args = {}, ...rest) => {
    if (hasCallback(args)) {
      return wrapperReturnValue(name, invokeApi(name, fn2, args, rest));
    }
    return wrapperReturnValue(name, handlePromise(new Promise((resolve2, reject) => {
      invokeApi(name, fn2, extend(args, { success: resolve2, fail: reject }), rest);
    })));
  };
}
function formatApiArgs(args, options) {
  const params = args[0];
  if (!options || !isPlainObject$1(options.formatArgs) && isPlainObject$1(params)) {
    return;
  }
  const formatArgs = options.formatArgs;
  const keys = Object.keys(formatArgs);
  for (let i2 = 0; i2 < keys.length; i2++) {
    const name = keys[i2];
    const formatterOrDefaultValue = formatArgs[name];
    if (isFunction(formatterOrDefaultValue)) {
      const errMsg = formatterOrDefaultValue(args[0][name], params);
      if (isString(errMsg)) {
        return errMsg;
      }
    } else {
      if (!hasOwn$1(params, name)) {
        params[name] = formatterOrDefaultValue;
      }
    }
  }
}
function invokeSuccess(id, name, res) {
  return invokeCallback(id, extend(res || {}, { errMsg: name + ":ok" }));
}
function invokeFail(id, name, errMsg, errRes) {
  return invokeCallback(id, extend({ errMsg: name + ":fail" + (errMsg ? " " + errMsg : "") }, errRes));
}
function beforeInvokeApi(name, args, protocol, options) {
  {
    validateProtocols(name, args, protocol);
  }
  if (options && options.beforeInvoke) {
    const errMsg2 = options.beforeInvoke(args);
    if (isString(errMsg2)) {
      return errMsg2;
    }
  }
  const errMsg = formatApiArgs(args, options);
  if (errMsg) {
    return errMsg;
  }
}
function normalizeErrMsg(errMsg) {
  if (!errMsg || isString(errMsg)) {
    return errMsg;
  }
  if (errMsg.stack) {
    console.error(errMsg.message + LINEFEED + errMsg.stack);
    return errMsg.message;
  }
  return errMsg;
}
function wrapperTaskApi(name, fn2, protocol, options) {
  return (args) => {
    const id = createAsyncApiCallback(name, args, options);
    const errMsg = beforeInvokeApi(name, [args], protocol, options);
    if (errMsg) {
      return invokeFail(id, name, errMsg);
    }
    return fn2(args, {
      resolve: (res) => invokeSuccess(id, name, res),
      reject: (errMsg2, errRes) => invokeFail(id, name, normalizeErrMsg(errMsg2), errRes)
    });
  };
}
function wrapperSyncApi(name, fn2, protocol, options) {
  return (...args) => {
    const errMsg = beforeInvokeApi(name, args, protocol, options);
    if (errMsg) {
      throw new Error(errMsg);
    }
    return fn2.apply(null, args);
  };
}
function wrapperAsyncApi(name, fn2, protocol, options) {
  return wrapperTaskApi(name, fn2, protocol, options);
}
function defineSyncApi(name, fn2, protocol, options) {
  return wrapperSyncApi(name, fn2, protocol, options);
}
function defineAsyncApi(name, fn2, protocol, options) {
  return promisify$1(name, wrapperAsyncApi(name, fn2, protocol, options));
}
const API_UPX2PX = "upx2px";
const Upx2pxProtocol = [
  {
    name: "upx",
    type: [Number, String],
    required: true
  }
];
const EPS = 1e-4;
const BASE_DEVICE_WIDTH = 750;
let isIOS = false;
let deviceWidth = 0;
let deviceDPR = 0;
function checkDeviceWidth() {
  const { platform, pixelRatio, windowWidth } = getBaseSystemInfo();
  deviceWidth = windowWidth;
  deviceDPR = pixelRatio;
  isIOS = platform === "ios";
}
const upx2px = defineSyncApi(API_UPX2PX, (number, newDeviceWidth) => {
  if (deviceWidth === 0) {
    checkDeviceWidth();
  }
  number = Number(number);
  if (number === 0) {
    return 0;
  }
  let width = newDeviceWidth || deviceWidth;
  let result = number / BASE_DEVICE_WIDTH * width;
  if (result < 0) {
    result = -result;
  }
  result = Math.floor(result + EPS);
  if (result === 0) {
    if (deviceDPR === 1 || !isIOS) {
      result = 1;
    } else {
      result = 0.5;
    }
  }
  return number < 0 ? -result : result;
}, Upx2pxProtocol);
const API_ADD_INTERCEPTOR = "addInterceptor";
const API_REMOVE_INTERCEPTOR = "removeInterceptor";
const AddInterceptorProtocol = [
  {
    name: "method",
    type: [String, Object],
    required: true
  }
];
const RemoveInterceptorProtocol = AddInterceptorProtocol;
function mergeInterceptorHook(interceptors2, interceptor) {
  Object.keys(interceptor).forEach((hook) => {
    if (isFunction(interceptor[hook])) {
      interceptors2[hook] = mergeHook(interceptors2[hook], interceptor[hook]);
    }
  });
}
function removeInterceptorHook(interceptors2, interceptor) {
  if (!interceptors2 || !interceptor) {
    return;
  }
  Object.keys(interceptor).forEach((name) => {
    const hooks = interceptors2[name];
    const hook = interceptor[name];
    if (isArray(hooks) && isFunction(hook)) {
      remove(hooks, hook);
    }
  });
}
function mergeHook(parentVal, childVal) {
  const res = childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;
  return res ? dedupeHooks(res) : res;
}
function dedupeHooks(hooks) {
  const res = [];
  for (let i2 = 0; i2 < hooks.length; i2++) {
    if (res.indexOf(hooks[i2]) === -1) {
      res.push(hooks[i2]);
    }
  }
  return res;
}
const addInterceptor = defineSyncApi(API_ADD_INTERCEPTOR, (method, interceptor) => {
  if (isString(method) && isPlainObject$1(interceptor)) {
    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), interceptor);
  } else if (isPlainObject$1(method)) {
    mergeInterceptorHook(globalInterceptors, method);
  }
}, AddInterceptorProtocol);
const removeInterceptor = defineSyncApi(API_REMOVE_INTERCEPTOR, (method, interceptor) => {
  if (isString(method)) {
    if (isPlainObject$1(interceptor)) {
      removeInterceptorHook(scopedInterceptors[method], interceptor);
    } else {
      delete scopedInterceptors[method];
    }
  } else if (isPlainObject$1(method)) {
    removeInterceptorHook(globalInterceptors, method);
  }
}, RemoveInterceptorProtocol);
const interceptors = {};
const API_ON = "$on";
const OnProtocol = [
  {
    name: "event",
    type: String,
    required: true
  },
  {
    name: "callback",
    type: Function,
    required: true
  }
];
const API_ONCE = "$once";
const OnceProtocol = OnProtocol;
const API_OFF = "$off";
const OffProtocol = [
  {
    name: "event",
    type: [String, Array]
  },
  {
    name: "callback",
    type: Function
  }
];
const API_EMIT = "$emit";
const EmitProtocol = [
  {
    name: "event",
    type: String,
    required: true
  }
];
const emitter = new E$1$1();
const $on = defineSyncApi(API_ON, (name, callback) => {
  emitter.on(name, callback);
  return () => emitter.off(name, callback);
}, OnProtocol);
const $once = defineSyncApi(API_ONCE, (name, callback) => {
  emitter.once(name, callback);
  return () => emitter.off(name, callback);
}, OnceProtocol);
const $off = defineSyncApi(API_OFF, (name, callback) => {
  if (!name) {
    emitter.e = {};
    return;
  }
  if (!isArray(name))
    name = [name];
  name.forEach((n2) => emitter.off(n2, callback));
}, OffProtocol);
const $emit = defineSyncApi(API_EMIT, (name, ...args) => {
  emitter.emit(name, ...args);
}, EmitProtocol);
let cid;
let cidErrMsg;
let enabled;
function normalizePushMessage(message) {
  try {
    return JSON.parse(message);
  } catch (e2) {
  }
  return message;
}
function invokePushCallback(args) {
  if (args.type === "enabled") {
    enabled = true;
  } else if (args.type === "clientId") {
    cid = args.cid;
    cidErrMsg = args.errMsg;
    invokeGetPushCidCallbacks(cid, args.errMsg);
  } else if (args.type === "pushMsg") {
    const message = {
      type: "receive",
      data: normalizePushMessage(args.message)
    };
    for (let i2 = 0; i2 < onPushMessageCallbacks.length; i2++) {
      const callback = onPushMessageCallbacks[i2];
      callback(message);
      if (message.stopped) {
        break;
      }
    }
  } else if (args.type === "click") {
    onPushMessageCallbacks.forEach((callback) => {
      callback({
        type: "click",
        data: normalizePushMessage(args.message)
      });
    });
  }
}
const getPushCidCallbacks = [];
function invokeGetPushCidCallbacks(cid2, errMsg) {
  getPushCidCallbacks.forEach((callback) => {
    callback(cid2, errMsg);
  });
  getPushCidCallbacks.length = 0;
}
const API_GET_PUSH_CLIENT_ID = "getPushClientId";
const getPushClientId = defineAsyncApi(API_GET_PUSH_CLIENT_ID, (_2, { resolve: resolve2, reject }) => {
  Promise.resolve().then(() => {
    if (typeof enabled === "undefined") {
      enabled = false;
      cid = "";
      cidErrMsg = "uniPush is not enabled";
    }
    getPushCidCallbacks.push((cid2, errMsg) => {
      if (cid2) {
        resolve2({ cid: cid2 });
      } else {
        reject(errMsg);
      }
    });
    if (typeof cid !== "undefined") {
      invokeGetPushCidCallbacks(cid, cidErrMsg);
    }
  });
});
const onPushMessageCallbacks = [];
const onPushMessage = (fn2) => {
  if (onPushMessageCallbacks.indexOf(fn2) === -1) {
    onPushMessageCallbacks.push(fn2);
  }
};
const offPushMessage = (fn2) => {
  if (!fn2) {
    onPushMessageCallbacks.length = 0;
  } else {
    const index2 = onPushMessageCallbacks.indexOf(fn2);
    if (index2 > -1) {
      onPushMessageCallbacks.splice(index2, 1);
    }
  }
};
const SYNC_API_RE = /^\$|getLocale|setLocale|sendNativeEvent|restoreGlobal|requireGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64|getDeviceInfo|getAppBaseInfo|getWindowInfo|getSystemSetting|getAppAuthorizeSetting/;
const CONTEXT_API_RE = /^create|Manager$/;
const CONTEXT_API_RE_EXC = ["createBLEConnection"];
const ASYNC_API = ["createBLEConnection"];
const CALLBACK_API_RE = /^on|^off/;
function isContextApi(name) {
  return CONTEXT_API_RE.test(name) && CONTEXT_API_RE_EXC.indexOf(name) === -1;
}
function isSyncApi(name) {
  return SYNC_API_RE.test(name) && ASYNC_API.indexOf(name) === -1;
}
function isCallbackApi(name) {
  return CALLBACK_API_RE.test(name) && name !== "onPush";
}
function shouldPromise(name) {
  if (isContextApi(name) || isSyncApi(name) || isCallbackApi(name)) {
    return false;
  }
  return true;
}
if (!Promise.prototype.finally) {
  Promise.prototype.finally = function(onfinally) {
    const promise = this.constructor;
    return this.then((value) => promise.resolve(onfinally && onfinally()).then(() => value), (reason) => promise.resolve(onfinally && onfinally()).then(() => {
      throw reason;
    }));
  };
}
function promisify(name, api) {
  if (!shouldPromise(name)) {
    return api;
  }
  if (!isFunction(api)) {
    return api;
  }
  return function promiseApi(options = {}, ...rest) {
    if (isFunction(options.success) || isFunction(options.fail) || isFunction(options.complete)) {
      return wrapperReturnValue(name, invokeApi(name, api, options, rest));
    }
    return wrapperReturnValue(name, handlePromise(new Promise((resolve2, reject) => {
      invokeApi(name, api, extend({}, options, {
        success: resolve2,
        fail: reject
      }), rest);
    })));
  };
}
const CALLBACKS = ["success", "fail", "cancel", "complete"];
function initWrapper(protocols2) {
  function processCallback(methodName, method, returnValue) {
    return function(res) {
      return method(processReturnValue(methodName, res, returnValue));
    };
  }
  function processArgs(methodName, fromArgs, argsOption = {}, returnValue = {}, keepFromArgs = false) {
    if (isPlainObject$1(fromArgs)) {
      const toArgs = keepFromArgs === true ? fromArgs : {};
      if (isFunction(argsOption)) {
        argsOption = argsOption(fromArgs, toArgs) || {};
      }
      for (const key in fromArgs) {
        if (hasOwn$1(argsOption, key)) {
          let keyOption = argsOption[key];
          if (isFunction(keyOption)) {
            keyOption = keyOption(fromArgs[key], fromArgs, toArgs);
          }
          if (!keyOption) {
            console.warn(`\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F ${methodName} \u6682\u4E0D\u652F\u6301 ${key}`);
          } else if (isString(keyOption)) {
            toArgs[keyOption] = fromArgs[key];
          } else if (isPlainObject$1(keyOption)) {
            toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;
          }
        } else if (CALLBACKS.indexOf(key) !== -1) {
          const callback = fromArgs[key];
          if (isFunction(callback)) {
            toArgs[key] = processCallback(methodName, callback, returnValue);
          }
        } else {
          if (!keepFromArgs && !hasOwn$1(toArgs, key)) {
            toArgs[key] = fromArgs[key];
          }
        }
      }
      return toArgs;
    } else if (isFunction(fromArgs)) {
      fromArgs = processCallback(methodName, fromArgs, returnValue);
    }
    return fromArgs;
  }
  function processReturnValue(methodName, res, returnValue, keepReturnValue = false) {
    if (isFunction(protocols2.returnValue)) {
      res = protocols2.returnValue(methodName, res);
    }
    return processArgs(methodName, res, returnValue, {}, keepReturnValue);
  }
  return function wrapper(methodName, method) {
    if (!hasOwn$1(protocols2, methodName)) {
      return method;
    }
    const protocol = protocols2[methodName];
    if (!protocol) {
      return function() {
        console.error(`\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F \u6682\u4E0D\u652F\u6301${methodName}`);
      };
    }
    return function(arg1, arg2) {
      let options = protocol;
      if (isFunction(protocol)) {
        options = protocol(arg1);
      }
      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);
      const args = [arg1];
      if (typeof arg2 !== "undefined") {
        args.push(arg2);
      }
      const returnValue = wx[options.name || methodName].apply(wx, args);
      if (isSyncApi(methodName)) {
        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));
      }
      return returnValue;
    };
  };
}
const getLocale = () => {
  const app = isFunction(getApp) && getApp({ allowDefault: true });
  if (app && app.$vm) {
    return app.$vm.$locale;
  }
  return normalizeLocale(wx.getSystemInfoSync().language) || LOCALE_EN;
};
const setLocale = (locale) => {
  const app = isFunction(getApp) && getApp();
  if (!app) {
    return false;
  }
  const oldLocale = app.$vm.$locale;
  if (oldLocale !== locale) {
    app.$vm.$locale = locale;
    onLocaleChangeCallbacks.forEach((fn2) => fn2({ locale }));
    return true;
  }
  return false;
};
const onLocaleChangeCallbacks = [];
const onLocaleChange = (fn2) => {
  if (onLocaleChangeCallbacks.indexOf(fn2) === -1) {
    onLocaleChangeCallbacks.push(fn2);
  }
};
if (typeof global !== "undefined") {
  global.getLocale = getLocale;
}
const UUID_KEY = "__DC_STAT_UUID";
let deviceId;
function useDeviceId(global2 = wx) {
  return function addDeviceId(_2, toRes) {
    deviceId = deviceId || global2.getStorageSync(UUID_KEY);
    if (!deviceId) {
      deviceId = Date.now() + "" + Math.floor(Math.random() * 1e7);
      wx.setStorage({
        key: UUID_KEY,
        data: deviceId
      });
    }
    toRes.deviceId = deviceId;
  };
}
function addSafeAreaInsets(fromRes, toRes) {
  if (fromRes.safeArea) {
    const safeArea = fromRes.safeArea;
    toRes.safeAreaInsets = {
      top: safeArea.top,
      left: safeArea.left,
      right: fromRes.windowWidth - safeArea.right,
      bottom: fromRes.screenHeight - safeArea.bottom
    };
  }
}
function populateParameters(fromRes, toRes) {
  const { brand = "", model = "", system = "", language = "", theme, version: version2, platform, fontSizeSetting, SDKVersion, pixelRatio, deviceOrientation } = fromRes;
  let osName = "";
  let osVersion = "";
  {
    osName = system.split(" ")[0] || "";
    osVersion = system.split(" ")[1] || "";
  }
  let hostVersion = version2;
  let deviceType = getGetDeviceType(fromRes, model);
  let deviceBrand = getDeviceBrand(brand);
  let _hostName = getHostName(fromRes);
  let _deviceOrientation = deviceOrientation;
  let _devicePixelRatio = pixelRatio;
  let _SDKVersion = SDKVersion;
  const hostLanguage = language.replace(/_/g, "-");
  const parameters = {
    appId: "__UNI__EF109DD",
    appName: "keyoukeka",
    appVersion: "1.0.0",
    appVersionCode: "100",
    appLanguage: getAppLanguage(hostLanguage),
    uniCompileVersion: "3.6.18",
    uniRuntimeVersion: "3.6.18",
    uniPlatform: "mp-weixin",
    deviceBrand,
    deviceModel: model,
    deviceType,
    devicePixelRatio: _devicePixelRatio,
    deviceOrientation: _deviceOrientation,
    osName: osName.toLocaleLowerCase(),
    osVersion,
    hostTheme: theme,
    hostVersion,
    hostLanguage,
    hostName: _hostName,
    hostSDKVersion: _SDKVersion,
    hostFontSizeSetting: fontSizeSetting,
    windowTop: 0,
    windowBottom: 0,
    osLanguage: void 0,
    osTheme: void 0,
    ua: void 0,
    hostPackageName: void 0,
    browserName: void 0,
    browserVersion: void 0
  };
  extend(toRes, parameters);
}
function getGetDeviceType(fromRes, model) {
  let deviceType = fromRes.deviceType || "phone";
  {
    const deviceTypeMaps = {
      ipad: "pad",
      windows: "pc",
      mac: "pc"
    };
    const deviceTypeMapsKeys = Object.keys(deviceTypeMaps);
    const _model = model.toLocaleLowerCase();
    for (let index2 = 0; index2 < deviceTypeMapsKeys.length; index2++) {
      const _m = deviceTypeMapsKeys[index2];
      if (_model.indexOf(_m) !== -1) {
        deviceType = deviceTypeMaps[_m];
        break;
      }
    }
  }
  return deviceType;
}
function getDeviceBrand(brand) {
  let deviceBrand = brand;
  if (deviceBrand) {
    deviceBrand = deviceBrand.toLocaleLowerCase();
  }
  return deviceBrand;
}
function getAppLanguage(defaultLanguage) {
  return getLocale ? getLocale() : defaultLanguage;
}
function getHostName(fromRes) {
  const _platform = "WeChat";
  let _hostName = fromRes.hostName || _platform;
  {
    if (fromRes.environment) {
      _hostName = fromRes.environment;
    } else if (fromRes.host && fromRes.host.env) {
      _hostName = fromRes.host.env;
    }
  }
  return _hostName;
}
const getSystemInfo = {
  returnValue: (fromRes, toRes) => {
    addSafeAreaInsets(fromRes, toRes);
    useDeviceId()(fromRes, toRes);
    populateParameters(fromRes, toRes);
  }
};
const getSystemInfoSync = getSystemInfo;
const redirectTo = {};
const previewImage = {
  args(fromArgs, toArgs) {
    let currentIndex = parseInt(fromArgs.current);
    if (isNaN(currentIndex)) {
      return;
    }
    const urls = fromArgs.urls;
    if (!isArray(urls)) {
      return;
    }
    const len = urls.length;
    if (!len) {
      return;
    }
    if (currentIndex < 0) {
      currentIndex = 0;
    } else if (currentIndex >= len) {
      currentIndex = len - 1;
    }
    if (currentIndex > 0) {
      toArgs.current = urls[currentIndex];
      toArgs.urls = urls.filter((item, index2) => index2 < currentIndex ? item !== urls[currentIndex] : true);
    } else {
      toArgs.current = urls[0];
    }
    return {
      indicator: false,
      loop: false
    };
  }
};
const showActionSheet = {
  args(fromArgs, toArgs) {
    toArgs.alertText = fromArgs.title;
  }
};
const getDeviceInfo = {
  returnValue: (fromRes, toRes) => {
    const { brand, model } = fromRes;
    let deviceType = getGetDeviceType(fromRes, model);
    let deviceBrand = getDeviceBrand(brand);
    useDeviceId()(fromRes, toRes);
    toRes = sortObject(extend(toRes, {
      deviceType,
      deviceBrand,
      deviceModel: model
    }));
  }
};
const getAppBaseInfo = {
  returnValue: (fromRes, toRes) => {
    const { version: version2, language, SDKVersion, theme } = fromRes;
    let _hostName = getHostName(fromRes);
    let hostLanguage = language.replace(/_/g, "-");
    toRes = sortObject(extend(toRes, {
      hostVersion: version2,
      hostLanguage,
      hostName: _hostName,
      hostSDKVersion: SDKVersion,
      hostTheme: theme,
      appId: "__UNI__EF109DD",
      appName: "keyoukeka",
      appVersion: "1.0.0",
      appVersionCode: "100",
      appLanguage: getAppLanguage(hostLanguage)
    }));
  }
};
const getWindowInfo = {
  returnValue: (fromRes, toRes) => {
    addSafeAreaInsets(fromRes, toRes);
    toRes = sortObject(extend(toRes, {
      windowTop: 0,
      windowBottom: 0
    }));
  }
};
const getAppAuthorizeSetting = {
  returnValue: function(fromRes, toRes) {
    const { locationReducedAccuracy } = fromRes;
    toRes.locationAccuracy = "unsupported";
    if (locationReducedAccuracy === true) {
      toRes.locationAccuracy = "reduced";
    } else if (locationReducedAccuracy === false) {
      toRes.locationAccuracy = "full";
    }
  }
};
const baseApis = {
  $on,
  $off,
  $once,
  $emit,
  upx2px,
  interceptors,
  addInterceptor,
  removeInterceptor,
  onCreateVueApp,
  invokeCreateVueAppHook,
  getLocale,
  setLocale,
  onLocaleChange,
  getPushClientId,
  onPushMessage,
  offPushMessage,
  invokePushCallback
};
function initUni(api, protocols2, platform = wx) {
  const wrapper = initWrapper(protocols2);
  const UniProxyHandlers = {
    get(target, key) {
      if (hasOwn$1(target, key)) {
        return target[key];
      }
      if (hasOwn$1(api, key)) {
        return promisify(key, api[key]);
      }
      if (hasOwn$1(baseApis, key)) {
        return promisify(key, baseApis[key]);
      }
      return promisify(key, wrapper(key, platform[key]));
    }
  };
  return new Proxy({}, UniProxyHandlers);
}
function initGetProvider(providers) {
  return function getProvider2({ service, success, fail, complete }) {
    let res;
    if (providers[service]) {
      res = {
        errMsg: "getProvider:ok",
        service,
        provider: providers[service]
      };
      isFunction(success) && success(res);
    } else {
      res = {
        errMsg: "getProvider:fail:\u670D\u52A1[" + service + "]\u4E0D\u5B58\u5728"
      };
      isFunction(fail) && fail(res);
    }
    isFunction(complete) && complete(res);
  };
}
const objectKeys = [
  "qy",
  "env",
  "error",
  "version",
  "lanDebug",
  "cloud",
  "serviceMarket",
  "router",
  "worklet"
];
function isWxKey(key) {
  return objectKeys.indexOf(key) > -1 || typeof wx[key] === "function";
}
function initWx() {
  const newWx = {};
  for (const key in wx) {
    if (isWxKey(key)) {
      newWx[key] = wx[key];
    }
  }
  if (typeof globalThis !== "undefined") {
    globalThis.wx = newWx;
  }
  return newWx;
}
const mocks$1 = ["__route__", "__wxExparserNodeId__", "__wxWebviewId__"];
const getProvider = initGetProvider({
  oauth: ["weixin"],
  share: ["weixin"],
  payment: ["wxpay"],
  push: ["weixin"]
});
function initComponentMocks(component) {
  const res = /* @__PURE__ */ Object.create(null);
  mocks$1.forEach((name) => {
    res[name] = component[name];
  });
  return res;
}
function createSelectorQuery() {
  const query = wx$2.createSelectorQuery();
  const oldIn = query.in;
  query.in = function newIn(component) {
    return oldIn.call(this, initComponentMocks(component));
  };
  return query;
}
const wx$2 = initWx();
let baseInfo = wx$2.getAppBaseInfo && wx$2.getAppBaseInfo();
if (!baseInfo) {
  baseInfo = wx$2.getSystemInfoSync();
}
const host = baseInfo ? baseInfo.host : null;
const shareVideoMessage = host && host.env === "SAAASDK" ? wx$2.miniapp.shareVideoMessage : wx$2.shareVideoMessage;
var shims = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  getProvider,
  createSelectorQuery,
  shareVideoMessage
});
var protocols = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  redirectTo,
  previewImage,
  getSystemInfo,
  getSystemInfoSync,
  showActionSheet,
  getDeviceInfo,
  getAppBaseInfo,
  getWindowInfo,
  getAppAuthorizeSetting
});
const wx$1 = initWx();
var index$1 = initUni(shims, protocols, wx$1);
const _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
function warn(msg, ...args) {
  console.warn(`[Vue warn] ${msg}`, ...args);
}
let activeEffectScope;
class EffectScope {
  constructor(detached = false) {
    this.detached = detached;
    this.active = true;
    this.effects = [];
    this.cleanups = [];
    this.parent = activeEffectScope;
    if (!detached && activeEffectScope) {
      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;
    }
  }
  run(fn2) {
    if (this.active) {
      const currentEffectScope = activeEffectScope;
      try {
        activeEffectScope = this;
        return fn2();
      } finally {
        activeEffectScope = currentEffectScope;
      }
    } else {
      warn(`cannot run an inactive effect scope.`);
    }
  }
  on() {
    activeEffectScope = this;
  }
  off() {
    activeEffectScope = this.parent;
  }
  stop(fromParent) {
    if (this.active) {
      let i2, l2;
      for (i2 = 0, l2 = this.effects.length; i2 < l2; i2++) {
        this.effects[i2].stop();
      }
      for (i2 = 0, l2 = this.cleanups.length; i2 < l2; i2++) {
        this.cleanups[i2]();
      }
      if (this.scopes) {
        for (i2 = 0, l2 = this.scopes.length; i2 < l2; i2++) {
          this.scopes[i2].stop(true);
        }
      }
      if (!this.detached && this.parent && !fromParent) {
        const last = this.parent.scopes.pop();
        if (last && last !== this) {
          this.parent.scopes[this.index] = last;
          last.index = this.index;
        }
      }
      this.parent = void 0;
      this.active = false;
    }
  }
}
function effectScope(detached) {
  return new EffectScope(detached);
}
function recordEffectScope(effect, scope = activeEffectScope) {
  if (scope && scope.active) {
    scope.effects.push(effect);
  }
}
function getCurrentScope() {
  return activeEffectScope;
}
function onScopeDispose(fn2) {
  if (activeEffectScope) {
    activeEffectScope.cleanups.push(fn2);
  } else {
    warn(`onScopeDispose() is called when there is no active effect scope to be associated with.`);
  }
}
const createDep = (effects) => {
  const dep = new Set(effects);
  dep.w = 0;
  dep.n = 0;
  return dep;
};
const wasTracked = (dep) => (dep.w & trackOpBit) > 0;
const newTracked = (dep) => (dep.n & trackOpBit) > 0;
const initDepMarkers = ({ deps }) => {
  if (deps.length) {
    for (let i2 = 0; i2 < deps.length; i2++) {
      deps[i2].w |= trackOpBit;
    }
  }
};
const finalizeDepMarkers = (effect) => {
  const { deps } = effect;
  if (deps.length) {
    let ptr = 0;
    for (let i2 = 0; i2 < deps.length; i2++) {
      const dep = deps[i2];
      if (wasTracked(dep) && !newTracked(dep)) {
        dep.delete(effect);
      } else {
        deps[ptr++] = dep;
      }
      dep.w &= ~trackOpBit;
      dep.n &= ~trackOpBit;
    }
    deps.length = ptr;
  }
};
const targetMap = /* @__PURE__ */ new WeakMap();
let effectTrackDepth = 0;
let trackOpBit = 1;
const maxMarkerBits = 30;
let activeEffect;
const ITERATE_KEY = Symbol("iterate");
const MAP_KEY_ITERATE_KEY = Symbol("Map key iterate");
class ReactiveEffect {
  constructor(fn2, scheduler = null, scope) {
    this.fn = fn2;
    this.scheduler = scheduler;
    this.active = true;
    this.deps = [];
    this.parent = void 0;
    recordEffectScope(this, scope);
  }
  run() {
    if (!this.active) {
      return this.fn();
    }
    let parent = activeEffect;
    let lastShouldTrack = shouldTrack;
    while (parent) {
      if (parent === this) {
        return;
      }
      parent = parent.parent;
    }
    try {
      this.parent = activeEffect;
      activeEffect = this;
      shouldTrack = true;
      trackOpBit = 1 << ++effectTrackDepth;
      if (effectTrackDepth <= maxMarkerBits) {
        initDepMarkers(this);
      } else {
        cleanupEffect(this);
      }
      return this.fn();
    } finally {
      if (effectTrackDepth <= maxMarkerBits) {
        finalizeDepMarkers(this);
      }
      trackOpBit = 1 << --effectTrackDepth;
      activeEffect = this.parent;
      shouldTrack = lastShouldTrack;
      this.parent = void 0;
      if (this.deferStop) {
        this.stop();
      }
    }
  }
  stop() {
    if (activeEffect === this) {
      this.deferStop = true;
    } else if (this.active) {
      cleanupEffect(this);
      if (this.onStop) {
        this.onStop();
      }
      this.active = false;
    }
  }
}
function cleanupEffect(effect) {
  const { deps } = effect;
  if (deps.length) {
    for (let i2 = 0; i2 < deps.length; i2++) {
      deps[i2].delete(effect);
    }
    deps.length = 0;
  }
}
let shouldTrack = true;
const trackStack = [];
function pauseTracking() {
  trackStack.push(shouldTrack);
  shouldTrack = false;
}
function resetTracking() {
  const last = trackStack.pop();
  shouldTrack = last === void 0 ? true : last;
}
function track(target, type, key) {
  if (shouldTrack && activeEffect) {
    let depsMap = targetMap.get(target);
    if (!depsMap) {
      targetMap.set(target, depsMap = /* @__PURE__ */ new Map());
    }
    let dep = depsMap.get(key);
    if (!dep) {
      depsMap.set(key, dep = createDep());
    }
    const eventInfo = { effect: activeEffect, target, type, key };
    trackEffects(dep, eventInfo);
  }
}
function trackEffects(dep, debuggerEventExtraInfo) {
  let shouldTrack2 = false;
  if (effectTrackDepth <= maxMarkerBits) {
    if (!newTracked(dep)) {
      dep.n |= trackOpBit;
      shouldTrack2 = !wasTracked(dep);
    }
  } else {
    shouldTrack2 = !dep.has(activeEffect);
  }
  if (shouldTrack2) {
    dep.add(activeEffect);
    activeEffect.deps.push(dep);
    if (activeEffect.onTrack) {
      activeEffect.onTrack(Object.assign({ effect: activeEffect }, debuggerEventExtraInfo));
    }
  }
}
function trigger(target, type, key, newValue, oldValue, oldTarget) {
  const depsMap = targetMap.get(target);
  if (!depsMap) {
    return;
  }
  let deps = [];
  if (type === "clear") {
    deps = [...depsMap.values()];
  } else if (key === "length" && isArray(target)) {
    const newLength = toNumber(newValue);
    depsMap.forEach((dep, key2) => {
      if (key2 === "length" || key2 >= newLength) {
        deps.push(dep);
      }
    });
  } else {
    if (key !== void 0) {
      deps.push(depsMap.get(key));
    }
    switch (type) {
      case "add":
        if (!isArray(target)) {
          deps.push(depsMap.get(ITERATE_KEY));
          if (isMap(target)) {
            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));
          }
        } else if (isIntegerKey(key)) {
          deps.push(depsMap.get("length"));
        }
        break;
      case "delete":
        if (!isArray(target)) {
          deps.push(depsMap.get(ITERATE_KEY));
          if (isMap(target)) {
            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));
          }
        }
        break;
      case "set":
        if (isMap(target)) {
          deps.push(depsMap.get(ITERATE_KEY));
        }
        break;
    }
  }
  const eventInfo = { target, type, key, newValue, oldValue, oldTarget };
  if (deps.length === 1) {
    if (deps[0]) {
      {
        triggerEffects(deps[0], eventInfo);
      }
    }
  } else {
    const effects = [];
    for (const dep of deps) {
      if (dep) {
        effects.push(...dep);
      }
    }
    {
      triggerEffects(createDep(effects), eventInfo);
    }
  }
}
function triggerEffects(dep, debuggerEventExtraInfo) {
  const effects = isArray(dep) ? dep : [...dep];
  for (const effect of effects) {
    if (effect.computed) {
      triggerEffect(effect, debuggerEventExtraInfo);
    }
  }
  for (const effect of effects) {
    if (!effect.computed) {
      triggerEffect(effect, debuggerEventExtraInfo);
    }
  }
}
function triggerEffect(effect, debuggerEventExtraInfo) {
  if (effect !== activeEffect || effect.allowRecurse) {
    if (effect.onTrigger) {
      effect.onTrigger(extend({ effect }, debuggerEventExtraInfo));
    }
    if (effect.scheduler) {
      effect.scheduler();
    } else {
      effect.run();
    }
  }
}
const isNonTrackableKeys = /* @__PURE__ */ makeMap(`__proto__,__v_isRef,__isVue`);
const builtInSymbols = new Set(
  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key) => key !== "arguments" && key !== "caller").map((key) => Symbol[key]).filter(isSymbol)
);
const get = /* @__PURE__ */ createGetter();
const shallowGet = /* @__PURE__ */ createGetter(false, true);
const readonlyGet = /* @__PURE__ */ createGetter(true);
const shallowReadonlyGet = /* @__PURE__ */ createGetter(true, true);
const arrayInstrumentations = /* @__PURE__ */ createArrayInstrumentations();
function createArrayInstrumentations() {
  const instrumentations = {};
  ["includes", "indexOf", "lastIndexOf"].forEach((key) => {
    instrumentations[key] = function(...args) {
      const arr = toRaw(this);
      for (let i2 = 0, l2 = this.length; i2 < l2; i2++) {
        track(arr, "get", i2 + "");
      }
      const res = arr[key](...args);
      if (res === -1 || res === false) {
        return arr[key](...args.map(toRaw));
      } else {
        return res;
      }
    };
  });
  ["push", "pop", "shift", "unshift", "splice"].forEach((key) => {
    instrumentations[key] = function(...args) {
      pauseTracking();
      const res = toRaw(this)[key].apply(this, args);
      resetTracking();
      return res;
    };
  });
  return instrumentations;
}
function createGetter(isReadonly2 = false, shallow = false) {
  return function get3(target, key, receiver) {
    if (key === "__v_isReactive") {
      return !isReadonly2;
    } else if (key === "__v_isReadonly") {
      return isReadonly2;
    } else if (key === "__v_isShallow") {
      return shallow;
    } else if (key === "__v_raw" && receiver === (isReadonly2 ? shallow ? shallowReadonlyMap : readonlyMap : shallow ? shallowReactiveMap : reactiveMap).get(target)) {
      return target;
    }
    const targetIsArray = isArray(target);
    if (!isReadonly2 && targetIsArray && hasOwn$1(arrayInstrumentations, key)) {
      return Reflect.get(arrayInstrumentations, key, receiver);
    }
    const res = Reflect.get(target, key, receiver);
    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {
      return res;
    }
    if (!isReadonly2) {
      track(target, "get", key);
    }
    if (shallow) {
      return res;
    }
    if (isRef(res)) {
      return targetIsArray && isIntegerKey(key) ? res : res.value;
    }
    if (isObject$2(res)) {
      return isReadonly2 ? readonly(res) : reactive(res);
    }
    return res;
  };
}
const set$1 = /* @__PURE__ */ createSetter();
const shallowSet = /* @__PURE__ */ createSetter(true);
function createSetter(shallow = false) {
  return function set2(target, key, value, receiver) {
    let oldValue = target[key];
    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {
      return false;
    }
    if (!shallow) {
      if (!isShallow(value) && !isReadonly(value)) {
        oldValue = toRaw(oldValue);
        value = toRaw(value);
      }
      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {
        oldValue.value = value;
        return true;
      }
    }
    const hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn$1(target, key);
    const result = Reflect.set(target, key, value, receiver);
    if (target === toRaw(receiver)) {
      if (!hadKey) {
        trigger(target, "add", key, value);
      } else if (hasChanged(value, oldValue)) {
        trigger(target, "set", key, value, oldValue);
      }
    }
    return result;
  };
}
function deleteProperty(target, key) {
  const hadKey = hasOwn$1(target, key);
  const oldValue = target[key];
  const result = Reflect.deleteProperty(target, key);
  if (result && hadKey) {
    trigger(target, "delete", key, void 0, oldValue);
  }
  return result;
}
function has(target, key) {
  const result = Reflect.has(target, key);
  if (!isSymbol(key) || !builtInSymbols.has(key)) {
    track(target, "has", key);
  }
  return result;
}
function ownKeys(target) {
  track(target, "iterate", isArray(target) ? "length" : ITERATE_KEY);
  return Reflect.ownKeys(target);
}
const mutableHandlers = {
  get,
  set: set$1,
  deleteProperty,
  has,
  ownKeys
};
const readonlyHandlers = {
  get: readonlyGet,
  set(target, key) {
    {
      warn(`Set operation on key "${String(key)}" failed: target is readonly.`, target);
    }
    return true;
  },
  deleteProperty(target, key) {
    {
      warn(`Delete operation on key "${String(key)}" failed: target is readonly.`, target);
    }
    return true;
  }
};
const shallowReactiveHandlers = /* @__PURE__ */ extend({}, mutableHandlers, {
  get: shallowGet,
  set: shallowSet
});
const shallowReadonlyHandlers = /* @__PURE__ */ extend({}, readonlyHandlers, {
  get: shallowReadonlyGet
});
const toShallow = (value) => value;
const getProto = (v2) => Reflect.getPrototypeOf(v2);
function get$1(target, key, isReadonly2 = false, isShallow2 = false) {
  target = target["__v_raw"];
  const rawTarget = toRaw(target);
  const rawKey = toRaw(key);
  if (!isReadonly2) {
    if (key !== rawKey) {
      track(rawTarget, "get", key);
    }
    track(rawTarget, "get", rawKey);
  }
  const { has: has2 } = getProto(rawTarget);
  const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;
  if (has2.call(rawTarget, key)) {
    return wrap(target.get(key));
  } else if (has2.call(rawTarget, rawKey)) {
    return wrap(target.get(rawKey));
  } else if (target !== rawTarget) {
    target.get(key);
  }
}
function has$1(key, isReadonly2 = false) {
  const target = this["__v_raw"];
  const rawTarget = toRaw(target);
  const rawKey = toRaw(key);
  if (!isReadonly2) {
    if (key !== rawKey) {
      track(rawTarget, "has", key);
    }
    track(rawTarget, "has", rawKey);
  }
  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);
}
function size(target, isReadonly2 = false) {
  target = target["__v_raw"];
  !isReadonly2 && track(toRaw(target), "iterate", ITERATE_KEY);
  return Reflect.get(target, "size", target);
}
function add(value) {
  value = toRaw(value);
  const target = toRaw(this);
  const proto = getProto(target);
  const hadKey = proto.has.call(target, value);
  if (!hadKey) {
    target.add(value);
    trigger(target, "add", value, value);
  }
  return this;
}
function set$1$1(key, value) {
  value = toRaw(value);
  const target = toRaw(this);
  const { has: has2, get: get3 } = getProto(target);
  let hadKey = has2.call(target, key);
  if (!hadKey) {
    key = toRaw(key);
    hadKey = has2.call(target, key);
  } else {
    checkIdentityKeys(target, has2, key);
  }
  const oldValue = get3.call(target, key);
  target.set(key, value);
  if (!hadKey) {
    trigger(target, "add", key, value);
  } else if (hasChanged(value, oldValue)) {
    trigger(target, "set", key, value, oldValue);
  }
  return this;
}
function deleteEntry(key) {
  const target = toRaw(this);
  const { has: has2, get: get3 } = getProto(target);
  let hadKey = has2.call(target, key);
  if (!hadKey) {
    key = toRaw(key);
    hadKey = has2.call(target, key);
  } else {
    checkIdentityKeys(target, has2, key);
  }
  const oldValue = get3 ? get3.call(target, key) : void 0;
  const result = target.delete(key);
  if (hadKey) {
    trigger(target, "delete", key, void 0, oldValue);
  }
  return result;
}
function clear() {
  const target = toRaw(this);
  const hadItems = target.size !== 0;
  const oldTarget = isMap(target) ? new Map(target) : new Set(target);
  const result = target.clear();
  if (hadItems) {
    trigger(target, "clear", void 0, void 0, oldTarget);
  }
  return result;
}
function createForEach(isReadonly2, isShallow2) {
  return function forEach(callback, thisArg) {
    const observed = this;
    const target = observed["__v_raw"];
    const rawTarget = toRaw(target);
    const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;
    !isReadonly2 && track(rawTarget, "iterate", ITERATE_KEY);
    return target.forEach((value, key) => {
      return callback.call(thisArg, wrap(value), wrap(key), observed);
    });
  };
}
function createIterableMethod(method, isReadonly2, isShallow2) {
  return function(...args) {
    const target = this["__v_raw"];
    const rawTarget = toRaw(target);
    const targetIsMap = isMap(rawTarget);
    const isPair = method === "entries" || method === Symbol.iterator && targetIsMap;
    const isKeyOnly = method === "keys" && targetIsMap;
    const innerIterator = target[method](...args);
    const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;
    !isReadonly2 && track(rawTarget, "iterate", isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);
    return {
      next() {
        const { value, done } = innerIterator.next();
        return done ? { value, done } : {
          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),
          done
        };
      },
      [Symbol.iterator]() {
        return this;
      }
    };
  };
}
function createReadonlyMethod(type) {
  return function(...args) {
    {
      const key = args[0] ? `on key "${args[0]}" ` : ``;
      console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));
    }
    return type === "delete" ? false : this;
  };
}
function createInstrumentations() {
  const mutableInstrumentations2 = {
    get(key) {
      return get$1(this, key);
    },
    get size() {
      return size(this);
    },
    has: has$1,
    add,
    set: set$1$1,
    delete: deleteEntry,
    clear,
    forEach: createForEach(false, false)
  };
  const shallowInstrumentations2 = {
    get(key) {
      return get$1(this, key, false, true);
    },
    get size() {
      return size(this);
    },
    has: has$1,
    add,
    set: set$1$1,
    delete: deleteEntry,
    clear,
    forEach: createForEach(false, true)
  };
  const readonlyInstrumentations2 = {
    get(key) {
      return get$1(this, key, true);
    },
    get size() {
      return size(this, true);
    },
    has(key) {
      return has$1.call(this, key, true);
    },
    add: createReadonlyMethod("add"),
    set: createReadonlyMethod("set"),
    delete: createReadonlyMethod("delete"),
    clear: createReadonlyMethod("clear"),
    forEach: createForEach(true, false)
  };
  const shallowReadonlyInstrumentations2 = {
    get(key) {
      return get$1(this, key, true, true);
    },
    get size() {
      return size(this, true);
    },
    has(key) {
      return has$1.call(this, key, true);
    },
    add: createReadonlyMethod("add"),
    set: createReadonlyMethod("set"),
    delete: createReadonlyMethod("delete"),
    clear: createReadonlyMethod("clear"),
    forEach: createForEach(true, true)
  };
  const iteratorMethods = ["keys", "values", "entries", Symbol.iterator];
  iteratorMethods.forEach((method) => {
    mutableInstrumentations2[method] = createIterableMethod(method, false, false);
    readonlyInstrumentations2[method] = createIterableMethod(method, true, false);
    shallowInstrumentations2[method] = createIterableMethod(method, false, true);
    shallowReadonlyInstrumentations2[method] = createIterableMethod(method, true, true);
  });
  return [
    mutableInstrumentations2,
    readonlyInstrumentations2,
    shallowInstrumentations2,
    shallowReadonlyInstrumentations2
  ];
}
const [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* @__PURE__ */ createInstrumentations();
function createInstrumentationGetter(isReadonly2, shallow) {
  const instrumentations = shallow ? isReadonly2 ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly2 ? readonlyInstrumentations : mutableInstrumentations;
  return (target, key, receiver) => {
    if (key === "__v_isReactive") {
      return !isReadonly2;
    } else if (key === "__v_isReadonly") {
      return isReadonly2;
    } else if (key === "__v_raw") {
      return target;
    }
    return Reflect.get(hasOwn$1(instrumentations, key) && key in target ? instrumentations : target, key, receiver);
  };
}
const mutableCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(false, false)
};
const shallowCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(false, true)
};
const readonlyCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(true, false)
};
const shallowReadonlyCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(true, true)
};
function checkIdentityKeys(target, has2, key) {
  const rawKey = toRaw(key);
  if (rawKey !== key && has2.call(target, rawKey)) {
    const type = toRawType(target);
    console.warn(`Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`);
  }
}
const reactiveMap = /* @__PURE__ */ new WeakMap();
const shallowReactiveMap = /* @__PURE__ */ new WeakMap();
const readonlyMap = /* @__PURE__ */ new WeakMap();
const shallowReadonlyMap = /* @__PURE__ */ new WeakMap();
function targetTypeMap(rawType) {
  switch (rawType) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function getTargetType(value) {
  return value["__v_skip"] || !Object.isExtensible(value) ? 0 : targetTypeMap(toRawType(value));
}
function reactive(target) {
  if (isReadonly(target)) {
    return target;
  }
  return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);
}
function shallowReactive(target) {
  return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);
}
function readonly(target) {
  return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);
}
function shallowReadonly(target) {
  return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);
}
function createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {
  if (!isObject$2(target)) {
    {
      console.warn(`value cannot be made reactive: ${String(target)}`);
    }
    return target;
  }
  if (target["__v_raw"] && !(isReadonly2 && target["__v_isReactive"])) {
    return target;
  }
  const existingProxy = proxyMap.get(target);
  if (existingProxy) {
    return existingProxy;
  }
  const targetType = getTargetType(target);
  if (targetType === 0) {
    return target;
  }
  const proxy = new Proxy(target, targetType === 2 ? collectionHandlers : baseHandlers);
  proxyMap.set(target, proxy);
  return proxy;
}
function isReactive(value) {
  if (isReadonly(value)) {
    return isReactive(value["__v_raw"]);
  }
  return !!(value && value["__v_isReactive"]);
}
function isReadonly(value) {
  return !!(value && value["__v_isReadonly"]);
}
function isShallow(value) {
  return !!(value && value["__v_isShallow"]);
}
function isProxy(value) {
  return isReactive(value) || isReadonly(value);
}
function toRaw(observed) {
  const raw = observed && observed["__v_raw"];
  return raw ? toRaw(raw) : observed;
}
function markRaw(value) {
  def(value, "__v_skip", true);
  return value;
}
const toReactive = (value) => isObject$2(value) ? reactive(value) : value;
const toReadonly = (value) => isObject$2(value) ? readonly(value) : value;
function trackRefValue(ref2) {
  if (shouldTrack && activeEffect) {
    ref2 = toRaw(ref2);
    {
      trackEffects(ref2.dep || (ref2.dep = createDep()), {
        target: ref2,
        type: "get",
        key: "value"
      });
    }
  }
}
function triggerRefValue(ref2, newVal) {
  ref2 = toRaw(ref2);
  if (ref2.dep) {
    {
      triggerEffects(ref2.dep, {
        target: ref2,
        type: "set",
        key: "value",
        newValue: newVal
      });
    }
  }
}
function isRef(r2) {
  return !!(r2 && r2.__v_isRef === true);
}
function ref(value) {
  return createRef(value, false);
}
function createRef(rawValue, shallow) {
  if (isRef(rawValue)) {
    return rawValue;
  }
  return new RefImpl(rawValue, shallow);
}
class RefImpl {
  constructor(value, __v_isShallow) {
    this.__v_isShallow = __v_isShallow;
    this.dep = void 0;
    this.__v_isRef = true;
    this._rawValue = __v_isShallow ? value : toRaw(value);
    this._value = __v_isShallow ? value : toReactive(value);
  }
  get value() {
    trackRefValue(this);
    return this._value;
  }
  set value(newVal) {
    const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);
    newVal = useDirectValue ? newVal : toRaw(newVal);
    if (hasChanged(newVal, this._rawValue)) {
      this._rawValue = newVal;
      this._value = useDirectValue ? newVal : toReactive(newVal);
      triggerRefValue(this, newVal);
    }
  }
}
function unref(ref2) {
  return isRef(ref2) ? ref2.value : ref2;
}
const shallowUnwrapHandlers = {
  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),
  set: (target, key, value, receiver) => {
    const oldValue = target[key];
    if (isRef(oldValue) && !isRef(value)) {
      oldValue.value = value;
      return true;
    } else {
      return Reflect.set(target, key, value, receiver);
    }
  }
};
function proxyRefs(objectWithRefs) {
  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);
}
function toRefs(object) {
  if (!isProxy(object)) {
    console.warn(`toRefs() expects a reactive object but received a plain one.`);
  }
  const ret = isArray(object) ? new Array(object.length) : {};
  for (const key in object) {
    ret[key] = toRef(object, key);
  }
  return ret;
}
class ObjectRefImpl {
  constructor(_object, _key, _defaultValue) {
    this._object = _object;
    this._key = _key;
    this._defaultValue = _defaultValue;
    this.__v_isRef = true;
  }
  get value() {
    const val = this._object[this._key];
    return val === void 0 ? this._defaultValue : val;
  }
  set value(newVal) {
    this._object[this._key] = newVal;
  }
}
function toRef(object, key, defaultValue) {
  const val = object[key];
  return isRef(val) ? val : new ObjectRefImpl(object, key, defaultValue);
}
var _a;
class ComputedRefImpl {
  constructor(getter, _setter, isReadonly2, isSSR) {
    this._setter = _setter;
    this.dep = void 0;
    this.__v_isRef = true;
    this[_a] = false;
    this._dirty = true;
    this.effect = new ReactiveEffect(getter, () => {
      if (!this._dirty) {
        this._dirty = true;
        triggerRefValue(this);
      }
    });
    this.effect.computed = this;
    this.effect.active = this._cacheable = !isSSR;
    this["__v_isReadonly"] = isReadonly2;
  }
  get value() {
    const self2 = toRaw(this);
    trackRefValue(self2);
    if (self2._dirty || !self2._cacheable) {
      self2._dirty = false;
      self2._value = self2.effect.run();
    }
    return self2._value;
  }
  set value(newValue) {
    this._setter(newValue);
  }
}
_a = "__v_isReadonly";
function computed(getterOrOptions, debugOptions, isSSR = false) {
  let getter;
  let setter;
  const onlyGetter = isFunction(getterOrOptions);
  if (onlyGetter) {
    getter = getterOrOptions;
    setter = () => {
      console.warn("Write operation failed: computed value is readonly");
    };
  } else {
    getter = getterOrOptions.get;
    setter = getterOrOptions.set;
  }
  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);
  if (debugOptions && !isSSR) {
    cRef.effect.onTrack = debugOptions.onTrack;
    cRef.effect.onTrigger = debugOptions.onTrigger;
  }
  return cRef;
}
const stack = [];
function pushWarningContext(vnode) {
  stack.push(vnode);
}
function popWarningContext() {
  stack.pop();
}
function warn$1(msg, ...args) {
  pauseTracking();
  const instance = stack.length ? stack[stack.length - 1].component : null;
  const appWarnHandler = instance && instance.appContext.config.warnHandler;
  const trace = getComponentTrace();
  if (appWarnHandler) {
    callWithErrorHandling(appWarnHandler, instance, 11, [
      msg + args.join(""),
      instance && instance.proxy,
      trace.map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`).join("\n"),
      trace
    ]);
  } else {
    const warnArgs = [`[Vue warn]: ${msg}`, ...args];
    if (trace.length && true) {
      warnArgs.push(`
`, ...formatTrace(trace));
    }
    console.warn(...warnArgs);
  }
  resetTracking();
}
function getComponentTrace() {
  let currentVNode = stack[stack.length - 1];
  if (!currentVNode) {
    return [];
  }
  const normalizedStack = [];
  while (currentVNode) {
    const last = normalizedStack[0];
    if (last && last.vnode === currentVNode) {
      last.recurseCount++;
    } else {
      normalizedStack.push({
        vnode: currentVNode,
        recurseCount: 0
      });
    }
    const parentInstance = currentVNode.component && currentVNode.component.parent;
    currentVNode = parentInstance && parentInstance.vnode;
  }
  return normalizedStack;
}
function formatTrace(trace) {
  const logs = [];
  trace.forEach((entry, i2) => {
    logs.push(...i2 === 0 ? [] : [`
`], ...formatTraceEntry(entry));
  });
  return logs;
}
function formatTraceEntry({ vnode, recurseCount }) {
  const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;
  const isRoot = vnode.component ? vnode.component.parent == null : false;
  const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;
  const close = `>` + postfix;
  return vnode.props ? [open, ...formatProps(vnode.props), close] : [open + close];
}
function formatProps(props) {
  const res = [];
  const keys = Object.keys(props);
  keys.slice(0, 3).forEach((key) => {
    res.push(...formatProp(key, props[key]));
  });
  if (keys.length > 3) {
    res.push(` ...`);
  }
  return res;
}
function formatProp(key, value, raw) {
  if (isString(value)) {
    value = JSON.stringify(value);
    return raw ? value : [`${key}=${value}`];
  } else if (typeof value === "number" || typeof value === "boolean" || value == null) {
    return raw ? value : [`${key}=${value}`];
  } else if (isRef(value)) {
    value = formatProp(key, toRaw(value.value), true);
    return raw ? value : [`${key}=Ref<`, value, `>`];
  } else if (isFunction(value)) {
    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];
  } else {
    value = toRaw(value);
    return raw ? value : [`${key}=`, value];
  }
}
const ErrorTypeStrings = {
  ["sp"]: "serverPrefetch hook",
  ["bc"]: "beforeCreate hook",
  ["c"]: "created hook",
  ["bm"]: "beforeMount hook",
  ["m"]: "mounted hook",
  ["bu"]: "beforeUpdate hook",
  ["u"]: "updated",
  ["bum"]: "beforeUnmount hook",
  ["um"]: "unmounted hook",
  ["a"]: "activated hook",
  ["da"]: "deactivated hook",
  ["ec"]: "errorCaptured hook",
  ["rtc"]: "renderTracked hook",
  ["rtg"]: "renderTriggered hook",
  [0]: "setup function",
  [1]: "render function",
  [2]: "watcher getter",
  [3]: "watcher callback",
  [4]: "watcher cleanup function",
  [5]: "native event handler",
  [6]: "component event handler",
  [7]: "vnode hook",
  [8]: "directive hook",
  [9]: "transition hook",
  [10]: "app errorHandler",
  [11]: "app warnHandler",
  [12]: "ref function",
  [13]: "async component loader",
  [14]: "scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core"
};
function callWithErrorHandling(fn2, instance, type, args) {
  let res;
  try {
    res = args ? fn2(...args) : fn2();
  } catch (err) {
    handleError(err, instance, type);
  }
  return res;
}
function callWithAsyncErrorHandling(fn2, instance, type, args) {
  if (isFunction(fn2)) {
    const res = callWithErrorHandling(fn2, instance, type, args);
    if (res && isPromise$1(res)) {
      res.catch((err) => {
        handleError(err, instance, type);
      });
    }
    return res;
  }
  const values = [];
  for (let i2 = 0; i2 < fn2.length; i2++) {
    values.push(callWithAsyncErrorHandling(fn2[i2], instance, type, args));
  }
  return values;
}
function handleError(err, instance, type, throwInDev = true) {
  const contextVNode = instance ? instance.vnode : null;
  if (instance) {
    let cur = instance.parent;
    const exposedInstance = instance.proxy;
    const errorInfo = ErrorTypeStrings[type] || type;
    while (cur) {
      const errorCapturedHooks = cur.ec;
      if (errorCapturedHooks) {
        for (let i2 = 0; i2 < errorCapturedHooks.length; i2++) {
          if (errorCapturedHooks[i2](err, exposedInstance, errorInfo) === false) {
            return;
          }
        }
      }
      cur = cur.parent;
    }
    const appErrorHandler = instance.appContext.config.errorHandler;
    if (appErrorHandler) {
      callWithErrorHandling(appErrorHandler, null, 10, [err, exposedInstance, errorInfo]);
      return;
    }
  }
  logError(err, type, contextVNode, throwInDev);
}
function logError(err, type, contextVNode, throwInDev = true) {
  {
    const info = ErrorTypeStrings[type] || type;
    if (contextVNode) {
      pushWarningContext(contextVNode);
    }
    warn$1(`Unhandled error${info ? ` during execution of ${info}` : ``}`);
    if (contextVNode) {
      popWarningContext();
    }
    if (throwInDev) {
      console.error(err);
    } else {
      console.error(err);
    }
  }
}
let isFlushing = false;
let isFlushPending = false;
const queue = [];
let flushIndex = 0;
const pendingPostFlushCbs = [];
let activePostFlushCbs = null;
let postFlushIndex = 0;
const resolvedPromise = /* @__PURE__ */ Promise.resolve();
let currentFlushPromise = null;
const RECURSION_LIMIT = 100;
function nextTick(fn2) {
  const p2 = currentFlushPromise || resolvedPromise;
  return fn2 ? p2.then(this ? fn2.bind(this) : fn2) : p2;
}
function findInsertionIndex(id) {
  let start = flushIndex + 1;
  let end = queue.length;
  while (start < end) {
    const middle = start + end >>> 1;
    const middleJobId = getId(queue[middle]);
    middleJobId < id ? start = middle + 1 : end = middle;
  }
  return start;
}
function queueJob(job) {
  if (!queue.length || !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) {
    if (job.id == null) {
      queue.push(job);
    } else {
      queue.splice(findInsertionIndex(job.id), 0, job);
    }
    queueFlush();
  }
}
function queueFlush() {
  if (!isFlushing && !isFlushPending) {
    isFlushPending = true;
    currentFlushPromise = resolvedPromise.then(flushJobs);
  }
}
function hasQueueJob(job) {
  return queue.indexOf(job) > -1;
}
function invalidateJob(job) {
  const i2 = queue.indexOf(job);
  if (i2 > flushIndex) {
    queue.splice(i2, 1);
  }
}
function queuePostFlushCb(cb) {
  if (!isArray(cb)) {
    if (!activePostFlushCbs || !activePostFlushCbs.includes(cb, cb.allowRecurse ? postFlushIndex + 1 : postFlushIndex)) {
      pendingPostFlushCbs.push(cb);
    }
  } else {
    pendingPostFlushCbs.push(...cb);
  }
  queueFlush();
}
function flushPreFlushCbs(seen, i2 = isFlushing ? flushIndex + 1 : 0) {
  {
    seen = seen || /* @__PURE__ */ new Map();
  }
  for (; i2 < queue.length; i2++) {
    const cb = queue[i2];
    if (cb && cb.pre) {
      if (checkRecursiveUpdates(seen, cb)) {
        continue;
      }
      queue.splice(i2, 1);
      i2--;
      cb();
    }
  }
}
function flushPostFlushCbs(seen) {
  if (pendingPostFlushCbs.length) {
    const deduped = [...new Set(pendingPostFlushCbs)];
    pendingPostFlushCbs.length = 0;
    if (activePostFlushCbs) {
      activePostFlushCbs.push(...deduped);
      return;
    }
    activePostFlushCbs = deduped;
    {
      seen = seen || /* @__PURE__ */ new Map();
    }
    activePostFlushCbs.sort((a2, b) => getId(a2) - getId(b));
    for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {
      if (checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {
        continue;
      }
      activePostFlushCbs[postFlushIndex]();
    }
    activePostFlushCbs = null;
    postFlushIndex = 0;
  }
}
const getId = (job) => job.id == null ? Infinity : job.id;
const comparator = (a2, b) => {
  const diff2 = getId(a2) - getId(b);
  if (diff2 === 0) {
    if (a2.pre && !b.pre)
      return -1;
    if (b.pre && !a2.pre)
      return 1;
  }
  return diff2;
};
function flushJobs(seen) {
  isFlushPending = false;
  isFlushing = true;
  {
    seen = seen || /* @__PURE__ */ new Map();
  }
  queue.sort(comparator);
  const check = (job) => checkRecursiveUpdates(seen, job);
  try {
    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {
      const job = queue[flushIndex];
      if (job && job.active !== false) {
        if (check(job)) {
          continue;
        }
        callWithErrorHandling(job, null, 14);
      }
    }
  } finally {
    flushIndex = 0;
    queue.length = 0;
    flushPostFlushCbs(seen);
    isFlushing = false;
    currentFlushPromise = null;
    if (queue.length || pendingPostFlushCbs.length) {
      flushJobs(seen);
    }
  }
}
function checkRecursiveUpdates(seen, fn2) {
  if (!seen.has(fn2)) {
    seen.set(fn2, 1);
  } else {
    const count = seen.get(fn2);
    if (count > RECURSION_LIMIT) {
      const instance = fn2.ownerInstance;
      const componentName = instance && getComponentName(instance.type);
      warn$1(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`);
      return true;
    } else {
      seen.set(fn2, count + 1);
    }
  }
}
let devtools;
let buffer = [];
let devtoolsNotInstalled = false;
function emit(event, ...args) {
  if (devtools) {
    devtools.emit(event, ...args);
  } else if (!devtoolsNotInstalled) {
    buffer.push({ event, args });
  }
}
function setDevtoolsHook(hook, target) {
  var _a2, _b;
  devtools = hook;
  if (devtools) {
    devtools.enabled = true;
    buffer.forEach(({ event, args }) => devtools.emit(event, ...args));
    buffer = [];
  } else if (typeof window !== "undefined" && window.HTMLElement && !((_b = (_a2 = window.navigator) === null || _a2 === void 0 ? void 0 : _a2.userAgent) === null || _b === void 0 ? void 0 : _b.includes("jsdom"))) {
    const replay = target.__VUE_DEVTOOLS_HOOK_REPLAY__ = target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [];
    replay.push((newHook) => {
      setDevtoolsHook(newHook, target);
    });
    setTimeout(() => {
      if (!devtools) {
        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;
        devtoolsNotInstalled = true;
        buffer = [];
      }
    }, 3e3);
  } else {
    devtoolsNotInstalled = true;
    buffer = [];
  }
}
function devtoolsInitApp(app, version2) {
  emit("app:init", app, version2, {
    Fragment,
    Text,
    Comment,
    Static
  });
}
const devtoolsComponentAdded = /* @__PURE__ */ createDevtoolsComponentHook("component:added");
const devtoolsComponentUpdated = /* @__PURE__ */ createDevtoolsComponentHook("component:updated");
const _devtoolsComponentRemoved = /* @__PURE__ */ createDevtoolsComponentHook("component:removed");
const devtoolsComponentRemoved = (component) => {
  if (devtools && typeof devtools.cleanupBuffer === "function" && !devtools.cleanupBuffer(component)) {
    _devtoolsComponentRemoved(component);
  }
};
function createDevtoolsComponentHook(hook) {
  return (component) => {
    emit(
      hook,
      component.appContext.app,
      component.uid,
      component.uid === 0 ? void 0 : component.parent ? component.parent.uid : 0,
      component
    );
  };
}
const devtoolsPerfStart = /* @__PURE__ */ createDevtoolsPerformanceHook("perf:start");
const devtoolsPerfEnd = /* @__PURE__ */ createDevtoolsPerformanceHook("perf:end");
function createDevtoolsPerformanceHook(hook) {
  return (component, type, time) => {
    emit(hook, component.appContext.app, component.uid, component, type, time);
  };
}
function devtoolsComponentEmit(component, event, params) {
  emit("component:emit", component.appContext.app, component, event, params);
}
function emit$1(instance, event, ...rawArgs) {
  if (instance.isUnmounted)
    return;
  const props = instance.vnode.props || EMPTY_OBJ;
  {
    const { emitsOptions, propsOptions: [propsOptions] } = instance;
    if (emitsOptions) {
      if (!(event in emitsOptions) && true) {
        if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {
          warn$1(`Component emitted event "${event}" but it is neither declared in the emits option nor as an "${toHandlerKey(event)}" prop.`);
        }
      } else {
        const validator = emitsOptions[event];
        if (isFunction(validator)) {
          const isValid = validator(...rawArgs);
          if (!isValid) {
            warn$1(`Invalid event arguments: event validation failed for event "${event}".`);
          }
        }
      }
    }
  }
  let args = rawArgs;
  const isModelListener2 = event.startsWith("update:");
  const modelArg = isModelListener2 && event.slice(7);
  if (modelArg && modelArg in props) {
    const modifiersKey = `${modelArg === "modelValue" ? "model" : modelArg}Modifiers`;
    const { number, trim } = props[modifiersKey] || EMPTY_OBJ;
    if (trim) {
      args = rawArgs.map((a2) => isString(a2) ? a2.trim() : a2);
    }
    if (number) {
      args = rawArgs.map(toNumber);
    }
  }
  {
    devtoolsComponentEmit(instance, event, args);
  }
  {
    const lowerCaseEvent = event.toLowerCase();
    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {
      warn$1(`Event "${lowerCaseEvent}" is emitted in component ${formatComponentName(instance, instance.type)} but the handler is registered for "${event}". Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. You should probably use "${hyphenate(event)}" instead of "${event}".`);
    }
  }
  let handlerName;
  let handler = props[handlerName = toHandlerKey(event)] || props[handlerName = toHandlerKey(camelize(event))];
  if (!handler && isModelListener2) {
    handler = props[handlerName = toHandlerKey(hyphenate(event))];
  }
  if (handler) {
    callWithAsyncErrorHandling(handler, instance, 6, args);
  }
  const onceHandler = props[handlerName + `Once`];
  if (onceHandler) {
    if (!instance.emitted) {
      instance.emitted = {};
    } else if (instance.emitted[handlerName]) {
      return;
    }
    instance.emitted[handlerName] = true;
    callWithAsyncErrorHandling(onceHandler, instance, 6, args);
  }
}
function normalizeEmitsOptions(comp, appContext, asMixin = false) {
  const cache = appContext.emitsCache;
  const cached = cache.get(comp);
  if (cached !== void 0) {
    return cached;
  }
  const raw = comp.emits;
  let normalized = {};
  let hasExtends = false;
  if (!isFunction(comp)) {
    const extendEmits = (raw2) => {
      const normalizedFromExtend = normalizeEmitsOptions(raw2, appContext, true);
      if (normalizedFromExtend) {
        hasExtends = true;
        extend(normalized, normalizedFromExtend);
      }
    };
    if (!asMixin && appContext.mixins.length) {
      appContext.mixins.forEach(extendEmits);
    }
    if (comp.extends) {
      extendEmits(comp.extends);
    }
    if (comp.mixins) {
      comp.mixins.forEach(extendEmits);
    }
  }
  if (!raw && !hasExtends) {
    if (isObject$2(comp)) {
      cache.set(comp, null);
    }
    return null;
  }
  if (isArray(raw)) {
    raw.forEach((key) => normalized[key] = null);
  } else {
    extend(normalized, raw);
  }
  if (isObject$2(comp)) {
    cache.set(comp, normalized);
  }
  return normalized;
}
function isEmitListener(options, key) {
  if (!options || !isOn(key)) {
    return false;
  }
  key = key.slice(2).replace(/Once$/, "");
  return hasOwn$1(options, key[0].toLowerCase() + key.slice(1)) || hasOwn$1(options, hyphenate(key)) || hasOwn$1(options, key);
}
let currentRenderingInstance = null;
function setCurrentRenderingInstance(instance) {
  const prev = currentRenderingInstance;
  currentRenderingInstance = instance;
  instance && instance.type.__scopeId || null;
  return prev;
}
function provide(key, value) {
  if (!currentInstance) {
    {
      warn$1(`provide() can only be used inside setup().`);
    }
  } else {
    let provides = currentInstance.provides;
    const parentProvides = currentInstance.parent && currentInstance.parent.provides;
    if (parentProvides === provides) {
      provides = currentInstance.provides = Object.create(parentProvides);
    }
    provides[key] = value;
    if (currentInstance.type.mpType === "app") {
      currentInstance.appContext.app.provide(key, value);
    }
  }
}
function inject(key, defaultValue, treatDefaultAsFactory = false) {
  const instance = currentInstance || currentRenderingInstance;
  if (instance) {
    const provides = instance.parent == null ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides;
    if (provides && key in provides) {
      return provides[key];
    } else if (arguments.length > 1) {
      return treatDefaultAsFactory && isFunction(defaultValue) ? defaultValue.call(instance.proxy) : defaultValue;
    } else {
      warn$1(`injection "${String(key)}" not found.`);
    }
  } else {
    warn$1(`inject() can only be used inside setup() or functional components.`);
  }
}
function watchEffect(effect, options) {
  return doWatch(effect, null, options);
}
const INITIAL_WATCHER_VALUE = {};
function watch(source, cb, options) {
  if (!isFunction(cb)) {
    warn$1(`\`watch(fn, options?)\` signature has been moved to a separate API. Use \`watchEffect(fn, options?)\` instead. \`watch\` now only supports \`watch(source, cb, options?) signature.`);
  }
  return doWatch(source, cb, options);
}
function doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ) {
  if (!cb) {
    if (immediate !== void 0) {
      warn$1(`watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.`);
    }
    if (deep !== void 0) {
      warn$1(`watch() "deep" option is only respected when using the watch(source, callback, options?) signature.`);
    }
  }
  const warnInvalidSource = (s2) => {
    warn$1(`Invalid watch source: `, s2, `A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.`);
  };
  const instance = currentInstance;
  let getter;
  let forceTrigger = false;
  let isMultiSource = false;
  if (isRef(source)) {
    getter = () => source.value;
    forceTrigger = isShallow(source);
  } else if (isReactive(source)) {
    getter = () => source;
    deep = true;
  } else if (isArray(source)) {
    isMultiSource = true;
    forceTrigger = source.some((s2) => isReactive(s2) || isShallow(s2));
    getter = () => source.map((s2) => {
      if (isRef(s2)) {
        return s2.value;
      } else if (isReactive(s2)) {
        return traverse(s2);
      } else if (isFunction(s2)) {
        return callWithErrorHandling(s2, instance, 2);
      } else {
        warnInvalidSource(s2);
      }
    });
  } else if (isFunction(source)) {
    if (cb) {
      getter = () => callWithErrorHandling(source, instance, 2);
    } else {
      getter = () => {
        if (instance && instance.isUnmounted) {
          return;
        }
        if (cleanup) {
          cleanup();
        }
        return callWithAsyncErrorHandling(source, instance, 3, [onCleanup]);
      };
    }
  } else {
    getter = NOOP;
    warnInvalidSource(source);
  }
  if (cb && deep) {
    const baseGetter = getter;
    getter = () => traverse(baseGetter());
  }
  let cleanup;
  let onCleanup = (fn2) => {
    cleanup = effect.onStop = () => {
      callWithErrorHandling(fn2, instance, 4);
    };
  };
  let oldValue = isMultiSource ? new Array(source.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;
  const job = () => {
    if (!effect.active) {
      return;
    }
    if (cb) {
      const newValue = effect.run();
      if (deep || forceTrigger || (isMultiSource ? newValue.some((v2, i2) => hasChanged(v2, oldValue[i2])) : hasChanged(newValue, oldValue)) || false) {
        if (cleanup) {
          cleanup();
        }
        callWithAsyncErrorHandling(cb, instance, 3, [
          newValue,
          oldValue === INITIAL_WATCHER_VALUE ? void 0 : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE ? [] : oldValue,
          onCleanup
        ]);
        oldValue = newValue;
      }
    } else {
      effect.run();
    }
  };
  job.allowRecurse = !!cb;
  let scheduler;
  if (flush === "sync") {
    scheduler = job;
  } else if (flush === "post") {
    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);
  } else {
    job.pre = true;
    if (instance)
      job.id = instance.uid;
    scheduler = () => queueJob(job);
  }
  const effect = new ReactiveEffect(getter, scheduler);
  {
    effect.onTrack = onTrack;
    effect.onTrigger = onTrigger;
  }
  if (cb) {
    if (immediate) {
      job();
    } else {
      oldValue = effect.run();
    }
  } else if (flush === "post") {
    queuePostRenderEffect(effect.run.bind(effect), instance && instance.suspense);
  } else {
    effect.run();
  }
  const unwatch = () => {
    effect.stop();
    if (instance && instance.scope) {
      remove(instance.scope.effects, effect);
    }
  };
  return unwatch;
}
function instanceWatch(source, value, options) {
  const publicThis = this.proxy;
  const getter = isString(source) ? source.includes(".") ? createPathGetter(publicThis, source) : () => publicThis[source] : source.bind(publicThis, publicThis);
  let cb;
  if (isFunction(value)) {
    cb = value;
  } else {
    cb = value.handler;
    options = value;
  }
  const cur = currentInstance;
  setCurrentInstance(this);
  const res = doWatch(getter, cb.bind(publicThis), options);
  if (cur) {
    setCurrentInstance(cur);
  } else {
    unsetCurrentInstance();
  }
  return res;
}
function createPathGetter(ctx, path) {
  const segments = path.split(".");
  return () => {
    let cur = ctx;
    for (let i2 = 0; i2 < segments.length && cur; i2++) {
      cur = cur[segments[i2]];
    }
    return cur;
  };
}
function traverse(value, seen) {
  if (!isObject$2(value) || value["__v_skip"]) {
    return value;
  }
  seen = seen || /* @__PURE__ */ new Set();
  if (seen.has(value)) {
    return value;
  }
  seen.add(value);
  if (isRef(value)) {
    traverse(value.value, seen);
  } else if (isArray(value)) {
    for (let i2 = 0; i2 < value.length; i2++) {
      traverse(value[i2], seen);
    }
  } else if (isSet(value) || isMap(value)) {
    value.forEach((v2) => {
      traverse(v2, seen);
    });
  } else if (isPlainObject$1(value)) {
    for (const key in value) {
      traverse(value[key], seen);
    }
  }
  return value;
}
function defineComponent(options) {
  return isFunction(options) ? { setup: options, name: options.name } : options;
}
const isKeepAlive = (vnode) => vnode.type.__isKeepAlive;
function onActivated(hook, target) {
  registerKeepAliveHook(hook, "a", target);
}
function onDeactivated(hook, target) {
  registerKeepAliveHook(hook, "da", target);
}
function registerKeepAliveHook(hook, type, target = currentInstance) {
  const wrappedHook = hook.__wdc || (hook.__wdc = () => {
    let current = target;
    while (current) {
      if (current.isDeactivated) {
        return;
      }
      current = current.parent;
    }
    return hook();
  });
  injectHook(type, wrappedHook, target);
  if (target) {
    let current = target.parent;
    while (current && current.parent) {
      if (isKeepAlive(current.parent.vnode)) {
        injectToKeepAliveRoot(wrappedHook, type, target, current);
      }
      current = current.parent;
    }
  }
}
function injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {
  const injected = injectHook(type, hook, keepAliveRoot, true);
  onUnmounted(() => {
    remove(keepAliveRoot[type], injected);
  }, target);
}
function injectHook(type, hook, target = currentInstance, prepend = false) {
  if (target) {
    if (isRootHook(type)) {
      target = target.root;
    }
    const hooks = target[type] || (target[type] = []);
    const wrappedHook = hook.__weh || (hook.__weh = (...args) => {
      if (target.isUnmounted) {
        return;
      }
      pauseTracking();
      setCurrentInstance(target);
      const res = callWithAsyncErrorHandling(hook, target, type, args);
      unsetCurrentInstance();
      resetTracking();
      return res;
    });
    if (prepend) {
      hooks.unshift(wrappedHook);
    } else {
      hooks.push(wrappedHook);
    }
    return wrappedHook;
  } else {
    const apiName = toHandlerKey((ErrorTypeStrings[type] || type.replace(/^on/, "")).replace(/ hook$/, ""));
    warn$1(`${apiName} is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup().`);
  }
}
const createHook$1 = (lifecycle) => (hook, target = currentInstance) => (!isInSSRComponentSetup || lifecycle === "sp") && injectHook(lifecycle, (...args) => hook(...args), target);
const onBeforeMount = createHook$1("bm");
const onMounted = createHook$1("m");
const onBeforeUpdate = createHook$1("bu");
const onUpdated = createHook$1("u");
const onBeforeUnmount = createHook$1("bum");
const onUnmounted = createHook$1("um");
const onServerPrefetch = createHook$1("sp");
const onRenderTriggered = createHook$1("rtg");
const onRenderTracked = createHook$1("rtc");
function onErrorCaptured(hook, target = currentInstance) {
  injectHook("ec", hook, target);
}
function validateDirectiveName(name) {
  if (isBuiltInDirective(name)) {
    warn$1("Do not use built-in directive ids as custom directive id: " + name);
  }
}
const COMPONENTS = "components";
function resolveComponent(name, maybeSelfReference) {
  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;
}
function resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {
  const instance = currentRenderingInstance || currentInstance;
  if (instance) {
    const Component2 = instance.type;
    if (type === COMPONENTS) {
      const selfName = getComponentName(Component2, false);
      if (selfName && (selfName === name || selfName === camelize(name) || selfName === capitalize(camelize(name)))) {
        return Component2;
      }
    }
    const res = resolve(instance[type] || Component2[type], name) || resolve(instance.appContext[type], name);
    if (!res && maybeSelfReference) {
      return Component2;
    }
    if (warnMissing && !res) {
      const extra = type === COMPONENTS ? `
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.` : ``;
      warn$1(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);
    }
    return res;
  } else {
    warn$1(`resolve${capitalize(type.slice(0, -1))} can only be used in render() or setup().`);
  }
}
function resolve(registry, name) {
  return registry && (registry[name] || registry[camelize(name)] || registry[capitalize(camelize(name))]);
}
const getPublicInstance = (i2) => {
  if (!i2)
    return null;
  if (isStatefulComponent(i2))
    return getExposeProxy(i2) || i2.proxy;
  return getPublicInstance(i2.parent);
};
const publicPropertiesMap = /* @__PURE__ */ extend(/* @__PURE__ */ Object.create(null), {
  $: (i2) => i2,
  $el: (i2) => i2.__$el || (i2.__$el = {}),
  $data: (i2) => i2.data,
  $props: (i2) => shallowReadonly(i2.props),
  $attrs: (i2) => shallowReadonly(i2.attrs),
  $slots: (i2) => shallowReadonly(i2.slots),
  $refs: (i2) => shallowReadonly(i2.refs),
  $parent: (i2) => getPublicInstance(i2.parent),
  $root: (i2) => getPublicInstance(i2.root),
  $emit: (i2) => i2.emit,
  $options: (i2) => resolveMergedOptions(i2),
  $forceUpdate: (i2) => i2.f || (i2.f = () => queueJob(i2.update)),
  $watch: (i2) => instanceWatch.bind(i2)
});
const isReservedPrefix = (key) => key === "_" || key === "$";
const hasSetupBinding = (state, key) => state !== EMPTY_OBJ && !state.__isScriptSetup && hasOwn$1(state, key);
const PublicInstanceProxyHandlers = {
  get({ _: instance }, key) {
    const { ctx, setupState, data, props, accessCache, type, appContext } = instance;
    if (key === "__isVue") {
      return true;
    }
    let normalizedProps;
    if (key[0] !== "$") {
      const n2 = accessCache[key];
      if (n2 !== void 0) {
        switch (n2) {
          case 1:
            return setupState[key];
          case 2:
            return data[key];
          case 4:
            return ctx[key];
          case 3:
            return props[key];
        }
      } else if (hasSetupBinding(setupState, key)) {
        accessCache[key] = 1;
        return setupState[key];
      } else if (data !== EMPTY_OBJ && hasOwn$1(data, key)) {
        accessCache[key] = 2;
        return data[key];
      } else if ((normalizedProps = instance.propsOptions[0]) && hasOwn$1(normalizedProps, key)) {
        accessCache[key] = 3;
        return props[key];
      } else if (ctx !== EMPTY_OBJ && hasOwn$1(ctx, key)) {
        accessCache[key] = 4;
        return ctx[key];
      } else if (shouldCacheAccess) {
        accessCache[key] = 0;
      }
    }
    const publicGetter = publicPropertiesMap[key];
    let cssModule, globalProperties;
    if (publicGetter) {
      if (key === "$attrs") {
        track(instance, "get", key);
      }
      return publicGetter(instance);
    } else if ((cssModule = type.__cssModules) && (cssModule = cssModule[key])) {
      return cssModule;
    } else if (ctx !== EMPTY_OBJ && hasOwn$1(ctx, key)) {
      accessCache[key] = 4;
      return ctx[key];
    } else if (globalProperties = appContext.config.globalProperties, hasOwn$1(globalProperties, key)) {
      {
        return globalProperties[key];
      }
    } else if (currentRenderingInstance && (!isString(key) || key.indexOf("__v") !== 0)) {
      if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn$1(data, key)) {
        warn$1(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved character ("$" or "_") and is not proxied on the render context.`);
      } else if (instance === currentRenderingInstance) {
        warn$1(`Property ${JSON.stringify(key)} was accessed during render but is not defined on instance.`);
      }
    }
  },
  set({ _: instance }, key, value) {
    const { data, setupState, ctx } = instance;
    if (hasSetupBinding(setupState, key)) {
      setupState[key] = value;
      return true;
    } else if (setupState.__isScriptSetup && hasOwn$1(setupState, key)) {
      warn$1(`Cannot mutate <script setup> binding "${key}" from Options API.`);
      return false;
    } else if (data !== EMPTY_OBJ && hasOwn$1(data, key)) {
      data[key] = value;
      return true;
    } else if (hasOwn$1(instance.props, key)) {
      warn$1(`Attempting to mutate prop "${key}". Props are readonly.`);
      return false;
    }
    if (key[0] === "$" && key.slice(1) in instance) {
      warn$1(`Attempting to mutate public property "${key}". Properties starting with $ are reserved and readonly.`);
      return false;
    } else {
      if (key in instance.appContext.config.globalProperties) {
        Object.defineProperty(ctx, key, {
          enumerable: true,
          configurable: true,
          value
        });
      } else {
        ctx[key] = value;
      }
    }
    return true;
  },
  has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {
    let normalizedProps;
    return !!accessCache[key] || data !== EMPTY_OBJ && hasOwn$1(data, key) || hasSetupBinding(setupState, key) || (normalizedProps = propsOptions[0]) && hasOwn$1(normalizedProps, key) || hasOwn$1(ctx, key) || hasOwn$1(publicPropertiesMap, key) || hasOwn$1(appContext.config.globalProperties, key);
  },
  defineProperty(target, key, descriptor) {
    if (descriptor.get != null) {
      target._.accessCache[key] = 0;
    } else if (hasOwn$1(descriptor, "value")) {
      this.set(target, key, descriptor.value, null);
    }
    return Reflect.defineProperty(target, key, descriptor);
  }
};
{
  PublicInstanceProxyHandlers.ownKeys = (target) => {
    warn$1(`Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead.`);
    return Reflect.ownKeys(target);
  };
}
function createDevRenderContext(instance) {
  const target = {};
  Object.defineProperty(target, `_`, {
    configurable: true,
    enumerable: false,
    get: () => instance
  });
  Object.keys(publicPropertiesMap).forEach((key) => {
    Object.defineProperty(target, key, {
      configurable: true,
      enumerable: false,
      get: () => publicPropertiesMap[key](instance),
      set: NOOP
    });
  });
  return target;
}
function exposePropsOnRenderContext(instance) {
  const { ctx, propsOptions: [propsOptions] } = instance;
  if (propsOptions) {
    Object.keys(propsOptions).forEach((key) => {
      Object.defineProperty(ctx, key, {
        enumerable: true,
        configurable: true,
        get: () => instance.props[key],
        set: NOOP
      });
    });
  }
}
function exposeSetupStateOnRenderContext(instance) {
  const { ctx, setupState } = instance;
  Object.keys(toRaw(setupState)).forEach((key) => {
    if (!setupState.__isScriptSetup) {
      if (isReservedPrefix(key[0])) {
        warn$1(`setup() return property ${JSON.stringify(key)} should not start with "$" or "_" which are reserved prefixes for Vue internals.`);
        return;
      }
      Object.defineProperty(ctx, key, {
        enumerable: true,
        configurable: true,
        get: () => setupState[key],
        set: NOOP
      });
    }
  });
}
function createDuplicateChecker() {
  const cache = /* @__PURE__ */ Object.create(null);
  return (type, key) => {
    if (cache[key]) {
      warn$1(`${type} property "${key}" is already defined in ${cache[key]}.`);
    } else {
      cache[key] = type;
    }
  };
}
let shouldCacheAccess = true;
function applyOptions$1(instance) {
  const options = resolveMergedOptions(instance);
  const publicThis = instance.proxy;
  const ctx = instance.ctx;
  shouldCacheAccess = false;
  if (options.beforeCreate) {
    callHook$1(options.beforeCreate, instance, "bc");
  }
  const {
    data: dataOptions,
    computed: computedOptions,
    methods,
    watch: watchOptions,
    provide: provideOptions,
    inject: injectOptions,
    created,
    beforeMount,
    mounted,
    beforeUpdate,
    updated,
    activated,
    deactivated,
    beforeDestroy,
    beforeUnmount,
    destroyed,
    unmounted,
    render,
    renderTracked,
    renderTriggered,
    errorCaptured,
    serverPrefetch,
    expose,
    inheritAttrs,
    components,
    directives,
    filters
  } = options;
  const checkDuplicateProperties = createDuplicateChecker();
  {
    const [propsOptions] = instance.propsOptions;
    if (propsOptions) {
      for (const key in propsOptions) {
        checkDuplicateProperties("Props", key);
      }
    }
  }
  if (injectOptions) {
    resolveInjections(injectOptions, ctx, checkDuplicateProperties, instance.appContext.config.unwrapInjectedRef);
  }
  if (methods) {
    for (const key in methods) {
      const methodHandler = methods[key];
      if (isFunction(methodHandler)) {
        {
          Object.defineProperty(ctx, key, {
            value: methodHandler.bind(publicThis),
            configurable: true,
            enumerable: true,
            writable: true
          });
        }
        {
          checkDuplicateProperties("Methods", key);
        }
      } else {
        warn$1(`Method "${key}" has type "${typeof methodHandler}" in the component definition. Did you reference the function correctly?`);
      }
    }
  }
  if (dataOptions) {
    if (!isFunction(dataOptions)) {
      warn$1(`The data option must be a function. Plain object usage is no longer supported.`);
    }
    const data = dataOptions.call(publicThis, publicThis);
    if (isPromise$1(data)) {
      warn$1(`data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>.`);
    }
    if (!isObject$2(data)) {
      warn$1(`data() should return an object.`);
    } else {
      instance.data = reactive(data);
      {
        for (const key in data) {
          checkDuplicateProperties("Data", key);
          if (!isReservedPrefix(key[0])) {
            Object.defineProperty(ctx, key, {
              configurable: true,
              enumerable: true,
              get: () => data[key],
              set: NOOP
            });
          }
        }
      }
    }
  }
  shouldCacheAccess = true;
  if (computedOptions) {
    for (const key in computedOptions) {
      const opt = computedOptions[key];
      const get3 = isFunction(opt) ? opt.bind(publicThis, publicThis) : isFunction(opt.get) ? opt.get.bind(publicThis, publicThis) : NOOP;
      if (get3 === NOOP) {
        warn$1(`Computed property "${key}" has no getter.`);
      }
      const set2 = !isFunction(opt) && isFunction(opt.set) ? opt.set.bind(publicThis) : () => {
        warn$1(`Write operation failed: computed property "${key}" is readonly.`);
      };
      const c2 = computed$1({
        get: get3,
        set: set2
      });
      Object.defineProperty(ctx, key, {
        enumerable: true,
        configurable: true,
        get: () => c2.value,
        set: (v2) => c2.value = v2
      });
      {
        checkDuplicateProperties("Computed", key);
      }
    }
  }
  if (watchOptions) {
    for (const key in watchOptions) {
      createWatcher(watchOptions[key], ctx, publicThis, key);
    }
  }
  {
    if (provideOptions) {
      const provides = isFunction(provideOptions) ? provideOptions.call(publicThis) : provideOptions;
      Reflect.ownKeys(provides).forEach((key) => {
        provide(key, provides[key]);
      });
    }
  }
  {
    if (created) {
      callHook$1(created, instance, "c");
    }
  }
  function registerLifecycleHook(register2, hook) {
    if (isArray(hook)) {
      hook.forEach((_hook) => register2(_hook.bind(publicThis)));
    } else if (hook) {
      register2(hook.bind(publicThis));
    }
  }
  registerLifecycleHook(onBeforeMount, beforeMount);
  registerLifecycleHook(onMounted, mounted);
  registerLifecycleHook(onBeforeUpdate, beforeUpdate);
  registerLifecycleHook(onUpdated, updated);
  registerLifecycleHook(onActivated, activated);
  registerLifecycleHook(onDeactivated, deactivated);
  registerLifecycleHook(onErrorCaptured, errorCaptured);
  registerLifecycleHook(onRenderTracked, renderTracked);
  registerLifecycleHook(onRenderTriggered, renderTriggered);
  registerLifecycleHook(onBeforeUnmount, beforeUnmount);
  registerLifecycleHook(onUnmounted, unmounted);
  registerLifecycleHook(onServerPrefetch, serverPrefetch);
  if (isArray(expose)) {
    if (expose.length) {
      const exposed = instance.exposed || (instance.exposed = {});
      expose.forEach((key) => {
        Object.defineProperty(exposed, key, {
          get: () => publicThis[key],
          set: (val) => publicThis[key] = val
        });
      });
    } else if (!instance.exposed) {
      instance.exposed = {};
    }
  }
  if (render && instance.render === NOOP) {
    instance.render = render;
  }
  if (inheritAttrs != null) {
    instance.inheritAttrs = inheritAttrs;
  }
  if (components)
    instance.components = components;
  if (directives)
    instance.directives = directives;
  if (instance.ctx.$onApplyOptions) {
    instance.ctx.$onApplyOptions(options, instance, publicThis);
  }
}
function resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP, unwrapRef = false) {
  if (isArray(injectOptions)) {
    injectOptions = normalizeInject(injectOptions);
  }
  for (const key in injectOptions) {
    const opt = injectOptions[key];
    let injected;
    if (isObject$2(opt)) {
      if ("default" in opt) {
        injected = inject(opt.from || key, opt.default, true);
      } else {
        injected = inject(opt.from || key);
      }
    } else {
      injected = inject(opt);
    }
    if (isRef(injected)) {
      if (unwrapRef) {
        Object.defineProperty(ctx, key, {
          enumerable: true,
          configurable: true,
          get: () => injected.value,
          set: (v2) => injected.value = v2
        });
      } else {
        {
          warn$1(`injected property "${key}" is a ref and will be auto-unwrapped and no longer needs \`.value\` in the next minor release. To opt-in to the new behavior now, set \`app.config.unwrapInjectedRef = true\` (this config is temporary and will not be needed in the future.)`);
        }
        ctx[key] = injected;
      }
    } else {
      ctx[key] = injected;
    }
    {
      checkDuplicateProperties("Inject", key);
    }
  }
}
function callHook$1(hook, instance, type) {
  callWithAsyncErrorHandling(isArray(hook) ? hook.map((h2) => h2.bind(instance.proxy)) : hook.bind(instance.proxy), instance, type);
}
function createWatcher(raw, ctx, publicThis, key) {
  const getter = key.includes(".") ? createPathGetter(publicThis, key) : () => publicThis[key];
  if (isString(raw)) {
    const handler = ctx[raw];
    if (isFunction(handler)) {
      watch(getter, handler);
    } else {
      warn$1(`Invalid watch handler specified by key "${raw}"`, handler);
    }
  } else if (isFunction(raw)) {
    watch(getter, raw.bind(publicThis));
  } else if (isObject$2(raw)) {
    if (isArray(raw)) {
      raw.forEach((r2) => createWatcher(r2, ctx, publicThis, key));
    } else {
      const handler = isFunction(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];
      if (isFunction(handler)) {
        watch(getter, handler, raw);
      } else {
        warn$1(`Invalid watch handler specified by key "${raw.handler}"`, handler);
      }
    }
  } else {
    warn$1(`Invalid watch option: "${key}"`, raw);
  }
}
function resolveMergedOptions(instance) {
  const base = instance.type;
  const { mixins, extends: extendsOptions } = base;
  const { mixins: globalMixins, optionsCache: cache, config: { optionMergeStrategies } } = instance.appContext;
  const cached = cache.get(base);
  let resolved;
  if (cached) {
    resolved = cached;
  } else if (!globalMixins.length && !mixins && !extendsOptions) {
    {
      resolved = base;
    }
  } else {
    resolved = {};
    if (globalMixins.length) {
      globalMixins.forEach((m2) => mergeOptions(resolved, m2, optionMergeStrategies, true));
    }
    mergeOptions(resolved, base, optionMergeStrategies);
  }
  if (isObject$2(base)) {
    cache.set(base, resolved);
  }
  return resolved;
}
function mergeOptions(to, from, strats, asMixin = false) {
  const { mixins, extends: extendsOptions } = from;
  if (extendsOptions) {
    mergeOptions(to, extendsOptions, strats, true);
  }
  if (mixins) {
    mixins.forEach((m2) => mergeOptions(to, m2, strats, true));
  }
  for (const key in from) {
    if (asMixin && key === "expose") {
      warn$1(`"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.`);
    } else {
      const strat = internalOptionMergeStrats[key] || strats && strats[key];
      to[key] = strat ? strat(to[key], from[key]) : from[key];
    }
  }
  return to;
}
const internalOptionMergeStrats = {
  data: mergeDataFn,
  props: mergeObjectOptions,
  emits: mergeObjectOptions,
  methods: mergeObjectOptions,
  computed: mergeObjectOptions,
  beforeCreate: mergeAsArray$1,
  created: mergeAsArray$1,
  beforeMount: mergeAsArray$1,
  mounted: mergeAsArray$1,
  beforeUpdate: mergeAsArray$1,
  updated: mergeAsArray$1,
  beforeDestroy: mergeAsArray$1,
  beforeUnmount: mergeAsArray$1,
  destroyed: mergeAsArray$1,
  unmounted: mergeAsArray$1,
  activated: mergeAsArray$1,
  deactivated: mergeAsArray$1,
  errorCaptured: mergeAsArray$1,
  serverPrefetch: mergeAsArray$1,
  components: mergeObjectOptions,
  directives: mergeObjectOptions,
  watch: mergeWatchOptions,
  provide: mergeDataFn,
  inject: mergeInject
};
function mergeDataFn(to, from) {
  if (!from) {
    return to;
  }
  if (!to) {
    return from;
  }
  return function mergedDataFn() {
    return extend(isFunction(to) ? to.call(this, this) : to, isFunction(from) ? from.call(this, this) : from);
  };
}
function mergeInject(to, from) {
  return mergeObjectOptions(normalizeInject(to), normalizeInject(from));
}
function normalizeInject(raw) {
  if (isArray(raw)) {
    const res = {};
    for (let i2 = 0; i2 < raw.length; i2++) {
      res[raw[i2]] = raw[i2];
    }
    return res;
  }
  return raw;
}
function mergeAsArray$1(to, from) {
  return to ? [...new Set([].concat(to, from))] : from;
}
function mergeObjectOptions(to, from) {
  return to ? extend(extend(/* @__PURE__ */ Object.create(null), to), from) : from;
}
function mergeWatchOptions(to, from) {
  if (!to)
    return from;
  if (!from)
    return to;
  const merged = extend(/* @__PURE__ */ Object.create(null), to);
  for (const key in from) {
    merged[key] = mergeAsArray$1(to[key], from[key]);
  }
  return merged;
}
function initProps$1(instance, rawProps, isStateful, isSSR = false) {
  const props = {};
  const attrs = {};
  instance.propsDefaults = /* @__PURE__ */ Object.create(null);
  setFullProps(instance, rawProps, props, attrs);
  for (const key in instance.propsOptions[0]) {
    if (!(key in props)) {
      props[key] = void 0;
    }
  }
  {
    validateProps(rawProps || {}, props, instance);
  }
  if (isStateful) {
    instance.props = isSSR ? props : shallowReactive(props);
  } else {
    if (!instance.type.props) {
      instance.props = attrs;
    } else {
      instance.props = props;
    }
  }
  instance.attrs = attrs;
}
function isInHmrContext(instance) {
  while (instance) {
    if (instance.type.__hmrId)
      return true;
    instance = instance.parent;
  }
}
function updateProps(instance, rawProps, rawPrevProps, optimized) {
  const { props, attrs, vnode: { patchFlag } } = instance;
  const rawCurrentProps = toRaw(props);
  const [options] = instance.propsOptions;
  let hasAttrsChanged = false;
  if (!isInHmrContext(instance) && (optimized || patchFlag > 0) && !(patchFlag & 16)) {
    if (patchFlag & 8) {
      const propsToUpdate = instance.vnode.dynamicProps;
      for (let i2 = 0; i2 < propsToUpdate.length; i2++) {
        let key = propsToUpdate[i2];
        if (isEmitListener(instance.emitsOptions, key)) {
          continue;
        }
        const value = rawProps[key];
        if (options) {
          if (hasOwn$1(attrs, key)) {
            if (value !== attrs[key]) {
              attrs[key] = value;
              hasAttrsChanged = true;
            }
          } else {
            const camelizedKey = camelize(key);
            props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false);
          }
        } else {
          if (value !== attrs[key]) {
            attrs[key] = value;
            hasAttrsChanged = true;
          }
        }
      }
    }
  } else {
    if (setFullProps(instance, rawProps, props, attrs)) {
      hasAttrsChanged = true;
    }
    let kebabKey;
    for (const key in rawCurrentProps) {
      if (!rawProps || !hasOwn$1(rawProps, key) && ((kebabKey = hyphenate(key)) === key || !hasOwn$1(rawProps, kebabKey))) {
        if (options) {
          if (rawPrevProps && (rawPrevProps[key] !== void 0 || rawPrevProps[kebabKey] !== void 0)) {
            props[key] = resolvePropValue(options, rawCurrentProps, key, void 0, instance, true);
          }
        } else {
          delete props[key];
        }
      }
    }
    if (attrs !== rawCurrentProps) {
      for (const key in attrs) {
        if (!rawProps || !hasOwn$1(rawProps, key) && true) {
          delete attrs[key];
          hasAttrsChanged = true;
        }
      }
    }
  }
  if (hasAttrsChanged) {
    trigger(instance, "set", "$attrs");
  }
  {
    validateProps(rawProps || {}, props, instance);
  }
}
function setFullProps(instance, rawProps, props, attrs) {
  const [options, needCastKeys] = instance.propsOptions;
  let hasAttrsChanged = false;
  let rawCastValues;
  if (rawProps) {
    for (let key in rawProps) {
      if (isReservedProp(key)) {
        continue;
      }
      const value = rawProps[key];
      let camelKey;
      if (options && hasOwn$1(options, camelKey = camelize(key))) {
        if (!needCastKeys || !needCastKeys.includes(camelKey)) {
          props[camelKey] = value;
        } else {
          (rawCastValues || (rawCastValues = {}))[camelKey] = value;
        }
      } else if (!isEmitListener(instance.emitsOptions, key)) {
        if (!(key in attrs) || value !== attrs[key]) {
          attrs[key] = value;
          hasAttrsChanged = true;
        }
      }
    }
  }
  if (needCastKeys) {
    const rawCurrentProps = toRaw(props);
    const castValues = rawCastValues || EMPTY_OBJ;
    for (let i2 = 0; i2 < needCastKeys.length; i2++) {
      const key = needCastKeys[i2];
      props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !hasOwn$1(castValues, key));
    }
  }
  return hasAttrsChanged;
}
function resolvePropValue(options, props, key, value, instance, isAbsent) {
  const opt = options[key];
  if (opt != null) {
    const hasDefault = hasOwn$1(opt, "default");
    if (hasDefault && value === void 0) {
      const defaultValue = opt.default;
      if (opt.type !== Function && isFunction(defaultValue)) {
        const { propsDefaults } = instance;
        if (key in propsDefaults) {
          value = propsDefaults[key];
        } else {
          setCurrentInstance(instance);
          value = propsDefaults[key] = defaultValue.call(null, props);
          unsetCurrentInstance();
        }
      } else {
        value = defaultValue;
      }
    }
    if (opt[0]) {
      if (isAbsent && !hasDefault) {
        value = false;
      } else if (opt[1] && (value === "" || value === hyphenate(key))) {
        value = true;
      }
    }
  }
  return value;
}
function normalizePropsOptions(comp, appContext, asMixin = false) {
  const cache = appContext.propsCache;
  const cached = cache.get(comp);
  if (cached) {
    return cached;
  }
  const raw = comp.props;
  const normalized = {};
  const needCastKeys = [];
  let hasExtends = false;
  if (!isFunction(comp)) {
    const extendProps = (raw2) => {
      hasExtends = true;
      const [props, keys] = normalizePropsOptions(raw2, appContext, true);
      extend(normalized, props);
      if (keys)
        needCastKeys.push(...keys);
    };
    if (!asMixin && appContext.mixins.length) {
      appContext.mixins.forEach(extendProps);
    }
    if (comp.extends) {
      extendProps(comp.extends);
    }
    if (comp.mixins) {
      comp.mixins.forEach(extendProps);
    }
  }
  if (!raw && !hasExtends) {
    if (isObject$2(comp)) {
      cache.set(comp, EMPTY_ARR);
    }
    return EMPTY_ARR;
  }
  if (isArray(raw)) {
    for (let i2 = 0; i2 < raw.length; i2++) {
      if (!isString(raw[i2])) {
        warn$1(`props must be strings when using array syntax.`, raw[i2]);
      }
      const normalizedKey = camelize(raw[i2]);
      if (validatePropName(normalizedKey)) {
        normalized[normalizedKey] = EMPTY_OBJ;
      }
    }
  } else if (raw) {
    if (!isObject$2(raw)) {
      warn$1(`invalid props options`, raw);
    }
    for (const key in raw) {
      const normalizedKey = camelize(key);
      if (validatePropName(normalizedKey)) {
        const opt = raw[key];
        const prop = normalized[normalizedKey] = isArray(opt) || isFunction(opt) ? { type: opt } : Object.assign({}, opt);
        if (prop) {
          const booleanIndex = getTypeIndex(Boolean, prop.type);
          const stringIndex = getTypeIndex(String, prop.type);
          prop[0] = booleanIndex > -1;
          prop[1] = stringIndex < 0 || booleanIndex < stringIndex;
          if (booleanIndex > -1 || hasOwn$1(prop, "default")) {
            needCastKeys.push(normalizedKey);
          }
        }
      }
    }
  }
  const res = [normalized, needCastKeys];
  if (isObject$2(comp)) {
    cache.set(comp, res);
  }
  return res;
}
function validatePropName(key) {
  if (key[0] !== "$") {
    return true;
  } else {
    warn$1(`Invalid prop name: "${key}" is a reserved property.`);
  }
  return false;
}
function getType(ctor) {
  const match = ctor && ctor.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ctor === null ? "null" : "";
}
function isSameType(a2, b) {
  return getType(a2) === getType(b);
}
function getTypeIndex(type, expectedTypes) {
  if (isArray(expectedTypes)) {
    return expectedTypes.findIndex((t2) => isSameType(t2, type));
  } else if (isFunction(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1;
  }
  return -1;
}
function validateProps(rawProps, props, instance) {
  const resolvedValues = toRaw(props);
  const options = instance.propsOptions[0];
  for (const key in options) {
    let opt = options[key];
    if (opt == null)
      continue;
    validateProp(key, resolvedValues[key], opt, !hasOwn$1(rawProps, key) && !hasOwn$1(rawProps, hyphenate(key)));
  }
}
function validateProp(name, value, prop, isAbsent) {
  const { type, required, validator } = prop;
  if (required && isAbsent) {
    warn$1('Missing required prop: "' + name + '"');
    return;
  }
  if (value == null && !prop.required) {
    return;
  }
  if (type != null && type !== true) {
    let isValid = false;
    const types = isArray(type) ? type : [type];
    const expectedTypes = [];
    for (let i2 = 0; i2 < types.length && !isValid; i2++) {
      const { valid, expectedType } = assertType(value, types[i2]);
      expectedTypes.push(expectedType || "");
      isValid = valid;
    }
    if (!isValid) {
      warn$1(getInvalidTypeMessage(name, value, expectedTypes));
      return;
    }
  }
  if (validator && !validator(value)) {
    warn$1('Invalid prop: custom validator check failed for prop "' + name + '".');
  }
}
const isSimpleType = /* @__PURE__ */ makeMap("String,Number,Boolean,Function,Symbol,BigInt");
function assertType(value, type) {
  let valid;
  const expectedType = getType(type);
  if (isSimpleType(expectedType)) {
    const t2 = typeof value;
    valid = t2 === expectedType.toLowerCase();
    if (!valid && t2 === "object") {
      valid = value instanceof type;
    }
  } else if (expectedType === "Object") {
    valid = isObject$2(value);
  } else if (expectedType === "Array") {
    valid = isArray(value);
  } else if (expectedType === "null") {
    valid = value === null;
  } else {
    valid = value instanceof type;
  }
  return {
    valid,
    expectedType
  };
}
function getInvalidTypeMessage(name, value, expectedTypes) {
  let message = `Invalid prop: type check failed for prop "${name}". Expected ${expectedTypes.map(capitalize).join(" | ")}`;
  const expectedType = expectedTypes[0];
  const receivedType = toRawType(value);
  const expectedValue = styleValue(value, expectedType);
  const receivedValue = styleValue(value, receivedType);
  if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean(expectedType, receivedType)) {
    message += ` with value ${expectedValue}`;
  }
  message += `, got ${receivedType} `;
  if (isExplicable(receivedType)) {
    message += `with value ${receivedValue}.`;
  }
  return message;
}
function styleValue(value, type) {
  if (type === "String") {
    return `"${value}"`;
  } else if (type === "Number") {
    return `${Number(value)}`;
  } else {
    return `${value}`;
  }
}
function isExplicable(type) {
  const explicitTypes = ["string", "number", "boolean"];
  return explicitTypes.some((elem) => type.toLowerCase() === elem);
}
function isBoolean(...args) {
  return args.some((elem) => elem.toLowerCase() === "boolean");
}
function createAppContext() {
  return {
    app: null,
    config: {
      isNativeTag: NO,
      performance: false,
      globalProperties: {},
      optionMergeStrategies: {},
      errorHandler: void 0,
      warnHandler: void 0,
      compilerOptions: {}
    },
    mixins: [],
    components: {},
    directives: {},
    provides: /* @__PURE__ */ Object.create(null),
    optionsCache: /* @__PURE__ */ new WeakMap(),
    propsCache: /* @__PURE__ */ new WeakMap(),
    emitsCache: /* @__PURE__ */ new WeakMap()
  };
}
let uid = 0;
function createAppAPI(render, hydrate) {
  return function createApp2(rootComponent, rootProps = null) {
    if (!isFunction(rootComponent)) {
      rootComponent = Object.assign({}, rootComponent);
    }
    if (rootProps != null && !isObject$2(rootProps)) {
      warn$1(`root props passed to app.mount() must be an object.`);
      rootProps = null;
    }
    const context = createAppContext();
    const installedPlugins = /* @__PURE__ */ new Set();
    const app = context.app = {
      _uid: uid++,
      _component: rootComponent,
      _props: rootProps,
      _container: null,
      _context: context,
      _instance: null,
      version,
      get config() {
        return context.config;
      },
      set config(v2) {
        {
          warn$1(`app.config cannot be replaced. Modify individual options instead.`);
        }
      },
      use(plugin2, ...options) {
        if (installedPlugins.has(plugin2)) {
          warn$1(`Plugin has already been applied to target app.`);
        } else if (plugin2 && isFunction(plugin2.install)) {
          installedPlugins.add(plugin2);
          plugin2.install(app, ...options);
        } else if (isFunction(plugin2)) {
          installedPlugins.add(plugin2);
          plugin2(app, ...options);
        } else {
          warn$1(`A plugin must either be a function or an object with an "install" function.`);
        }
        return app;
      },
      mixin(mixin) {
        {
          if (!context.mixins.includes(mixin)) {
            context.mixins.push(mixin);
          } else {
            warn$1("Mixin has already been applied to target app" + (mixin.name ? `: ${mixin.name}` : ""));
          }
        }
        return app;
      },
      component(name, component) {
        {
          validateComponentName(name, context.config);
        }
        if (!component) {
          return context.components[name];
        }
        if (context.components[name]) {
          warn$1(`Component "${name}" has already been registered in target app.`);
        }
        context.components[name] = component;
        return app;
      },
      directive(name, directive) {
        {
          validateDirectiveName(name);
        }
        if (!directive) {
          return context.directives[name];
        }
        if (context.directives[name]) {
          warn$1(`Directive "${name}" has already been registered in target app.`);
        }
        context.directives[name] = directive;
        return app;
      },
      mount() {
      },
      unmount() {
      },
      provide(key, value) {
        if (key in context.provides) {
          warn$1(`App already provides property with key "${String(key)}". It will be overwritten with the new value.`);
        }
        context.provides[key] = value;
        return app;
      }
    };
    return app;
  };
}
let supported;
let perf;
function startMeasure(instance, type) {
  if (instance.appContext.config.performance && isSupported()) {
    perf.mark(`vue-${type}-${instance.uid}`);
  }
  {
    devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());
  }
}
function endMeasure(instance, type) {
  if (instance.appContext.config.performance && isSupported()) {
    const startTag = `vue-${type}-${instance.uid}`;
    const endTag = startTag + `:end`;
    perf.mark(endTag);
    perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);
    perf.clearMarks(startTag);
    perf.clearMarks(endTag);
  }
  {
    devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());
  }
}
function isSupported() {
  if (supported !== void 0) {
    return supported;
  }
  if (typeof window !== "undefined" && window.performance) {
    supported = true;
    perf = window.performance;
  } else {
    supported = false;
  }
  return supported;
}
const queuePostRenderEffect = queuePostFlushCb;
const Fragment = Symbol("Fragment");
const Text = Symbol("Text");
const Comment = Symbol("Comment");
const Static = Symbol("Static");
function isVNode(value) {
  return value ? value.__v_isVNode === true : false;
}
const InternalObjectKey = `__vInternal`;
function guardReactiveProps(props) {
  if (!props)
    return null;
  return isProxy(props) || InternalObjectKey in props ? extend({}, props) : props;
}
const emptyAppContext = createAppContext();
let uid$1 = 0;
function createComponentInstance(vnode, parent, suspense) {
  const type = vnode.type;
  const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;
  const instance = {
    uid: uid$1++,
    vnode,
    type,
    parent,
    appContext,
    root: null,
    next: null,
    subTree: null,
    effect: null,
    update: null,
    scope: new EffectScope(true),
    render: null,
    proxy: null,
    exposed: null,
    exposeProxy: null,
    withProxy: null,
    provides: parent ? parent.provides : Object.create(appContext.provides),
    accessCache: null,
    renderCache: [],
    components: null,
    directives: null,
    propsOptions: normalizePropsOptions(type, appContext),
    emitsOptions: normalizeEmitsOptions(type, appContext),
    emit: null,
    emitted: null,
    propsDefaults: EMPTY_OBJ,
    inheritAttrs: type.inheritAttrs,
    ctx: EMPTY_OBJ,
    data: EMPTY_OBJ,
    props: EMPTY_OBJ,
    attrs: EMPTY_OBJ,
    slots: EMPTY_OBJ,
    refs: EMPTY_OBJ,
    setupState: EMPTY_OBJ,
    setupContext: null,
    suspense,
    suspenseId: suspense ? suspense.pendingId : 0,
    asyncDep: null,
    asyncResolved: false,
    isMounted: false,
    isUnmounted: false,
    isDeactivated: false,
    bc: null,
    c: null,
    bm: null,
    m: null,
    bu: null,
    u: null,
    um: null,
    bum: null,
    da: null,
    a: null,
    rtg: null,
    rtc: null,
    ec: null,
    sp: null
  };
  {
    instance.ctx = createDevRenderContext(instance);
  }
  instance.root = parent ? parent.root : instance;
  instance.emit = emit$1.bind(null, instance);
  if (vnode.ce) {
    vnode.ce(instance);
  }
  return instance;
}
let currentInstance = null;
const getCurrentInstance = () => currentInstance || currentRenderingInstance;
const setCurrentInstance = (instance) => {
  currentInstance = instance;
  instance.scope.on();
};
const unsetCurrentInstance = () => {
  currentInstance && currentInstance.scope.off();
  currentInstance = null;
};
const isBuiltInTag = /* @__PURE__ */ makeMap("slot,component");
function validateComponentName(name, config) {
  const appIsNativeTag = config.isNativeTag || NO;
  if (isBuiltInTag(name) || appIsNativeTag(name)) {
    warn$1("Do not use built-in or reserved HTML elements as component id: " + name);
  }
}
function isStatefulComponent(instance) {
  return instance.vnode.shapeFlag & 4;
}
let isInSSRComponentSetup = false;
function setupComponent(instance, isSSR = false) {
  isInSSRComponentSetup = isSSR;
  const { props } = instance.vnode;
  const isStateful = isStatefulComponent(instance);
  initProps$1(instance, props, isStateful, isSSR);
  const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : void 0;
  isInSSRComponentSetup = false;
  return setupResult;
}
function setupStatefulComponent(instance, isSSR) {
  const Component2 = instance.type;
  {
    if (Component2.name) {
      validateComponentName(Component2.name, instance.appContext.config);
    }
    if (Component2.components) {
      const names = Object.keys(Component2.components);
      for (let i2 = 0; i2 < names.length; i2++) {
        validateComponentName(names[i2], instance.appContext.config);
      }
    }
    if (Component2.directives) {
      const names = Object.keys(Component2.directives);
      for (let i2 = 0; i2 < names.length; i2++) {
        validateDirectiveName(names[i2]);
      }
    }
    if (Component2.compilerOptions && isRuntimeOnly()) {
      warn$1(`"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.`);
    }
  }
  instance.accessCache = /* @__PURE__ */ Object.create(null);
  instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));
  {
    exposePropsOnRenderContext(instance);
  }
  const { setup } = Component2;
  if (setup) {
    const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;
    setCurrentInstance(instance);
    pauseTracking();
    const setupResult = callWithErrorHandling(setup, instance, 0, [shallowReadonly(instance.props), setupContext]);
    resetTracking();
    unsetCurrentInstance();
    if (isPromise$1(setupResult)) {
      setupResult.then(unsetCurrentInstance, unsetCurrentInstance);
      {
        warn$1(`setup() returned a Promise, but the version of Vue you are using does not support it yet.`);
      }
    } else {
      handleSetupResult(instance, setupResult, isSSR);
    }
  } else {
    finishComponentSetup(instance, isSSR);
  }
}
function handleSetupResult(instance, setupResult, isSSR) {
  if (isFunction(setupResult)) {
    {
      instance.render = setupResult;
    }
  } else if (isObject$2(setupResult)) {
    if (isVNode(setupResult)) {
      warn$1(`setup() should not return VNodes directly - return a render function instead.`);
    }
    {
      instance.devtoolsRawSetupState = setupResult;
    }
    instance.setupState = proxyRefs(setupResult);
    {
      exposeSetupStateOnRenderContext(instance);
    }
  } else if (setupResult !== void 0) {
    warn$1(`setup() should return an object. Received: ${setupResult === null ? "null" : typeof setupResult}`);
  }
  finishComponentSetup(instance, isSSR);
}
let compile;
const isRuntimeOnly = () => !compile;
function finishComponentSetup(instance, isSSR, skipOptions) {
  const Component2 = instance.type;
  if (!instance.render) {
    instance.render = Component2.render || NOOP;
  }
  {
    setCurrentInstance(instance);
    pauseTracking();
    applyOptions$1(instance);
    resetTracking();
    unsetCurrentInstance();
  }
  if (!Component2.render && instance.render === NOOP && !isSSR) {
    if (Component2.template) {
      warn$1(`Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".`);
    } else {
      warn$1(`Component is missing template or render function.`);
    }
  }
}
function createAttrsProxy(instance) {
  return new Proxy(
    instance.attrs,
    {
      get(target, key) {
        track(instance, "get", "$attrs");
        return target[key];
      },
      set() {
        warn$1(`setupContext.attrs is readonly.`);
        return false;
      },
      deleteProperty() {
        warn$1(`setupContext.attrs is readonly.`);
        return false;
      }
    }
  );
}
function createSetupContext(instance) {
  const expose = (exposed) => {
    if (instance.exposed) {
      warn$1(`expose() should be called only once per setup().`);
    }
    instance.exposed = exposed || {};
  };
  let attrs;
  {
    return Object.freeze({
      get attrs() {
        return attrs || (attrs = createAttrsProxy(instance));
      },
      get slots() {
        return shallowReadonly(instance.slots);
      },
      get emit() {
        return (event, ...args) => instance.emit(event, ...args);
      },
      expose
    });
  }
}
function getExposeProxy(instance) {
  if (instance.exposed) {
    return instance.exposeProxy || (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {
      get(target, key) {
        if (key in target) {
          return target[key];
        }
        return instance.proxy[key];
      },
      has(target, key) {
        return key in target || key in publicPropertiesMap;
      }
    }));
  }
}
const classifyRE = /(?:^|[-_])(\w)/g;
const classify = (str) => str.replace(classifyRE, (c2) => c2.toUpperCase()).replace(/[-_]/g, "");
function getComponentName(Component2, includeInferred = true) {
  return isFunction(Component2) ? Component2.displayName || Component2.name : Component2.name || includeInferred && Component2.__name;
}
function formatComponentName(instance, Component2, isRoot = false) {
  let name = getComponentName(Component2);
  if (!name && Component2.__file) {
    const match = Component2.__file.match(/([^/\\]+)\.\w+$/);
    if (match) {
      name = match[1];
    }
  }
  if (!name && instance && instance.parent) {
    const inferFromRegistry = (registry) => {
      for (const key in registry) {
        if (registry[key] === Component2) {
          return key;
        }
      }
    };
    name = inferFromRegistry(instance.components || instance.parent.type.components) || inferFromRegistry(instance.appContext.components);
  }
  return name ? classify(name) : isRoot ? `App` : `Anonymous`;
}
const computed$1 = (getterOrOptions, debugOptions) => {
  return computed(getterOrOptions, debugOptions, isInSSRComponentSetup);
};
const version = "3.2.45";
function unwrapper(target) {
  return unref(target);
}
const ARRAYTYPE = "[object Array]";
const OBJECTTYPE = "[object Object]";
function diff(current, pre) {
  const result = {};
  syncKeys(current, pre);
  _diff(current, pre, "", result);
  return result;
}
function syncKeys(current, pre) {
  current = unwrapper(current);
  if (current === pre)
    return;
  const rootCurrentType = toTypeString(current);
  const rootPreType = toTypeString(pre);
  if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {
    for (let key in pre) {
      const currentValue = current[key];
      if (currentValue === void 0) {
        current[key] = null;
      } else {
        syncKeys(currentValue, pre[key]);
      }
    }
  } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {
    if (current.length >= pre.length) {
      pre.forEach((item, index2) => {
        syncKeys(current[index2], item);
      });
    }
  }
}
function _diff(current, pre, path, result) {
  current = unwrapper(current);
  if (current === pre)
    return;
  const rootCurrentType = toTypeString(current);
  const rootPreType = toTypeString(pre);
  if (rootCurrentType == OBJECTTYPE) {
    if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {
      setResult(result, path, current);
    } else {
      for (let key in current) {
        const currentValue = unwrapper(current[key]);
        const preValue = pre[key];
        const currentType = toTypeString(currentValue);
        const preType = toTypeString(preValue);
        if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {
          if (currentValue != preValue) {
            setResult(result, (path == "" ? "" : path + ".") + key, currentValue);
          }
        } else if (currentType == ARRAYTYPE) {
          if (preType != ARRAYTYPE) {
            setResult(result, (path == "" ? "" : path + ".") + key, currentValue);
          } else {
            if (currentValue.length < preValue.length) {
              setResult(result, (path == "" ? "" : path + ".") + key, currentValue);
            } else {
              currentValue.forEach((item, index2) => {
                _diff(item, preValue[index2], (path == "" ? "" : path + ".") + key + "[" + index2 + "]", result);
              });
            }
          }
        } else if (currentType == OBJECTTYPE) {
          if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {
            setResult(result, (path == "" ? "" : path + ".") + key, currentValue);
          } else {
            for (let subKey in currentValue) {
              _diff(currentValue[subKey], preValue[subKey], (path == "" ? "" : path + ".") + key + "." + subKey, result);
            }
          }
        }
      }
    }
  } else if (rootCurrentType == ARRAYTYPE) {
    if (rootPreType != ARRAYTYPE) {
      setResult(result, path, current);
    } else {
      if (current.length < pre.length) {
        setResult(result, path, current);
      } else {
        current.forEach((item, index2) => {
          _diff(item, pre[index2], path + "[" + index2 + "]", result);
        });
      }
    }
  } else {
    setResult(result, path, current);
  }
}
function setResult(result, k2, v2) {
  result[k2] = v2;
}
function hasComponentEffect(instance) {
  return queue.includes(instance.update);
}
function flushCallbacks(instance) {
  const ctx = instance.ctx;
  const callbacks = ctx.__next_tick_callbacks;
  if (callbacks && callbacks.length) {
    const copies = callbacks.slice(0);
    callbacks.length = 0;
    for (let i2 = 0; i2 < copies.length; i2++) {
      copies[i2]();
    }
  }
}
function nextTick$1(instance, fn2) {
  const ctx = instance.ctx;
  if (!ctx.__next_tick_pending && !hasComponentEffect(instance)) {
    return nextTick(fn2 && fn2.bind(instance.proxy));
  }
  let _resolve;
  if (!ctx.__next_tick_callbacks) {
    ctx.__next_tick_callbacks = [];
  }
  ctx.__next_tick_callbacks.push(() => {
    if (fn2) {
      callWithErrorHandling(fn2.bind(instance.proxy), instance, 14);
    } else if (_resolve) {
      _resolve(instance.proxy);
    }
  });
  return new Promise((resolve2) => {
    _resolve = resolve2;
  });
}
function clone(src, seen) {
  src = unwrapper(src);
  const type = typeof src;
  if (type === "object" && src !== null) {
    let copy = seen.get(src);
    if (typeof copy !== "undefined") {
      return copy;
    }
    if (isArray(src)) {
      const len = src.length;
      copy = new Array(len);
      seen.set(src, copy);
      for (let i2 = 0; i2 < len; i2++) {
        copy[i2] = clone(src[i2], seen);
      }
    } else {
      copy = {};
      seen.set(src, copy);
      for (const name in src) {
        if (hasOwn$1(src, name)) {
          copy[name] = clone(src[name], seen);
        }
      }
    }
    return copy;
  }
  if (type !== "symbol") {
    return src;
  }
}
function deepCopy$1(src) {
  return clone(src, typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : /* @__PURE__ */ new Map());
}
function getMPInstanceData(instance, keys) {
  const data = instance.data;
  const ret = /* @__PURE__ */ Object.create(null);
  keys.forEach((key) => {
    ret[key] = data[key];
  });
  return ret;
}
function patch(instance, data, oldData) {
  if (!data) {
    return;
  }
  data = deepCopy$1(data);
  const ctx = instance.ctx;
  const mpType = ctx.mpType;
  if (mpType === "page" || mpType === "component") {
    data.r0 = 1;
    const mpInstance = ctx.$scope;
    const keys = Object.keys(data);
    const diffData = diff(data, oldData || getMPInstanceData(mpInstance, keys));
    if (Object.keys(diffData).length) {
      ctx.__next_tick_pending = true;
      mpInstance.setData(diffData, () => {
        ctx.__next_tick_pending = false;
        flushCallbacks(instance);
      });
      flushPreFlushCbs();
    } else {
      flushCallbacks(instance);
    }
  }
}
function initAppConfig(appConfig) {
  appConfig.globalProperties.$nextTick = function $nextTick(fn2) {
    return nextTick$1(this.$, fn2);
  };
}
function onApplyOptions(options, instance, publicThis) {
  instance.appContext.config.globalProperties.$applyOptions(options, instance, publicThis);
  const computedOptions = options.computed;
  if (computedOptions) {
    const keys = Object.keys(computedOptions);
    if (keys.length) {
      const ctx = instance.ctx;
      if (!ctx.$computedKeys) {
        ctx.$computedKeys = [];
      }
      ctx.$computedKeys.push(...keys);
    }
  }
  delete instance.ctx.$onApplyOptions;
}
function setRef$1(instance, isUnmount = false) {
  const { setupState, $templateRefs, ctx: { $scope, $mpPlatform } } = instance;
  if ($mpPlatform === "mp-alipay") {
    return;
  }
  if (!$templateRefs || !$scope) {
    return;
  }
  if (isUnmount) {
    return $templateRefs.forEach((templateRef) => setTemplateRef(templateRef, null, setupState));
  }
  const check = $mpPlatform === "mp-baidu" || $mpPlatform === "mp-toutiao";
  const doSetByRefs = (refs) => {
    const mpComponents = ($scope.selectAllComponents(".r") || []).concat($scope.selectAllComponents(".r-i-f") || []);
    return refs.filter((templateRef) => {
      const refValue = findComponentPublicInstance(mpComponents, templateRef.i);
      if (check && refValue === null) {
        return true;
      }
      setTemplateRef(templateRef, refValue, setupState);
      return false;
    });
  };
  const doSet = () => {
    const refs = doSetByRefs($templateRefs);
    if (refs.length && instance.proxy && instance.proxy.$scope) {
      instance.proxy.$scope.setData({ r1: 1 }, () => {
        doSetByRefs(refs);
      });
    }
  };
  if ($scope._$setRef) {
    $scope._$setRef(doSet);
  } else {
    nextTick$1(instance, doSet);
  }
}
function toSkip(value) {
  if (isObject$2(value)) {
    markRaw(value);
  }
  return value;
}
function findComponentPublicInstance(mpComponents, id) {
  const mpInstance = mpComponents.find((com) => com && (com.properties || com.props).uI === id);
  if (mpInstance) {
    const vm = mpInstance.$vm;
    if (vm) {
      return getExposeProxy(vm.$) || vm;
    }
    return toSkip(mpInstance);
  }
  return null;
}
function setTemplateRef({ r: r2, f: f2 }, refValue, setupState) {
  if (isFunction(r2)) {
    r2(refValue, {});
  } else {
    const _isString = isString(r2);
    const _isRef = isRef(r2);
    if (_isString || _isRef) {
      if (f2) {
        if (!_isRef) {
          return;
        }
        if (!isArray(r2.value)) {
          r2.value = [];
        }
        const existing = r2.value;
        if (existing.indexOf(refValue) === -1) {
          existing.push(refValue);
          if (!refValue) {
            return;
          }
          onBeforeUnmount(() => remove(existing, refValue), refValue.$);
        }
      } else if (_isString) {
        if (hasOwn$1(setupState, r2)) {
          setupState[r2] = refValue;
        }
      } else if (isRef(r2)) {
        r2.value = refValue;
      } else {
        warnRef(r2);
      }
    } else {
      warnRef(r2);
    }
  }
}
function warnRef(ref2) {
  warn$1("Invalid template ref type:", ref2, `(${typeof ref2})`);
}
var MPType;
(function(MPType2) {
  MPType2["APP"] = "app";
  MPType2["PAGE"] = "page";
  MPType2["COMPONENT"] = "component";
})(MPType || (MPType = {}));
const queuePostRenderEffect$1 = queuePostFlushCb;
function mountComponent(initialVNode, options) {
  const instance = initialVNode.component = createComponentInstance(initialVNode, options.parentComponent, null);
  {
    instance.ctx.$onApplyOptions = onApplyOptions;
    instance.ctx.$children = [];
  }
  if (options.mpType === "app") {
    instance.render = NOOP;
  }
  if (options.onBeforeSetup) {
    options.onBeforeSetup(instance, options);
  }
  {
    pushWarningContext(initialVNode);
    startMeasure(instance, `mount`);
  }
  {
    startMeasure(instance, `init`);
  }
  setupComponent(instance);
  {
    endMeasure(instance, `init`);
  }
  {
    if (options.parentComponent && instance.proxy) {
      options.parentComponent.ctx.$children.push(getExposeProxy(instance) || instance.proxy);
    }
  }
  setupRenderEffect(instance);
  {
    popWarningContext();
    endMeasure(instance, `mount`);
  }
  return instance.proxy;
}
const getFunctionalFallthrough = (attrs) => {
  let res;
  for (const key in attrs) {
    if (key === "class" || key === "style" || isOn(key)) {
      (res || (res = {}))[key] = attrs[key];
    }
  }
  return res;
};
function renderComponentRoot(instance) {
  const { type: Component2, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit: emit2, render, renderCache, data, setupState, ctx, uid: uid2, appContext: { app: { config: { globalProperties: { pruneComponentPropsCache: pruneComponentPropsCache2 } } } }, inheritAttrs } = instance;
  instance.$templateRefs = [];
  instance.$ei = 0;
  pruneComponentPropsCache2(uid2);
  instance.__counter = instance.__counter === 0 ? 1 : 0;
  let result;
  const prev = setCurrentRenderingInstance(instance);
  try {
    if (vnode.shapeFlag & 4) {
      fallthroughAttrs(inheritAttrs, props, propsOptions, attrs);
      const proxyToUse = withProxy || proxy;
      result = render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx);
    } else {
      fallthroughAttrs(inheritAttrs, props, propsOptions, Component2.props ? attrs : getFunctionalFallthrough(attrs));
      const render2 = Component2;
      result = render2.length > 1 ? render2(props, { attrs, slots, emit: emit2 }) : render2(props, null);
    }
  } catch (err) {
    handleError(err, instance, 1);
    result = false;
  }
  setRef$1(instance);
  setCurrentRenderingInstance(prev);
  return result;
}
function fallthroughAttrs(inheritAttrs, props, propsOptions, fallthroughAttrs2) {
  if (props && fallthroughAttrs2 && inheritAttrs !== false) {
    const keys = Object.keys(fallthroughAttrs2).filter((key) => key !== "class" && key !== "style");
    if (!keys.length) {
      return;
    }
    if (propsOptions && keys.some(isModelListener)) {
      keys.forEach((key) => {
        if (!isModelListener(key) || !(key.slice(9) in propsOptions)) {
          props[key] = fallthroughAttrs2[key];
        }
      });
    } else {
      keys.forEach((key) => props[key] = fallthroughAttrs2[key]);
    }
  }
}
const updateComponentPreRender = (instance) => {
  pauseTracking();
  flushPreFlushCbs();
  resetTracking();
};
function componentUpdateScopedSlotsFn() {
  const scopedSlotsData = this.$scopedSlotsData;
  if (!scopedSlotsData || scopedSlotsData.length === 0) {
    return;
  }
  const mpInstance = this.ctx.$scope;
  const oldData = mpInstance.data;
  const diffData = /* @__PURE__ */ Object.create(null);
  scopedSlotsData.forEach(({ path, index: index2, data }) => {
    const oldScopedSlotData = getValueByDataPath(oldData, path);
    const diffPath = isString(index2) ? `${path}.${index2}` : `${path}[${index2}]`;
    if (typeof oldScopedSlotData === "undefined" || typeof oldScopedSlotData[index2] === "undefined") {
      diffData[diffPath] = data;
    } else {
      const diffScopedSlotData = diff(data, oldScopedSlotData[index2]);
      Object.keys(diffScopedSlotData).forEach((name) => {
        diffData[diffPath + "." + name] = diffScopedSlotData[name];
      });
    }
  });
  scopedSlotsData.length = 0;
  if (Object.keys(diffData).length) {
    mpInstance.setData(diffData);
  }
}
function toggleRecurse({ effect, update: update3 }, allowed) {
  effect.allowRecurse = update3.allowRecurse = allowed;
}
function setupRenderEffect(instance) {
  const updateScopedSlots = componentUpdateScopedSlotsFn.bind(instance);
  instance.$updateScopedSlots = () => nextTick(() => queueJob(updateScopedSlots));
  const componentUpdateFn = () => {
    if (!instance.isMounted) {
      onBeforeUnmount(() => {
        setRef$1(instance, true);
      }, instance);
      {
        startMeasure(instance, `patch`);
      }
      patch(instance, renderComponentRoot(instance));
      {
        endMeasure(instance, `patch`);
      }
      {
        devtoolsComponentAdded(instance);
      }
    } else {
      const { next, bu, u: u2 } = instance;
      {
        pushWarningContext(next || instance.vnode);
      }
      toggleRecurse(instance, false);
      updateComponentPreRender();
      if (bu) {
        invokeArrayFns$1(bu);
      }
      toggleRecurse(instance, true);
      {
        startMeasure(instance, `patch`);
      }
      patch(instance, renderComponentRoot(instance));
      {
        endMeasure(instance, `patch`);
      }
      if (u2) {
        queuePostRenderEffect$1(u2);
      }
      {
        devtoolsComponentUpdated(instance);
      }
      {
        popWarningContext();
      }
    }
  };
  const effect = instance.effect = new ReactiveEffect(
    componentUpdateFn,
    () => queueJob(instance.update),
    instance.scope
  );
  const update3 = instance.update = effect.run.bind(effect);
  update3.id = instance.uid;
  toggleRecurse(instance, true);
  {
    effect.onTrack = instance.rtc ? (e2) => invokeArrayFns$1(instance.rtc, e2) : void 0;
    effect.onTrigger = instance.rtg ? (e2) => invokeArrayFns$1(instance.rtg, e2) : void 0;
    update3.ownerInstance = instance;
  }
  update3();
}
function unmountComponent(instance) {
  const { bum, scope, update: update3, um } = instance;
  if (bum) {
    invokeArrayFns$1(bum);
  }
  scope.stop();
  if (update3) {
    update3.active = false;
  }
  if (um) {
    queuePostRenderEffect$1(um);
  }
  queuePostRenderEffect$1(() => {
    instance.isUnmounted = true;
  });
  {
    devtoolsComponentRemoved(instance);
  }
}
const oldCreateApp = createAppAPI();
function getTarget() {
  if (typeof window !== "undefined") {
    return window;
  }
  if (typeof globalThis !== "undefined") {
    return globalThis;
  }
  if (typeof global !== "undefined") {
    return global;
  }
  if (typeof my !== "undefined") {
    return my;
  }
}
function createVueApp(rootComponent, rootProps = null) {
  const target = getTarget();
  target.__VUE__ = true;
  {
    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);
  }
  const app = oldCreateApp(rootComponent, rootProps);
  const appContext = app._context;
  initAppConfig(appContext.config);
  const createVNode = (initialVNode) => {
    initialVNode.appContext = appContext;
    initialVNode.shapeFlag = 6;
    return initialVNode;
  };
  const createComponent2 = function createComponent3(initialVNode, options) {
    return mountComponent(createVNode(initialVNode), options);
  };
  const destroyComponent = function destroyComponent2(component) {
    return component && unmountComponent(component.$);
  };
  app.mount = function mount() {
    rootComponent.render = NOOP;
    const instance = mountComponent(createVNode({ type: rootComponent }), {
      mpType: MPType.APP,
      mpInstance: null,
      parentComponent: null,
      slots: [],
      props: null
    });
    app._instance = instance.$;
    {
      devtoolsInitApp(app, version);
    }
    instance.$app = app;
    instance.$createComponent = createComponent2;
    instance.$destroyComponent = destroyComponent;
    appContext.$appInstance = instance;
    return instance;
  };
  app.unmount = function unmount() {
    warn$1(`Cannot unmount an app.`);
  };
  return app;
}
function injectLifecycleHook(name, hook, publicThis, instance) {
  if (isFunction(hook)) {
    injectHook(name, hook.bind(publicThis), instance);
  }
}
function initHooks$1(options, instance, publicThis) {
  const mpType = options.mpType || publicThis.$mpType;
  if (!mpType || mpType === "component") {
    return;
  }
  Object.keys(options).forEach((name) => {
    if (isUniLifecycleHook(name, options[name], false)) {
      const hooks = options[name];
      if (isArray(hooks)) {
        hooks.forEach((hook) => injectLifecycleHook(name, hook, publicThis, instance));
      } else {
        injectLifecycleHook(name, hooks, publicThis, instance);
      }
    }
  });
}
function applyOptions$2(options, instance, publicThis) {
  initHooks$1(options, instance, publicThis);
}
function set$2(target, key, val) {
  return target[key] = val;
}
function createErrorHandler(app) {
  return function errorHandler(err, instance, _info) {
    if (!instance) {
      throw err;
    }
    const appInstance = app._instance;
    if (!appInstance || !appInstance.proxy) {
      throw err;
    }
    {
      appInstance.proxy.$callHook(ON_ERROR, err);
    }
  };
}
function mergeAsArray(to, from) {
  return to ? [...new Set([].concat(to, from))] : from;
}
function initOptionMergeStrategies(optionMergeStrategies) {
  UniLifecycleHooks.forEach((name) => {
    optionMergeStrategies[name] = mergeAsArray;
  });
}
let realAtob;
const b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
const b64re = /^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;
if (typeof atob !== "function") {
  realAtob = function(str) {
    str = String(str).replace(/[\t\n\f\r ]+/g, "");
    if (!b64re.test(str)) {
      throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");
    }
    str += "==".slice(2 - (str.length & 3));
    var bitmap;
    var result = "";
    var r1;
    var r2;
    var i2 = 0;
    for (; i2 < str.length; ) {
      bitmap = b64.indexOf(str.charAt(i2++)) << 18 | b64.indexOf(str.charAt(i2++)) << 12 | (r1 = b64.indexOf(str.charAt(i2++))) << 6 | (r2 = b64.indexOf(str.charAt(i2++)));
      result += r1 === 64 ? String.fromCharCode(bitmap >> 16 & 255) : r2 === 64 ? String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255) : String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255, bitmap & 255);
    }
    return result;
  };
} else {
  realAtob = atob;
}
function b64DecodeUnicode(str) {
  return decodeURIComponent(realAtob(str).split("").map(function(c2) {
    return "%" + ("00" + c2.charCodeAt(0).toString(16)).slice(-2);
  }).join(""));
}
function getCurrentUserInfo() {
  const token = index$1.getStorageSync("uni_id_token") || "";
  const tokenArr = token.split(".");
  if (!token || tokenArr.length !== 3) {
    return {
      uid: null,
      role: [],
      permission: [],
      tokenExpired: 0
    };
  }
  let userInfo;
  try {
    userInfo = JSON.parse(b64DecodeUnicode(tokenArr[1]));
  } catch (error) {
    throw new Error("\u83B7\u53D6\u5F53\u524D\u7528\u6237\u4FE1\u606F\u51FA\u9519\uFF0C\u8BE6\u7EC6\u9519\u8BEF\u4FE1\u606F\u4E3A\uFF1A" + error.message);
  }
  userInfo.tokenExpired = userInfo.exp * 1e3;
  delete userInfo.exp;
  delete userInfo.iat;
  return userInfo;
}
function uniIdMixin(globalProperties) {
  globalProperties.uniIDHasRole = function(roleId) {
    const { role } = getCurrentUserInfo();
    return role.indexOf(roleId) > -1;
  };
  globalProperties.uniIDHasPermission = function(permissionId) {
    const { permission } = getCurrentUserInfo();
    return this.uniIDHasRole("admin") || permission.indexOf(permissionId) > -1;
  };
  globalProperties.uniIDTokenValid = function() {
    const { tokenExpired } = getCurrentUserInfo();
    return tokenExpired > Date.now();
  };
}
function initApp(app) {
  const appConfig = app._context.config;
  appConfig.errorHandler = invokeCreateErrorHandler(app, createErrorHandler);
  initOptionMergeStrategies(appConfig.optionMergeStrategies);
  const globalProperties = appConfig.globalProperties;
  {
    uniIdMixin(globalProperties);
  }
  {
    globalProperties.$set = set$2;
    globalProperties.$applyOptions = applyOptions$2;
  }
  {
    index$1.invokeCreateVueAppHook(app);
  }
}
const propsCaches = /* @__PURE__ */ Object.create(null);
function renderProps(props) {
  const { uid: uid2, __counter } = getCurrentInstance();
  const propsId = (propsCaches[uid2] || (propsCaches[uid2] = [])).push(guardReactiveProps(props)) - 1;
  return uid2 + "," + propsId + "," + __counter;
}
function pruneComponentPropsCache(uid2) {
  delete propsCaches[uid2];
}
function findComponentPropsData(up) {
  if (!up) {
    return;
  }
  const [uid2, propsId] = up.split(",");
  if (!propsCaches[uid2]) {
    return;
  }
  return propsCaches[uid2][parseInt(propsId)];
}
var plugin = {
  install(app) {
    initApp(app);
    app.config.globalProperties.pruneComponentPropsCache = pruneComponentPropsCache;
    const oldMount = app.mount;
    app.mount = function mount(rootContainer) {
      const instance = oldMount.call(app, rootContainer);
      const createApp2 = getCreateApp();
      if (createApp2) {
        createApp2(instance);
      } else {
        if (typeof createMiniProgramApp !== "undefined") {
          createMiniProgramApp(instance);
        }
      }
      return instance;
    };
  }
};
function getCreateApp() {
  const method = "createApp";
  if (typeof global !== "undefined") {
    return global[method];
  } else if (typeof my !== "undefined") {
    return my[method];
  }
}
function vOn(value, key) {
  const instance = getCurrentInstance();
  const ctx = instance.ctx;
  const extraKey = typeof key !== "undefined" && (ctx.$mpPlatform === "mp-weixin" || ctx.$mpPlatform === "mp-qq") && (isString(key) || typeof key === "number") ? "_" + key : "";
  const name = "e" + instance.$ei++ + extraKey;
  const mpInstance = ctx.$scope;
  if (!value) {
    delete mpInstance[name];
    return name;
  }
  const existingInvoker = mpInstance[name];
  if (existingInvoker) {
    existingInvoker.value = value;
  } else {
    mpInstance[name] = createInvoker(value, instance);
  }
  return name;
}
function createInvoker(initialValue, instance) {
  const invoker = (e2) => {
    patchMPEvent(e2);
    let args = [e2];
    if (e2.detail && e2.detail.__args__) {
      args = e2.detail.__args__;
    }
    const eventValue = invoker.value;
    const invoke = () => callWithAsyncErrorHandling(patchStopImmediatePropagation(e2, eventValue), instance, 5, args);
    const eventTarget = e2.target;
    const eventSync = eventTarget ? eventTarget.dataset ? eventTarget.dataset.eventsync === "true" : false : false;
    if (bubbles.includes(e2.type) && !eventSync) {
      setTimeout(invoke);
    } else {
      const res = invoke();
      if (e2.type === "input" && (isArray(res) || isPromise$1(res))) {
        return;
      }
      return res;
    }
  };
  invoker.value = initialValue;
  return invoker;
}
const bubbles = [
  "tap",
  "longpress",
  "longtap",
  "transitionend",
  "animationstart",
  "animationiteration",
  "animationend",
  "touchforcechange"
];
function patchMPEvent(event) {
  if (event.type && event.target) {
    event.preventDefault = NOOP;
    event.stopPropagation = NOOP;
    event.stopImmediatePropagation = NOOP;
    if (!hasOwn$1(event, "detail")) {
      event.detail = {};
    }
    if (hasOwn$1(event, "markerId")) {
      event.detail = typeof event.detail === "object" ? event.detail : {};
      event.detail.markerId = event.markerId;
    }
    if (isPlainObject$1(event.detail) && hasOwn$1(event.detail, "checked") && !hasOwn$1(event.detail, "value")) {
      event.detail.value = event.detail.checked;
    }
    if (isPlainObject$1(event.detail)) {
      event.target = extend({}, event.target, event.detail);
    }
  }
}
function patchStopImmediatePropagation(e2, value) {
  if (isArray(value)) {
    const originalStop = e2.stopImmediatePropagation;
    e2.stopImmediatePropagation = () => {
      originalStop && originalStop.call(e2);
      e2._stopped = true;
    };
    return value.map((fn2) => (e3) => !e3._stopped && fn2(e3));
  } else {
    return value;
  }
}
function vFor(source, renderItem) {
  let ret;
  if (isArray(source) || isString(source)) {
    ret = new Array(source.length);
    for (let i2 = 0, l2 = source.length; i2 < l2; i2++) {
      ret[i2] = renderItem(source[i2], i2, i2);
    }
  } else if (typeof source === "number") {
    if (!Number.isInteger(source)) {
      warn$1(`The v-for range expect an integer value but got ${source}.`);
      return [];
    }
    ret = new Array(source);
    for (let i2 = 0; i2 < source; i2++) {
      ret[i2] = renderItem(i2 + 1, i2, i2);
    }
  } else if (isObject$2(source)) {
    if (source[Symbol.iterator]) {
      ret = Array.from(source, (item, i2) => renderItem(item, i2, i2));
    } else {
      const keys = Object.keys(source);
      ret = new Array(keys.length);
      for (let i2 = 0, l2 = keys.length; i2 < l2; i2++) {
        const key = keys[i2];
        ret[i2] = renderItem(source[key], key, i2);
      }
    }
  } else {
    ret = [];
  }
  return ret;
}
function stringifyStyle(value) {
  if (isString(value)) {
    return value;
  }
  return stringify(normalizeStyle(value));
}
function stringify(styles) {
  let ret = "";
  if (!styles || isString(styles)) {
    return ret;
  }
  for (const key in styles) {
    ret += `${key.startsWith(`--`) ? key : hyphenate(key)}:${styles[key]};`;
  }
  return ret;
}
function setRef(ref2, id, opts = {}) {
  const { $templateRefs } = getCurrentInstance();
  $templateRefs.push({ i: id, r: ref2, k: opts.k, f: opts.f });
}
const o$1 = (value, key) => vOn(value, key);
const f$1 = (source, renderItem) => vFor(source, renderItem);
const s$1 = (value) => stringifyStyle(value);
const e = (target, ...sources) => extend(target, ...sources);
const n$1 = (value) => normalizeClass(value);
const t$1 = (val) => toDisplayString(val);
const p$1 = (props) => renderProps(props);
const sr = (ref2, id, opts) => setRef(ref2, id, opts);
function createApp$1(rootComponent, rootProps = null) {
  rootComponent && (rootComponent.mpType = "app");
  return createVueApp(rootComponent, rootProps).use(plugin);
}
const createSSRApp = createApp$1;
const MP_METHODS = [
  "createSelectorQuery",
  "createIntersectionObserver",
  "selectAllComponents",
  "selectComponent"
];
function createEmitFn(oldEmit, ctx) {
  return function emit2(event, ...args) {
    const scope = ctx.$scope;
    if (scope && event) {
      const detail = { __args__: args };
      {
        scope.triggerEvent(event, detail);
      }
    }
    return oldEmit.apply(this, [event, ...args]);
  };
}
function initBaseInstance(instance, options) {
  const ctx = instance.ctx;
  ctx.mpType = options.mpType;
  ctx.$mpType = options.mpType;
  ctx.$mpPlatform = "mp-weixin";
  ctx.$scope = options.mpInstance;
  ctx.$mp = {};
  {
    ctx._self = {};
  }
  instance.slots = {};
  if (isArray(options.slots) && options.slots.length) {
    options.slots.forEach((name) => {
      instance.slots[name] = true;
    });
    if (instance.slots[SLOT_DEFAULT_NAME]) {
      instance.slots.default = true;
    }
  }
  ctx.getOpenerEventChannel = function() {
    {
      return options.mpInstance.getOpenerEventChannel();
    }
  };
  ctx.$hasHook = hasHook;
  ctx.$callHook = callHook;
  instance.emit = createEmitFn(instance.emit, ctx);
}
function initComponentInstance(instance, options) {
  initBaseInstance(instance, options);
  const ctx = instance.ctx;
  MP_METHODS.forEach((method) => {
    ctx[method] = function(...args) {
      const mpInstance = ctx.$scope;
      if (mpInstance && mpInstance[method]) {
        return mpInstance[method].apply(mpInstance, args);
      }
    };
  });
}
function initMocks(instance, mpInstance, mocks2) {
  const ctx = instance.ctx;
  mocks2.forEach((mock) => {
    if (hasOwn$1(mpInstance, mock)) {
      instance[mock] = ctx[mock] = mpInstance[mock];
    }
  });
}
function hasHook(name) {
  const hooks = this.$[name];
  if (hooks && hooks.length) {
    return true;
  }
  return false;
}
function callHook(name, args) {
  if (name === "mounted") {
    callHook.call(this, "bm");
    this.$.isMounted = true;
    name = "m";
  }
  const hooks = this.$[name];
  return hooks && invokeArrayFns(hooks, args);
}
const PAGE_INIT_HOOKS = [
  ON_LOAD,
  ON_SHOW,
  ON_HIDE,
  ON_UNLOAD,
  ON_RESIZE,
  ON_TAB_ITEM_TAP,
  ON_REACH_BOTTOM,
  ON_PULL_DOWN_REFRESH,
  ON_ADD_TO_FAVORITES
];
function findHooks(vueOptions, hooks = /* @__PURE__ */ new Set()) {
  if (vueOptions) {
    Object.keys(vueOptions).forEach((name) => {
      if (isUniLifecycleHook(name, vueOptions[name])) {
        hooks.add(name);
      }
    });
    {
      const { extends: extendsOptions, mixins } = vueOptions;
      if (mixins) {
        mixins.forEach((mixin) => findHooks(mixin, hooks));
      }
      if (extendsOptions) {
        findHooks(extendsOptions, hooks);
      }
    }
  }
  return hooks;
}
function initHook(mpOptions, hook, excludes) {
  if (excludes.indexOf(hook) === -1 && !hasOwn$1(mpOptions, hook)) {
    mpOptions[hook] = function(args) {
      return this.$vm && this.$vm.$callHook(hook, args);
    };
  }
}
const EXCLUDE_HOOKS = [ON_READY];
function initHooks(mpOptions, hooks, excludes = EXCLUDE_HOOKS) {
  hooks.forEach((hook) => initHook(mpOptions, hook, excludes));
}
function initUnknownHooks(mpOptions, vueOptions, excludes = EXCLUDE_HOOKS) {
  findHooks(vueOptions).forEach((hook) => initHook(mpOptions, hook, excludes));
}
function initRuntimeHooks(mpOptions, runtimeHooks) {
  if (!runtimeHooks) {
    return;
  }
  const hooks = Object.keys(MINI_PROGRAM_PAGE_RUNTIME_HOOKS);
  hooks.forEach((hook) => {
    if (runtimeHooks & MINI_PROGRAM_PAGE_RUNTIME_HOOKS[hook]) {
      initHook(mpOptions, hook, []);
    }
  });
}
const findMixinRuntimeHooks = /* @__PURE__ */ once(() => {
  const runtimeHooks = [];
  const app = isFunction(getApp) && getApp({ allowDefault: true });
  if (app && app.$vm && app.$vm.$) {
    const mixins = app.$vm.$.appContext.mixins;
    if (isArray(mixins)) {
      const hooks = Object.keys(MINI_PROGRAM_PAGE_RUNTIME_HOOKS);
      mixins.forEach((mixin) => {
        hooks.forEach((hook) => {
          if (hasOwn$1(mixin, hook) && !runtimeHooks.includes(hook)) {
            runtimeHooks.push(hook);
          }
        });
      });
    }
  }
  return runtimeHooks;
});
function initMixinRuntimeHooks(mpOptions) {
  initHooks(mpOptions, findMixinRuntimeHooks());
}
const HOOKS = [
  ON_SHOW,
  ON_HIDE,
  ON_ERROR,
  ON_THEME_CHANGE,
  ON_PAGE_NOT_FOUND,
  ON_UNHANDLE_REJECTION
];
function parseApp(instance, parseAppOptions) {
  const internalInstance = instance.$;
  const appOptions = {
    globalData: instance.$options && instance.$options.globalData || {},
    $vm: instance,
    onLaunch(options) {
      this.$vm = instance;
      const ctx = internalInstance.ctx;
      if (this.$vm && ctx.$scope) {
        return;
      }
      initBaseInstance(internalInstance, {
        mpType: "app",
        mpInstance: this,
        slots: []
      });
      ctx.globalData = this.globalData;
      instance.$callHook(ON_LAUNCH, options);
    }
  };
  initLocale(instance);
  const vueOptions = instance.$.type;
  initHooks(appOptions, HOOKS);
  initUnknownHooks(appOptions, vueOptions);
  {
    const methods = vueOptions.methods;
    methods && extend(appOptions, methods);
  }
  if (parseAppOptions) {
    parseAppOptions.parse(appOptions);
  }
  return appOptions;
}
function initCreateApp(parseAppOptions) {
  return function createApp2(vm) {
    return App(parseApp(vm, parseAppOptions));
  };
}
function initCreateSubpackageApp(parseAppOptions) {
  return function createApp2(vm) {
    const appOptions = parseApp(vm, parseAppOptions);
    const app = isFunction(getApp) && getApp({
      allowDefault: true
    });
    if (!app)
      return;
    vm.$.ctx.$scope = app;
    const globalData = app.globalData;
    if (globalData) {
      Object.keys(appOptions.globalData).forEach((name) => {
        if (!hasOwn$1(globalData, name)) {
          globalData[name] = appOptions.globalData[name];
        }
      });
    }
    Object.keys(appOptions).forEach((name) => {
      if (!hasOwn$1(app, name)) {
        app[name] = appOptions[name];
      }
    });
    initAppLifecycle(appOptions, vm);
  };
}
function initAppLifecycle(appOptions, vm) {
  if (isFunction(appOptions.onLaunch)) {
    const args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    appOptions.onLaunch(args);
  }
  if (isFunction(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow((args) => {
      vm.$callHook("onShow", args);
    });
  }
  if (isFunction(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide((args) => {
      vm.$callHook("onHide", args);
    });
  }
}
function initLocale(appVm) {
  const locale = ref(normalizeLocale(wx.getSystemInfoSync().language) || LOCALE_EN);
  Object.defineProperty(appVm, "$locale", {
    get() {
      return locale.value;
    },
    set(v2) {
      locale.value = v2;
    }
  });
}
function initVueIds(vueIds, mpInstance) {
  if (!vueIds) {
    return;
  }
  const ids = vueIds.split(",");
  const len = ids.length;
  if (len === 1) {
    mpInstance._$vueId = ids[0];
  } else if (len === 2) {
    mpInstance._$vueId = ids[0];
    mpInstance._$vuePid = ids[1];
  }
}
const EXTRAS = ["externalClasses"];
function initExtraOptions(miniProgramComponentOptions, vueOptions) {
  EXTRAS.forEach((name) => {
    if (hasOwn$1(vueOptions, name)) {
      miniProgramComponentOptions[name] = vueOptions[name];
    }
  });
}
function initWxsCallMethods(methods, wxsCallMethods) {
  if (!isArray(wxsCallMethods)) {
    return;
  }
  wxsCallMethods.forEach((callMethod) => {
    methods[callMethod] = function(args) {
      return this.$vm[callMethod](args);
    };
  });
}
function selectAllComponents(mpInstance, selector, $refs) {
  const components = mpInstance.selectAllComponents(selector);
  components.forEach((component) => {
    const ref2 = component.properties.uR;
    $refs[ref2] = component.$vm || component;
  });
}
function initRefs(instance, mpInstance) {
  Object.defineProperty(instance, "refs", {
    get() {
      const $refs = {};
      selectAllComponents(mpInstance, ".r", $refs);
      const forComponents = mpInstance.selectAllComponents(".r-i-f");
      forComponents.forEach((component) => {
        const ref2 = component.properties.uR;
        if (!ref2) {
          return;
        }
        if (!$refs[ref2]) {
          $refs[ref2] = [];
        }
        $refs[ref2].push(component.$vm || component);
      });
      return $refs;
    }
  });
}
function findVmByVueId(instance, vuePid) {
  const $children = instance.$children;
  for (let i2 = $children.length - 1; i2 >= 0; i2--) {
    const childVm = $children[i2];
    if (childVm.$scope._$vueId === vuePid) {
      return childVm;
    }
  }
  let parentVm;
  for (let i2 = $children.length - 1; i2 >= 0; i2--) {
    parentVm = findVmByVueId($children[i2], vuePid);
    if (parentVm) {
      return parentVm;
    }
  }
}
const builtInProps = [
  "eO",
  "uR",
  "uRIF",
  "uI",
  "uT",
  "uP",
  "uS"
];
function initDefaultProps(options, isBehavior = false) {
  const properties = {};
  if (!isBehavior) {
    builtInProps.forEach((name) => {
      properties[name] = {
        type: null,
        value: ""
      };
    });
    properties.uS = {
      type: null,
      value: [],
      observer: function(newVal) {
        const $slots = /* @__PURE__ */ Object.create(null);
        newVal && newVal.forEach((slotName) => {
          $slots[slotName] = true;
        });
        this.setData({
          $slots
        });
      }
    };
  }
  if (options.behaviors) {
    if (options.behaviors.includes("wx://form-field")) {
      properties.name = {
        type: null,
        value: ""
      };
      properties.value = {
        type: null,
        value: ""
      };
    }
  }
  return properties;
}
function initVirtualHostProps(options) {
  const properties = {};
  {
    if (options && options.virtualHost) {
      properties.virtualHostStyle = {
        type: null,
        value: ""
      };
      properties.virtualHostClass = {
        type: null,
        value: ""
      };
    }
  }
  return properties;
}
function initProps(mpComponentOptions) {
  if (!mpComponentOptions.properties) {
    mpComponentOptions.properties = {};
  }
  extend(mpComponentOptions.properties, initDefaultProps(mpComponentOptions), initVirtualHostProps(mpComponentOptions.options));
}
const PROP_TYPES = [String, Number, Boolean, Object, Array, null];
function parsePropType(type, defaultValue) {
  if (isArray(type) && type.length === 1) {
    return type[0];
  }
  return type;
}
function normalizePropType(type, defaultValue) {
  const res = parsePropType(type);
  return PROP_TYPES.indexOf(res) !== -1 ? res : null;
}
function initPageProps({ properties }, rawProps) {
  if (isArray(rawProps)) {
    rawProps.forEach((key) => {
      properties[key] = {
        type: String,
        value: ""
      };
    });
  } else if (isPlainObject$1(rawProps)) {
    Object.keys(rawProps).forEach((key) => {
      const opts = rawProps[key];
      if (isPlainObject$1(opts)) {
        let value = opts.default;
        if (isFunction(value)) {
          value = value();
        }
        const type = opts.type;
        opts.type = normalizePropType(type);
        properties[key] = {
          type: opts.type,
          value
        };
      } else {
        properties[key] = {
          type: normalizePropType(opts)
        };
      }
    });
  }
}
function findPropsData(properties, isPage2) {
  return (isPage2 ? findPagePropsData(properties) : findComponentPropsData(properties.uP)) || {};
}
function findPagePropsData(properties) {
  const propsData = {};
  if (isPlainObject$1(properties)) {
    Object.keys(properties).forEach((name) => {
      if (builtInProps.indexOf(name) === -1) {
        propsData[name] = properties[name];
      }
    });
  }
  return propsData;
}
function initFormField(vm) {
  const vueOptions = vm.$options;
  if (isArray(vueOptions.behaviors) && vueOptions.behaviors.includes("uni://form-field")) {
    vm.$watch("modelValue", () => {
      vm.$scope && vm.$scope.setData({
        name: vm.name,
        value: vm.modelValue
      });
    }, {
      immediate: true
    });
  }
}
function initData(_2) {
  return {};
}
function initPropsObserver(componentOptions) {
  const observe = function observe2() {
    const up = this.properties.uP;
    if (!up) {
      return;
    }
    if (this.$vm) {
      updateComponentProps(up, this.$vm.$);
    } else if (this.properties.uT === "m") {
      updateMiniProgramComponentProperties(up, this);
    }
  };
  {
    if (!componentOptions.observers) {
      componentOptions.observers = {};
    }
    componentOptions.observers.uP = observe;
  }
}
function updateMiniProgramComponentProperties(up, mpInstance) {
  const prevProps = mpInstance.properties;
  const nextProps = findComponentPropsData(up) || {};
  if (hasPropsChanged(prevProps, nextProps, false)) {
    mpInstance.setData(nextProps);
  }
}
function updateComponentProps(up, instance) {
  const prevProps = toRaw(instance.props);
  const nextProps = findComponentPropsData(up) || {};
  if (hasPropsChanged(prevProps, nextProps)) {
    updateProps(instance, nextProps, prevProps, false);
    if (hasQueueJob(instance.update)) {
      invalidateJob(instance.update);
    }
    {
      instance.update();
    }
  }
}
function hasPropsChanged(prevProps, nextProps, checkLen = true) {
  const nextKeys = Object.keys(nextProps);
  if (checkLen && nextKeys.length !== Object.keys(prevProps).length) {
    return true;
  }
  for (let i2 = 0; i2 < nextKeys.length; i2++) {
    const key = nextKeys[i2];
    if (nextProps[key] !== prevProps[key]) {
      return true;
    }
  }
  return false;
}
function initBehaviors(vueOptions) {
  const vueBehaviors = vueOptions.behaviors;
  let vueProps = vueOptions.props;
  if (!vueProps) {
    vueOptions.props = vueProps = [];
  }
  const behaviors = [];
  if (isArray(vueBehaviors)) {
    vueBehaviors.forEach((behavior) => {
      behaviors.push(behavior.replace("uni://", "wx://"));
      if (behavior === "uni://form-field") {
        if (isArray(vueProps)) {
          vueProps.push("name");
          vueProps.push("modelValue");
        } else {
          vueProps.name = {
            type: String,
            default: ""
          };
          vueProps.modelValue = {
            type: [String, Number, Boolean, Array, Object, Date],
            default: ""
          };
        }
      }
    });
  }
  return behaviors;
}
function applyOptions(componentOptions, vueOptions) {
  componentOptions.data = initData();
  componentOptions.behaviors = initBehaviors(vueOptions);
}
function parseComponent(vueOptions, { parse: parse2, mocks: mocks2, isPage: isPage2, initRelation: initRelation2, handleLink: handleLink2, initLifetimes: initLifetimes2 }) {
  vueOptions = vueOptions.default || vueOptions;
  const options = {
    multipleSlots: true,
    addGlobalClass: true,
    pureDataPattern: /^uP$/
  };
  if (vueOptions.options) {
    extend(options, vueOptions.options);
  }
  const mpComponentOptions = {
    options,
    lifetimes: initLifetimes2({ mocks: mocks2, isPage: isPage2, initRelation: initRelation2, vueOptions }),
    pageLifetimes: {
      show() {
        {
          devtoolsComponentRemoved(this.$vm.$);
          devtoolsComponentAdded(this.$vm.$);
        }
        this.$vm && this.$vm.$callHook("onPageShow");
      },
      hide() {
        this.$vm && this.$vm.$callHook("onPageHide");
      },
      resize(size2) {
        this.$vm && this.$vm.$callHook("onPageResize", size2);
      }
    },
    methods: {
      __l: handleLink2
    }
  };
  {
    applyOptions(mpComponentOptions, vueOptions);
  }
  initProps(mpComponentOptions);
  initPropsObserver(mpComponentOptions);
  initExtraOptions(mpComponentOptions, vueOptions);
  initWxsCallMethods(mpComponentOptions.methods, vueOptions.wxsCallMethods);
  if (parse2) {
    parse2(mpComponentOptions, { handleLink: handleLink2 });
  }
  return mpComponentOptions;
}
function initCreateComponent(parseOptions2) {
  return function createComponent2(vueComponentOptions) {
    return Component(parseComponent(vueComponentOptions, parseOptions2));
  };
}
let $createComponentFn;
let $destroyComponentFn;
function getAppVm() {
  return getApp().$vm;
}
function $createComponent(initialVNode, options) {
  if (!$createComponentFn) {
    $createComponentFn = getAppVm().$createComponent;
  }
  const proxy = $createComponentFn(initialVNode, options);
  return getExposeProxy(proxy.$) || proxy;
}
function $destroyComponent(instance) {
  if (!$destroyComponentFn) {
    $destroyComponentFn = getAppVm().$destroyComponent;
  }
  return $destroyComponentFn(instance);
}
function parsePage(vueOptions, parseOptions2) {
  const { parse: parse2, mocks: mocks2, isPage: isPage2, initRelation: initRelation2, handleLink: handleLink2, initLifetimes: initLifetimes2 } = parseOptions2;
  const miniProgramPageOptions = parseComponent(vueOptions, {
    mocks: mocks2,
    isPage: isPage2,
    initRelation: initRelation2,
    handleLink: handleLink2,
    initLifetimes: initLifetimes2
  });
  initPageProps(miniProgramPageOptions, (vueOptions.default || vueOptions).props);
  const methods = miniProgramPageOptions.methods;
  methods.onLoad = function(query) {
    this.options = query;
    this.$page = {
      fullPath: addLeadingSlash(this.route + stringifyQuery(query))
    };
    return this.$vm && this.$vm.$callHook(ON_LOAD, query);
  };
  initHooks(methods, PAGE_INIT_HOOKS);
  {
    initUnknownHooks(methods, vueOptions);
  }
  initRuntimeHooks(methods, vueOptions.__runtimeHooks);
  initMixinRuntimeHooks(methods);
  parse2 && parse2(miniProgramPageOptions, { handleLink: handleLink2 });
  return miniProgramPageOptions;
}
function initCreatePage(parseOptions2) {
  return function createPage2(vuePageOptions) {
    return Component(parsePage(vuePageOptions, parseOptions2));
  };
}
function initCreatePluginApp(parseAppOptions) {
  return function createApp2(vm) {
    initAppLifecycle(parseApp(vm, parseAppOptions), vm);
  };
}
const MPPage = Page;
const MPComponent = Component;
function initTriggerEvent(mpInstance) {
  const oldTriggerEvent = mpInstance.triggerEvent;
  mpInstance.triggerEvent = function(event, ...args) {
    return oldTriggerEvent.apply(mpInstance, [customizeEvent(event), ...args]);
  };
}
function initMiniProgramHook(name, options, isComponent) {
  const oldHook = options[name];
  if (!oldHook) {
    options[name] = function() {
      initTriggerEvent(this);
    };
  } else {
    options[name] = function(...args) {
      initTriggerEvent(this);
      return oldHook.apply(this, args);
    };
  }
}
Page = function(options) {
  initMiniProgramHook(ON_LOAD, options);
  return MPPage(options);
};
Component = function(options) {
  initMiniProgramHook("created", options);
  const isVueComponent = options.properties && options.properties.uP;
  if (!isVueComponent) {
    initProps(options);
    initPropsObserver(options);
  }
  return MPComponent(options);
};
function initLifetimes({ mocks: mocks2, isPage: isPage2, initRelation: initRelation2, vueOptions }) {
  return {
    attached() {
      let properties = this.properties;
      initVueIds(properties.uI, this);
      const relationOptions = {
        vuePid: this._$vuePid
      };
      initRelation2(this, relationOptions);
      const mpInstance = this;
      const isMiniProgramPage = isPage2(mpInstance);
      let propsData = properties;
      this.$vm = $createComponent({
        type: vueOptions,
        props: findPropsData(propsData, isMiniProgramPage)
      }, {
        mpType: isMiniProgramPage ? "page" : "component",
        mpInstance,
        slots: properties.uS || {},
        parentComponent: relationOptions.parent && relationOptions.parent.$,
        onBeforeSetup(instance, options) {
          initRefs(instance, mpInstance);
          initMocks(instance, mpInstance, mocks2);
          initComponentInstance(instance, options);
        }
      });
      if (!isMiniProgramPage) {
        initFormField(this.$vm);
      }
    },
    ready() {
      if (this.$vm) {
        {
          this.$vm.$callHook("mounted");
          this.$vm.$callHook(ON_READY);
        }
      }
    },
    detached() {
      if (this.$vm) {
        pruneComponentPropsCache(this.$vm.$.uid);
        $destroyComponent(this.$vm);
      }
    }
  };
}
const mocks = ["__route__", "__wxExparserNodeId__", "__wxWebviewId__"];
function isPage(mpInstance) {
  return !!mpInstance.route;
}
function initRelation(mpInstance, detail) {
  mpInstance.triggerEvent("__l", detail);
}
function handleLink(event) {
  const detail = event.detail || event.value;
  const vuePid = detail.vuePid;
  let parentVm;
  if (vuePid) {
    parentVm = findVmByVueId(this.$vm, vuePid);
  }
  if (!parentVm) {
    parentVm = this.$vm;
  }
  detail.parent = parentVm;
}
var parseOptions = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  mocks,
  isPage,
  initRelation,
  handleLink,
  initLifetimes
});
const createApp = initCreateApp();
const createPage = initCreatePage(parseOptions);
const createComponent = initCreateComponent(parseOptions);
const createPluginApp = initCreatePluginApp();
const createSubpackageApp = initCreateSubpackageApp();
{
  wx.createApp = global.createApp = createApp;
  wx.createPage = createPage;
  wx.createComponent = createComponent;
  wx.createPluginApp = global.createPluginApp = createPluginApp;
  wx.createSubpackageApp = global.createSubpackageApp = createSubpackageApp;
}
var isVue2 = false;
function set(target, key, val) {
  if (Array.isArray(target)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val;
  }
  target[key] = val;
  return val;
}
function del(target, key) {
  if (Array.isArray(target)) {
    target.splice(key, 1);
    return;
  }
  delete target[key];
}
/*!
  * pinia v2.0.26
  * (c) 2022 Eduardo San Martin Morote
  * @license MIT
  */
let activePinia;
const setActivePinia = (pinia) => activePinia = pinia;
const getActivePinia = () => getCurrentInstance() && inject(piniaSymbol) || activePinia;
const piniaSymbol = Symbol("pinia");
function isPlainObject(o2) {
  return o2 && typeof o2 === "object" && Object.prototype.toString.call(o2) === "[object Object]" && typeof o2.toJSON !== "function";
}
var MutationType;
(function(MutationType2) {
  MutationType2["direct"] = "direct";
  MutationType2["patchObject"] = "patch object";
  MutationType2["patchFunction"] = "patch function";
})(MutationType || (MutationType = {}));
const IS_CLIENT = typeof window !== "undefined";
const USE_DEVTOOLS = IS_CLIENT;
const componentStateTypes = [];
const getStoreType = (id) => "\u{1F34D} " + id;
function registerPiniaDevtools(app, pinia) {
}
function addStoreToDevtools(app, store) {
  if (!componentStateTypes.includes(getStoreType(store.$id))) {
    componentStateTypes.push(getStoreType(store.$id));
  }
}
function patchActionForGrouping(store, actionNames) {
  const actions = actionNames.reduce((storeActions, actionName) => {
    storeActions[actionName] = toRaw(store)[actionName];
    return storeActions;
  }, {});
  for (const actionName in actions) {
    store[actionName] = function() {
      const trackedStore = new Proxy(store, {
        get(...args) {
          return Reflect.get(...args);
        },
        set(...args) {
          return Reflect.set(...args);
        }
      });
      return actions[actionName].apply(trackedStore, arguments);
    };
  }
}
function devtoolsPlugin({ app, store, options }) {
  if (store.$id.startsWith("__hot:")) {
    return;
  }
  if (options.state) {
    store._isOptionsAPI = true;
  }
  if (typeof options.state === "function") {
    patchActionForGrouping(
      store,
      Object.keys(options.actions)
    );
    const originalHotUpdate = store._hotUpdate;
    toRaw(store)._hotUpdate = function(newStore) {
      originalHotUpdate.apply(this, arguments);
      patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions));
    };
  }
  addStoreToDevtools(
    app,
    store
  );
}
function createPinia() {
  const scope = effectScope(true);
  const state = scope.run(() => ref({}));
  let _p = [];
  let toBeInstalled = [];
  const pinia = markRaw({
    install(app) {
      setActivePinia(pinia);
      {
        pinia._a = app;
        app.provide(piniaSymbol, pinia);
        app.config.globalProperties.$pinia = pinia;
        toBeInstalled.forEach((plugin2) => _p.push(plugin2));
        toBeInstalled = [];
      }
    },
    use(plugin2) {
      if (!this._a && !isVue2) {
        toBeInstalled.push(plugin2);
      } else {
        _p.push(plugin2);
      }
      return this;
    },
    _p,
    _a: null,
    _e: scope,
    _s: /* @__PURE__ */ new Map(),
    state
  });
  if (USE_DEVTOOLS && typeof Proxy !== "undefined") {
    pinia.use(devtoolsPlugin);
  }
  return pinia;
}
const isUseStore = (fn2) => {
  return typeof fn2 === "function" && typeof fn2.$id === "string";
};
function patchObject(newState, oldState) {
  for (const key in oldState) {
    const subPatch = oldState[key];
    if (!(key in newState)) {
      continue;
    }
    const targetValue = newState[key];
    if (isPlainObject(targetValue) && isPlainObject(subPatch) && !isRef(subPatch) && !isReactive(subPatch)) {
      newState[key] = patchObject(targetValue, subPatch);
    } else {
      {
        newState[key] = subPatch;
      }
    }
  }
  return newState;
}
function acceptHMRUpdate(initialUseStore, hot) {
  return (newModule) => {
    const pinia = hot.data.pinia || initialUseStore._pinia;
    if (!pinia) {
      return;
    }
    hot.data.pinia = pinia;
    for (const exportName in newModule) {
      const useStore2 = newModule[exportName];
      if (isUseStore(useStore2) && pinia._s.has(useStore2.$id)) {
        const id = useStore2.$id;
        if (id !== initialUseStore.$id) {
          console.warn(`The id of the store changed from "${initialUseStore.$id}" to "${id}". Reloading.`);
          return hot.invalidate();
        }
        const existingStore = pinia._s.get(id);
        if (!existingStore) {
          console.log(`[Pinia]: skipping hmr because store doesn't exist yet`);
          return;
        }
        useStore2(pinia, existingStore);
      }
    }
  };
}
const noop = () => {
};
function addSubscription(subscriptions, callback, detached, onCleanup = noop) {
  subscriptions.push(callback);
  const removeSubscription = () => {
    const idx = subscriptions.indexOf(callback);
    if (idx > -1) {
      subscriptions.splice(idx, 1);
      onCleanup();
    }
  };
  if (!detached && getCurrentScope()) {
    onScopeDispose(removeSubscription);
  }
  return removeSubscription;
}
function triggerSubscriptions(subscriptions, ...args) {
  subscriptions.slice().forEach((callback) => {
    callback(...args);
  });
}
function mergeReactiveObjects(target, patchToApply) {
  if (target instanceof Map && patchToApply instanceof Map) {
    patchToApply.forEach((value, key) => target.set(key, value));
  }
  if (target instanceof Set && patchToApply instanceof Set) {
    patchToApply.forEach(target.add, target);
  }
  for (const key in patchToApply) {
    if (!patchToApply.hasOwnProperty(key))
      continue;
    const subPatch = patchToApply[key];
    const targetValue = target[key];
    if (isPlainObject(targetValue) && isPlainObject(subPatch) && target.hasOwnProperty(key) && !isRef(subPatch) && !isReactive(subPatch)) {
      target[key] = mergeReactiveObjects(targetValue, subPatch);
    } else {
      target[key] = subPatch;
    }
  }
  return target;
}
const skipHydrateSymbol = Symbol("pinia:skipHydration");
function skipHydrate(obj) {
  return Object.defineProperty(obj, skipHydrateSymbol, {});
}
function shouldHydrate(obj) {
  return !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);
}
const { assign } = Object;
function isComputed(o2) {
  return !!(isRef(o2) && o2.effect);
}
function createOptionsStore(id, options, pinia, hot) {
  const { state, actions, getters } = options;
  const initialState = pinia.state.value[id];
  let store;
  function setup() {
    if (!initialState && !hot) {
      {
        pinia.state.value[id] = state ? state() : {};
      }
    }
    const localState = hot ? toRefs(ref(state ? state() : {}).value) : toRefs(pinia.state.value[id]);
    return assign(localState, actions, Object.keys(getters || {}).reduce((computedGetters, name) => {
      if (name in localState) {
        console.warn(`[\u{1F34D}]: A getter cannot have the same name as another state property. Rename one of them. Found with "${name}" in store "${id}".`);
      }
      computedGetters[name] = markRaw(computed$1(() => {
        setActivePinia(pinia);
        const store2 = pinia._s.get(id);
        return getters[name].call(store2, store2);
      }));
      return computedGetters;
    }, {}));
  }
  store = createSetupStore(id, setup, options, pinia, hot, true);
  store.$reset = function $reset() {
    const newState = state ? state() : {};
    this.$patch(($state) => {
      assign($state, newState);
    });
  };
  return store;
}
function createSetupStore($id, setup, options = {}, pinia, hot, isOptionsStore) {
  let scope;
  const optionsForPlugin = assign({ actions: {} }, options);
  if (!pinia._e.active) {
    throw new Error("Pinia destroyed");
  }
  const $subscribeOptions = {
    deep: true
  };
  {
    $subscribeOptions.onTrigger = (event) => {
      if (isListening) {
        debuggerEvents = event;
      } else if (isListening == false && !store._hotUpdating) {
        if (Array.isArray(debuggerEvents)) {
          debuggerEvents.push(event);
        } else {
          console.error("\u{1F34D} debuggerEvents should be an array. This is most likely an internal Pinia bug.");
        }
      }
    };
  }
  let isListening;
  let isSyncListening;
  let subscriptions = markRaw([]);
  let actionSubscriptions = markRaw([]);
  let debuggerEvents;
  const initialState = pinia.state.value[$id];
  if (!isOptionsStore && !initialState && !hot) {
    {
      pinia.state.value[$id] = {};
    }
  }
  const hotState = ref({});
  let activeListener;
  function $patch(partialStateOrMutator) {
    let subscriptionMutation;
    isListening = isSyncListening = false;
    {
      debuggerEvents = [];
    }
    if (typeof partialStateOrMutator === "function") {
      partialStateOrMutator(pinia.state.value[$id]);
      subscriptionMutation = {
        type: MutationType.patchFunction,
        storeId: $id,
        events: debuggerEvents
      };
    } else {
      mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);
      subscriptionMutation = {
        type: MutationType.patchObject,
        payload: partialStateOrMutator,
        storeId: $id,
        events: debuggerEvents
      };
    }
    const myListenerId = activeListener = Symbol();
    nextTick().then(() => {
      if (activeListener === myListenerId) {
        isListening = true;
      }
    });
    isSyncListening = true;
    triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);
  }
  const $reset = () => {
    throw new Error(`\u{1F34D}: Store "${$id}" is built using the setup syntax and does not implement $reset().`);
  };
  function $dispose() {
    scope.stop();
    subscriptions = [];
    actionSubscriptions = [];
    pinia._s.delete($id);
  }
  function wrapAction(name, action) {
    return function() {
      setActivePinia(pinia);
      const args = Array.from(arguments);
      const afterCallbackList = [];
      const onErrorCallbackList = [];
      function after(callback) {
        afterCallbackList.push(callback);
      }
      function onError(callback) {
        onErrorCallbackList.push(callback);
      }
      triggerSubscriptions(actionSubscriptions, {
        args,
        name,
        store,
        after,
        onError
      });
      let ret;
      try {
        ret = action.apply(this && this.$id === $id ? this : store, args);
      } catch (error) {
        triggerSubscriptions(onErrorCallbackList, error);
        throw error;
      }
      if (ret instanceof Promise) {
        return ret.then((value) => {
          triggerSubscriptions(afterCallbackList, value);
          return value;
        }).catch((error) => {
          triggerSubscriptions(onErrorCallbackList, error);
          return Promise.reject(error);
        });
      }
      triggerSubscriptions(afterCallbackList, ret);
      return ret;
    };
  }
  const _hmrPayload = /* @__PURE__ */ markRaw({
    actions: {},
    getters: {},
    state: [],
    hotState
  });
  const partialStore = {
    _p: pinia,
    $id,
    $onAction: addSubscription.bind(null, actionSubscriptions),
    $patch,
    $reset,
    $subscribe(callback, options2 = {}) {
      const removeSubscription = addSubscription(subscriptions, callback, options2.detached, () => stopWatcher());
      const stopWatcher = scope.run(() => watch(() => pinia.state.value[$id], (state) => {
        if (options2.flush === "sync" ? isSyncListening : isListening) {
          callback({
            storeId: $id,
            type: MutationType.direct,
            events: debuggerEvents
          }, state);
        }
      }, assign({}, $subscribeOptions, options2)));
      return removeSubscription;
    },
    $dispose
  };
  const store = reactive(
    assign(
      {
        _hmrPayload,
        _customProperties: markRaw(/* @__PURE__ */ new Set())
      },
      partialStore
    )
  );
  pinia._s.set($id, store);
  const setupStore = pinia._e.run(() => {
    scope = effectScope();
    return scope.run(() => setup());
  });
  for (const key in setupStore) {
    const prop = setupStore[key];
    if (isRef(prop) && !isComputed(prop) || isReactive(prop)) {
      if (hot) {
        set(hotState.value, key, toRef(setupStore, key));
      } else if (!isOptionsStore) {
        if (initialState && shouldHydrate(prop)) {
          if (isRef(prop)) {
            prop.value = initialState[key];
          } else {
            mergeReactiveObjects(prop, initialState[key]);
          }
        }
        {
          pinia.state.value[$id][key] = prop;
        }
      }
      {
        _hmrPayload.state.push(key);
      }
    } else if (typeof prop === "function") {
      const actionValue = hot ? prop : wrapAction(key, prop);
      {
        setupStore[key] = actionValue;
      }
      {
        _hmrPayload.actions[key] = prop;
      }
      optionsForPlugin.actions[key] = prop;
    } else {
      if (isComputed(prop)) {
        _hmrPayload.getters[key] = isOptionsStore ? options.getters[key] : prop;
        if (IS_CLIENT) {
          const getters = setupStore._getters || (setupStore._getters = markRaw([]));
          getters.push(key);
        }
      }
    }
  }
  {
    assign(store, setupStore);
    assign(toRaw(store), setupStore);
  }
  Object.defineProperty(store, "$state", {
    get: () => hot ? hotState.value : pinia.state.value[$id],
    set: (state) => {
      if (hot) {
        throw new Error("cannot set hotState");
      }
      $patch(($state) => {
        assign($state, state);
      });
    }
  });
  {
    store._hotUpdate = markRaw((newStore) => {
      store._hotUpdating = true;
      newStore._hmrPayload.state.forEach((stateKey) => {
        if (stateKey in store.$state) {
          const newStateTarget = newStore.$state[stateKey];
          const oldStateSource = store.$state[stateKey];
          if (typeof newStateTarget === "object" && isPlainObject(newStateTarget) && isPlainObject(oldStateSource)) {
            patchObject(newStateTarget, oldStateSource);
          } else {
            newStore.$state[stateKey] = oldStateSource;
          }
        }
        set(store, stateKey, toRef(newStore.$state, stateKey));
      });
      Object.keys(store.$state).forEach((stateKey) => {
        if (!(stateKey in newStore.$state)) {
          del(store, stateKey);
        }
      });
      isListening = false;
      isSyncListening = false;
      pinia.state.value[$id] = toRef(newStore._hmrPayload, "hotState");
      isSyncListening = true;
      nextTick().then(() => {
        isListening = true;
      });
      for (const actionName in newStore._hmrPayload.actions) {
        const action = newStore[actionName];
        set(store, actionName, wrapAction(actionName, action));
      }
      for (const getterName in newStore._hmrPayload.getters) {
        const getter = newStore._hmrPayload.getters[getterName];
        const getterValue = isOptionsStore ? computed$1(() => {
          setActivePinia(pinia);
          return getter.call(store, store);
        }) : getter;
        set(store, getterName, getterValue);
      }
      Object.keys(store._hmrPayload.getters).forEach((key) => {
        if (!(key in newStore._hmrPayload.getters)) {
          del(store, key);
        }
      });
      Object.keys(store._hmrPayload.actions).forEach((key) => {
        if (!(key in newStore._hmrPayload.actions)) {
          del(store, key);
        }
      });
      store._hmrPayload = newStore._hmrPayload;
      store._getters = newStore._getters;
      store._hotUpdating = false;
    });
  }
  if (USE_DEVTOOLS) {
    const nonEnumerable = {
      writable: true,
      configurable: true,
      enumerable: false
    };
    ["_p", "_hmrPayload", "_getters", "_customProperties"].forEach((p2) => {
      Object.defineProperty(store, p2, {
        value: store[p2],
        ...nonEnumerable
      });
    });
  }
  pinia._p.forEach((extender) => {
    if (USE_DEVTOOLS) {
      const extensions = scope.run(() => extender({
        store,
        app: pinia._a,
        pinia,
        options: optionsForPlugin
      }));
      Object.keys(extensions || {}).forEach((key) => store._customProperties.add(key));
      assign(store, extensions);
    } else {
      assign(store, scope.run(() => extender({
        store,
        app: pinia._a,
        pinia,
        options: optionsForPlugin
      })));
    }
  });
  if (store.$state && typeof store.$state === "object" && typeof store.$state.constructor === "function" && !store.$state.constructor.toString().includes("[native code]")) {
    console.warn(`[\u{1F34D}]: The "state" must be a plain object. It cannot be
	state: () => new MyClass()
Found in store "${store.$id}".`);
  }
  if (initialState && isOptionsStore && options.hydrate) {
    options.hydrate(store.$state, initialState);
  }
  isListening = true;
  isSyncListening = true;
  return store;
}
function defineStore(idOrOptions, setup, setupOptions) {
  let id;
  let options;
  const isSetupStore = typeof setup === "function";
  if (typeof idOrOptions === "string") {
    id = idOrOptions;
    options = isSetupStore ? setupOptions : setup;
  } else {
    options = idOrOptions;
    id = idOrOptions.id;
  }
  function useStore2(pinia, hot) {
    const currentInstance2 = getCurrentInstance();
    pinia = pinia || currentInstance2 && inject(piniaSymbol);
    if (pinia)
      setActivePinia(pinia);
    if (!activePinia) {
      throw new Error(`[\u{1F34D}]: getActivePinia was called with no active Pinia. Did you forget to install pinia?
	const pinia = createPinia()
	app.use(pinia)
This will fail in production.`);
    }
    pinia = activePinia;
    if (!pinia._s.has(id)) {
      if (isSetupStore) {
        createSetupStore(id, setup, options, pinia);
      } else {
        createOptionsStore(id, options, pinia);
      }
      {
        useStore2._pinia = pinia;
      }
    }
    const store = pinia._s.get(id);
    if (hot) {
      const hotId = "__hot:" + id;
      const newStore = isSetupStore ? createSetupStore(hotId, setup, options, pinia, true) : createOptionsStore(hotId, assign({}, options), pinia, true);
      hot._hotUpdate(newStore);
      delete pinia.state.value[hotId];
      pinia._s.delete(hotId);
    }
    if (IS_CLIENT && currentInstance2 && currentInstance2.proxy && !hot) {
      const vm = currentInstance2.proxy;
      const cache = "_pStores" in vm ? vm._pStores : vm._pStores = {};
      cache[id] = store;
    }
    return store;
  }
  useStore2.$id = id;
  return useStore2;
}
let mapStoreSuffix = "Store";
function setMapStoreSuffix(suffix) {
  mapStoreSuffix = suffix;
}
function mapStores(...stores) {
  if (Array.isArray(stores[0])) {
    console.warn(`[\u{1F34D}]: Directly pass all stores to "mapStores()" without putting them in an array:
Replace
	mapStores([useAuthStore, useCartStore])
with
	mapStores(useAuthStore, useCartStore)
This will fail in production if not fixed.`);
    stores = stores[0];
  }
  return stores.reduce((reduced, useStore2) => {
    reduced[useStore2.$id + mapStoreSuffix] = function() {
      return useStore2(this.$pinia);
    };
    return reduced;
  }, {});
}
function mapState$1(useStore2, keysOrMapper) {
  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce((reduced, key) => {
    reduced[key] = function() {
      return useStore2(this.$pinia)[key];
    };
    return reduced;
  }, {}) : Object.keys(keysOrMapper).reduce((reduced, key) => {
    reduced[key] = function() {
      const store = useStore2(this.$pinia);
      const storeKey2 = keysOrMapper[key];
      return typeof storeKey2 === "function" ? storeKey2.call(this, store) : store[storeKey2];
    };
    return reduced;
  }, {});
}
const mapGetters$1 = mapState$1;
function mapActions$1(useStore2, keysOrMapper) {
  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce((reduced, key) => {
    reduced[key] = function(...args) {
      return useStore2(this.$pinia)[key](...args);
    };
    return reduced;
  }, {}) : Object.keys(keysOrMapper).reduce((reduced, key) => {
    reduced[key] = function(...args) {
      return useStore2(this.$pinia)[keysOrMapper[key]](...args);
    };
    return reduced;
  }, {});
}
function mapWritableState(useStore2, keysOrMapper) {
  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce((reduced, key) => {
    reduced[key] = {
      get() {
        return useStore2(this.$pinia)[key];
      },
      set(value) {
        return useStore2(this.$pinia)[key] = value;
      }
    };
    return reduced;
  }, {}) : Object.keys(keysOrMapper).reduce((reduced, key) => {
    reduced[key] = {
      get() {
        return useStore2(this.$pinia)[keysOrMapper[key]];
      },
      set(value) {
        return useStore2(this.$pinia)[keysOrMapper[key]] = value;
      }
    };
    return reduced;
  }, {});
}
function storeToRefs(store) {
  {
    store = toRaw(store);
    const refs = {};
    for (const key in store) {
      const value = store[key];
      if (isRef(value) || isReactive(value)) {
        refs[key] = toRef(store, key);
      }
    }
    return refs;
  }
}
const PiniaVuePlugin = function(_Vue) {
  _Vue.mixin({
    beforeCreate() {
      const options = this.$options;
      if (options.pinia) {
        const pinia = options.pinia;
        if (!this._provided) {
          const provideCache = {};
          Object.defineProperty(this, "_provided", {
            get: () => provideCache,
            set: (v2) => Object.assign(provideCache, v2)
          });
        }
        this._provided[piniaSymbol] = pinia;
        if (!this.$pinia) {
          this.$pinia = pinia;
        }
        pinia._a = this;
        if (IS_CLIENT) {
          setActivePinia(pinia);
        }
        if (USE_DEVTOOLS) {
          registerPiniaDevtools(pinia._a);
        }
      } else if (!this.$pinia && options.parent && options.parent.$pinia) {
        this.$pinia = options.parent.$pinia;
      }
    },
    destroyed() {
      delete this._pStores;
    }
  });
};
const Pinia = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  get MutationType() {
    return MutationType;
  },
  PiniaVuePlugin,
  acceptHMRUpdate,
  createPinia,
  defineStore,
  getActivePinia,
  mapActions: mapActions$1,
  mapGetters: mapGetters$1,
  mapState: mapState$1,
  mapStores,
  mapWritableState,
  setActivePinia,
  setMapStoreSuffix,
  skipHydrate,
  storeToRefs
}, Symbol.toStringTag, { value: "Module" }));
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
var timWx = { exports: {} };
(function(module2, exports2) {
  !function(e2, t2) {
    module2.exports = t2();
  }(commonjsGlobal, function() {
    function e2(e3, t3) {
      var o3 = Object.keys(e3);
      if (Object.getOwnPropertySymbols) {
        var n3 = Object.getOwnPropertySymbols(e3);
        t3 && (n3 = n3.filter(function(t4) {
          return Object.getOwnPropertyDescriptor(e3, t4).enumerable;
        })), o3.push.apply(o3, n3);
      }
      return o3;
    }
    function t2(t3) {
      for (var o3 = 1; o3 < arguments.length; o3++) {
        var n3 = null != arguments[o3] ? arguments[o3] : {};
        o3 % 2 ? e2(Object(n3), true).forEach(function(e3) {
          r2(t3, e3, n3[e3]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n3)) : e2(Object(n3)).forEach(function(e3) {
          Object.defineProperty(t3, e3, Object.getOwnPropertyDescriptor(n3, e3));
        });
      }
      return t3;
    }
    function o2(e3) {
      return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    function n2(e3, t3) {
      if (!(e3 instanceof t3))
        throw new TypeError("Cannot call a class as a function");
    }
    function a2(e3, t3) {
      for (var o3 = 0; o3 < t3.length; o3++) {
        var n3 = t3[o3];
        n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e3, n3.key, n3);
      }
    }
    function s2(e3, t3, o3) {
      return t3 && a2(e3.prototype, t3), o3 && a2(e3, o3), Object.defineProperty(e3, "prototype", { writable: false }), e3;
    }
    function r2(e3, t3, o3) {
      return t3 in e3 ? Object.defineProperty(e3, t3, { value: o3, enumerable: true, configurable: true, writable: true }) : e3[t3] = o3, e3;
    }
    function i2(e3, t3) {
      if ("function" != typeof t3 && null !== t3)
        throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), Object.defineProperty(e3, "prototype", { writable: false }), t3 && u2(e3, t3);
    }
    function c2(e3) {
      return (c2 = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
        return e4.__proto__ || Object.getPrototypeOf(e4);
      })(e3);
    }
    function u2(e3, t3) {
      return (u2 = Object.setPrototypeOf || function(e4, t4) {
        return e4.__proto__ = t4, e4;
      })(e3, t3);
    }
    function l2() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e3) {
        return false;
      }
    }
    function d2(e3, t3, o3) {
      return (d2 = l2() ? Reflect.construct : function(e4, t4, o4) {
        var n3 = [null];
        n3.push.apply(n3, t4);
        var a3 = new (Function.bind.apply(e4, n3))();
        return o4 && u2(a3, o4.prototype), a3;
      }).apply(null, arguments);
    }
    function p2(e3) {
      var t3 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
      return (p2 = function(e4) {
        if (null === e4 || (o3 = e4, -1 === Function.toString.call(o3).indexOf("[native code]")))
          return e4;
        var o3;
        if ("function" != typeof e4)
          throw new TypeError("Super expression must either be null or a function");
        if (void 0 !== t3) {
          if (t3.has(e4))
            return t3.get(e4);
          t3.set(e4, n3);
        }
        function n3() {
          return d2(e4, arguments, c2(this).constructor);
        }
        return n3.prototype = Object.create(e4.prototype, { constructor: { value: n3, enumerable: false, writable: true, configurable: true } }), u2(n3, e4);
      })(e3);
    }
    function g2(e3, t3) {
      if (null == e3)
        return {};
      var o3, n3, a3 = function(e4, t4) {
        if (null == e4)
          return {};
        var o4, n4, a4 = {}, s4 = Object.keys(e4);
        for (n4 = 0; n4 < s4.length; n4++)
          o4 = s4[n4], t4.indexOf(o4) >= 0 || (a4[o4] = e4[o4]);
        return a4;
      }(e3, t3);
      if (Object.getOwnPropertySymbols) {
        var s3 = Object.getOwnPropertySymbols(e3);
        for (n3 = 0; n3 < s3.length; n3++)
          o3 = s3[n3], t3.indexOf(o3) >= 0 || Object.prototype.propertyIsEnumerable.call(e3, o3) && (a3[o3] = e3[o3]);
      }
      return a3;
    }
    function _2(e3) {
      if (void 0 === e3)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    }
    function h2(e3, t3) {
      if (t3 && ("object" == typeof t3 || "function" == typeof t3))
        return t3;
      if (void 0 !== t3)
        throw new TypeError("Derived constructors may only return object or undefined");
      return _2(e3);
    }
    function f2(e3) {
      var t3 = l2();
      return function() {
        var o3, n3 = c2(e3);
        if (t3) {
          var a3 = c2(this).constructor;
          o3 = Reflect.construct(n3, arguments, a3);
        } else
          o3 = n3.apply(this, arguments);
        return h2(this, o3);
      };
    }
    function m2(e3, t3) {
      return M2(e3) || function(e4, t4) {
        var o3 = null == e4 ? null : "undefined" != typeof Symbol && e4[Symbol.iterator] || e4["@@iterator"];
        if (null == o3)
          return;
        var n3, a3, s3 = [], r3 = true, i3 = false;
        try {
          for (o3 = o3.call(e4); !(r3 = (n3 = o3.next()).done) && (s3.push(n3.value), !t4 || s3.length !== t4); r3 = true)
            ;
        } catch (c3) {
          i3 = true, a3 = c3;
        } finally {
          try {
            r3 || null == o3.return || o3.return();
          } finally {
            if (i3)
              throw a3;
          }
        }
        return s3;
      }(e3, t3) || I2(e3, t3) || T2();
    }
    function v2(e3) {
      return function(e4) {
        if (Array.isArray(e4))
          return C2(e4);
      }(e3) || y2(e3) || I2(e3) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function M2(e3) {
      if (Array.isArray(e3))
        return e3;
    }
    function y2(e3) {
      if ("undefined" != typeof Symbol && null != e3[Symbol.iterator] || null != e3["@@iterator"])
        return Array.from(e3);
    }
    function I2(e3, t3) {
      if (e3) {
        if ("string" == typeof e3)
          return C2(e3, t3);
        var o3 = Object.prototype.toString.call(e3).slice(8, -1);
        return "Object" === o3 && e3.constructor && (o3 = e3.constructor.name), "Map" === o3 || "Set" === o3 ? Array.from(e3) : "Arguments" === o3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3) ? C2(e3, t3) : void 0;
      }
    }
    function C2(e3, t3) {
      (null == t3 || t3 > e3.length) && (t3 = e3.length);
      for (var o3 = 0, n3 = new Array(t3); o3 < t3; o3++)
        n3[o3] = e3[o3];
      return n3;
    }
    function T2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function E2(e3, t3) {
      var o3 = "undefined" != typeof Symbol && e3[Symbol.iterator] || e3["@@iterator"];
      if (!o3) {
        if (Array.isArray(e3) || (o3 = I2(e3)) || t3 && e3 && "number" == typeof e3.length) {
          o3 && (e3 = o3);
          var n3 = 0, a3 = function() {
          };
          return { s: a3, n: function() {
            return n3 >= e3.length ? { done: true } : { done: false, value: e3[n3++] };
          }, e: function(e4) {
            throw e4;
          }, f: a3 };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var s3, r3 = true, i3 = false;
      return { s: function() {
        o3 = o3.call(e3);
      }, n: function() {
        var e4 = o3.next();
        return r3 = e4.done, e4;
      }, e: function(e4) {
        i3 = true, s3 = e4;
      }, f: function() {
        try {
          r3 || null == o3.return || o3.return();
        } finally {
          if (i3)
            throw s3;
        }
      } };
    }
    var S2 = { SDK_READY: "sdkStateReady", SDK_NOT_READY: "sdkStateNotReady", SDK_DESTROY: "sdkDestroy", MESSAGE_RECEIVED: "onMessageReceived", MESSAGE_MODIFIED: "onMessageModified", MESSAGE_REVOKED: "onMessageRevoked", MESSAGE_READ_BY_PEER: "onMessageReadByPeer", MESSAGE_READ_RECEIPT_RECEIVED: "onMessageReadReceiptReceived", MESSAGE_EXTENSIONS_UPDATED: "onMessageExtensionsUpdated", MESSAGE_EXTENSIONS_DELETED: "onMessageExtensionsDeleted", CONVERSATION_LIST_UPDATED: "onConversationListUpdated", TOTAL_UNREAD_MESSAGE_COUNT_UPDATED: "onTotalUnreadMessageCountUpdated", CONVERSATION_GROUP_LIST_UPDATED: "onConversationGroupListUpdated", CONVERSATION_IN_GROUP_UPDATED: "onConversationInGroupUpdated", GROUP_LIST_UPDATED: "onGroupListUpdated", GROUP_SYSTEM_NOTICE_RECEIVED: "receiveGroupSystemNotice", GROUP_ATTRIBUTES_UPDATED: "groupAttributesUpdated", GROUP_COUNTER_UPDATED: "onGroupCounterUpdated", TOPIC_CREATED: "onTopicCreated", TOPIC_DELETED: "onTopicDeleted", TOPIC_UPDATED: "onTopicUpdated", PROFILE_UPDATED: "onProfileUpdated", USER_STATUS_UPDATED: "onUserStatusUpdated", BLACKLIST_UPDATED: "blacklistUpdated", FRIEND_LIST_UPDATED: "onFriendListUpdated", FRIEND_GROUP_LIST_UPDATED: "onFriendGroupListUpdated", FRIEND_APPLICATION_LIST_UPDATED: "onFriendApplicationListUpdated", KICKED_OUT: "kickedOut", ERROR: "error", NET_STATE_CHANGE: "netStateChange", SDK_RELOAD: "sdkReload" }, D2 = { MSG_TEXT: "TIMTextElem", MSG_IMAGE: "TIMImageElem", MSG_SOUND: "TIMSoundElem", MSG_AUDIO: "TIMSoundElem", MSG_FILE: "TIMFileElem", MSG_FACE: "TIMFaceElem", MSG_VIDEO: "TIMVideoFileElem", MSG_GEO: "TIMLocationElem", MSG_LOCATION: "TIMLocationElem", MSG_GRP_TIP: "TIMGroupTipElem", MSG_GRP_SYS_NOTICE: "TIMGroupSystemNoticeElem", MSG_CUSTOM: "TIMCustomElem", MSG_MERGER: "TIMRelayElem", MSG_PRIORITY_HIGH: "High", MSG_PRIORITY_NORMAL: "Normal", MSG_PRIORITY_LOW: "Low", MSG_PRIORITY_LOWEST: "Lowest", CONV_C2C: "C2C", CONV_GROUP: "GROUP", CONV_TOPIC: "TOPIC", CONV_SYSTEM: "@TIM#SYSTEM", CONV_AT_ME: 1, CONV_AT_ALL: 2, CONV_AT_ALL_AT_ME: 3, CONV_MARK_TYPE_STAR: 1, CONV_MARK_TYPE_UNREAD: 2, CONV_MARK_TYPE_FOLD: 4, CONV_MARK_TYPE_HIDE: 8, GRP_PRIVATE: "Private", GRP_WORK: "Private", GRP_PUBLIC: "Public", GRP_CHATROOM: "ChatRoom", GRP_MEETING: "ChatRoom", GRP_AVCHATROOM: "AVChatRoom", GRP_COMMUNITY: "Community", GRP_MBR_ROLE_OWNER: "Owner", GRP_MBR_ROLE_ADMIN: "Admin", GRP_MBR_ROLE_MEMBER: "Member", GRP_MBR_ROLE_CUSTOM: "Custom", GRP_TIP_MBR_JOIN: 1, GRP_TIP_MBR_QUIT: 2, GRP_TIP_MBR_KICKED_OUT: 3, GRP_TIP_MBR_SET_ADMIN: 4, GRP_TIP_MBR_CANCELED_ADMIN: 5, GRP_TIP_GRP_PROFILE_UPDATED: 6, GRP_TIP_MBR_PROFILE_UPDATED: 7, GRP_TIP_BAN_AVCHATROOM_MEMBER: 10, GRP_TIP_UNBAN_AVCHATROOM_MEMBER: 11, MSG_REMIND_ACPT_AND_NOTE: "AcceptAndNotify", MSG_REMIND_ACPT_NOT_NOTE: "AcceptNotNotify", MSG_REMIND_DISCARD: "Discard", GENDER_UNKNOWN: "Gender_Type_Unknown", GENDER_FEMALE: "Gender_Type_Female", GENDER_MALE: "Gender_Type_Male", KICKED_OUT_MULT_ACCOUNT: "multipleAccount", KICKED_OUT_MULT_DEVICE: "multipleDevice", KICKED_OUT_USERSIG_EXPIRED: "userSigExpired", KICKED_OUT_REST_API: "REST_API_Kick", ALLOW_TYPE_ALLOW_ANY: "AllowType_Type_AllowAny", ALLOW_TYPE_NEED_CONFIRM: "AllowType_Type_NeedConfirm", ALLOW_TYPE_DENY_ANY: "AllowType_Type_DenyAny", FORBID_TYPE_NONE: "AdminForbid_Type_None", FORBID_TYPE_SEND_OUT: "AdminForbid_Type_SendOut", JOIN_OPTIONS_FREE_ACCESS: "FreeAccess", JOIN_OPTIONS_NEED_PERMISSION: "NeedPermission", JOIN_OPTIONS_DISABLE_APPLY: "DisableApply", JOIN_STATUS_SUCCESS: "JoinedSuccess", JOIN_STATUS_ALREADY_IN_GROUP: "AlreadyInGroup", JOIN_STATUS_WAIT_APPROVAL: "WaitAdminApproval", GRP_PROFILE_OWNER_ID: "ownerID", GRP_PROFILE_CREATE_TIME: "createTime", GRP_PROFILE_LAST_INFO_TIME: "lastInfoTime", GRP_PROFILE_MEMBER_NUM: "memberNum", GRP_PROFILE_MAX_MEMBER_NUM: "maxMemberNum", GRP_PROFILE_JOIN_OPTION: "joinOption", GRP_PROFILE_INTRODUCTION: "introduction", GRP_PROFILE_NOTIFICATION: "notification", GRP_PROFILE_MUTE_ALL_MBRS: "muteAllMembers", SNS_ADD_TYPE_SINGLE: "Add_Type_Single", SNS_ADD_TYPE_BOTH: "Add_Type_Both", SNS_DELETE_TYPE_SINGLE: "Delete_Type_Single", SNS_DELETE_TYPE_BOTH: "Delete_Type_Both", SNS_APPLICATION_TYPE_BOTH: "Pendency_Type_Both", SNS_APPLICATION_SENT_TO_ME: "Pendency_Type_ComeIn", SNS_APPLICATION_SENT_BY_ME: "Pendency_Type_SendOut", SNS_APPLICATION_AGREE: "Response_Action_Agree", SNS_APPLICATION_AGREE_AND_ADD: "Response_Action_AgreeAndAdd", SNS_CHECK_TYPE_BOTH: "CheckResult_Type_Both", SNS_CHECK_TYPE_SINGLE: "CheckResult_Type_Single", SNS_TYPE_NO_RELATION: "CheckResult_Type_NoRelation", SNS_TYPE_A_WITH_B: "CheckResult_Type_AWithB", SNS_TYPE_B_WITH_A: "CheckResult_Type_BWithA", SNS_TYPE_BOTH_WAY: "CheckResult_Type_BothWay", NET_STATE_CONNECTED: "connected", NET_STATE_CONNECTING: "connecting", NET_STATE_DISCONNECTED: "disconnected", MSG_AT_ALL: "__kImSDK_MesssageAtALL__", READ_ALL_C2C_MSG: "readAllC2CMessage", READ_ALL_GROUP_MSG: "readAllGroupMessage", READ_ALL_MSG: "readAllMessage", USER_STATUS_UNKNOWN: 0, USER_STATUS_ONLINE: 1, USER_STATUS_OFFLINE: 2, USER_STATUS_UNLOGINED: 3 }, N2 = function() {
      function e3() {
        n2(this, e3), this.cache = [], this.options = null;
      }
      return s2(e3, [{ key: "use", value: function(e4) {
        if ("function" != typeof e4)
          throw "middleware must be a function";
        return this.cache.push(e4), this;
      } }, { key: "next", value: function(e4) {
        if (this.middlewares && this.middlewares.length > 0)
          return this.middlewares.shift().call(this, this.options, this.next.bind(this));
      } }, { key: "run", value: function(e4) {
        return this.middlewares = this.cache.map(function(e5) {
          return e5;
        }), this.options = e4, this.next();
      } }]), e3;
    }(), A2 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof commonjsGlobal ? commonjsGlobal : "undefined" != typeof self ? self : {};
    function k2(e3, t3) {
      return e3(t3 = { exports: {} }, t3.exports), t3.exports;
    }
    var R2 = k2(function(e3, t3) {
      var o3, n3, a3, s3, r3, i3, c3, u3, l3, d3, p3, g3, _3, h3, f3, m3, v3, M3;
      e3.exports = (o3 = "function" == typeof Promise, n3 = "object" == typeof self ? self : A2, a3 = "undefined" != typeof Symbol, s3 = "undefined" != typeof Map, r3 = "undefined" != typeof Set, i3 = "undefined" != typeof WeakMap, c3 = "undefined" != typeof WeakSet, u3 = "undefined" != typeof DataView, l3 = a3 && void 0 !== Symbol.iterator, d3 = a3 && void 0 !== Symbol.toStringTag, p3 = r3 && "function" == typeof Set.prototype.entries, g3 = s3 && "function" == typeof Map.prototype.entries, _3 = p3 && Object.getPrototypeOf((/* @__PURE__ */ new Set()).entries()), h3 = g3 && Object.getPrototypeOf((/* @__PURE__ */ new Map()).entries()), f3 = l3 && "function" == typeof Array.prototype[Symbol.iterator], m3 = f3 && Object.getPrototypeOf([][Symbol.iterator]()), v3 = l3 && "function" == typeof String.prototype[Symbol.iterator], M3 = v3 && Object.getPrototypeOf(""[Symbol.iterator]()), function(e4) {
        var t4 = typeof e4;
        if ("object" !== t4)
          return t4;
        if (null === e4)
          return "null";
        if (e4 === n3)
          return "global";
        if (Array.isArray(e4) && (false === d3 || !(Symbol.toStringTag in e4)))
          return "Array";
        if ("object" == typeof window && null !== window) {
          if ("object" == typeof window.location && e4 === window.location)
            return "Location";
          if ("object" == typeof window.document && e4 === window.document)
            return "Document";
          if ("object" == typeof window.navigator) {
            if ("object" == typeof window.navigator.mimeTypes && e4 === window.navigator.mimeTypes)
              return "MimeTypeArray";
            if ("object" == typeof window.navigator.plugins && e4 === window.navigator.plugins)
              return "PluginArray";
          }
          if (("function" == typeof window.HTMLElement || "object" == typeof window.HTMLElement) && e4 instanceof window.HTMLElement) {
            if ("BLOCKQUOTE" === e4.tagName)
              return "HTMLQuoteElement";
            if ("TD" === e4.tagName)
              return "HTMLTableDataCellElement";
            if ("TH" === e4.tagName)
              return "HTMLTableHeaderCellElement";
          }
        }
        var a4 = d3 && e4[Symbol.toStringTag];
        if ("string" == typeof a4)
          return a4;
        var l4 = Object.getPrototypeOf(e4);
        return l4 === RegExp.prototype ? "RegExp" : l4 === Date.prototype ? "Date" : o3 && l4 === Promise.prototype ? "Promise" : r3 && l4 === Set.prototype ? "Set" : s3 && l4 === Map.prototype ? "Map" : c3 && l4 === WeakSet.prototype ? "WeakSet" : i3 && l4 === WeakMap.prototype ? "WeakMap" : u3 && l4 === DataView.prototype ? "DataView" : s3 && l4 === h3 ? "Map Iterator" : r3 && l4 === _3 ? "Set Iterator" : f3 && l4 === m3 ? "Array Iterator" : v3 && l4 === M3 ? "String Iterator" : null === l4 ? "Object" : Object.prototype.toString.call(e4).slice(8, -1);
      });
    }), L2 = function() {
      function e3() {
        var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, o3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
        n2(this, e3), this.high = t3, this.low = o3;
      }
      return s2(e3, [{ key: "equal", value: function(e4) {
        return null !== e4 && (this.low === e4.low && this.high === e4.high);
      } }, { key: "toString", value: function() {
        var e4 = Number(this.high).toString(16), t3 = Number(this.low).toString(16);
        if (t3.length < 8)
          for (var o3 = 8 - t3.length; o3; )
            t3 = "0" + t3, o3--;
        return e4 + t3;
      } }]), e3;
    }(), O2 = { TEST: { CHINA: { DEFAULT: "wss://wss-dev.tim.qq.com" }, OVERSEA: { DEFAULT: "wss://wss-dev.tim.qq.com" }, SINGAPORE: { DEFAULT: "wss://wsssgp-dev.im.qcloud.com" }, KOREA: { DEFAULT: "wss://wsskr-dev.im.qcloud.com" }, GERMANY: { DEFAULT: "wss://wssger-dev.im.qcloud.com" }, IND: { DEFAULT: "wss://wssind-dev.im.qcloud.com" }, JPN: { DEFAULT: "wss://wssjpn-dev.im.qcloud.com" }, USA: { DEFAULT: "wss://wssusa-dev.im.qcloud.com" } }, PRODUCTION: { CHINA: { DEFAULT: "wss://wss.im.qcloud.com", BACKUP: "wss://wss.tim.qq.com", STAT: "https://events.im.qcloud.com" }, OVERSEA: { DEFAULT: "wss://wss.im.qcloud.com", BACKUP: "wss://wss.my-imcloud.com", STAT: "https://api.my-imcloud.com" }, SINGAPORE: { DEFAULT: "wss://wsssgp.im.qcloud.com", BACKUP: "wss://wsssgp.my-imcloud.com", STAT: "https://apisgp.my-imcloud.com" }, KOREA: { DEFAULT: "wss://wsskr.im.qcloud.com", BACKUP: "wss://wsskr.my-imcloud.com", STAT: "https://apikr.my-imcloud.com" }, GERMANY: { DEFAULT: "wss://wssger.im.qcloud.com", BACKUP: "wss://wssger.my-imcloud.com", STAT: "https://apiger.my-imcloud.com" }, IND: { DEFAULT: "wss://wssind.my-imcloud.com", BACKUP: "wss://wssind.im.qcloud.com", STAT: "https://apiind.my-imcloud.com" }, JPN: { DEFAULT: "wss://wssjpn.im.qcloud.com", BACKUP: "wss://wssjpn.my-imcloud.com", STAT: "https://apijpn.my-imcloud.com" }, USA: { DEFAULT: "wss://wssusa.im.qcloud.com", BACKUP: "wss://wssusa.my-imcloud.com", STAT: "https://apiusa.my-imcloud.com" } } }, G2 = { ANDROID: 2, IOS: 3, MAC: 4, WEB: 7, WX_MP: 8, QQ_MP: 9, TT_MP: 10, BAIDU_MP: 11, ALI_MP: 12, IPAD: 13, UNI_NATIVE_APP: 15 }, P2 = "1.7.3", U2 = 537048168, b = "CHINA", w = "OVERSEA", F2 = "SINGAPORE", q2 = "KOREA", x2 = "GERMANY", V2 = "IND", B2 = "JPN", K2 = "USA", H2 = { HOST: { CURRENT: { DEFAULT: "wss://wss.im.qcloud.com", STAT: "https://events.im.qcloud.com" }, setCurrent: function() {
      var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : b;
      this.CURRENT = O2.PRODUCTION[e3];
    } }, NAME: { OPEN_IM: "openim", OPEN_IM_MSG_EXT: "openim_msg_ext_http_svc", GROUP: "group_open_http_svc", GROUP_AVCHATROOM: "group_open_avchatroom_http_svc", GROUP_COMMUNITY: "million_group_open_http_svc", GROUP_ATTR: "group_open_attr_http_svc", FRIEND: "sns", PROFILE: "profile", RECENT_CONTACT: "recentcontact", PIC: "openpic", BIG_GROUP_NO_AUTH: "group_open_http_noauth_svc", BIG_GROUP_LONG_POLLING: "group_open_long_polling_http_svc", BIG_GROUP_LONG_POLLING_NO_AUTH: "group_open_long_polling_http_noauth_svc", IM_OPEN_STAT: "imopenstat", WEB_IM: "webim", IM_COS_SIGN: "im_cos_sign_svr", CUSTOM_UPLOAD: "im_cos_msg", HEARTBEAT: "heartbeat", IM_OPEN_PUSH: "im_open_push", IM_OPEN_STATUS: "im_open_status", IM_LONG_MESSAGE: "im_long_msg", IM_CONFIG_MANAGER: "im_sdk_config_mgr", STAT_SERVICE: "StatSvc", OVERLOAD_PUSH: "OverLoadPush", IM_MSG_AUDIT_MGR: "im_msg_audit_mgr", TUIROOM_SVR: "tui_room_svr", IM_OPEN_TRANSLATE: "im_open_translate" }, CMD: { LOGIN: "wslogin", LOGOUT_LONG_POLL: "longpollinglogout", LOGOUT: "wslogout", HELLO: "wshello", STAT_BACKGROUND: "ws_stat_background", STAT_FOREGROUND: "ws_stat_foreground", SET_TOKEN: "ws_stat_settoken", PORTRAIT_GET: "portrait_get_all", PORTRAIT_SET: "portrait_set", GET_LONG_POLL_ID: "getlongpollingid", LONG_POLL: "longpolling", AVCHATROOM_LONG_POLL: "get_msg", ADD_FRIEND: "friend_add", UPDATE_FRIEND: "friend_update", GET_FRIEND_LIST: "friend_get", GET_FRIEND_PROFILE: "friend_get_specified", DELETE_FRIEND: "friend_delete", CHECK_FRIEND: "friend_check", GET_FRIEND_GROUP_LIST: "group_get", RESPOND_FRIEND_APPLICATION: "friend_response", GET_FRIEND_APPLICATION_LIST: "pendency_get", DELETE_FRIEND_APPLICATION: "pendency_delete", REPORT_FRIEND_APPLICATION: "pendency_report", GET_GROUP_APPLICATION: "get_pendency", CREATE_FRIEND_GROUP: "group_add", DELETE_FRIEND_GROUP: "group_delete", UPDATE_FRIEND_GROUP: "group_update", GET_BLACKLIST: "black_list_get", ADD_BLACKLIST: "black_list_add", DELETE_BLACKLIST: "black_list_delete", CREATE_GROUP: "create_group", GET_JOINED_GROUPS: "get_joined_group_list", SET_GROUP_ATTRIBUTES: "set_group_attr", MODIFY_GROUP_ATTRIBUTES: "modify_group_attr", DELETE_GROUP_ATTRIBUTES: "delete_group_attr", CLEAR_GROUP_ATTRIBUTES: "clear_group_attr", GET_GROUP_ATTRIBUTES: "get_group_attr", SEND_MESSAGE: "sendmsg", REVOKE_C2C_MESSAGE: "msgwithdraw", DELETE_C2C_MESSAGE: "delete_c2c_msg_ramble", MODIFY_C2C_MESSAGE: "modify_c2c_msg", MODIFY_C2C_MESSAGE_EXTENSIONS: "set_key_values", GET_C2C_MESSAGE_EXTENSIONS: "get_key_values", SEND_GROUP_MESSAGE: "send_group_msg", REVOKE_GROUP_MESSAGE: "group_msg_recall", DELETE_GROUP_MESSAGE: "delete_group_ramble_msg_by_seq", MODIFY_GROUP_MESSAGE: "modify_group_msg", MODIFY_GROUP_MESSAGE_EXTENSIONS: "group_set_key_values", GET_GROUP_MESSAGE_EXTENSIONS: "group_get_key_values", GET_GROUP_INFO: "get_group_self_member_info", GET_GROUP_MEMBER_INFO: "get_specified_group_member_info", GET_GROUP_MEMBER_LIST: "get_group_member_info", GET_AVCHATROOM_MEMBER_LIST: "get_members", MARK_AVCHATROOM_MEMBER_INFO: "modify_user_info", QUIT_GROUP: "quit_group", CHANGE_GROUP_OWNER: "change_group_owner", DESTROY_GROUP: "destroy_group", ADD_GROUP_MEMBER: "add_group_member", DELETE_GROUP_MEMBER: "delete_group_member", BAN_AVCHATROOM_MEMBER: "ban_group_member", SEARCH_GROUP_BY_ID: "get_group_public_info", APPLY_JOIN_GROUP: "apply_join_group", HANDLE_APPLY_JOIN_GROUP: "handle_apply_join_group", HANDLE_GROUP_INVITATION: "handle_invite_join_group", MODIFY_GROUP_INFO: "modify_group_base_info", MODIFY_GROUP_MEMBER_INFO: "modify_group_member_info", DELETE_GROUP_SYSTEM_MESSAGE: "deletemsg", DELETE_GROUP_AT_TIPS: "deletemsg", GET_GROUP_NOTIFY: "get_group_notify", GET_CONVERSATION_LIST: "get", PAGING_GET_CONVERSATION_LIST: "page_get", DELETE_CONVERSATION: "delete", CLEAR_HISTORY_MESSAGE: "clear_msg", PIN_CONVERSATION: "top", SET_CONVERSATION_CUSTOM_DATA: "mark_contact", MARK_CONVERSATION: "mark_contact", CREATE_CONVERSATION_GROUP: "create_contact_group", DELETE_CONVERSATION_GROUP: "del_contact_group", UPDATE_CONVERSATION_GROUP: "update_contact_group", GET_CONVERSATION_GROUP_LIST: "get_contact_group", GET_MESSAGES: "getmsg", GET_C2C_ROAM_MESSAGES: "getroammsg", SET_C2C_PEER_MUTE_NOTIFICATIONS: "set_c2c_peer_mute_notifications", GET_C2C_PEER_MUTE_NOTIFICATIONS: "get_c2c_peer_mute_notifications", GET_GROUP_ROAM_MESSAGES: "group_msg_get", GET_READ_RECEIPT: "get_group_msg_receipt", GET_READ_RECEIPT_DETAIL: "get_group_msg_receipt_detail", SEND_READ_RECEIPT: "group_msg_receipt", SEND_C2C_READ_RECEIPT: "c2c_msg_read_receipt", SET_C2C_MESSAGE_READ: "msgreaded", GET_PEER_READ_TIME: "get_peer_read_time", SET_GROUP_MESSAGE_READ: "msg_read_report", FILE_READ_AND_WRITE_AUTHKEY: "authkey", FILE_UPLOAD: "pic_up", COS_SIGN: "cos", COS_PRE_SIG: "pre_sig", VIDEO_COVER: "video_cover", TIM_WEB_REPORT_V2: "tim_web_report_v2", BIG_DATA_HALLWAY_AUTH_KEY: "authkey", GET_ONLINE_MEMBER_NUM: "get_online_member_num", ALIVE: "alive", MESSAGE_PUSH: "msg_push", MULTI_MESSAGE_PUSH: "multi_msg_push_ws", MESSAGE_PUSH_ACK: "ws_msg_push_ack", STATUS_FORCE_OFFLINE: "stat_forceoffline", DOWNLOAD_MERGER_MESSAGE: "get_relay_json_msg", UPLOAD_MERGER_MESSAGE: "save_relay_json_msg", FETCH_CLOUD_CONTROL_CONFIG: "fetch_config", PUSHED_CLOUD_CONTROL_CONFIG: "push_configv2", FETCH_COMMERCIAL_CONFIG: "fetch_imsdk_purchase_bitsv2", PUSHED_COMMERCIAL_CONFIG: "push_imsdk_purchase_bitsv2", KICK_OTHER: "KickOther", OVERLOAD_NOTIFY: "notify2", SET_ALL_MESSAGE_READ: "read_all_unread_msg", CREATE_TOPIC: "create_topic", DELETE_TOPIC: "destroy_topic", UPDATE_TOPIC_PROFILE: "modify_topic", GET_TOPIC_LIST: "get_topic", SET_SELF_STATUS: "ws_set_custom_status", GET_USER_STATUS: "ws_get_user_status", SUBSCRIBE_USER_STATUS: "ws_status_subscribe", UNSUBSCRIBE_USER_STATUS: "ws_status_unsubscribe", GET_RPOFANITY_LIST: "get_local_words", TRANSLATE_TEXT: "ws_batch_trans_text", UPDATE_GROUP_COUNTER: "update_group_counter", GET_GROUP_COUNTER: "get_group_counter" }, CHANNEL: { SOCKET: 1, XHR: 2, AUTO: 0 }, NAME_VERSION: { openim: "v4", group_open_http_svc: "v4", sns: "v4", profile: "v4", recentcontact: "v4", openpic: "v4", group_open_http_noauth_svc: "v4", group_open_long_polling_http_svc: "v4", group_open_long_polling_http_noauth_svc: "v4", imopenstat: "v4", im_cos_sign_svr: "v4", im_cos_msg: "v4", webim: "v4", im_open_push: "v4", im_open_status: "v4" } }, W2 = { SEARCH_MSG: new L2(0, Math.pow(2, 0)).toString(), SEARCH_GRP_SNS: new L2(0, Math.pow(2, 1)).toString(), AVCHATROOM_HISTORY_MSG: new L2(0, Math.pow(2, 2)).toString(), GRP_COMMUNITY: new L2(0, Math.pow(2, 3)).toString(), MSG_TO_SPECIFIED_GRP_MBR: new L2(0, Math.pow(2, 4)).toString(), AVCHATROOM_MBR_LIST: new L2(0, Math.pow(2, 6)).toString(), USER_STATUS: new L2(0, Math.pow(2, 7)).toString(), CONV_MARK: new L2(0, Math.pow(2, 9)).toString(), CONV_GROUP: new L2(0, Math.pow(2, 10)).toString(), AVCHATROOM_BAN_MBR: new L2(0, Math.pow(2, 11)).toString(), MSG_EXT: new L2(0, Math.pow(2, 13)).toString() }, Y2 = "c2c_text_message", j2 = "c2c_custom_message", $2 = "group_text_message", z2 = "group_custom_message", J2 = "user_profile", X2 = "group_profile", Q2 = "group_member_profile";
    H2.HOST.setCurrent(b);
    var Z2, ee2, te2, oe2, ne2 = "undefined" != typeof wx$1 && "function" == typeof wx$1.getSystemInfoSync && Boolean(wx$1.getSystemInfoSync().fontSizeSetting), ae2 = "undefined" != typeof qq && "function" == typeof qq.getSystemInfoSync && Boolean(qq.getSystemInfoSync().fontSizeSetting), se2 = "undefined" != typeof tt && "function" == typeof tt.getSystemInfoSync && Boolean(tt.getSystemInfoSync().fontSizeSetting), re2 = "undefined" != typeof swan && "function" == typeof swan.getSystemInfoSync && Boolean(swan.getSystemInfoSync().fontSizeSetting), ie2 = "undefined" != typeof my && "function" == typeof my.getSystemInfoSync && Boolean(my.getSystemInfoSync().fontSizeSetting), ce2 = "undefined" != typeof index$1 && "undefined" == typeof window, ue2 = "undefined" != typeof index$1, le2 = ne2 || ae2 || se2 || re2 || ie2 || ce2, de2 = ("undefined" != typeof index$1 || "undefined" != typeof window) && !le2, pe2 = ae2 ? qq : se2 ? tt : re2 ? swan : ie2 ? my : ne2 ? wx$1 : ce2 ? index$1 : {}, ge2 = (Z2 = "WEB", Ae2 ? Z2 = "WEB" : ae2 ? Z2 = "QQ_MP" : se2 ? Z2 = "TT_MP" : re2 ? Z2 = "BAIDU_MP" : ie2 ? Z2 = "ALI_MP" : ne2 ? Z2 = "WX_MP" : ce2 && (Z2 = "UNI_NATIVE_APP"), G2[Z2]), _e2 = de2 && window && window.navigator && window.navigator.userAgent || "", he2 = /AppleWebKit\/([\d.]+)/i.exec(_e2), fe2 = (he2 && parseFloat(he2.pop()), /iPad/i.test(_e2)), me2 = /iPhone/i.test(_e2) && !fe2, ve2 = /iPod/i.test(_e2), Me2 = me2 || fe2 || ve2, ye2 = (ee2 = _e2.match(/OS (\d+)_/i)) && ee2[1] ? ee2[1] : null, Ie2 = /Android/i.test(_e2), Ce2 = function() {
      var e3 = _e2.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
      if (!e3)
        return null;
      var t3 = e3[1] && parseFloat(e3[1]), o3 = e3[2] && parseFloat(e3[2]);
      return t3 && o3 ? parseFloat(e3[1] + "." + e3[2]) : t3 || null;
    }(), Te2 = (Ie2 && /webkit/i.test(_e2), /Firefox/i.test(_e2), /Edge/i.test(_e2));
    !Te2 && /Chrome/i.test(_e2);
    var Se2 = (function() {
      var e3 = _e2.match(/Chrome\/(\d+)/);
      e3 && e3[1] && parseFloat(e3[1]);
    }(), /MSIE/.test(_e2) || _e2.indexOf("Trident") > -1 && _e2.indexOf("rv:11.0") > -1), De2 = (/MSIE\s8\.0/.test(_e2), function() {
      var e3 = /MSIE\s(\d+)\.\d/.exec(_e2), t3 = e3 && parseFloat(e3[1]);
      return !t3 && /Trident\/7.0/i.test(_e2) && /rv:11.0/.test(_e2) && (t3 = 11), t3;
    }()), Ne2 = (/Safari/i.test(_e2), /TBS\/\d+/i.test(_e2)), Ae2 = (function() {
      var e3 = _e2.match(/TBS\/(\d+)/i);
      if (e3 && e3[1])
        e3[1];
    }(), !Ne2 && /MQQBrowser\/\d+/i.test(_e2), !Ne2 && / QQBrowser\/\d+/i.test(_e2), /(micromessenger|webbrowser)/i.test(_e2)), ke2 = /Windows/i.test(_e2), Re2 = /MAC OS X/i.test(_e2), Le2 = (/MicroMessenger/i.test(_e2), de2 && "undefined" != typeof Worker && !Se2), Oe2 = Ie2 || Me2, Ge2 = de2 && void 0 !== window.tencent_cloud_im_csig_flutter_for_web_25F_cy, Pe2 = "undefined" != typeof commonjsGlobal ? commonjsGlobal : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {};
    te2 = "undefined" != typeof console ? console : void 0 !== Pe2 && Pe2.console ? Pe2.console : "undefined" != typeof window && window.console ? window.console : {};
    for (var Ue2 = function() {
    }, be2 = ["assert", "clear", "count", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeStamp", "trace", "warn"], we2 = be2.length; we2--; )
      oe2 = be2[we2], console[oe2] || (te2[oe2] = Ue2);
    var Fe2 = te2, qe2 = 0, xe2 = function() {
      return new Date().getTime() + qe2;
    }, Ve2 = function() {
      qe2 = 0;
    }, Be2 = function() {
      return Math.floor(xe2() / 1e3);
    }, Ke2 = 0;
    function He2() {
      return Zt() ? "%c TIM %c" : "TIM";
    }
    function We2() {
      var e3, t3 = ((e3 = new Date()).setTime(xe2()), e3);
      return t3.toLocaleTimeString("en-US", { hour12: false }) + "." + function(e4) {
        var t4;
        switch (e4.toString().length) {
          case 1:
            t4 = "00" + e4;
            break;
          case 2:
            t4 = "0" + e4;
            break;
          default:
            t4 = e4;
        }
        return t4;
      }(t3.getMilliseconds());
    }
    var Ye2 = { arguments2String: function(e3) {
      var t3 = "";
      if (1 === e3.length)
        t3 = e3[0];
      else
        for (var o3 = 0, n3 = e3.length; o3 < n3; o3++)
          pt2(e3[o3]) ? _t2(e3[o3]) ? t3 += yt2(e3[o3]) : t3 += JSON.stringify(e3[o3]) : t3 += e3[o3], t3 += " ";
      return t3;
    }, _exec: function(e3, t3) {
      Zt() ? Fe2[e3](He2(), "background:#0abf5b; padding:1px; border-radius:3px; color: #fff", "background:transparent", We2(), t3) : Fe2[e3]("".concat(He2(), " ").concat(We2(), " ").concat(t3));
    }, debug: function() {
      if (Ke2 <= -1) {
        var e3 = this.arguments2String(arguments);
        this._exec("debug", e3);
      }
    }, log: function() {
      if (Ke2 <= 0) {
        var e3 = this.arguments2String(arguments);
        this._exec("log", e3);
      }
    }, info: function() {
      if (Ke2 <= 1) {
        var e3 = this.arguments2String(arguments);
        this._exec("info", e3);
      }
    }, warn: function() {
      if (Ke2 <= 2) {
        var e3 = this.arguments2String(arguments);
        this._exec("warn", e3);
      }
    }, error: function() {
      if (Ke2 <= 3) {
        var e3 = this.arguments2String(arguments);
        this._exec("error", e3);
      }
    }, setLevel: function(e3) {
      e3 < 4 && this._exec("log", "set level from " + Ke2 + " to " + e3), Ke2 = e3;
    }, getLevel: function() {
      return Ke2;
    } }, je2 = { JPG: 1, JPEG: 1, GIF: 2, PNG: 3, BMP: 4, UNKNOWN: 255 }, $e2 = { NICK: "Tag_Profile_IM_Nick", GENDER: "Tag_Profile_IM_Gender", BIRTHDAY: "Tag_Profile_IM_BirthDay", LOCATION: "Tag_Profile_IM_Location", SELFSIGNATURE: "Tag_Profile_IM_SelfSignature", ALLOWTYPE: "Tag_Profile_IM_AllowType", LANGUAGE: "Tag_Profile_IM_Language", AVATAR: "Tag_Profile_IM_Image", MESSAGESETTINGS: "Tag_Profile_IM_MsgSettings", ADMINFORBIDTYPE: "Tag_Profile_IM_AdminForbidType", LEVEL: "Tag_Profile_IM_Level", ROLE: "Tag_Profile_IM_Role" }, ze2 = { UNKNOWN: "Gender_Type_Unknown", FEMALE: "Gender_Type_Female", MALE: "Gender_Type_Male" }, Je2 = { NONE: "AdminForbid_Type_None", SEND_OUT: "AdminForbid_Type_SendOut" }, Xe2 = { NEED_CONFIRM: "AllowType_Type_NeedConfirm", ALLOW_ANY: "AllowType_Type_AllowAny", DENY_ANY: "AllowType_Type_DenyAny" }, Qe2 = "JoinedSuccess", Ze2 = "WaitAdminApproval", et2 = "@TGS#_", ot2 = "@TOPIC#_", nt2 = ["url"], at2 = function(e3) {
      return "map" === ht2(e3);
    }, st2 = function(e3) {
      return "file" === ht2(e3);
    }, rt2 = function(e3) {
      return null !== e3 && ("number" == typeof e3 && !isNaN(e3 - 0) || "object" === o2(e3) && e3.constructor === Number);
    }, it2 = function(e3) {
      return "string" == typeof e3;
    }, ct2 = function(e3) {
      return null !== e3 && "object" === o2(e3);
    }, ut2 = function(e3) {
      if ("object" !== o2(e3) || null === e3)
        return false;
      var t3 = Object.getPrototypeOf(e3);
      if (null === t3)
        return true;
      for (var n3 = t3; null !== Object.getPrototypeOf(n3); )
        n3 = Object.getPrototypeOf(n3);
      return t3 === n3;
    }, lt2 = function(e3) {
      return "function" == typeof Array.isArray ? Array.isArray(e3) : "array" === ht2(e3);
    }, dt2 = function(e3) {
      return void 0 === e3;
    }, pt2 = function(e3) {
      return lt2(e3) || ct2(e3);
    }, gt2 = function(e3) {
      return "function" == typeof e3;
    }, _t2 = function(e3) {
      return e3 instanceof Error;
    }, ht2 = function(e3) {
      return Object.prototype.toString.call(e3).match(/^\[object (.*)\]$/)[1].toLowerCase();
    }, ft2 = function(e3) {
      if ("string" != typeof e3)
        return false;
      var t3 = e3[0];
      return !/[^a-zA-Z0-9]/.test(t3);
    }, mt2 = 0;
    Date.now || (Date.now = function() {
      return new Date().getTime();
    });
    var vt2 = function() {
      0 === mt2 && (mt2 = Date.now() - 1);
      var e3 = Date.now() - mt2;
      return e3 > 4294967295 ? (mt2 += 4294967295, Date.now() - mt2) : e3;
    }, Mt = function e3(t3, o3, n3, a3) {
      if (!pt2(t3) || !pt2(o3))
        return 0;
      for (var s3, r3 = 0, i3 = Object.keys(o3), c3 = 0, u3 = i3.length; c3 < u3; c3++)
        if (s3 = i3[c3], !(dt2(o3[s3]) || n3 && n3.includes(s3)))
          if (pt2(t3[s3]) && pt2(o3[s3]))
            r3 += e3(t3[s3], o3[s3], n3, a3);
          else {
            if (a3 && a3.includes(o3[s3]))
              continue;
            t3[s3] !== o3[s3] && (t3[s3] = o3[s3], r3 += 1);
          }
      return r3;
    }, yt2 = function(e3) {
      return JSON.stringify(e3, ["message", "code"]);
    }, It2 = function(e3) {
      if (0 === e3.length)
        return 0;
      for (var t3 = 0, o3 = 0, n3 = "undefined" != typeof document && void 0 !== document.characterSet ? document.characterSet : "UTF-8"; void 0 !== e3[t3]; )
        o3 += e3[t3++].charCodeAt[t3] <= 255 ? 1 : false === n3 ? 3 : 2;
      return o3;
    }, Ct = function(e3) {
      var t3 = e3 || 99999999;
      return Math.round(Math.random() * t3);
    }, Tt2 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", Et2 = Tt2.length, St2 = function(e3, t3) {
      for (var o3 in e3)
        if (e3[o3] === t3)
          return true;
      return false;
    }, Dt = {}, Nt = function(e3) {
      return -1 === e3.indexOf("http://") || -1 === e3.indexOf("https://") ? "https://" + e3 : e3.replace(/https|http/, "https");
    }, At2 = function e3(t3) {
      if (0 === Object.getOwnPropertyNames(t3).length)
        return /* @__PURE__ */ Object.create(null);
      var n3 = Array.isArray(t3) ? [] : /* @__PURE__ */ Object.create(null), a3 = "";
      for (var s3 in t3)
        null !== t3[s3] ? void 0 !== t3[s3] ? (a3 = o2(t3[s3]), ["string", "number", "function", "boolean"].indexOf(a3) >= 0 ? n3[s3] = t3[s3] : n3[s3] = e3(t3[s3])) : n3[s3] = void 0 : n3[s3] = null;
      return n3;
    };
    function kt2(e3, t3) {
      lt2(e3) && lt2(t3) && t3.forEach(function(t4) {
        var o3 = t4.key, n3 = t4.value, a3 = e3.find(function(e4) {
          return e4.key === o3;
        });
        a3 ? a3.value = n3 : e3.push({ key: o3, value: n3 });
      });
    }
    var Rt = function(e3) {
      return e3 === D2.GRP_PUBLIC;
    }, Lt = function(e3) {
      return e3 === D2.GRP_AVCHATROOM;
    }, Ot2 = function(e3) {
      var t3 = e3.type, o3 = e3.groupID;
      return t3 === D2.GRP_COMMUNITY || "".concat(o3).startsWith(et2) && !"".concat(o3).includes(ot2);
    }, Gt = function(e3) {
      return "".concat(e3).startsWith(et2) && "".concat(e3).includes(ot2);
    }, Pt2 = function(e3) {
      return it2(e3) && e3.slice(0, 3) === D2.CONV_C2C;
    }, Ut = function(e3) {
      return it2(e3) && e3.slice(0, 5) === D2.CONV_GROUP;
    }, bt2 = function(e3) {
      return it2(e3) && e3 === D2.CONV_SYSTEM;
    };
    function wt2(e3, t3) {
      var o3 = {};
      return Object.keys(e3).forEach(function(n3) {
        o3[n3] = t3(e3[n3], n3);
      }), o3;
    }
    function Ft(e3) {
      return le2 ? new Promise(function(t3, o3) {
        pe2.getImageInfo({ src: e3, success: function(e4) {
          t3({ width: e4.width, height: e4.height });
        }, fail: function() {
          t3({ width: 0, height: 0 });
        } });
      }) : Se2 && 9 === De2 ? Promise.resolve({ width: 0, height: 0 }) : new Promise(function(t3, o3) {
        var n3 = new Image();
        n3.onload = function() {
          t3({ width: this.width, height: this.height }), n3 = null;
        }, n3.onerror = function() {
          t3({ width: 0, height: 0 }), n3 = null;
        }, n3.src = e3;
      });
    }
    function qt() {
      function e3() {
        return (65536 * (1 + Math.random()) | 0).toString(16).substring(1);
      }
      return "".concat(e3() + e3()).concat(e3()).concat(e3()).concat(e3()).concat(e3()).concat(e3()).concat(e3());
    }
    function xt() {
      var e3 = "unknown";
      if (Re2 && (e3 = "mac"), ke2 && (e3 = "windows"), Me2 && (e3 = "ios"), Ie2 && (e3 = "android"), le2)
        try {
          var t3 = pe2.getSystemInfoSync().platform;
          void 0 !== t3 && (e3 = t3);
        } catch (o3) {
        }
      return e3;
    }
    function Vt(e3, t3) {
      e3 = e3.split("."), t3 = t3.split(".");
      for (var o3 = Math.max(e3.length, t3.length); e3.length < o3; )
        e3.push("0");
      for (; t3.length < o3; )
        t3.push("0");
      for (var n3 = 0; n3 < o3; n3++) {
        var a3 = parseInt(e3[n3]), s3 = parseInt(t3[n3]);
        if (a3 > s3)
          return 1;
        if (a3 < s3)
          return -1;
      }
      return 0;
    }
    function Bt(e3) {
      var t3 = e3.originUrl, o3 = void 0 === t3 ? void 0 : t3, n3 = e3.originWidth, a3 = e3.originHeight, s3 = e3.min, r3 = void 0 === s3 ? 198 : s3, i3 = parseInt(n3), c3 = parseInt(a3), u3 = { url: void 0, width: 0, height: 0 };
      if ((i3 <= c3 ? i3 : c3) <= r3)
        u3.url = o3, u3.width = i3, u3.height = c3;
      else {
        c3 <= i3 ? (u3.width = Math.ceil(i3 * r3 / c3), u3.height = r3) : (u3.width = r3, u3.height = Math.ceil(c3 * r3 / i3));
        var l3 = o3 && o3.indexOf("?") > -1 ? "".concat(o3, "&") : "".concat(o3, "?");
        u3.url = "".concat(l3, 198 === r3 ? "imageView2/3/w/198/h/198" : "imageView2/3/w/720/h/720");
      }
      return dt2(o3) ? g2(u3, nt2) : u3;
    }
    function Kt(e3) {
      var t3 = e3[2];
      e3[2] = e3[1], e3[1] = t3;
      for (var o3 = 0; o3 < e3.length; o3++)
        e3[o3].setType(o3);
    }
    function Ht(e3) {
      var t3 = e3.servcmd;
      return t3.slice(t3.indexOf(".") + 1);
    }
    function Wt(e3, t3) {
      return Math.round(Number(e3) * Math.pow(10, t3)) / Math.pow(10, t3);
    }
    function Yt(e3, t3) {
      return e3.includes(t3);
    }
    function jt(e3, t3) {
      return e3.includes(t3);
    }
    function $t(e3) {
      return e3.split(ot2)[0];
    }
    var zt = function(e3, t3, o3) {
      if (dt2(t3))
        return "";
      switch (e3) {
        case D2.MSG_TEXT:
          return t3.text;
        case D2.MSG_IMAGE:
          return o3 ? "[Image]" : "[\u56FE\u7247]";
        case D2.MSG_LOCATION:
          return o3 ? "[Location]" : "[\u4F4D\u7F6E]";
        case D2.MSG_AUDIO:
          return o3 ? "[Voice]" : "[\u8BED\u97F3]";
        case D2.MSG_VIDEO:
          return o3 ? "[Video]" : "[\u89C6\u9891]";
        case D2.MSG_FILE:
          return o3 ? "[File]" : "[\u6587\u4EF6]";
        case D2.MSG_CUSTOM:
          return o3 ? "[Custom Messages]" : "[\u81EA\u5B9A\u4E49\u6D88\u606F]";
        case D2.MSG_GRP_TIP:
          return o3 ? "[Group Notification]" : "[\u7FA4\u63D0\u793A\u6D88\u606F]";
        case D2.MSG_GRP_SYS_NOTICE:
          return o3 ? "[Group System Message]" : "[\u7FA4\u7CFB\u7EDF\u901A\u77E5]";
        case D2.MSG_FACE:
          return o3 ? "[Animated Sticker]" : "[\u52A8\u753B\u8868\u60C5]";
        case D2.MSG_MERGER:
          return o3 ? "[Chat Record]" : "[\u804A\u5929\u8BB0\u5F55]";
        default:
          return "";
      }
    };
    function Jt(e3) {
      return e3 === D2.MSG_TEXT || e3 === D2.MSG_CUSTOM || e3 === D2.MSG_LOCATION || e3 === D2.MSG_FACE;
    }
    function Xt(e3) {
      var t3 = [];
      if (!it2(e3))
        return t3;
      var o3 = e3.length;
      if (0 === o3)
        return t3;
      for (var n3 = o3 - 1; n3 >= 0; n3--)
        "1" === e3[n3] && t3.push(Math.pow(2, o3 - n3 - 1));
      return t3;
    }
    function Qt(e3) {
      return 0 === e3 || e3 >= 2e7 && e3 < 8e7 || e3 >= 172e7 && e3 < 178e7;
    }
    function Zt() {
      return !Se2 && !le2;
    }
    function eo(e3) {
      return "the length of userIDList cannot exceed ".concat(e3);
    }
    var to = Object.prototype.hasOwnProperty;
    function oo(e3) {
      if (null == e3)
        return true;
      if ("boolean" == typeof e3)
        return false;
      if ("number" == typeof e3)
        return 0 === e3;
      if ("string" == typeof e3)
        return 0 === e3.length;
      if ("function" == typeof e3)
        return 0 === e3.length;
      if (Array.isArray(e3))
        return 0 === e3.length;
      if (e3 instanceof Error)
        return "" === e3.message;
      if (ut2(e3)) {
        for (var t3 in e3)
          if (to.call(e3, t3))
            return false;
        return true;
      }
      return !(!at2(e3) && (o3 = e3, "set" !== ht2(o3)) && !st2(e3)) && 0 === e3.size;
      var o3;
    }
    function no(e3, t3, o3) {
      if (void 0 === t3)
        return true;
      var n3 = true;
      if ("object" === R2(t3).toLowerCase())
        Object.keys(t3).forEach(function(a4) {
          var s3 = 1 === e3.length ? e3[0][a4] : void 0;
          n3 = !!ao(s3, t3[a4], o3, a4) && n3;
        });
      else if ("array" === R2(t3).toLowerCase())
        for (var a3 = 0; a3 < t3.length; a3++)
          n3 = !!ao(e3[a3], t3[a3], o3, t3[a3].name) && n3;
      if (n3)
        return n3;
      throw new Error("Params validate failed.");
    }
    function ao(e3, t3, o3, n3) {
      if (void 0 === t3)
        return true;
      var a3 = true;
      return t3.required && oo(e3) && (Ye2.error("[".concat(o3, '] Missing required params: "').concat(n3, '".')), a3 = false), oo(e3) || R2(e3).toLowerCase() === t3.type.toLowerCase() || (Ye2.error("[".concat(o3, '] Invalid params: type check failed for "').concat(n3, '".Expected ').concat(t3.type, ".")), a3 = false), t3.validator && !t3.validator(e3) && (Ye2.error("[".concat(o3, "] Invalid params: custom validator check failed for params.")), a3 = false), a3;
    }
    var so, ro = { UNSEND: "unSend", SUCCESS: "success", FAIL: "fail" }, io = { NOT_START: "notStart", PENDING: "pending", RESOLVED: "resolved", REJECTED: "rejected" }, co = false, uo = function(e3) {
      return !!e3 && (!!(Pt2(e3) || Ut(e3) || bt2(e3)) || (co ? Ye2.warn("Invalid conversationID:".concat(e3, "."), "Supported formats: C2C${userID} (one-to-one chat) | GROUP${groupID} (group chat) | @TIM#SYSTEM (system notification conversation)") : Ye2.warn("\u975E\u6CD5\u7684\u4F1A\u8BDD ID:".concat(e3, "\u3002\u4F1A\u8BDD ID \u7EC4\u6210\u65B9\u5F0F\uFF1AC2C + userID\uFF08\u5355\u804A\uFF09GROUP + groupID\uFF08\u7FA4\u804A\uFF09@TIM#SYSTEM\uFF08\u7CFB\u7EDF\u901A\u77E5\u4F1A\u8BDD\uFF09")), false));
    }, lo = function(e3) {
      return "[".concat(e3.api, "] | ").concat(e3.param, " | ").concat(e3.desc, ", ").concat(co ? "see https://web.sdk.qcloud.com/im/doc/en/SDK.html#" : "\u8BF7\u53C2\u8003 https://web.sdk.qcloud.com/im/doc/zh-cn/SDK.html#").concat(e3.api);
    }, po = function() {
      return co ? "String type required" : "\u7C7B\u578B\u5FC5\u987B\u4E3A String";
    }, go = function(e3) {
      return co ? "String type required and ".concat(e3, " must not be an empty string") : "\u7C7B\u578B\u5FC5\u987B\u4E3A String\uFF0C\u4E14\u4E0D\u80FD\u4E3A\u7A7A";
    }, _o = function() {
      return co ? "Number type required" : "\u7C7B\u578B\u5FC5\u987B\u4E3A Number";
    }, ho = function() {
      return co ? "Must not be undefined" : "\u4E0D\u80FD\u4E3A undefined";
    }, fo = function() {
      return co ? "HTMLInputElement or File required" : "\u7C7B\u578B\u5FC5\u987B\u4E3A HTMLInputElement \u6216 File";
    }, mo = function() {
      return co ? "Function type required" : "\u7C7B\u578B\u5FC5\u987B\u4E3A Function";
    }, vo = function() {
      return co ? "Array type required" : "\u7C7B\u578B\u5FC5\u987B\u4E3A Array";
    }, Mo = function() {
      return co ? "Must not be an empty array" : "\u4E0D\u80FD\u4E3A\u7A7A\u6570\u7EC4";
    }, yo = function() {
      return co ? "Without onProgress function, you can not query the upload progress" : "\u6CA1\u6709 onProgress \u56DE\u8C03\uFF0C\u60A8\u5C06\u65E0\u6CD5\u83B7\u53D6\u4E0A\u4F20\u8FDB\u5EA6";
    }, Io = function() {
      return co ? "A positive integer required" : "\u5FC5\u987B\u4E3A\u6B63\u6574\u6570";
    }, Co = function(e3, t3) {
      return co ? "".concat(e3, " must not be longer than ").concat(t3, " bytes") : "".concat(e3, " \u957F\u5EA6\u4E0D\u5F97\u8D85\u8FC7 ").concat(t3, " \u5B57\u8282");
    }, To = function(e3, t3) {
      return co ? "".concat(e3, " must be less than ").concat(t3) : "".concat(e3, " \u5FC5\u987B\u5C0F\u4E8E").concat(t3);
    }, Eo = function(e3) {
      return co ? "Type of ".concat(e3, " of key-value pairs must be String") : "\u952E\u503C\u5BF9\u7684 ".concat(e3, " \u7684\u7C7B\u578B\u5FC5\u987B\u4E3A String");
    }, So = function() {
      return co ? "Plain Object required" : "\u7C7B\u578B\u5FC5\u987B\u4E3A Plain Object";
    }, Do = function() {
      return co ? "Message content must not be empty" : "\u6D88\u606F\u5185\u5BB9\u4E0D\u80FD\u4E3A\u7A7A";
    }, No = function() {
      return co ? "Please select a file first" : "\u60A8\u6CA1\u6709\u9009\u62E9\u6587\u4EF6\uFF0C\u65E0\u6CD5\u53D1\u9001";
    }, Ao = function() {
      return co ? "A message instance required" : "\u8BF7\u4F20\u5165\u6D88\u606F\uFF08Message\uFF09\u5B9E\u4F8B";
    }, ko = function() {
      return co ? "Non-anonymous Function recommended" : "\u63A8\u8350\u4F7F\u7528\u5177\u540D\u51FD\u6570";
    }, Ro = function() {
      return co ? "Please check the status and isSupportExtension properties of the message" : "\u8BF7\u68C0\u67E5\u6D88\u606F\u7684 status \u548C isSupportExtension \u5C5E\u6027";
    }, Lo = { type: "String", required: true }, Oo = { type: "Array", required: true }, Go = { type: "Object", required: true }, Po = { type: "Boolean", required: true }, Uo = { type: "number", required: true }, bo = { setIsIntl: function(e3) {
      co = e3;
    }, login: { userID: Lo, userSig: Lo }, addToBlacklist: { userIDList: Oo }, removeFromBlacklist: { userIDList: Oo }, on: [{ name: "eventName", type: "String", validator: function(e3) {
      return "string" == typeof e3 && 0 !== e3.length || (Ye2.warn(lo({ api: "on", param: "eventName", desc: go("eventName") })), false);
    } }, { name: "handler", type: "Function", validator: function(e3) {
      return "function" != typeof e3 ? (Ye2.warn(lo({ api: "on", param: "handler", desc: mo() })), false) : ("" === e3.name && Ye2.warn(lo({ api: "on", param: "handler", desc: ko() })), true);
    } }], once: [{ name: "eventName", type: "String", validator: function(e3) {
      return "string" == typeof e3 && 0 !== e3.length || (Ye2.warn(lo({ api: "once", param: "eventName", desc: go("eventName") })), false);
    } }, { name: "handler", type: "Function", validator: function(e3) {
      return "function" != typeof e3 ? (Ye2.warn(lo({ api: "once", param: "handler", desc: mo() })), false) : ("" === e3.name && Ye2.warn(lo({ api: "once", param: "handler", desc: ko() })), true);
    } }], off: [{ name: "eventName", type: "String", validator: function(e3) {
      return "string" == typeof e3 && 0 !== e3.length || (Ye2.warn(lo({ api: "off", param: "eventName", desc: go("eventName") })), false);
    } }, { name: "handler", type: "Function", validator: function(e3) {
      return "function" != typeof e3 ? (Ye2.warn(lo({ api: "off", param: "handler", desc: mo() })), false) : ("" === e3.name && Ye2.warn(lo({ api: "off", param: "handler", desc: ko() })), true);
    } }], sendMessage: [t2({ name: "message" }, Go)], setMessageExtensions: [t2(t2({ name: "message" }, Go), {}, { validator: function(e3) {
      return e3.status === ro.SUCCESS && true === e3.isSupportExtension || (Ye2.warn(lo({ api: "setMessageExtensions", param: "message", desc: Ro() })), false);
    } }), t2({ name: "extensions" }, Oo)], getMessageExtensions: [t2(t2({ name: "message" }, Go), {}, { validator: function(e3) {
      return e3.status === ro.SUCCESS && true === e3.isSupportExtension || (Ye2.warn(lo({ api: "getMessageExtensions", param: "message", desc: Ro() })), false);
    } })], deleteMessageExtensions: [t2(t2({ name: "message" }, Go), {}, { validator: function(e3) {
      return e3.status === ro.SUCCESS && true === e3.isSupportExtension || (Ye2.warn(lo({ api: "deleteMessageExtensions", param: "message", desc: Ro() })), false);
    } })], getMessageList: { conversationID: t2(t2({}, Lo), {}, { validator: function(e3) {
      return uo(e3);
    } }), nextReqMessageID: { type: "String" }, count: { type: "Number", validator: function(e3) {
      return !(!dt2(e3) && !/^[1-9][0-9]*$/.test(e3)) || (Ye2.warn(lo({ api: "getMessageList", param: "count", desc: Io() })), false);
    } } }, getMessageListHopping: { conversationID: t2(t2({}, Lo), {}, { validator: function(e3) {
      return uo(e3);
    } }), sequence: { type: "Number" }, time: { type: "Number" }, direction: { type: "Number", validator: function(e3) {
      return !(!dt2(e3) && 0 !== e3 && 1 !== e3) || (Ye2.warn(lo({ api: "getMessageListHopping", param: "direction", desc: co ? "0 or 1 required" : "\u5FC5\u987B\u4E3A0\u62161" })), false);
    } }, count: { type: "Number", validator: function(e3) {
      return !(!dt2(e3) && !/^[1-9][0-9]*$/.test(e3)) || (Ye2.warn(lo({ api: "getMessageListHopping", param: "count", desc: Io })), false);
    } } }, setMessageRead: { conversationID: t2(t2({}, Lo), {}, { validator: function(e3) {
      return uo(e3);
    } }) }, setAllMessageRead: { scope: { type: "String", required: false, validator: function(e3) {
      return !e3 || -1 !== [D2.READ_ALL_C2C_MSG, D2.READ_ALL_GROUP_MSG, D2.READ_ALL_MSG].indexOf(e3) || (Ye2.warn(lo({ api: "setAllMessageRead", param: "scope", desc: "TIM.TYPES.READ_ALL_C2C_MSG or TIM.TYPES.READ_ALL_GROUP_MSG or TIM.TYPES.READ_ALL_MSG required" })), false);
    } } }, getConversationProfile: [t2(t2({ name: "conversationID" }, Lo), {}, { validator: function(e3) {
      return uo(e3);
    } })], deleteConversation: [t2(t2({ name: "conversationID" }, Lo), {}, { validator: function(e3) {
      return uo(e3);
    } })], clearHistoryMessage: [t2(t2({ name: "conversationID" }, Lo), {}, { validator: function(e3) {
      return uo(e3);
    } })], pinConversation: { conversationID: t2(t2({}, Lo), {}, { validator: function(e3) {
      return uo(e3);
    } }), isPinned: t2({}, Po) }, setConversationCustomData: { conversationIDList: t2({}, Oo), customData: { type: "String", validator: function(e3) {
      return it2(e3) ? !(e3.length > 256) || (Ye2.warn(lo({ api: "setConversationCustomData", param: "customData", desc: Co("customData", 256) })), false) : (Ye2.warn(lo({ api: "setConversationCustomData", param: "customData", desc: po() })), false);
    } } }, markConversation: { conversationIDList: t2({}, Oo), markType: { type: "number", validator: function(e3) {
      return rt2(e3) ? e3 <= 0 ? (Ye2.warn(lo({ api: "markConversation", param: "markType", desc: (t3 = "markType", o3 = 0, co ? "".concat(t3, " must be greater than ").concat(o3) : "".concat(t3, " \u5FC5\u987B\u5927\u4E8E").concat(o3)) })), false) : !(e3 >= Math.pow(2, 64)) || (Ye2.warn(lo({ api: "markConversation", param: "markType", desc: To("markType", "Math.pow(2,64)") })), false) : (Ye2.warn(lo({ api: "markConversation", param: "markType", desc: _o() })), false);
      var t3, o3;
    } }, enableMark: t2({}, Po) }, createConversationGroup: { conversationIDList: t2({}, Oo), groupName: t2(t2({}, Lo), {}, { validator: function(e3) {
      return !!e3 && (!(e3.length > 32) || (Ye2.warn(lo({ api: "createConversationGroup", param: "groupName", desc: Co("groupName", 32) })), false));
    } }) }, deleteConversationGroup: [t2({ name: "groupName" }, Lo)], renameConversationGroup: { oldName: t2({}, Lo), newName: t2(t2({}, Lo), {}, { validator: function(e3) {
      return !!e3 && (!(e3.length > 32) || (Ye2.warn(lo({ api: "renameConversationGroup", param: "newName", desc: Co("newName", 32) })), false));
    } }) }, addConversationsToGroup: { conversationIDList: t2({}, Oo), groupName: t2({}, Lo) }, deleteConversationsFromGroup: { conversationIDList: t2({}, Oo), groupName: t2({}, Lo) }, getGroupList: { groupProfileFilter: { type: "Array" } }, getGroupProfile: { groupID: Lo, groupCustomFieldFilter: { type: "Array" }, memberCustomFieldFilter: { type: "Array" } }, getGroupProfileAdvance: { groupIDList: Oo }, createGroup: { name: Lo }, joinGroup: { groupID: Lo, type: { type: "String" }, applyMessage: { type: "String" } }, quitGroup: [t2({ name: "groupID" }, Lo)], handleApplication: { message: Go, handleAction: Lo, handleMessage: { type: "String" } }, changeGroupOwner: { groupID: Lo, newOwnerID: Lo }, updateGroupProfile: { groupID: Lo, muteAllMembers: { type: "Boolean" } }, dismissGroup: [t2({ name: "groupID" }, Lo)], searchGroupByID: [t2({ name: "groupID" }, Lo)], initGroupAttributes: { groupID: Lo, groupAttributes: t2(t2({}, Go), {}, { validator: function(e3) {
      var t3 = true;
      return Object.keys(e3).forEach(function(o3) {
        if (!it2(e3[o3]))
          return Ye2.warn(lo({ api: "initGroupAttributes", param: "groupAttributes", desc: Eo("value") })), t3 = false;
      }), t3;
    } }) }, setGroupAttributes: { groupID: Lo, groupAttributes: t2(t2({}, Go), {}, { validator: function(e3) {
      var t3 = true;
      return Object.keys(e3).forEach(function(o3) {
        if (!it2(e3[o3]))
          return Ye2.warn(lo({ api: "setGroupAttributes", param: "groupAttributes", desc: Eo("value") })), t3 = false;
      }), t3;
    } }) }, deleteGroupAttributes: { groupID: Lo, keyList: { type: "Array", validator: function(e3) {
      if (dt2(e3) || !lt2(e3))
        return Ye2.warn(lo({ api: "deleteGroupAttributes", param: "keyList", desc: vo() })), false;
      if (!oo(e3)) {
        var t3 = true;
        return e3.forEach(function(e4) {
          if (!it2(e4))
            return Ye2.warn(lo({ api: "deleteGroupAttributes", param: "keyList", desc: co ? "Type of the array element must be String" : "\u6570\u7EC4\u5143\u7D20\u7684\u7C7B\u578B\u5FC5\u987B\u4E3A String" })), t3 = false;
        }), t3;
      }
      return true;
    } } }, getGroupAttributes: { groupID: Lo, keyList: { type: "Array", validator: function(e3) {
      if (dt2(e3) || !lt2(e3))
        return Ye2.warn(lo({ api: "getGroupAttributes", param: "keyList", desc: vo() })), false;
      if (!oo(e3)) {
        var t3 = true;
        return e3.forEach(function(e4) {
          if (!it2(e4))
            return Ye2.warn(lo({ api: "getGroupAttributes", param: "keyList", desc: Eo("key") })), t3 = false;
        }), t3;
      }
      return true;
    } } }, setGroupCounters: { groupID: Lo, counters: Go }, increaseGroupCounter: { groupID: Lo, key: Lo, value: Uo }, decreaseGroupCounter: { groupID: Lo, key: Lo, value: Uo }, getGroupCounters: { groupID: Lo }, getGroupMemberList: { groupID: Lo, count: { type: "Number" } }, getGroupMemberProfile: { groupID: Lo, userIDList: Oo, memberCustomFieldFilter: { type: "Array" } }, addGroupMember: { groupID: Lo, userIDList: Oo }, setGroupMemberRole: { groupID: Lo, userID: Lo, role: Lo }, setGroupMemberMuteTime: { groupID: Lo, userID: Lo, muteTime: { type: "Number", validator: function(e3) {
      return e3 >= 0;
    } } }, setGroupMemberNameCard: { groupID: Lo, userID: { type: "String" }, nameCard: { type: "String", validator: function(e3) {
      return it2(e3) ? (e3.length, true) : (Ye2.warn(lo({ api: "setGroupMemberNameCard", param: "nameCard", desc: po() })), false);
    } } }, setGroupMemberCustomField: { groupID: Lo, userID: { type: "String" }, memberCustomField: Oo }, deleteGroupMember: { groupID: Lo }, markGroupMemberList: { groupID: Lo, markType: { type: "number", validator: function(e3) {
      return rt2(e3) ? !(e3 < 1e3) || (Ye2.warn(lo({ api: "markGroupMemberList", param: "markType", desc: (t3 = "markType", o3 = 1e3, co ? "".concat(t3, " must be greater than or equal to ").concat(o3) : "".concat(t3, " \u5FC5\u987B\u5927\u4E8E\u6216\u7B49\u4E8E").concat(o3)) })), false) : (Ye2.warn(lo({ api: "markGroupMemberList", param: "markType", desc: _o() })), false);
      var t3, o3;
    } }, userIDList: t2({}, Oo), enableMark: t2({}, Po) }, createTextMessage: { to: Lo, conversationType: Lo, payload: t2(t2({}, Go), {}, { validator: function(e3) {
      return ut2(e3) ? it2(e3.text) ? 0 !== e3.text.length || (Ye2.warn(lo({ api: "createTextMessage", param: "payload.text", desc: Do() })), false) : (Ye2.warn(lo({ api: "createTextMessage", param: "payload.text", desc: po() })), false) : (Ye2.warn(lo({ api: "createTextMessage", param: "payload", desc: So() })), false);
    } }) }, createTextAtMessage: { to: Lo, conversationType: Lo, payload: t2(t2({}, Go), {}, { validator: function(e3) {
      return ut2(e3) ? it2(e3.text) ? 0 === e3.text.length ? (Ye2.warn(lo({ api: "createTextAtMessage", param: "payload.text", desc: Do() })), false) : !(e3.atUserList && !lt2(e3.atUserList)) || (Ye2.warn(lo({ api: "createTextAtMessage", param: "payload.atUserList", desc: vo() })), false) : (Ye2.warn(lo({ api: "createTextAtMessage", param: "payload.text", desc: po() })), false) : (Ye2.warn(lo({ api: "createTextAtMessage", param: "payload", desc: So() })), false);
    } }) }, createCustomMessage: { to: Lo, conversationType: Lo, payload: t2(t2({}, Go), {}, { validator: function(e3) {
      return ut2(e3) ? e3.data && !it2(e3.data) ? (Ye2.warn(lo({ api: "createCustomMessage", param: "payload.data", desc: po() })), false) : e3.description && !it2(e3.description) ? (Ye2.warn(lo({ api: "createCustomMessage", param: "payload.description", desc: po() })), false) : !(e3.extension && !it2(e3.extension)) || (Ye2.warn(lo({ api: "createCustomMessage", param: "payload.extension", desc: po() })), false) : (Ye2.warn(lo({ api: "createCustomMessage", param: "payload", desc: So() })), false);
    } }) }, createImageMessage: { to: Lo, conversationType: Lo, payload: t2(t2({}, Go), {}, { validator: function(e3) {
      if (!ut2(e3))
        return Ye2.warn(lo({ api: "createImageMessage", param: "payload", desc: So() })), false;
      if (dt2(e3.file))
        return Ye2.warn(lo({ api: "createImageMessage", param: "payload.file", desc: ho() })), false;
      if (de2) {
        if (!(e3.file instanceof HTMLInputElement || st2(e3.file)))
          return ut2(e3.file) && "undefined" != typeof index$1 ? 0 !== e3.file.tempFilePaths.length && 0 !== e3.file.tempFiles.length || (Ye2.warn(lo({ api: "createImageMessage", param: "payload.file", desc: No() })), false) : (Ye2.warn(lo({ api: "createImageMessage", param: "payload.file", desc: fo() })), false);
        if (e3.file instanceof HTMLInputElement && 0 === e3.file.files.length)
          return Ye2.warn(lo({ api: "createImageMessage", param: "payload.file", desc: No() })), false;
      }
      return true;
    }, onProgress: { type: "Function", required: false, validator: function(e3) {
      return dt2(e3) && Ye2.warn(lo({ api: "createImageMessage", param: "onProgress", desc: yo() })), true;
    } } }) }, createAudioMessage: { to: Lo, conversationType: Lo, payload: t2(t2({}, Go), {}, { validator: function(e3) {
      return !!ut2(e3) || (Ye2.warn(lo({ api: "createAudioMessage", param: "payload", desc: So() })), false);
    } }), onProgress: { type: "Function", required: false, validator: function(e3) {
      return dt2(e3) && Ye2.warn(lo({ api: "createAudioMessage", param: "onProgress", desc: yo() })), true;
    } } }, createVideoMessage: { to: Lo, conversationType: Lo, payload: t2(t2({}, Go), {}, { validator: function(e3) {
      if (!ut2(e3))
        return Ye2.warn(lo({ api: "createVideoMessage", param: "payload", desc: So() })), false;
      if (dt2(e3.file))
        return Ye2.warn(lo({ api: "createVideoMessage", param: "payload.file", desc: ho() })), false;
      if (de2) {
        if (!(e3.file instanceof HTMLInputElement || st2(e3.file)))
          return ut2(e3.file) && "undefined" != typeof index$1 ? !!st2(e3.file.tempFile) || (Ye2.warn(lo({ api: "createVideoMessage", param: "payload.file", desc: No() })), false) : (Ye2.warn(lo({ api: "createVideoMessage", param: "payload.file", desc: fo() })), false);
        if (e3.file instanceof HTMLInputElement && 0 === e3.file.files.length)
          return Ye2.warn(lo({ api: "createVideoMessage", param: "payload.file", desc: No() })), false;
      }
      return true;
    } }), onProgress: { type: "Function", required: false, validator: function(e3) {
      return dt2(e3) && Ye2.warn(lo({ api: "createVideoMessage", param: "onProgress", desc: yo() })), true;
    } } }, createFaceMessage: { to: Lo, conversationType: Lo, payload: t2(t2({}, Go), {}, { validator: function(e3) {
      return ut2(e3) ? rt2(e3.index) ? !!it2(e3.data) || (Ye2.warn(lo({ api: "createFaceMessage", param: "payload.data", desc: po() })), false) : (Ye2.warn(lo({ api: "createFaceMessage", param: "payload.index", desc: _o() })), false) : (Ye2.warn(lo({ api: "createFaceMessage", param: "payload", desc: So() })), false);
    } }) }, createFileMessage: { to: Lo, conversationType: Lo, payload: t2(t2({}, Go), {}, { validator: function(e3) {
      if (!ut2(e3))
        return Ye2.warn(lo({ api: "createFileMessage", param: "payload", desc: So() })), false;
      if (dt2(e3.file))
        return Ye2.warn(lo({ api: "createFileMessage", param: "payload.file", desc: ho() })), false;
      if (de2) {
        if (!(e3.file instanceof HTMLInputElement || st2(e3.file)))
          return ut2(e3.file) && "undefined" != typeof index$1 ? 0 !== e3.file.tempFilePaths.length && 0 !== e3.file.tempFiles.length || (Ye2.warn(lo({ api: "createFileMessage", param: "payload.file", desc: No() })), false) : (Ye2.warn(lo({ api: "createFileMessage", param: "payload.file", desc: fo() })), false);
        if (e3.file instanceof HTMLInputElement && 0 === e3.file.files.length)
          return Ye2.warn(lo({ api: "createFileMessage", param: "payload.file", desc: No() })), false;
      }
      return true;
    } }), onProgress: { type: "Function", required: false, validator: function(e3) {
      return dt2(e3) && Ye2.warn(lo({ api: "createFileMessage", param: "onProgress", desc: yo() })), true;
    } } }, createLocationMessage: { to: Lo, conversationType: Lo, payload: t2(t2({}, Go), {}, { validator: function(e3) {
      return ut2(e3) ? it2(e3.description) ? rt2(e3.longitude) ? !!rt2(e3.latitude) || (Ye2.warn(lo({ api: "createLocationMessage", param: "payload.latitude", desc: _o() })), false) : (Ye2.warn(lo({ api: "createLocationMessage", param: "payload.longitude", desc: _o() })), false) : (Ye2.warn(lo({ api: "createLocationMessage", param: "payload.description", desc: po() })), false) : (Ye2.warn(lo({ api: "createLocationMessage", param: "payload", desc: So() })), false);
    } }) }, createMergerMessage: { to: Lo, conversationType: Lo, payload: t2(t2({}, Go), {}, { validator: function(e3) {
      if (oo(e3.messageList))
        return Ye2.warn(lo({ api: "createMergerMessage", param: "payload.messageList", desc: Mo() })), false;
      if (oo(e3.compatibleText))
        return Ye2.warn(lo({ api: "createMergerMessage", param: "payload.compatibleText", desc: go("compatibleText") })), false;
      var t3 = false;
      return e3.messageList.forEach(function(e4) {
        e4.status === ro.FAIL && (t3 = true);
      }), !t3 || (Ye2.warn(lo({ api: "createMergerMessage", param: "payload.messageList", desc: co ? "Does not support combining messages that failed to sent" : "\u4E0D\u652F\u6301\u5408\u5E76\u5DF2\u53D1\u9001\u5931\u8D25\u7684\u6D88\u606F" })), false);
    } }) }, revokeMessage: [t2(t2({ name: "message" }, Go), {}, { validator: function(e3) {
      return oo(e3) ? (Ye2.warn(lo({ api: "revokeMessage", param: "message", desc: Ao() })), false) : e3.conversationType === D2.CONV_SYSTEM ? (Ye2.warn(lo({ api: "revokeMessage", param: "message", desc: co ? "Only one-to-one or group message can be recalled" : "\u4E0D\u652F\u6301\u64A4\u56DE\u7CFB\u7EDF\u4F1A\u8BDD\u6D88\u606F\uFF0C\u53EA\u652F\u6301\u64A4\u56DE\u5355\u804A\u6D88\u606F\u6216\u7FA4\u6D88\u606F" })), false) : true !== e3.isRevoked || (Ye2.warn(lo({ api: "revokeMessage", param: "message", desc: co ? "Message has been recalled" : "\u6D88\u606F\u5DF2\u7ECF\u88AB\u64A4\u56DE\uFF0C\u8BF7\u52FF\u91CD\u590D\u64CD\u4F5C" })), false);
    } })], deleteMessage: [t2(t2({ name: "messageList" }, Oo), {}, { validator: function(e3) {
      return !oo(e3) || (Ye2.warn(lo({ api: "deleteMessage", param: "messageList", desc: Mo() })), false);
    } })], translateText: { sourceTextList: Oo, sourceLanguage: Lo, targetLanguage: Lo }, modifyMessage: [t2(t2({ name: "message" }, Go), {}, { validator: function(e3) {
      return oo(e3) ? (Ye2.warn(lo({ api: "modifyMessage", param: "message", desc: Ao() })), false) : e3.conversationType === D2.CONV_SYSTEM ? (Ye2.warn(lo({ api: "modifyMessage", param: "message", desc: co ? "Only one-to-one or group message can be modified" : "\u4E0D\u652F\u6301\u4FEE\u6539\u7CFB\u7EDF\u4F1A\u8BDD\u6D88\u606F\uFF0C\u53EA\u652F\u6301\u4FEE\u6539\u5355\u804A\u6D88\u606F\u6216\u7FA4\u6D88\u606F" })), false) : true !== e3._onlineOnlyFlag || (Ye2.warn(lo({ api: "modifyMessage", param: "message", desc: co ? "Does not support modifying online message" : "\u4E0D\u652F\u6301\u4FEE\u6539\u5728\u7EBF\u6D88\u606F" })), false);
    } })], getUserProfile: { userIDList: { type: "Array", validator: function(e3) {
      return lt2(e3) ? (0 === e3.length && Ye2.warn(lo({ api: "getUserProfile", param: "userIDList", desc: Mo() })), true) : (Ye2.warn(lo({ api: "getUserProfile", param: "userIDList", desc: vo() })), false);
    } } }, updateMyProfile: { profileCustomField: { type: "Array", validator: function(e3) {
      return !!dt2(e3) || (!!lt2(e3) || (Ye2.warn(lo({ api: "updateMyProfile", param: "profileCustomField", desc: vo() })), false));
    } } }, setSelfStatus: { customStatus: { type: "String", validator: function(e3) {
      return !!it2(e3) || (Ye2.warn(lo({ api: "setSelfStatus", param: "customStatus", desc: po() })), false);
    } } }, getUserStatus: { userIDList: { type: "Array", validator: function(e3) {
      return lt2(e3) ? 0 !== e3.length || (Ye2.warn(lo({ api: "getUserStatus", param: "userIDList", desc: Mo() })), false) : (Ye2.warn(lo({ api: "getUserStatus", param: "userIDList", desc: vo() })), false);
    } } }, subscribeUserStatus: { userIDList: { type: "Array", validator: function(e3) {
      return lt2(e3) ? 0 !== e3.length || (Ye2.warn(lo({ api: "subscribeUserStatus", param: "userIDList", desc: Mo() })), false) : (Ye2.warn(lo({ api: "subscribeUserStatus", param: "userIDList", desc: vo() })), false);
    } } }, unsubscribeUserStatus: { userIDList: { type: "Array", validator: function(e3) {
      return !e3 || (!!lt2(e3) || (Ye2.warn(lo({ api: "subscribeUserStatus", param: "userIDList", desc: vo() })), false));
    } } }, addFriend: { to: Lo, source: { type: "String", required: true, validator: function(e3) {
      return !!e3 && (e3.startsWith("AddSource_Type_") ? !(e3.replace("AddSource_Type_", "").length > 8) || (Ye2.warn(lo({ api: "addFriend", param: "source", desc: Co("keyword", 8) })), false) : (Ye2.warn(lo({ api: "addFriend", param: "source", desc: co ? "The prefix of the source field is AddSource_Type_" : "\u524D\u7F00\u5FC5\u987B\u662F\uFF1AAddSource_Type_" })), false));
    } }, remark: { type: "String", required: false, validator: function(e3) {
      return !(it2(e3) && e3.length > 96) || (Ye2.warn(lo({ api: "addFriend", param: "remark", desc: Co("remark", 96) })), false);
    } } }, deleteFriend: { userIDList: Oo }, checkFriend: { userIDList: Oo }, getFriendProfile: { userIDList: Oo }, updateFriend: { userID: Lo, remark: { type: "String", required: false, validator: function(e3) {
      return !(it2(e3) && e3.length > 96) || (Ye2.warn(lo({ api: "updateFriend", param: "remark", desc: Co("remark", 96) })), false);
    } }, friendCustomField: { type: "Array", required: false, validator: function(e3) {
      if (e3) {
        if (!lt2(e3))
          return Ye2.warn(lo({ api: "updateFriend", param: "friendCustomField", desc: vo() })), false;
        var t3 = true;
        return e3.forEach(function(e4) {
          return it2(e4.key) && -1 !== e4.key.indexOf("Tag_SNS_Custom") ? it2(e4.value) ? e4.key.replace("Tag_SNS_Custom_", "").length > 8 ? (Ye2.warn(lo({ api: "updateFriend", param: "friendCustomField", desc: Co("keyword", 8) })), t3 = false) : void 0 : (Ye2.warn(lo({ api: "updateFriend", param: "friendCustomField", desc: Eo("value") })), t3 = false) : (Ye2.warn(lo({ api: "updateFriend", param: "friendCustomField", desc: co ? "The prefix of the friendCustomField is Tag_SNS_Custom" : "\u524D\u7F00\u5FC5\u987B\u662F Tag_SNS_Custom" })), t3 = false);
        }), t3;
      }
      return true;
    } } }, acceptFriendApplication: { userID: Lo }, refuseFriendApplication: { userID: Lo }, deleteFriendApplication: { userID: Lo }, createFriendGroup: { name: Lo }, deleteFriendGroup: { name: Lo }, addToFriendGroup: { name: Lo, userIDList: Oo }, removeFromFriendGroup: { name: Lo, userIDList: Oo }, renameFriendGroup: { oldName: Lo, newName: Lo }, sendMessageReadReceipt: [{ name: "messageList", type: "Array", validator: function(e3) {
      return lt2(e3) ? 0 !== e3.length || (Ye2.warn(lo({ api: "sendMessageReadReceipt", param: "messageList", desc: Mo() })), false) : (Ye2.warn(lo({ api: "sendMessageReadReceipt", param: "messageList", desc: vo() })), false);
    } }], getMessageReadReceiptList: [{ name: "messageList", type: "Array", validator: function(e3) {
      return lt2(e3) ? 0 !== e3.length || (Ye2.warn(lo({ api: "getMessageReadReceiptList", param: "messageList", desc: Mo() })), false) : (Ye2.warn(lo({ api: "getMessageReadReceiptList", param: "messageList", desc: vo() })), false);
    } }], createTopicInCommunity: { groupID: Lo, topicName: Lo }, deleteTopicFromCommunity: { groupID: Lo, topicIDList: { type: "Array", validator: function(e3) {
      return !e3 || (!!lt2(e3) || (Ye2.warn(lo({ api: "deleteTopicFromCommunity", param: "topicIDList", desc: vo() })), false));
    } } }, updateTopicProfile: { groupID: Lo, topicID: Lo }, getTopicList: { groupID: Lo, topicIDList: { type: "Array", validator: function(e3) {
      return !e3 || (!!lt2(e3) || (Ye2.warn(lo({ api: "getTopicList", param: "topicIDList", desc: vo() })), false));
    } } } }, wo = { login: "login", logout: "logout", on: "on", once: "once", off: "off", setLogLevel: "setLogLevel", registerPlugin: "registerPlugin", destroy: "destroy", createTextMessage: "createTextMessage", createTextAtMessage: "createTextAtMessage", createImageMessage: "createImageMessage", createAudioMessage: "createAudioMessage", createVideoMessage: "createVideoMessage", createCustomMessage: "createCustomMessage", createFaceMessage: "createFaceMessage", createFileMessage: "createFileMessage", createLocationMessage: "createLocationMessage", createMergerMessage: "createMergerMessage", downloadMergerMessage: "downloadMergerMessage", createForwardMessage: "createForwardMessage", sendMessage: "sendMessage", resendMessage: "resendMessage", revokeMessage: "revokeMessage", deleteMessage: "deleteMessage", translateText: "translateText", modifyMessage: "modifyMessage", sendMessageReadReceipt: "sendMessageReadReceipt", getGroupMessageReadMemberList: "getGroupMessageReadMemberList", getMessageReadReceiptList: "getMessageReadReceiptList", setMessageExtensions: "setMessageExtensions", getMessageExtensions: "getMessageExtensions", deleteMessageExtensions: "deleteMessageExtensions", getMessageList: "getMessageList", findMessage: "findMessage", getMessageListHopping: "getMessageListHopping", setMessageRead: "setMessageRead", setAllMessageRead: "setAllMessageRead", getConversationList: "getConversationList", getConversationProfile: "getConversationProfile", deleteConversation: "deleteConversation", pinConversation: "pinConversation", getTotalUnreadMessageCount: "getTotalUnreadMessageCount", setConversationCustomData: "setConversationCustomData", markConversation: "markConversation", createConversationGroup: "createConversationGroup", getConversationGroupList: "getConversationGroupList", deleteConversationGroup: "deleteConversationGroup", renameConversationGroup: "renameConversationGroup", addConversationsToGroup: "addConversationsToGroup", deleteConversationsFromGroup: "deleteConversationsFromGroup", clearHistoryMessage: "clearHistoryMessage", getGroupList: "getGroupList", getGroupProfile: "getGroupProfile", createGroup: "createGroup", joinGroup: "joinGroup", updateGroupProfile: "updateGroupProfile", quitGroup: "quitGroup", dismissGroup: "dismissGroup", changeGroupOwner: "changeGroupOwner", searchGroupByID: "searchGroupByID", setMessageRemindType: "setMessageRemindType", getGroupApplicationList: "getGroupApplicationList", handleGroupApplication: "handleGroupApplication", initGroupAttributes: "initGroupAttributes", setGroupAttributes: "setGroupAttributes", deleteGroupAttributes: "deleteGroupAttributes", getGroupAttributes: "getGroupAttributes", setGroupCounters: "setGroupCounters", increaseGroupCounter: "increaseGroupCounter", decreaseGroupCounter: "decreaseGroupCounter", getGroupCounters: "getGroupCounters", getJoinedCommunityList: "getJoinedCommunityList", createTopicInCommunity: "createTopicInCommunity", deleteTopicFromCommunity: "deleteTopicFromCommunity", updateTopicProfile: "updateTopicProfile", getTopicList: "getTopicList", getGroupMemberProfile: "getGroupMemberProfile", getGroupMemberList: "getGroupMemberList", addGroupMember: "addGroupMember", deleteGroupMember: "deleteGroupMember", setGroupMemberNameCard: "setGroupMemberNameCard", setGroupMemberMuteTime: "setGroupMemberMuteTime", setGroupMemberRole: "setGroupMemberRole", setGroupMemberCustomField: "setGroupMemberCustomField", getGroupOnlineMemberCount: "getGroupOnlineMemberCount", markGroupMemberList: "markGroupMemberList", getMyProfile: "getMyProfile", getUserProfile: "getUserProfile", updateMyProfile: "updateMyProfile", setSelfStatus: "setSelfStatus", getUserStatus: "getUserStatus", subscribeUserStatus: "subscribeUserStatus", unsubscribeUserStatus: "unsubscribeUserStatus", getBlacklist: "getBlacklist", addToBlacklist: "addToBlacklist", removeFromBlacklist: "removeFromBlacklist", getFriendList: "getFriendList", addFriend: "addFriend", deleteFriend: "deleteFriend", checkFriend: "checkFriend", updateFriend: "updateFriend", getFriendProfile: "getFriendProfile", getFriendApplicationList: "getFriendApplicationList", refuseFriendApplication: "refuseFriendApplication", deleteFriendApplication: "deleteFriendApplication", acceptFriendApplication: "acceptFriendApplication", setFriendApplicationRead: "setFriendApplicationRead", getFriendGroupList: "getFriendGroupList", createFriendGroup: "createFriendGroup", renameFriendGroup: "renameFriendGroup", deleteFriendGroup: "deleteFriendGroup", addToFriendGroup: "addToFriendGroup", removeFromFriendGroup: "removeFromFriendGroup", callExperimentalAPI: "callExperimentalAPI" }, Fo = "sign", qo = "message", xo = "messageExtension", Vo = "user", Bo = "c2c", Ko = "group", Ho = "sns", Wo = "groupMember", Yo = "Topic", jo = "conversation", $o = "context", zo = "storage", Jo = "eventStat", Xo = "netMonitor", Qo = "bigDataChannel", Zo = "upload", en = "plugin", tn = "syncUnreadMessage", on = "session", nn = "channel", an = "message_loss_detection", sn = "cloudControl", rn = "workerTimer", cn = "recoverMessage", un = "qualityStat", ln = "commercialConfig", dn = "offlinePush", pn2 = "profanityFilter", gn = "transCmd", _n = "comboMessage", hn = { NO_SDKAPPID: 2e3, NO_ACCOUNT_TYPE: 2001, NO_IDENTIFIER: 2002, NO_USERSIG: 2003, NO_TINYID: 2022, NO_A2KEY: 2023, USER_NOT_LOGGED_IN: 2024, REPEAT_LOGIN: 2025, COS_UNDETECTED: 2040, COS_GET_SIG_FAIL: 2041, MESSAGE_SEND_FAIL: 2100, MESSAGE_SEND_FAIL_NOT_IN_AVCHATROOM: 2101, MESSAGE_SEND_NEED_MESSAGE_INSTANCE: 2105, MESSAGE_SEND_INVALID_CONVERSATION_TYPE: 2106, MESSAGE_FILE_IS_EMPTY: 2108, MESSAGE_ONPROGRESS_FUNCTION_ERROR: 2109, MESSAGE_REVOKE_FAIL: 2110, MESSAGE_DELETE_FAIL: 2111, MESSAGE_UNREAD_ALL_FAIL: 2112, READ_RECEIPT_MESSAGE_LIST_EMPTY: 2114, MESSAGE_SEND_GROUP_WITH_TOPIC_FAIL: 2115, CANNOT_DELETE_GROUP_SYSTEM_NOTICE: 2116, TRANSLATE_TEXT_FAIL: 2117, MESSAGE_IMAGE_SELECT_FILE_FIRST: 2251, MESSAGE_IMAGE_TYPES_LIMIT: 2252, MESSAGE_IMAGE_SIZE_LIMIT: 2253, MESSAGE_AUDIO_UPLOAD_FAIL: 2300, MESSAGE_AUDIO_SIZE_LIMIT: 2301, MESSAGE_VIDEO_UPLOAD_FAIL: 2350, MESSAGE_VIDEO_SIZE_LIMIT: 2351, MESSAGE_VIDEO_TYPES_LIMIT: 2352, MESSAGE_FILE_UPLOAD_FAIL: 2400, MESSAGE_FILE_SELECT_FILE_FIRST: 2401, MESSAGE_FILE_SIZE_LIMIT: 2402, MESSAGE_FILE_URL_IS_EMPTY: 2403, MESSAGE_MERGER_TYPE_INVALID: 2450, MESSAGE_MERGER_KEY_INVALID: 2451, MESSAGE_MERGER_DOWNLOAD_FAIL: 2452, MESSAGE_FORWARD_TYPE_INVALID: 2453, MESSAGE_MODIFY_CONFLICT: 2480, MESSAGE_MODIFY_DISABLED_IN_AVCHATROOM: 2481, CONVERSATION_NOT_FOUND: 2500, USER_OR_GROUP_NOT_FOUND: 2501, CONVERSATION_UN_RECORDED_TYPE: 2502, INVALID_CONVERSATION_ID: 2503, ILLEGAL_GROUP_TYPE: 2600, CANNOT_JOIN_WORK: 2601, ILLEGAL_GROUP_ID: 2602, CANNOT_FIND_GROUP: 2603, CANNOT_CHANGE_OWNER_IN_AVCHATROOM: 2620, CANNOT_CHANGE_OWNER_TO_SELF: 2621, CANNOT_DISMISS_WORK: 2622, MEMBER_NOT_IN_GROUP: 2623, JOIN_GROUP_FAIL: 2660, CANNOT_ADD_MEMBER_IN_AVCHATROOM: 2661, CANNOT_JOIN_NON_AVCHATROOM_WITHOUT_LOGIN: 2662, NOT_OWNER: 2681, CANNOT_SET_MEMBER_ROLE_IN_WORK_AND_AVCHATROOM: 2682, INVALID_MEMBER_ROLE: 2683, CANNOT_SET_SELF_MEMBER_ROLE: 2684, CANNOT_MUTE_SELF: 2685, BAN_DURATION_INVALID: 2686, NOT_MY_FRIEND: 2700, ALREADY_MY_FRIEND: 2701, FRIEND_GROUP_EXISTED: 2710, FRIEND_GROUP_NOT_EXIST: 2711, FRIEND_APPLICATION_NOT_EXIST: 2716, UPDATE_PROFILE_INVALID_PARAM: 2721, UPDATE_PROFILE_NO_KEY: 2722, CANNOT_ADD_SELF_TO_BLACKLIST: 2742, NETWORK_ERROR: 2800, NETWORK_TIMEOUT: 2801, NO_NETWORK: 2805, UNCAUGHT_ERROR: 2903, INVALID_OPERATION: 2905, OVER_FREQUENCY_LIMIT: 2996, CANNOT_FIND_PROTOCOL: 2997, CANNOT_FIND_MODULE: 2998, SDK_IS_NOT_READY: 2999, LOGGING_IN: 3e3, LOGIN_FAILED: 3001, KICKED_OUT_MULT_DEVICE: 3002, KICKED_OUT_MULT_ACCOUNT: 3003, KICKED_OUT_USERSIG_EXPIRED: 3004, LOGGED_OUT: 3005, KICKED_OUT_REST_API: 3006, ILLEGAL_TOPIC_ID: 3021, CANNOT_USE_COMMERCIAL_ABILITY: 3122, PROFANITY_FOUND: 3123, MESSAGE_A2KEY_EXPIRED: 20002, ACCOUNT_A2KEY_EXPIRED: 70001, HELLO_ANSWER_KICKED_OUT: 1002, OPEN_SERVICE_OVERLOAD_ERROR: 60022 }, fn2 = { 2e3: "\u65E0 SDKAppID", 2022: "\u65E0 tinyID", 2023: "\u65E0 a2key", 2024: "\u7528\u6237\u672A\u767B\u5F55", 2025: "\u91CD\u590D\u767B\u5F55", 2040: "\u672A\u68C0\u6D4B\u5230\u4E0A\u4F20\u63D2\u4EF6", 2041: "\u83B7\u53D6 COS \u9884\u7B7E\u540D URL \u5931\u8D25", 2100: "\u6D88\u606F\u53D1\u9001\u5931\u8D25", 2101: "\u672A\u52A0\u5165\u76F4\u64AD\u7FA4\u4E0D\u80FD\u5411\u76F4\u64AD\u7FA4\u53D1\u9001\u6D88\u606F", 2105: "\u9700\u8981 Message \u7684\u5B9E\u4F8B", 2106: 'Message.conversationType \u53EA\u80FD\u4E3A "C2C" \u6216 "GROUP"', 2108: "\u65E0\u6CD5\u53D1\u9001\u7A7A\u6587\u4EF6", 2109: "\u56DE\u8C03\u51FD\u6570\u8FD0\u884C\u65F6\u9047\u5230\u9519\u8BEF\uFF0C\u8BF7\u68C0\u67E5\u63A5\u5165\u4FA7\u4EE3\u7801", 2110: "\u6D88\u606F\u64A4\u56DE\u5931\u8D25", 2111: "\u6D88\u606F\u5220\u9664\u5931\u8D25", 2112: "\u8BBE\u7F6E\u6240\u6709\u672A\u8BFB\u6D88\u606F\u4E3A\u5DF2\u8BFB\u5904\u7406\u5931\u8D25", 2114: "\u6D88\u606F\u5217\u8868\u4E2D\u6CA1\u6709\u9700\u8981\u53D1\u9001\u5DF2\u8BFB\u56DE\u6267\u7684\u6D88\u606F", 2115: "\u4E0D\u80FD\u5728\u652F\u6301\u8BDD\u9898\u7684\u7FA4\u7EC4\u4E2D\u53D1\u6D88\u606F\uFF0C\u8BF7\u68C0\u67E5\u7FA4\u7EC4 isSupportTopic \u5C5E\u6027", 2116: "\u4E0D\u652F\u6301\u5220\u9664\u7FA4\u7CFB\u7EDF\u901A\u77E5", 2117: "\u7FFB\u8BD1\u6587\u672C\u5931\u8D25", 2251: "\u8BF7\u5148\u9009\u62E9\u4E00\u5F20\u56FE\u7247", 2252: "\u53EA\u5141\u8BB8\u4E0A\u4F20 jpg png jpeg gif bmp image webp \u683C\u5F0F\u7684\u56FE\u7247", 2253: "\u56FE\u7247\u5927\u5C0F\u8D85\u8FC720M\uFF0C\u65E0\u6CD5\u53D1\u9001", 2300: "\u8BED\u97F3\u4E0A\u4F20\u5931\u8D25", 2301: "\u8BED\u97F3\u5927\u5C0F\u8D85\u8FC720M\uFF0C\u65E0\u6CD5\u53D1\u9001", 2350: "\u89C6\u9891\u4E0A\u4F20\u5931\u8D25", 2351: "\u89C6\u9891\u5927\u5C0F\u8D85\u8FC7100M\uFF0C\u65E0\u6CD5\u53D1\u9001", 2352: "\u53EA\u5141\u8BB8\u4E0A\u4F20 mp4/mov \u683C\u5F0F\u7684\u89C6\u9891", 2400: "\u6587\u4EF6\u4E0A\u4F20\u5931\u8D25", 2401: "\u8BF7\u5148\u9009\u62E9\u4E00\u4E2A\u6587\u4EF6", 2402: "\u6587\u4EF6\u5927\u5C0F\u8D85\u8FC7100M\uFF0C\u65E0\u6CD5\u53D1\u9001", 2403: "\u7F3A\u5C11\u5FC5\u8981\u7684\u53C2\u6570\u6587\u4EF6 URL", 2450: "\u975E\u5408\u5E76\u6D88\u606F", 2451: "\u5408\u5E76\u6D88\u606F\u7684 messageKey \u65E0\u6548", 2452: "\u4E0B\u8F7D\u5408\u5E76\u6D88\u606F\u5931\u8D25", 2453: "\u9009\u62E9\u7684\u6D88\u606F\u7C7B\u578B\uFF08\u5982\u7FA4\u63D0\u793A\u6D88\u606F\uFF09\u4E0D\u53EF\u4EE5\u8F6C\u53D1", 2480: "\u4FEE\u6539\u6D88\u606F\u65F6\u53D1\u751F\u51B2\u7A81", 2481: "\u76F4\u64AD\u7FA4\u4E0D\u652F\u6301\u4FEE\u6539\u6D88\u606F", 2500: "\u6CA1\u6709\u627E\u5230\u76F8\u5E94\u7684\u4F1A\u8BDD\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u53C2\u6570", 2501: "\u6CA1\u6709\u627E\u5230\u76F8\u5E94\u7684\u7528\u6237\u6216\u7FA4\u4E3B\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u53C2\u6570", 2502: "\u672A\u8BB0\u5F55\u7684\u4F1A\u8BDD\u7C7B\u578B", 2503: "\u65E0\u6548\u7684\u4F1A\u8BDD ID", 2600: "\u975E\u6CD5\u7684\u7FA4\u7C7B\u578B\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u53C2\u6570", 2601: "\u4E0D\u80FD\u52A0\u5165 Work \u7C7B\u578B\u7684\u7FA4\u7EC4", 2602: "\u7FA4\u7EC4 ID \u975E\u6CD5", 2603: "\u627E\u4E0D\u5230\u6307\u5B9A ID \u7684\u7FA4\u7EC4", 2620: "AVChatRoom \u7C7B\u578B\u7684\u7FA4\u7EC4\u4E0D\u80FD\u8F6C\u8BA9\u7FA4\u4E3B", 2621: "\u4E0D\u80FD\u628A\u7FA4\u4E3B\u8F6C\u8BA9\u7ED9\u81EA\u5DF1", 2622: "\u4E0D\u80FD\u89E3\u6563 Work \u7C7B\u578B\u7684\u7FA4\u7EC4", 2623: "\u7528\u6237\u4E0D\u5728\u8BE5\u7FA4\u7EC4\u5185", 2660: "\u52A0\u7FA4\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u53C2\u6570\u6216\u91CD\u8BD5", 2661: "AVChatRoom \u7C7B\u578B\u7684\u7FA4\u4E0D\u652F\u6301\u9080\u8BF7\u7FA4\u6210\u5458", 2662: "\u975E AVChatRoom \u7C7B\u578B\u7684\u7FA4\u7EC4\u4E0D\u5141\u8BB8\u533F\u540D\u52A0\u7FA4\uFF0C\u8BF7\u5148\u767B\u5F55\u540E\u518D\u52A0\u7FA4", 2681: "\u4F60\u4E0D\u662F\u7FA4\u4E3B\uFF0C\u53EA\u6709\u7FA4\u4E3B\u624D\u6709\u6743\u9650\u64CD\u4F5C", 2682: "\u4E0D\u80FD\u5728 Work / AVChatRoom \u7C7B\u578B\u7684\u7FA4\u4E2D\u8BBE\u7F6E\u7FA4\u6210\u5458\u8EAB\u4EFD", 2683: "\u4E0D\u5408\u6CD5\u7684\u7FA4\u6210\u5458\u8EAB\u4EFD\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u53C2\u6570", 2684: "\u4E0D\u80FD\u8BBE\u7F6E\u81EA\u5DF1\u7684\u7FA4\u6210\u5458\u8EAB\u4EFD\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u53C2\u6570", 2685: "\u4E0D\u80FD\u5C06\u81EA\u5DF1\u7981\u8A00\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u53C2\u6570", 2686: "\u5C01\u7981\u65F6\u957F\u65E0\u6548\uFF0C\u5FC5\u987B\u4F20\u5165 duration \u53C2\u6570\u4E14\u8981\u5927\u4E8E 0", 2700: "\u6307\u5B9A\u7684 userID \u4E0D\u662F\u6211\u7684\u597D\u53CB\u6548", 2701: "\u5DF2\u7ECF\u662F\u597D\u53CB\u5173\u7CFB", 2710: "\u597D\u53CB\u5206\u7EC4\u5DF2\u7ECF\u5B58\u5728", 2711: "\u597D\u53CB\u5206\u7EC4\u4E0D\u5B58\u5728", 2716: "\u597D\u53CB\u7533\u8BF7\u4E0D\u5B58\u5728", 2721: "\u4F20\u5165 updateMyProfile \u63A5\u53E3\u7684\u53C2\u6570\u65E0\u6548", 2722: "updateMyProfile \u65E0\u6807\u914D\u8D44\u6599\u5B57\u6BB5\u6216\u81EA\u5B9A\u4E49\u8D44\u6599\u5B57\u6BB5", 2742: "\u4E0D\u80FD\u62C9\u9ED1\u81EA\u5DF1", 2800: "\u7F51\u7EDC\u9519\u8BEF", 2801: "\u8BF7\u6C42\u8D85\u65F6", 2805: "\u672A\u8FDE\u63A5\u5230\u7F51\u7EDC", 2903: "\u672A\u7ECF\u660E\u786E\u5B9A\u4E49\u7684\u9519\u8BEF", 2905: "\u65E0\u6548\u64CD\u4F5C\uFF0C\u5982\u8C03\u7528\u4E86\u672A\u5B9A\u4E49\u6216\u8005\u672A\u5B9E\u73B0\u7684\u65B9\u6CD5\u7B49", 2996: "\u8D85\u51FA SDK \u9891\u7387\u63A7\u5236", 2997: "\u65E0\u6CD5\u627E\u5230\u534F\u8BAE", 2998: "\u65E0\u6CD5\u627E\u5230\u6A21\u5757\uFF0C\u5173\u7CFB\u94FE\u4F7F\u7528\u6307\u5F15\uFF1Ahttps://web.sdk.qcloud.com/im/doc/zh-cn/tutorial-03-sns.html", 2999: "\u63A5\u53E3\u8C03\u7528\u65F6\u673A\u4E0D\u5408\u7406\uFF0C\u8BF7\u7B49\u5F85 SDK \u5904\u4E8E ready \u72B6\u6001\u540E\u518D\u8C03\u7528\uFF08\u76D1\u542C TIM.EVENT.SDK_READY \u4E8B\u4EF6\uFF09", 3e3: "\u7528\u6237\u6B63\u5728\u767B\u5F55\u4E2D\u5BFC\u81F4 sdk not ready", 3001: "\u7528\u6237\u767B\u5F55\u5931\u8D25\u5BFC\u81F4 sdk not ready", 3002: "\u7528\u6237\u591A\u7EC8\u7AEF\u767B\u5F55\u88AB\u8E22\u51FA\u5BFC\u81F4 sdk not ready", 3003: "\u7528\u6237\u591A\u5B9E\u4F8B\u767B\u5F55\u88AB\u8E22\u51FA\u5BFC\u81F4 sdk not ready", 3004: "\u7528\u6237 userSig \u8FC7\u671F\u88AB\u8E22\u51FA\u5BFC\u81F4 sdk not ready", 3005: "\u7528\u6237\u5DF2\u767B\u51FA\u5BFC\u81F4 sdk not ready", 3006: "\u7528\u6237\u88AB REST API \u8E22\u51FA\u5BFC\u81F4 sdk not ready", 3021: "\u975E\u6CD5\u7684 topicID", 3122: "\u5957\u9910\u5305\u4E0D\u652F\u6301\u8BE5\u63A5\u53E3\u7684\u4F7F\u7528\uFF0C\u8BF7\u5347\u7EA7\u5230\u65D7\u8230\u7248\u5957\u9910", 3123: "\u6587\u672C\u5305\u542B\u672C\u5730\u5BA1\u6838\u62E6\u622A\u8BCD", 60022: "\u540E\u53F0\u670D\u52A1\u6B63\u5FD9\uFF0C\u8BF7\u7A0D\u540E\u518D\u8BD5" }, mn = { 2e3: "No SDKAppID", 2022: "No tinyID", 2023: "No a2key", 2024: "The user has not logged in", 2025: "Repeated login", 2040: "No upload plugin is detected", 2041: "Failed to get cos presig url", 2100: "Failed to send the message", 2101: "Failed to send the message to an audio-video group due to not joining it", 2105: "A message instance is required", 2106: 'Message.conversationType can only be "C2C" or "GROUP"', 2108: "An empty file cannot be sent", 2109: "An error occurred while running the callback function. Please check the code on the access side", 2110: "Failed to recall the message", 2111: "Failed to delete the message", 2112: "Failed to set all messages as read", 2114: "No messages in the message list that require a read receipt", 2115: "Message cannot be sent to Community that supports Topic, please check the isSupportTopic property of Community", 2116: "Group system notification cannot be deleted", 2117: "Failed to translate the text", 2251: "Please select an image first", 2252: "Only JPG/PNG/JPEG/GIF images can be uploaded", 2253: "Unable to send the image as it exceeds 20 MB", 2300: "Failed to upload the audio", 2301: "Unable to send the audio as it exceeds 20 MB", 2350: "Failed to upload the video", 2351: "Unable to send the video as it exceeds 100 MB", 2352: "Only MP4 videos can be uploaded", 2400: "File upload failed", 2401: "Please select a file first", 2402: "Unable to send the file as it exceeds 100 MB", 2403: "The required parameter file URL is missing", 2450: "Non-combined message", 2451: "Invalid messageKey of the combined message", 2452: "Failed to download the combined message", 2453: "The selected message type (such as group notification) does not support forwarding", 2480: "Conflict occurred while modifying message", 2481: "Audio-video group does not support modifying messages", 2500: "The corresponding conversation is not found. Please check the input parameters", 2501: "The corresponding user or group owner is not found. Please check the input parameters", 2502: "Unrecorded conversation type", 2503: "Invalid conversationID", 2600: "Invalid group type. Please check the input parameters", 2601: "Unable to join a work group", 2602: "Invalid groupID", 2603: "The group with the given id could not be found", 2620: "The group owner of an audio-video group cannot be changed", 2621: "You cannot change the group owner to yourself", 2622: "A work group cannot be disbanded", 2623: "The user is not in the group", 2660: "Failed to join the group. Please check the input parameters and try again", 2661: "Audio-video groups do not support inviting group members", 2662: "Non Audio-video groups do not allow anonymous joining. Please log in before you join the group", 2681: "You are not the group owner. Only the group owner has the permission to perform the operation", 2682: "You cannot set the group member role in a Work or Audio-video group", 2683: "Invalid group member role. Please check the input parameters", 2684: "You cannot set the group member role for yourself. Please check the input parameters", 2685: "You cannot mute yourself. Please check the input parameters", 2686: "Ban duration must be greater than 0", 2700: "The specified userID is not my friend", 2701: "The specified userID is my friend already", 2710: "The Friend group already exists", 2711: "The Friend group does not exist", 2716: "The Friend application does not exist", 2721: "Invalid parameter passed in to the updateMyProfile API", 2722: "updateMyProfile does not contain standard or custom profile fields", 2742: "You cannot blacklist yourself", 2800: "Network error", 2801: "Request timeout", 2805: "Network disconnected", 2903: "Undefined error", 2905: "Invalid operation, such as calling an undefined or unimplemented method", 2996: "Frequency control limit exceeded", 2997: "Protocol not found", 2998: "Module not found", 2999: "The API call timing is inappropriate. Call the API until the SDK is ready (listening for the TIM.EVENT.SDK_READY event)", 3e3: "SDK not ready because the user is Logging in", 3001: "SDK not ready because the user login failed", 3002: "SDK not ready because the user is kicked offline(the same account logs in from multiple pages on the web client)", 3003: "SDK not ready because the user is kicked offline(the same account logs in from multiple terminals)", 3004: "SDK not ready because the user is kicked offline(the signature expires)", 3005: "SDK not ready because the user is logged out ", 3006: "SDK not ready because the user is kicked offline by REST API", 3021: "Invalid topicID", 3122: "Please upgrade to the ultimate version", 3123: "Blocked due to filtering profanity", 60022: "Service is busy, please try again later" }, vn = function() {
      function e3(t3) {
        n2(this, e3), this._moduleManager = t3, this._className = "";
      }
      return s2(e3, [{ key: "isLoggedIn", value: function() {
        return this._moduleManager.getModule($o).isLoggedIn();
      } }, { key: "isOversea", value: function() {
        return this._moduleManager.getModule($o).isOversea();
      } }, { key: "isPrivateNetWork", value: function() {
        return this._moduleManager.getModule($o).isPrivateNetWork();
      } }, { key: "getMyUserID", value: function() {
        return this._moduleManager.getModule($o).getUserID();
      } }, { key: "getMyTinyID", value: function() {
        return this._moduleManager.getModule($o).getTinyID();
      } }, { key: "getSDKAppID", value: function() {
        return this._moduleManager.getModule($o).getSDKAppID();
      } }, { key: "isIntl", value: function() {
        return this._moduleManager.getModule($o).isIntl();
      } }, { key: "isDevMode", value: function() {
        return this._moduleManager.getModule($o).isDevMode();
      } }, { key: "getModule", value: function(e4) {
        return this._moduleManager.getModule(e4);
      } }, { key: "getPlatform", value: function() {
        return ge2;
      } }, { key: "getNetworkType", value: function() {
        return this._moduleManager.getModule(Xo).getNetworkType();
      } }, { key: "probeNetwork", value: function(e4) {
        return this._moduleManager.getModule(Xo).probe(e4);
      } }, { key: "getCloudConfig", value: function(e4) {
        return this._moduleManager.getModule(sn).getCloudConfig(e4);
      } }, { key: "emitOuterEvent", value: function(e4, t3) {
        this._moduleManager.getOuterEmitterInstance().emit(e4, t3);
      } }, { key: "emitInnerEvent", value: function(e4, t3) {
        this._moduleManager.getInnerEmitterInstance().emit(e4, t3);
      } }, { key: "getInnerEmitterInstance", value: function() {
        return this._moduleManager.getInnerEmitterInstance();
      } }, { key: "generateTjgID", value: function(e4) {
        return this._moduleManager.getModule($o).getTinyID() + "-" + e4.random;
      } }, { key: "filterModifiedMessage", value: function(e4) {
        if (!oo(e4)) {
          var t3 = e4.filter(function(e5) {
            return true === e5.isModified;
          });
          t3.length > 0 && this.emitOuterEvent(S2.MESSAGE_MODIFIED, t3);
        }
      } }, { key: "filterUnmodifiedMessage", value: function(e4) {
        return oo(e4) ? [] : e4.filter(function(e5) {
          return false === e5.isModified;
        });
      } }, { key: "request", value: function(e4) {
        return this._moduleManager.getModule(on).request(e4);
      } }, { key: "canIUse", value: function(e4) {
        return this._moduleManager.getModule(ln).canIUse(e4);
      } }, { key: "getErrorMessage", value: function(e4) {
        return this.isIntl() ? mn[e4] : fn2[e4];
      } }]), e3;
    }(), Mn2 = "wslogin", yn2 = "wslogout", In = "wshello", Cn2 = "KickOther", Tn2 = "getmsg", En2 = "authkey", Sn = "sendmsg", Dn2 = "send_group_msg", Nn2 = "portrait_get_all", An2 = "portrait_set", kn = "black_list_get", Rn2 = "black_list_add", Ln2 = "black_list_delete", On2 = "msgwithdraw", Gn2 = "msgreaded", Pn2 = "set_c2c_peer_mute_notifications", Un2 = "get_c2c_peer_mute_notifications", bn2 = "getroammsg", wn2 = "get_peer_read_time", Fn2 = "delete_c2c_msg_ramble", qn2 = "modify_c2c_msg", xn2 = "set_key_values", Vn2 = "get_key_values", Bn2 = "page_get", Kn2 = "get", Hn2 = "delete", Wn2 = "clear_msg", Yn2 = "top", jn2 = "deletemsg", $n2 = "set_conv_custom_data", zn2 = "mark_contact", Jn2 = "create_contact_group", Xn2 = "del_contact_group", Qn2 = "update_contact_group", Zn2 = "add_conv_to_group", ea = "del_conv_from_group", ta = "get_contact_group", oa = "get_joined_group_list", na = "get_group_self_member_info", aa = "create_group", sa = "destroy_group", ra = "modify_group_base_info", ia = "apply_join_group", ca = "apply_join_group_noauth", ua = "quit_group", la = "get_group_public_info", da = "change_group_owner", pa = "handle_apply_join_group", ga = "handle_invite_join_group", _a2 = "group_msg_recall", ha = "msg_read_report", fa = "read_all_unread_msg", ma = "group_msg_get", va = "get_group_msg_receipt", Ma = "group_msg_receipt", ya = "c2c_msg_read_receipt", Ia = "get_group_msg_receipt_detail", Ca = "get_pendency", Ta = "deletemsg", Ea = "get_msg", Sa = "get_msg_noauth", Da = "get_online_member_num", Na = "delete_group_ramble_msg_by_seq", Aa = "modify_group_msg", ka = "set_group_attr", Ra = "modify_group_attr", La = "delete_group_attr", Oa = "clear_group_attr", Ga = "get_group_attr", Pa = "group_set_key_values", Ua = "group_get_key_values", ba = "get_group_notify", wa = "update_group_counter", Fa = "get_group_counter", qa = "get_group_member_info", xa = "get_members", Va = "get_specified_group_member_info", Ba = "add_group_member", Ka = "delete_group_member", Ha = "ban_group_member", Wa = "modify_group_member_info", Ya = "modify_user_info", ja = "cos", $a = "pre_sig", za = "video_cover", Ja = "tim_web_report_v2", Xa = "alive", Qa = "msg_push", Za = "multi_msg_push_ws", es2 = "ws_msg_push_ack", ts2 = "stat_forceoffline", os2 = "save_relay_json_msg", ns2 = "get_relay_json_msg", as2 = "fetch_config", ss2 = "push_configv2", rs2 = "fetch_imsdk_purchase_bitsv2", is2 = "push_imsdk_purchase_bitsv2", cs2 = "notify2", us2 = "create_topic", ls2 = "destroy_topic", ds2 = "modify_topic", ps2 = "get_topic", gs2 = "ws_set_custom_status", _s2 = "ws_get_user_status", hs2 = "ws_status_subscribe", fs2 = "ws_status_unsubscribe", ms2 = "ws_stat_background", vs2 = "ws_stat_foreground", Ms = "ws_stat_settoken", ys2 = "get_local_words", Is2 = "ws_batch_trans_text", Cs2 = "networkRTT", Ts2 = "messageE2EDelay", Es2 = "sendMessageC2C", Ss2 = "sendMessageGroup", Ds = "sendMessageGroupAV", Ns = "sendMessageRichMedia", As2 = "cosUpload", ks2 = "messageReceivedGroup", Rs = "messageReceivedGroupAVPush", Ls = "messageReceivedGroupAVPull", Os = (r2(so = {}, Cs2, 2), r2(so, Ts2, 3), r2(so, Es2, 4), r2(so, Ss2, 5), r2(so, Ds, 6), r2(so, Ns, 7), r2(so, ks2, 8), r2(so, Rs, 9), r2(so, Ls, 10), r2(so, As2, 11), so), Gs = { info: 4, warning: 5, error: 6 }, Ps2 = { wifi: 1, "2g": 2, "3g": 3, "4g": 4, "5g": 5, unknown: 6, none: 7, online: 8 }, Us = { login: 4 }, bs2 = function() {
      function e3(t3) {
        n2(this, e3), this.eventType = Us[t3] || 0, this.timestamp = 0, this.networkType = 8, this.code = 0, this.message = "", this.moreMessage = "", this.extension = t3, this.costTime = 0, this.duplicate = false, this.level = 4, this.uiPlatform = void 0, this._sentFlag = false, this._startts = xe2();
      }
      return s2(e3, [{ key: "updateTimeStamp", value: function() {
        this.timestamp = xe2();
      } }, { key: "start", value: function(e4) {
        return this._startts = e4, this;
      } }, { key: "end", value: function() {
        var e4 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
        if (!this._sentFlag) {
          var o3 = xe2();
          0 === this.costTime && (this.costTime = o3 - this._startts), this.setMoreMessage("startts:".concat(this._startts, " endts:").concat(o3)), t3 ? (this._sentFlag = true, this._eventStatModule && this._eventStatModule.pushIn(this)) : setTimeout(function() {
            e4._sentFlag = true, e4._eventStatModule && e4._eventStatModule.pushIn(e4);
          }, 0);
        }
      } }, { key: "setError", value: function(e4, t3, o3) {
        if (!(e4 instanceof Error))
          return Ye2.warn("SSOLogData.setError value not instanceof Error, please check!"), this;
        if (this._sentFlag)
          return this;
        if (this.setNetworkType(o3), t3)
          e4.code && this.setCode(e4.code), e4.message && this.setMoreMessage(e4.message);
        else {
          var n3 = hn.NO_NETWORK;
          this.setCode(n3), this.setMoreMessage(mn[n3]);
        }
        return this.setLevel("error"), this;
      } }, { key: "setCode", value: function(e4) {
        return dt2(e4) || this._sentFlag || ("ECONNABORTED" === e4 && (this.code = 103), rt2(e4) ? this.code = e4 : Ye2.warn("SSOLogData.setCode value not a number, please check!", e4, o2(e4))), this;
      } }, { key: "setMessage", value: function(e4) {
        return dt2(e4) || this._sentFlag || (rt2(e4) && (this.message = e4.toString()), it2(e4) && (this.message = e4)), this;
      } }, { key: "setCostTime", value: function(e4) {
        return this.costTime = e4, this;
      } }, { key: "setLevel", value: function(e4) {
        return dt2(e4) || this._sentFlag || (this.level = Gs[e4]), this;
      } }, { key: "setMoreMessage", value: function(e4) {
        return oo(this.moreMessage) ? this.moreMessage = "".concat(e4) : this.moreMessage += " ".concat(e4), this;
      } }, { key: "setNetworkType", value: function(e4) {
        if (dt2(e4))
          Ye2.warn("SSOLogData.setNetworkType value is undefined, please check!");
        else {
          var t3 = Ps2[e4.toLowerCase()];
          dt2(t3) || (this.networkType = t3);
        }
        return this;
      } }, { key: "getStartTs", value: function() {
        return this._startts;
      } }, { key: "setUIPlatform", value: function(e4) {
        this.uiPlatform = e4;
      } }], [{ key: "bindEventStatModule", value: function(t3) {
        e3.prototype._eventStatModule = t3;
      } }]), e3;
    }(), ws2 = { SDK_CONSTRUCT: "sdkConstruct", SDK_READY: "sdkReady", LOGIN: "login", LOGOUT: "logout", KICKED_OUT: "kickedOut", REGISTER_PLUGIN: "registerPlugin", KICK_OTHER: "kickOther", WS_CONNECT: "wsConnect", WS_ON_OPEN: "wsOnOpen", WS_ON_CLOSE: "wsOnClose", WS_ON_ERROR: "wsOnError", NETWORK_CHANGE: "networkChange", GET_COS_AUTH_KEY: "getCosAuthKey", GET_COS_PRE_SIG_URL: "getCosPreSigUrl", GET_SNAPSHOT_INFO: "getSnapshotInfo", UPLOAD: "upload", SEND_MESSAGE: "sendMessage", SEND_MESSAGE_WITH_RECEIPT: "sendMessageWithReceipt", SEND_COMBO_MESSAGE: "sendComboMessage", GET_C2C_ROAMING_MESSAGES: "getC2CRoamingMessages", GET_GROUP_ROAMING_MESSAGES: "getGroupRoamingMessages", GET_C2C_ROAMING_MESSAGES_HOPPING: "getC2CRoamingMessagesHopping", GET_GROUP_ROAMING_MESSAGES_HOPPING: "getGroupRoamingMessagesHopping", GET_READ_RECEIPT: "getReadReceipt", GET_READ_RECEIPT_DETAIL: "getReadReceiptDetail", SEND_READ_RECEIPT: "sendReadReceipt", SEND_C2C_READ_RECEIPT: "sendC2CReadReceipt", REVOKE_MESSAGE: "revokeMessage", DELETE_MESSAGE: "deleteMessage", MODIFY_MESSAGE: "modifyMessage", TRANSLATE_TEXT: "translateText", SET_C2C_MESSAGE_READ: "setC2CMessageRead", SET_GROUP_MESSAGE_READ: "setGroupMessageRead", EMPTY_MESSAGE_BODY: "emptyMessageBody", GET_PEER_READ_TIME: "getPeerReadTime", UPLOAD_MERGER_MESSAGE: "uploadMergerMessage", DOWNLOAD_MERGER_MESSAGE: "downloadMergerMessage", JSON_PARSE_ERROR: "jsonParseError", MESSAGE_E2E_DELAY_EXCEPTION: "messageE2EDelayException", SET_MESSAGE_EXTENSIONS: "setMessageExtensions", DELETE_MESSAGE_EXTENSIONS: "deleteMessageExtensions", GET_MESSAGE_EXTENSIONS: "getMessageExtensions", PROFANITY_FILTER: "profanityFilter", GET_CONVERSATION_LIST: "getConversationList", GET_CONVERSATION_PROFILE: "getConversationProfile", DELETE_CONVERSATION: "deleteConversation", CLEAR_HISTORY_MESSAGE: "clearHistoryMessage", PIN_CONVERSATION: "pinConversation", GET_CONVERSATION_LIST_IN_STORAGE: "getConversationListInStorage", SYNC_CONVERSATION_LIST: "syncConversationList", SET_ALL_MESSAGE_READ: "setAllMessageRead", SET_CONV_CUSTOM_DATA: "setConvCustomData", MARK_CONVERSATION: "markConversation", GET_REMOTE_CONV_GROUP_LIST: "getRemoteConvGroupList", CREATE_CONV_GROUP: "createConvGroup", DELETE_CONV_GROUP: "deleteConvGroup", RENAME_CONV_GROUP: "renameConvGroup", ADD_CONVS_TO_GROUP: "addConvsToGroup", DELETE_CONVS_FROM_GROUP: "deleteConvsFromGroup", CREATE_GROUP: "createGroup", APPLY_JOIN_GROUP: "applyJoinGroup", QUIT_GROUP: "quitGroup", SEARCH_GROUP_BY_ID: "searchGroupByID", CHANGE_GROUP_OWNER: "changeGroupOwner", HANDLE_GROUP_APPLICATION: "handleGroupApplication", HANDLE_GROUP_INVITATION: "handleGroupInvitation", SET_MESSAGE_REMIND_TYPE: "setMessageRemindType", DISMISS_GROUP: "dismissGroup", UPDATE_GROUP_PROFILE: "updateGroupProfile", GET_GROUP_LIST: "getGroupList", GET_GROUP_PROFILE: "getGroupProfile", GET_GROUP_LIST_IN_STORAGE: "getGroupListInStorage", GET_GROUP_LAST_SEQUENCE: "getGroupLastSequence", RECOVER_MESSAGE: "recoverMessage", PAGING_GET_GROUP_LIST: "pagingGetGroupList", PAGING_GET_GROUP_LIST_WITH_TOPIC: "pagingGetGroupListWithTopic", GET_GROUP_SIMPLIFIED_INFO: "getGroupSimplifiedInfo", JOIN_WITHOUT_AUTH: "joinWithoutAuth", INIT_GROUP_ATTRIBUTES: "initGroupAttributes", SET_GROUP_ATTRIBUTES: "setGroupAttributes", DELETE_GROUP_ATTRIBUTES: "deleteGroupAttributes", GET_GROUP_ATTRIBUTES: "getGroupAttributes", SET_GROUP_COUNTERS: "setGroupCounters", INCREASE_GROUP_COUNTER: "increaseGroupCounter", DECREASE_GROUP_COUNTER: "decreaseGroupCounter", GET_GROUP_COUNTERS: "getGroupCounters", GET_GROUP_MEMBER_LIST: "getGroupMemberList", GET_AVCHATROOM_MEMBER_LIST: "getAVChatRoomMemberList", GET_GROUP_MEMBER_PROFILE: "getGroupMemberProfile", ADD_GROUP_MEMBER: "addGroupMember", DELETE_GROUP_MEMBER: "deleteGroupMember", BAN_AVCHATROOM_MEMBER: "banAVChatRoomMember", SET_GROUP_MEMBER_MUTE_TIME: "setGroupMemberMuteTime", SET_GROUP_MEMBER_NAME_CARD: "setGroupMemberNameCard", SET_GROUP_MEMBER_ROLE: "setGroupMemberRole", SET_GROUP_MEMBER_CUSTOM_FIELD: "setGroupMemberCustomField", GET_GROUP_ONLINE_MEMBER_COUNT: "getGroupOnlineMemberCount", MARK_GROUP_MEMBER_LIST: "markGroupMemberList", SYNC_MESSAGE: "syncMessage", LONG_POLLING_AV_ERROR: "longPollingAVError", MESSAGE_LOSS: "messageLoss", MESSAGE_STACKED: "messageStacked", GET_USER_PROFILE: "getUserProfile", UPDATE_MY_PROFILE: "updateMyProfile", GET_BLACKLIST: "getBlacklist", ADD_TO_BLACKLIST: "addToBlacklist", REMOVE_FROM_BLACKLIST: "removeFromBlacklist", SET_SELF_STATUS: "setSelfStatus", GET_USER_STATUS: "getUserStatus", SUBSCRIBE_USER_STATUS: "subscribeUserStatus", UNSUBSCRIBE_USER_STATUS: "unsubscribeUserStatus", ADD_FRIEND: "addFriend", CHECK_FRIEND: "checkFriend", DELETE_FRIEND: "removeFromFriendList", GET_FRIEND_PROFILE: "getFriendProfile", GET_FRIEND_LIST: "getFriendList", UPDATE_FRIEND: "updateFriend", GET_FRIEND_APPLICATION_LIST: "getFriendApplicationList", DELETE_FRIEND_APPLICATION: "deleteFriendApplication", ACCEPT_FRIEND_APPLICATION: "acceptFriendApplication", REFUSE_FRIEND_APPLICATION: "refuseFriendApplication", SET_FRIEND_APPLICATION_READ: "setFriendApplicationRead", CREATE_FRIEND_GROUP: "createFriendGroup", DELETE_FRIEND_GROUP: "deleteFriendGroup", RENAME_FRIEND_GROUP: "renameFriendGroup", ADD_TO_FRIEND_GROUP: "addToFriendGroup", REMOVE_FROM_FRIEND_GROUP: "removeFromFriendGroup", GET_FRIEND_GROUP_LIST: "getFriendGroupList", CREATE_TOPIC: "createTopic", DELETE_TOPIC: "deleteTopic", UPDATE_TOPIC_PROFILE: "updateTopicProfile", GET_TOPIC_LIST: "getTopicList", RELAY_GET_TOPIC_LIST: "relayGetTopicList", GET_TOPIC_LAST_SEQUENCE: "getTopicLastSequence", GET_DEVICE_TOKEN: "getDeviceToken", GET_DEVICE_TOKEN_RES: "getDeviceTokenRes", OFFLINE_PUSH_SET_TOKEN: "offlinePushSetToken", SET_APP_SHOW_LISTENER: "setAppShowListener", SET_APP_SHOW_LISTENER_RES: "setAppShowListenerRes", ON_FOREGROUND: "onForeground", ON_BACKGROUND: "onBackground", MP_HIDE_TO_SHOW: "mpHideToShow", CALLBACK_FUNCTION_ERROR: "callbackFunctionError", FETCH_CLOUD_CONTROL_CONFIG: "fetchCloudControlConfig", PUSHED_CLOUD_CONTROL_CONFIG: "pushedCloudControlConfig", FETCH_COMMERCIAL_CONFIG: "fetchCommercialConfig", PUSHED_COMMERCIAL_CONFIG: "pushedCommercialConfig", ERROR: "error", LAST_MESSAGE_NOT_EXIST: "lastMessageNotExist" }, Fs = function() {
      function e3(t3) {
        n2(this, e3), this.type = D2.MSG_TEXT, this.content = { text: t3.text || "" };
      }
      return s2(e3, [{ key: "setText", value: function(e4) {
        this.content.text = e4;
      } }, { key: "sendable", value: function() {
        return 0 !== this.content.text.length;
      } }]), e3;
    }(), qs = function() {
      function e3(t3) {
        n2(this, e3), this._imageMemoryURL = "", le2 ? this.createImageDataASURLInWXMiniApp(t3.file) : this.createImageDataASURLInWeb(t3.file), this._initImageInfoModel(), this.type = D2.MSG_IMAGE, this._percent = 0, this.content = { imageFormat: t3.imageFormat || je2.UNKNOWN, uuid: t3.uuid, imageInfoArray: [] }, this.initImageInfoArray(t3.imageInfoArray), this._defaultImage = "http://imgcache.qq.com/open/qcloud/video/act/webim-images/default.jpg", this._autoFixUrl();
      }
      return s2(e3, [{ key: "_initImageInfoModel", value: function() {
        var e4 = this;
        this._ImageInfoModel = function(t3) {
          this.instanceID = Ct(9999999), this.sizeType = t3.type || 0, this.type = 0, this.size = t3.size || 0, this.width = t3.width || 0, this.height = t3.height || 0, this.imageUrl = t3.url || "", this.url = t3.url || e4._imageMemoryURL || e4._defaultImage;
        }, this._ImageInfoModel.prototype = { setSizeType: function(e5) {
          this.sizeType = e5;
        }, setType: function(e5) {
          this.type = e5;
        }, setImageUrl: function(e5) {
          e5 && (this.imageUrl = e5);
        }, getImageUrl: function() {
          return this.imageUrl;
        } };
      } }, { key: "initImageInfoArray", value: function(e4) {
        for (var t3 = 0, o3 = null, n3 = null; t3 <= 2; )
          n3 = dt2(e4) || dt2(e4[t3]) ? { type: 0, size: 0, width: 0, height: 0, url: "" } : e4[t3], (o3 = new this._ImageInfoModel(n3)).setSizeType(t3 + 1), o3.setType(t3), this.addImageInfo(o3), t3++;
        this.updateAccessSideImageInfoArray();
      } }, { key: "updateImageInfoArray", value: function(e4) {
        for (var t3, o3 = this.content.imageInfoArray.length, n3 = 0; n3 < o3; n3++)
          t3 = this.content.imageInfoArray[n3], e4[n3].size && (t3.size = e4[n3].size), e4[n3].url && t3.setImageUrl(e4[n3].url), e4[n3].width && (t3.width = e4[n3].width), e4[n3].height && (t3.height = e4[n3].height);
      } }, { key: "_autoFixUrl", value: function() {
        for (var e4 = this.content.imageInfoArray.length, t3 = "", o3 = "", n3 = ["http", "https"], a3 = null, s3 = 0; s3 < e4; s3++)
          this.content.imageInfoArray[s3].url && "" !== (a3 = this.content.imageInfoArray[s3]).imageUrl && (o3 = a3.imageUrl.slice(0, a3.imageUrl.indexOf("://") + 1), t3 = a3.imageUrl.slice(a3.imageUrl.indexOf("://") + 1), n3.indexOf(o3) < 0 && (o3 = "https:"), this.content.imageInfoArray[s3].setImageUrl([o3, t3].join("")));
      } }, { key: "updatePercent", value: function(e4) {
        this._percent = e4, this._percent > 1 && (this._percent = 1);
      } }, { key: "updateImageFormat", value: function(e4) {
        this.content.imageFormat = je2[e4.toUpperCase()] || je2.UNKNOWN;
      } }, { key: "createImageDataASURLInWeb", value: function(e4) {
        void 0 !== e4 && e4.files.length > 0 && (this._imageMemoryURL = window.URL.createObjectURL(e4.files[0]));
      } }, { key: "createImageDataASURLInWXMiniApp", value: function(e4) {
        e4 && e4.url && (this._imageMemoryURL = e4.url);
      } }, { key: "replaceImageInfo", value: function(e4, t3) {
        this.content.imageInfoArray[t3] instanceof this._ImageInfoModel || (this.content.imageInfoArray[t3] = e4);
      } }, { key: "addImageInfo", value: function(e4) {
        this.content.imageInfoArray.length >= 3 || this.content.imageInfoArray.push(e4);
      } }, { key: "updateAccessSideImageInfoArray", value: function() {
        var e4 = this.content.imageInfoArray, t3 = e4[0], o3 = t3.width, n3 = void 0 === o3 ? 0 : o3, a3 = t3.height, s3 = void 0 === a3 ? 0 : a3;
        0 !== n3 && 0 !== s3 && (Kt(e4), Object.assign(e4[2], Bt({ originWidth: n3, originHeight: s3, min: 720 })));
      } }, { key: "sendable", value: function() {
        return 0 !== this.content.imageInfoArray.length && ("" !== this.content.imageInfoArray[0].imageUrl && 0 !== this.content.imageInfoArray[0].size);
      } }]), e3;
    }(), xs = function() {
      function e3(t3) {
        n2(this, e3), this.type = D2.MSG_FACE, this.content = t3 || null;
      }
      return s2(e3, [{ key: "sendable", value: function() {
        return null !== this.content;
      } }]), e3;
    }(), Vs = function() {
      function e3(t3) {
        n2(this, e3), this.type = D2.MSG_AUDIO, this._percent = 0, this.content = { downloadFlag: 2, second: t3.second, size: t3.size, url: t3.url, remoteAudioUrl: t3.url || "", uuid: t3.uuid };
      }
      return s2(e3, [{ key: "updatePercent", value: function(e4) {
        this._percent = e4, this._percent > 1 && (this._percent = 1);
      } }, { key: "updateAudioUrl", value: function(e4) {
        this.content.remoteAudioUrl = e4;
      } }, { key: "sendable", value: function() {
        return "" !== this.content.remoteAudioUrl;
      } }]), e3;
    }(), Bs = { from: true, groupID: true, groupName: true, to: true }, Ks = function() {
      function e3(t3) {
        n2(this, e3), this.type = D2.MSG_GRP_TIP, this.content = {}, this._initContent(t3);
      }
      return s2(e3, [{ key: "_initContent", value: function(e4) {
        var t3 = this;
        Object.keys(e4).forEach(function(o3) {
          switch (o3) {
            case "remarkInfo":
              break;
            case "groupProfile":
              t3.content.groupProfile = {}, t3._initGroupProfile(e4[o3]);
              break;
            case "operatorInfo":
              break;
            case "memberInfoList":
            case "msgMemberInfo":
              t3._updateMemberList(e4[o3]);
              break;
            case "memberExtraInfo":
            case "onlineMemberInfo":
              break;
            case "memberNum":
              t3.content[o3] = e4[o3], t3.content.memberCount = e4[o3];
              break;
            case "newGroupProfile":
              t3.content.newGroupProfile = {}, t3._initNewGroupProfile(e4[o3]);
              break;
            default:
              t3.content[o3] = e4[o3];
          }
        }), this.content.userIDList || (this.content.userIDList = [this.content.operatorID]);
      } }, { key: "_initGroupProfile", value: function(e4) {
        for (var t3 = Object.keys(e4), o3 = 0; o3 < t3.length; o3++) {
          var n3 = t3[o3];
          Bs[n3] && (this.content.groupProfile[n3] = e4[n3]);
        }
      } }, { key: "_updateMemberList", value: function(e4) {
        oo(this.content.memberList) ? this.content.memberList = e4 : this.content.memberList.forEach(function(t3) {
          e4.forEach(function(e5) {
            t3.userID === e5.userID && Object.assign(t3, e5);
          });
        });
      } }, { key: "_initNewGroupProfile", value: function(e4) {
        for (var t3 = Object.keys(e4), o3 = 0; o3 < t3.length; o3++) {
          var n3 = t3[o3];
          "muteAllMembers" !== n3 ? this.content.newGroupProfile[n3] = e4[n3] : this.content.newGroupProfile[n3] = 1 === e4[n3];
        }
      } }]), e3;
    }(), Hs = { from: true, groupID: true, groupName: true, to: true }, Ws = function() {
      function e3(t3) {
        n2(this, e3), this.type = D2.MSG_GRP_SYS_NOTICE, this.content = {}, this._initContent(t3);
      }
      return s2(e3, [{ key: "_initContent", value: function(e4) {
        var t3 = this;
        Object.keys(e4).forEach(function(o3) {
          switch (o3) {
            case "memberInfoList":
              break;
            case "remarkInfo":
              t3.content.handleMessage = e4[o3];
              break;
            case "groupProfile":
              t3.content.groupProfile = {}, t3._initGroupProfile(e4[o3]);
              break;
            default:
              t3.content[o3] = e4[o3];
          }
        });
      } }, { key: "_initGroupProfile", value: function(e4) {
        for (var t3 = Object.keys(e4), o3 = 0; o3 < t3.length; o3++) {
          var n3 = t3[o3];
          Hs[n3] && ("groupName" === n3 ? this.content.groupProfile.name = e4[n3] : this.content.groupProfile[n3] = e4[n3]);
        }
      } }]), e3;
    }(), Ys = function() {
      function e3(t3) {
        n2(this, e3), this.type = D2.MSG_FILE, this._percent = 0;
        var o3 = this._getFileInfo(t3);
        this.content = { downloadFlag: 2, fileUrl: t3.url || "", uuid: t3.uuid, fileName: o3.name || "", fileSize: o3.size || 0 };
      }
      return s2(e3, [{ key: "_getFileInfo", value: function(e4) {
        if (!dt2(e4.fileName) && !dt2(e4.fileSize))
          return { size: e4.fileSize, name: e4.fileName };
        var t3 = e4.file.files[0];
        if (ce2) {
          if (t3.path && -1 !== t3.path.indexOf(".")) {
            var o3 = t3.path.slice(t3.path.lastIndexOf(".") + 1).toLowerCase();
            t3.type = o3, t3.name || (t3.name = "".concat(Ct(999999), ".").concat(o3));
          }
          t3.name || (t3.type = "", t3.name = t3.path.slice(t3.path.lastIndexOf("/") + 1).toLowerCase()), t3.suffix && (t3.type = t3.suffix), t3.url || (t3.url = t3.path);
        }
        return { size: t3.size, name: t3.name };
      } }, { key: "updatePercent", value: function(e4) {
        this._percent = e4, this._percent > 1 && (this._percent = 1);
      } }, { key: "updateFileUrl", value: function(e4) {
        this.content.fileUrl = e4;
      } }, { key: "sendable", value: function() {
        return "" !== this.content.fileUrl && ("" !== this.content.fileName && 0 !== this.content.fileSize);
      } }]), e3;
    }(), js = function() {
      function e3(t3) {
        n2(this, e3), this.type = D2.MSG_CUSTOM, this.content = { data: t3.data || "", description: t3.description || "", extension: t3.extension || "" };
      }
      return s2(e3, [{ key: "setData", value: function(e4) {
        return this.content.data = e4, this;
      } }, { key: "setDescription", value: function(e4) {
        return this.content.description = e4, this;
      } }, { key: "setExtension", value: function(e4) {
        return this.content.extension = e4, this;
      } }, { key: "sendable", value: function() {
        return 0 !== this.content.data.length || 0 !== this.content.description.length || 0 !== this.content.extension.length;
      } }]), e3;
    }(), $s = function() {
      function e3(t3) {
        n2(this, e3), this.type = D2.MSG_VIDEO, this._percent = 0, this.content = { remoteVideoUrl: t3.remoteVideoUrl || t3.videoUrl || "", videoFormat: t3.videoFormat, videoSecond: parseInt(t3.videoSecond, 10), videoSize: t3.videoSize, videoUrl: t3.videoUrl, videoDownloadFlag: 2, videoUUID: t3.videoUUID, thumbUUID: t3.thumbUUID, thumbFormat: t3.thumbFormat, thumbWidth: t3.thumbWidth, snapshotWidth: t3.thumbWidth, thumbHeight: t3.thumbHeight, snapshotHeight: t3.thumbHeight, thumbSize: t3.thumbSize, snapshotSize: t3.thumbSize, thumbDownloadFlag: 2, thumbUrl: t3.thumbUrl, snapshotUrl: t3.thumbUrl };
      }
      return s2(e3, [{ key: "updatePercent", value: function(e4) {
        this._percent = e4, this._percent > 1 && (this._percent = 1);
      } }, { key: "updateVideoUrl", value: function(e4) {
        e4 && (this.content.remoteVideoUrl = e4);
      } }, { key: "updateSnapshotInfo", value: function(e4) {
        var t3 = e4.snapshotUrl, o3 = e4.snapshotWidth, n3 = e4.snapshotHeight;
        oo(t3) || (this.content.thumbUrl = this.content.snapshotUrl = t3), oo(o3) || (this.content.thumbWidth = this.content.snapshotWidth = Number(o3)), oo(n3) || (this.content.thumbHeight = this.content.snapshotHeight = Number(n3));
      } }, { key: "sendable", value: function() {
        return "" !== this.content.remoteVideoUrl;
      } }]), e3;
    }(), zs = function() {
      function e3(t3) {
        n2(this, e3), this.type = D2.MSG_LOCATION;
        var o3 = t3.description, a3 = t3.longitude, s3 = t3.latitude;
        this.content = { description: o3, longitude: a3, latitude: s3 };
      }
      return s2(e3, [{ key: "sendable", value: function() {
        return true;
      } }]), e3;
    }(), Js = function() {
      function e3(t3) {
        if (n2(this, e3), this.from = t3.from, this.messageSender = t3.from, this.time = t3.time, this.messageSequence = t3.sequence, this.clientSequence = t3.clientSequence || t3.sequence, this.messageRandom = t3.random, this.cloudCustomData = t3.cloudCustomData || "", this.clientTime = t3.clientTime || void 0, t3.ID)
          this.ID = t3.ID || "", this.nick = t3.nick || "", this.avatar = t3.avatar || "", this.messageBody = [{ type: t3.type, payload: t3.payload }], t3.conversationType.startsWith(D2.CONV_C2C) ? this.receiverUserID = t3.to : t3.conversationType.startsWith(D2.CONV_GROUP) && (this.receiverGroupID = t3.to), this.messageReceiver = t3.to;
        else {
          this.nick = t3.nick || "", this.avatar = t3.avatar || "", this.messageBody = [];
          var o3 = t3.elements[0].type, a3 = t3.elements[0].content;
          this._patchRichMediaPayload(o3, a3), o3 === D2.MSG_MERGER ? this.messageBody.push({ type: o3, payload: new Xs(a3).content }) : this.messageBody.push({ type: o3, payload: a3 }), t3.groupID && (this.receiverGroupID = t3.groupID, this.messageReceiver = t3.groupID), t3.to && (this.receiverUserID = t3.to, this.messageReceiver = t3.to), this.ID = "".concat(t3.tinyID, "-").concat(t3.clientTime, "-").concat(t3.random);
        }
      }
      return s2(e3, [{ key: "_patchRichMediaPayload", value: function(e4, t3) {
        e4 === D2.MSG_IMAGE ? t3.imageInfoArray.forEach(function(e5) {
          !e5.imageUrl && e5.url && (e5.imageUrl = e5.url, e5.sizeType = e5.type, 1 === e5.type ? e5.type = 0 : 3 === e5.type && (e5.type = 1));
        }) : e4 === D2.MSG_VIDEO ? !t3.remoteVideoUrl && t3.videoUrl && (t3.remoteVideoUrl = t3.videoUrl) : e4 === D2.MSG_AUDIO ? !t3.remoteAudioUrl && t3.url && (t3.remoteAudioUrl = t3.url) : e4 === D2.MSG_FILE && !t3.fileUrl && t3.url && (t3.fileUrl = t3.url, t3.url = void 0);
      } }]), e3;
    }(), Xs = function() {
      function e3(t3) {
        if (n2(this, e3), this.type = D2.MSG_MERGER, this.content = { downloadKey: "", pbDownloadKey: "", messageList: [], title: "", abstractList: [], compatibleText: "", version: 0, layersOverLimit: false }, t3.downloadKey) {
          var o3 = t3.downloadKey, a3 = t3.pbDownloadKey, s3 = t3.title, r3 = t3.abstractList, i3 = t3.compatibleText, c3 = t3.version;
          this.content.downloadKey = o3, this.content.pbDownloadKey = a3, this.content.title = s3, this.content.abstractList = r3, this.content.compatibleText = i3, this.content.version = c3 || 0;
        } else if (oo(t3.messageList))
          1 === t3.layersOverLimit && (this.content.layersOverLimit = true);
        else {
          var u3 = t3.messageList, l3 = t3.title, d3 = t3.abstractList, p3 = t3.compatibleText, g3 = t3.version, _3 = [];
          u3.forEach(function(e4) {
            if (!oo(e4)) {
              var t4 = new Js(e4);
              _3.push(t4);
            }
          }), this.content.messageList = _3, this.content.title = l3, this.content.abstractList = d3, this.content.compatibleText = p3, this.content.version = g3 || 0;
        }
        Ye2.debug("MergerElement.content:", this.content);
      }
      return s2(e3, [{ key: "sendable", value: function() {
        return !oo(this.content.messageList) || !oo(this.content.downloadKey);
      } }]), e3;
    }(), Qs = { 1: D2.MSG_PRIORITY_HIGH, 2: D2.MSG_PRIORITY_NORMAL, 3: D2.MSG_PRIORITY_LOW, 4: D2.MSG_PRIORITY_LOWEST }, Zs = function() {
      function e3(t3) {
        n2(this, e3), this.ID = "", this.conversationID = t3.conversationID || null, this.conversationType = t3.conversationType || D2.CONV_C2C, this.conversationSubType = t3.conversationSubType, this.time = t3.time || Math.ceil(Date.now() / 1e3), this.sequence = t3.sequence || 0, this.clientSequence = t3.clientSequence || t3.sequence || 0, this.random = t3.random || 0 === t3.random ? t3.random : Ct(), this.priority = this._computePriority(t3.priority), this.nick = t3.nick || "", this.avatar = t3.avatar || "", this.isPeerRead = false, this.nameCard = "", this._elements = [], this.isPlaceMessage = t3.isPlaceMessage || 0, this.isRevoked = 2 === t3.isPlaceMessage || 8 === t3.msgFlagBits, this.from = t3.from || null, this.to = t3.to || null, this.flow = "", this.isSystemMessage = t3.isSystemMessage || false, this.protocol = t3.protocol || "JSON", this.isResend = false, this.isRead = false, this.status = t3.status || ro.SUCCESS, this._onlineOnlyFlag = false, this._groupAtInfoList = [], this._relayFlag = false, this.atUserList = [], this.cloudCustomData = t3.cloudCustomData || "", this.isDeleted = false, this.isModified = false, this._isExcludedFromUnreadCount = !(!t3.messageControlInfo || 1 !== t3.messageControlInfo.excludedFromUnreadCount), this._isExcludedFromLastMessage = !(!t3.messageControlInfo || 1 !== t3.messageControlInfo.excludedFromLastMessage), this.clientTime = t3.clientTime || Be2() || 0, this.senderTinyID = t3.senderTinyID || t3.tinyID || "", this.readReceiptInfo = t3.readReceiptInfo || { readCount: void 0, unreadCount: void 0, isPeerRead: void 0 }, this.needReadReceipt = true === t3.needReadReceipt || 1 === t3.needReadReceipt, this.version = t3.messageVersion || 0, this.isBroadcastMessage = t3.isBroadcastMessage || false, this._receiverList = t3.receiverList || void 0, this.isSupportExtension = true === t3.isSupportExtension || 1 === t3.isSupportExtension, this.revoker = t3.revokerInfo && t3.revokerInfo.revoker || null, this.reInitialize(t3.currentUser), this.extractGroupInfo(t3.groupProfile || null), this.handleGroupAtInfo(t3), this.initC2CReadReceiptInfo(t3.readReceiptSentByPeer);
      }
      return s2(e3, [{ key: "elements", get: function() {
        return this._elements;
      } }, { key: "getElements", value: function() {
        return this._elements;
      } }, { key: "extractGroupInfo", value: function(e4) {
        if (null !== e4) {
          it2(e4.nick) && (this.nick = e4.nick), it2(e4.avatar) && (this.avatar = e4.avatar);
          var t3 = e4.messageFromAccountExtraInformation;
          ut2(t3) && it2(t3.nameCard) && (this.nameCard = t3.nameCard);
        }
      } }, { key: "handleGroupAtInfo", value: function(e4) {
        var t3 = this;
        e4.payload && e4.payload.atUserList && e4.payload.atUserList.forEach(function(e5) {
          e5 !== D2.MSG_AT_ALL ? (t3._groupAtInfoList.push({ groupAtAllFlag: 0, groupAtUserID: e5 }), t3.atUserList.push(e5)) : (t3._groupAtInfoList.push({ groupAtAllFlag: 1 }), t3.atUserList.push(D2.MSG_AT_ALL));
        }), lt2(e4.groupAtInfo) && e4.groupAtInfo.forEach(function(e5) {
          0 === e5.groupAtAllFlag ? t3.atUserList.push(e5.groupAtUserID) : 1 === e5.groupAtAllFlag && t3.atUserList.push(D2.MSG_AT_ALL);
        });
      } }, { key: "getGroupAtInfoList", value: function() {
        return this._groupAtInfoList;
      } }, { key: "_initProxy", value: function() {
        this._elements[0] && (this.payload = this._elements[0].content, this.type = this._elements[0].type);
      } }, { key: "reInitialize", value: function(e4) {
        e4 && (this.status = this.from ? ro.SUCCESS : ro.UNSEND, !this.from && (this.from = e4)), this._initFlow(e4), this._initSequence(e4), this._concatConversationID(e4), this.generateMessageID();
      } }, { key: "isSendable", value: function() {
        return 0 !== this._elements.length && ("function" != typeof this._elements[0].sendable ? (Ye2.warn("".concat(this._elements[0].type, ' need "boolean : sendable()" method')), false) : this._elements[0].sendable());
      } }, { key: "_initTo", value: function(e4) {
        this.conversationType === D2.CONV_GROUP && (this.to = e4.groupID);
      } }, { key: "_initSequence", value: function(e4) {
        0 === this.clientSequence && e4 && (this.clientSequence = function(e5) {
          if (!e5)
            return Ye2.error("autoIncrementIndex(string: key) need key parameter"), false;
          if (void 0 === Dt[e5]) {
            var t3 = new Date(), o3 = "3".concat(t3.getHours()).slice(-2), n3 = "0".concat(t3.getMinutes()).slice(-2), a3 = "0".concat(t3.getSeconds()).slice(-2);
            Dt[e5] = parseInt([o3, n3, a3, "0001"].join("")), o3 = null, n3 = null, a3 = null, Ye2.log("autoIncrementIndex start index:".concat(Dt[e5]));
          }
          return Dt[e5]++;
        }(e4)), 0 === this.sequence && this.conversationType === D2.CONV_C2C && (this.sequence = this.clientSequence);
      } }, { key: "generateMessageID", value: function() {
        this.from === D2.CONV_SYSTEM && (this.senderTinyID = "144115198244471703"), this.ID = "".concat(this.senderTinyID, "-").concat(this.clientTime, "-").concat(this.random);
      } }, { key: "_initFlow", value: function(e4) {
        "" !== e4 && (e4 === this.from ? (this.flow = "out", this.isRead = true) : this.flow = "in");
      } }, { key: "_concatConversationID", value: function(e4) {
        var t3 = this.to, o3 = "", n3 = this.conversationType;
        n3 !== D2.CONV_SYSTEM ? (o3 = n3 === D2.CONV_C2C ? e4 === this.from ? t3 : this.from : this.to, this.conversationID = "".concat(n3).concat(o3)) : this.conversationID = D2.CONV_SYSTEM;
      } }, { key: "isElement", value: function(e4) {
        return e4 instanceof Fs || e4 instanceof qs || e4 instanceof xs || e4 instanceof Vs || e4 instanceof Ys || e4 instanceof $s || e4 instanceof Ks || e4 instanceof Ws || e4 instanceof js || e4 instanceof zs || e4 instanceof Xs;
      } }, { key: "setElement", value: function(e4) {
        var t3 = this;
        if (this.isElement(e4))
          return this._elements = [e4], void this._initProxy();
        var o3 = function(e5) {
          if (e5.type && e5.content)
            switch (e5.type) {
              case D2.MSG_TEXT:
                t3.setTextElement(e5.content);
                break;
              case D2.MSG_IMAGE:
                t3.setImageElement(e5.content);
                break;
              case D2.MSG_AUDIO:
                t3.setAudioElement(e5.content);
                break;
              case D2.MSG_FILE:
                t3.setFileElement(e5.content);
                break;
              case D2.MSG_VIDEO:
                t3.setVideoElement(e5.content);
                break;
              case D2.MSG_CUSTOM:
                t3.setCustomElement(e5.content);
                break;
              case D2.MSG_LOCATION:
                t3.setLocationElement(e5.content);
                break;
              case D2.MSG_GRP_TIP:
                t3.setGroupTipElement(e5.content);
                break;
              case D2.MSG_GRP_SYS_NOTICE:
                t3.setGroupSystemNoticeElement(e5.content);
                break;
              case D2.MSG_FACE:
                t3.setFaceElement(e5.content);
                break;
              case D2.MSG_MERGER:
                t3.setMergerElement(e5.content);
                break;
              default:
                Ye2.warn(e5.type, e5.content, "no operation......");
            }
        };
        if (lt2(e4))
          for (var n3 = 0; n3 < e4.length; n3++)
            o3(e4[n3]);
        else
          o3(e4);
        this._initProxy();
      } }, { key: "clearElement", value: function() {
        this._elements.length = 0;
      } }, { key: "setTextElement", value: function(e4) {
        var t3 = "string" == typeof e4 ? e4 : e4.text, o3 = new Fs({ text: t3 });
        this._elements.push(o3);
      } }, { key: "setImageElement", value: function(e4) {
        var t3 = new qs(e4);
        this._elements.push(t3);
      } }, { key: "setAudioElement", value: function(e4) {
        var t3 = new Vs(e4);
        this._elements.push(t3);
      } }, { key: "setFileElement", value: function(e4) {
        var t3 = new Ys(e4);
        this._elements.push(t3);
      } }, { key: "setVideoElement", value: function(e4) {
        var t3 = new $s(e4);
        this._elements.push(t3);
      } }, { key: "setLocationElement", value: function(e4) {
        var t3 = new zs(e4);
        this._elements.push(t3);
      } }, { key: "setCustomElement", value: function(e4) {
        var t3 = new js(e4);
        this._elements.push(t3);
      } }, { key: "setGroupTipElement", value: function(e4) {
        var t3 = {}, o3 = e4.operationType;
        if (oo(e4.memberInfoList) ? e4.operatorInfo && (t3 = e4.operatorInfo) : o3 !== D2.GRP_TIP_MBR_JOIN && o3 !== D2.GRP_TIP_MBR_KICKED_OUT && o3 !== D2.GRP_TIP_MBR_SET_ADMIN && o3 !== D2.GRP_TIP_MBR_CANCELED_ADMIN || (t3 = e4.memberInfoList[0]), !oo(e4.memberExtraInfo)) {
          var n3 = e4.memberExtraInfo.reason;
          e4.msgMemberInfo.forEach(function(e5) {
            e5.reason = n3;
          });
        }
        var a3 = t3, s3 = a3.nick, r3 = a3.avatar;
        it2(s3) && (this.nick = s3), it2(r3) && (this.avatar = r3);
        var i3 = new Ks(e4);
        this._elements.push(i3);
      } }, { key: "setGroupSystemNoticeElement", value: function(e4) {
        var t3 = new Ws(e4);
        this._elements.push(t3);
      } }, { key: "setFaceElement", value: function(e4) {
        var t3 = new xs(e4);
        this._elements.push(t3);
      } }, { key: "setMergerElement", value: function(e4) {
        var t3 = new Xs(e4);
        this._elements.push(t3);
      } }, { key: "setIsRead", value: function(e4) {
        this.isRead = e4;
      } }, { key: "setRelayFlag", value: function(e4) {
        this._relayFlag = e4;
      } }, { key: "getRelayFlag", value: function() {
        return this._relayFlag;
      } }, { key: "_computePriority", value: function(e4) {
        if (dt2(e4))
          return D2.MSG_PRIORITY_NORMAL;
        if (it2(e4) && -1 !== Object.values(Qs).indexOf(e4))
          return e4;
        if (rt2(e4)) {
          var t3 = "" + e4;
          if (-1 !== Object.keys(Qs).indexOf(t3))
            return Qs[t3];
        }
        return D2.MSG_PRIORITY_NORMAL;
      } }, { key: "setNickAndAvatar", value: function(e4) {
        var t3 = e4.nick, o3 = e4.avatar;
        it2(t3) && (this.nick = t3), it2(o3) && (this.avatar = o3);
      } }, { key: "setNameCard", value: function(e4) {
        it2(e4) && (this.nameCard = e4);
      } }, { key: "initC2CReadReceiptInfo", value: function(e4) {
        this.conversationType === D2.CONV_C2C && true === this.needReadReceipt && (this.readReceiptInfo.isPeerRead = 1 === e4);
      } }]), e3;
    }(), er = function(e3) {
      return { code: 0, data: e3 || {} };
    }, tr = "https://cloud.tencent.com/document/product/", or = "\u60A8\u53EF\u4EE5\u5728\u5373\u65F6\u901A\u4FE1 IM \u63A7\u5236\u53F0\u7684\u3010\u5F00\u53D1\u8F85\u52A9\u5DE5\u5177(https://console.cloud.tencent.com/im-detail/tool-usersig)\u3011 \u9875\u9762\u6821\u9A8C UserSig\u3002", nr = "UserSig \u975E\u6CD5\uFF0C\u8BF7\u4F7F\u7528\u5B98\u7F51\u63D0\u4F9B\u7684 API \u91CD\u65B0\u751F\u6210 UserSig(".concat(tr, "269/32688)\u3002"), ar = "#.E6.B6.88.E6.81.AF.E5.85.83.E7.B4.A0-timmsgelement", sr2 = { 70001: "UserSig \u5DF2\u8FC7\u671F\uFF0C\u8BF7\u91CD\u65B0\u751F\u6210\u3002\u5EFA\u8BAE UserSig \u6709\u6548\u671F\u8BBE\u7F6E\u4E0D\u5C0F\u4E8E24\u5C0F\u65F6\u3002", 70002: "UserSig \u957F\u5EA6\u4E3A0\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u7684 UserSig \u662F\u5426\u6B63\u786E\u3002", 70003: nr, 70005: nr, 70009: "UserSig \u9A8C\u8BC1\u5931\u8D25\uFF0C\u53EF\u80FD\u56E0\u4E3A\u751F\u6210 UserSig \u65F6\u6DF7\u7528\u4E86\u5176\u4ED6 SDKAppID \u7684\u79C1\u94A5\u6216\u5BC6\u94A5\u5BFC\u81F4\uFF0C\u8BF7\u4F7F\u7528\u5BF9\u5E94 SDKAppID \u4E0B\u7684\u79C1\u94A5\u6216\u5BC6\u94A5\u91CD\u65B0\u751F\u6210 UserSig(".concat(tr, "269/32688)\u3002"), 70013: "\u8BF7\u6C42\u4E2D\u7684 UserID \u4E0E\u751F\u6210 UserSig \u65F6\u4F7F\u7528\u7684 UserID \u4E0D\u5339\u914D\u3002".concat(or), 70014: "\u8BF7\u6C42\u4E2D\u7684 SDKAppID \u4E0E\u751F\u6210 UserSig \u65F6\u4F7F\u7528\u7684 SDKAppID \u4E0D\u5339\u914D\u3002".concat(or), 70016: "\u5BC6\u94A5\u4E0D\u5B58\u5728\uFF0CUserSig \u9A8C\u8BC1\u5931\u8D25\uFF0C\u8BF7\u5728\u5373\u65F6\u901A\u4FE1 IM \u63A7\u5236\u53F0\u83B7\u53D6\u5BC6\u94A5(".concat(tr, "269/32578#.E8.8E.B7.E5.8F.96.E5.AF.86.E9.92.A5)\u3002"), 70020: "SDKAppID \u672A\u627E\u5230\uFF0C\u8BF7\u5728\u5373\u65F6\u901A\u4FE1 IM \u63A7\u5236\u53F0\u786E\u8BA4\u5E94\u7528\u4FE1\u606F\u3002", 70050: "UserSig \u9A8C\u8BC1\u6B21\u6570\u8FC7\u4E8E\u9891\u7E41\u3002\u8BF7\u68C0\u67E5 UserSig \u662F\u5426\u6B63\u786E\uFF0C\u5E76\u4E8E1\u5206\u949F\u540E\u91CD\u65B0\u9A8C\u8BC1\u3002".concat(or), 70051: "\u5E10\u53F7\u88AB\u62C9\u5165\u9ED1\u540D\u5355\u3002", 70052: "UserSig \u5DF2\u7ECF\u5931\u6548\uFF0C\u8BF7\u91CD\u65B0\u751F\u6210\uFF0C\u518D\u6B21\u5C1D\u8BD5\u3002", 70107: "\u56E0\u5B89\u5168\u539F\u56E0\u88AB\u9650\u5236\u767B\u5F55\uFF0C\u8BF7\u4E0D\u8981\u9891\u7E41\u767B\u5F55\u3002", 70169: "\u8BF7\u6C42\u7684\u7528\u6237\u5E10\u53F7\u4E0D\u5B58\u5728\u3002", 70114: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u8D85\u65F6\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5\u3002"), 70202: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u8D85\u65F6\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5\u3002"), 70206: "\u8BF7\u6C42\u4E2D\u6279\u91CF\u6570\u91CF\u4E0D\u5408\u6CD5\u3002", 70402: "\u53C2\u6570\u975E\u6CD5\uFF0C\u8BF7\u68C0\u67E5\u5FC5\u586B\u5B57\u6BB5\u662F\u5426\u586B\u5145\uFF0C\u6216\u8005\u5B57\u6BB5\u7684\u586B\u5145\u662F\u5426\u6EE1\u8DB3\u534F\u8BAE\u8981\u6C42\u3002", 70403: "\u8BF7\u6C42\u5931\u8D25\uFF0C\u9700\u8981 App \u7BA1\u7406\u5458\u6743\u9650\u3002", 70398: "\u5E10\u53F7\u6570\u8D85\u9650\u3002\u5982\u9700\u521B\u5EFA\u591A\u4E8E100\u4E2A\u5E10\u53F7\uFF0C\u8BF7\u5C06\u5E94\u7528\u5347\u7EA7\u4E3A\u4E13\u4E1A\u7248\uFF0C\u5177\u4F53\u64CD\u4F5C\u6307\u5F15\u8BF7\u53C2\u89C1\u8D2D\u4E70\u6307\u5F15(".concat(tr, "269/32458)\u3002"), 70500: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002"), 71e3: "\u5220\u9664\u5E10\u53F7\u5931\u8D25\u3002\u4EC5\u652F\u6301\u5220\u9664\u4F53\u9A8C\u7248\u5E10\u53F7\uFF0C\u60A8\u5F53\u524D\u5E94\u7528\u4E3A\u4E13\u4E1A\u7248\uFF0C\u6682\u4E0D\u652F\u6301\u5E10\u53F7\u5220\u9664\u3002", 20001: "\u8BF7\u6C42\u5305\u975E\u6CD5\u3002", 20002: "UserSig \u6216 A2 \u5931\u6548\u3002", 20003: "\u6D88\u606F\u53D1\u9001\u65B9\u6216\u63A5\u6536\u65B9 UserID \u65E0\u6548\u6216\u4E0D\u5B58\u5728\uFF0C\u8BF7\u68C0\u67E5 UserID \u662F\u5426\u5DF2\u5BFC\u5165\u5373\u65F6\u901A\u4FE1 IM\u3002", 20004: "\u7F51\u7EDC\u5F02\u5E38\uFF0C\u8BF7\u91CD\u8BD5\u3002", 20005: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002"), 20006: "\u89E6\u53D1\u53D1\u9001".concat("\u5355\u804A\u6D88\u606F", "\u4E4B\u524D\u56DE\u8C03\uFF0CApp \u540E\u53F0\u8FD4\u56DE\u7981\u6B62\u4E0B\u53D1\u8BE5\u6D88\u606F\u3002"), 20007: "\u53D1\u9001".concat("\u5355\u804A\u6D88\u606F", "\uFF0C\u88AB\u5BF9\u65B9\u62C9\u9ED1\uFF0C\u7981\u6B62\u53D1\u9001\u3002\u6D88\u606F\u53D1\u9001\u72B6\u6001\u9ED8\u8BA4\u5C55\u793A\u4E3A\u5931\u8D25\uFF0C\u60A8\u53EF\u4EE5\u767B\u5F55\u63A7\u5236\u53F0\u4FEE\u6539\u8BE5\u573A\u666F\u4E0B\u7684\u6D88\u606F\u53D1\u9001\u72B6\u6001\u5C55\u793A\u7ED3\u679C\uFF0C\u5177\u4F53\u64CD\u4F5C\u8BF7\u53C2\u89C1\u6D88\u606F\u4FDD\u7559\u8BBE\u7F6E(").concat(tr, "269/38656)\u3002"), 20009: "\u6D88\u606F\u53D1\u9001\u53CC\u65B9\u4E92\u76F8\u4E0D\u662F\u597D\u53CB\uFF0C\u7981\u6B62\u53D1\u9001\uFF08\u914D\u7F6E".concat("\u5355\u804A\u6D88\u606F", "\u6821\u9A8C\u597D\u53CB\u5173\u7CFB\u624D\u4F1A\u51FA\u73B0\uFF09\u3002"), 20010: "\u53D1\u9001".concat("\u5355\u804A\u6D88\u606F", "\uFF0C\u81EA\u5DF1\u4E0D\u662F\u5BF9\u65B9\u7684\u597D\u53CB\uFF08\u5355\u5411\u5173\u7CFB\uFF09\uFF0C\u7981\u6B62\u53D1\u9001\u3002"), 20011: "\u53D1\u9001".concat("\u5355\u804A\u6D88\u606F", "\uFF0C\u5BF9\u65B9\u4E0D\u662F\u81EA\u5DF1\u7684\u597D\u53CB\uFF08\u5355\u5411\u5173\u7CFB\uFF09\uFF0C\u7981\u6B62\u53D1\u9001\u3002"), 20012: "\u53D1\u9001\u65B9\u88AB\u7981\u8A00\uFF0C\u8BE5\u6761\u6D88\u606F\u88AB\u7981\u6B62\u53D1\u9001\u3002", 20016: "\u6D88\u606F\u64A4\u56DE\u8D85\u8FC7\u4E86\u65F6\u95F4\u9650\u5236\uFF08\u9ED8\u8BA42\u5206\u949F\uFF09\u3002", 20018: "\u5220\u9664\u6F2B\u6E38\u5185\u90E8\u9519\u8BEF\u3002", 90001: "JSON \u683C\u5F0F\u89E3\u6790\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u8BF7\u6C42\u5305\u662F\u5426\u7B26\u5408 JSON \u89C4\u8303\u3002", 90002: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D MsgBody \u4E0D\u7B26\u5408\u6D88\u606F\u683C\u5F0F\u63CF\u8FF0\uFF0C\u6216\u8005 MsgBody \u4E0D\u662F Array \u7C7B\u578B\uFF0C\u8BF7\u53C2\u8003 TIMMsgElement \u5BF9\u8C61\u7684\u5B9A\u4E49(").concat(tr, "269/2720").concat(ar, ")\u3002"), 90003: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D\u7F3A\u5C11 To_Account \u5B57\u6BB5\u6216\u8005 To_Account \u5E10\u53F7\u4E0D\u5B58\u5728\u3002"), 90005: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D\u7F3A\u5C11 MsgRandom \u5B57\u6BB5\u6216\u8005 MsgRandom \u5B57\u6BB5\u4E0D\u662F Integer \u7C7B\u578B\u3002"), 90006: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D\u7F3A\u5C11 MsgTimeStamp \u5B57\u6BB5\u6216\u8005 MsgTimeStamp \u5B57\u6BB5\u4E0D\u662F Integer \u7C7B\u578B\u3002"), 90007: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D MsgBody \u7C7B\u578B\u4E0D\u662F Array \u7C7B\u578B\uFF0C\u8BF7\u5C06\u5176\u4FEE\u6539\u4E3A Array \u7C7B\u578B\u3002"), 90008: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D\u7F3A\u5C11 From_Account \u5B57\u6BB5\u6216\u8005 From_Account \u5E10\u53F7\u4E0D\u5B58\u5728\u3002"), 90009: "\u8BF7\u6C42\u9700\u8981 App \u7BA1\u7406\u5458\u6743\u9650\u3002", 90010: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E0D\u7B26\u5408\u6D88\u606F\u683C\u5F0F\u63CF\u8FF0\uFF0C\u8BF7\u53C2\u8003 TIMMsgElement \u5BF9\u8C61\u7684\u5B9A\u4E49(").concat(tr, "269/2720").concat(ar, ")\u3002"), 90011: "\u6279\u91CF\u53D1\u6D88\u606F\u76EE\u6807\u5E10\u53F7\u8D85\u8FC7500\uFF0C\u8BF7\u51CF\u5C11 To_Account \u4E2D\u76EE\u6807\u5E10\u53F7\u6570\u91CF\u3002", 90012: "To_Account \u6CA1\u6709\u6CE8\u518C\u6216\u4E0D\u5B58\u5728\uFF0C\u8BF7\u786E\u8BA4 To_Account \u662F\u5426\u5BFC\u5165\u5373\u65F6\u901A\u4FE1 IM \u6216\u8005\u662F\u5426\u62FC\u5199\u9519\u8BEF\u3002", 90026: "\u6D88\u606F\u79BB\u7EBF\u5B58\u50A8\u65F6\u95F4\u9519\u8BEF\uFF08\u6700\u591A\u4E0D\u80FD\u8D85\u8FC77\u5929\uFF09\u3002", 90031: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D SyncOtherMachine \u5B57\u6BB5\u4E0D\u662F Integer \u7C7B\u578B\u3002"), 90044: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D MsgLifeTime \u5B57\u6BB5\u4E0D\u662F Integer \u7C7B\u578B\u3002"), 90048: "\u8BF7\u6C42\u7684\u7528\u6237\u5E10\u53F7\u4E0D\u5B58\u5728\u3002", 90054: "\u64A4\u56DE\u8BF7\u6C42\u4E2D\u7684 MsgKey \u4E0D\u5408\u6CD5\u3002", 90994: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002"), 90995: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002"), 91e3: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002"), 90992: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002", "\u5982\u679C\u6240\u6709\u8BF7\u6C42\u90FD\u8FD4\u56DE\u8BE5\u9519\u8BEF\u7801\uFF0C\u4E14 App \u914D\u7F6E\u4E86\u7B2C\u4E09\u65B9\u56DE\u8C03\uFF0C\u8BF7\u68C0\u67E5 App \u670D\u52A1\u7AEF\u662F\u5426\u6B63\u5E38\u5411\u5373\u65F6\u901A\u4FE1 IM \u540E\u53F0\u670D\u52A1\u7AEF\u8FD4\u56DE\u56DE\u8C03\u7ED3\u679C\u3002"), 93e3: "JSON \u6570\u636E\u5305\u8D85\u957F\uFF0C\u6D88\u606F\u5305\u4F53\u8BF7\u4E0D\u8981\u8D85\u8FC78k\u3002", 91101: "Web \u7AEF\u957F\u8F6E\u8BE2\u88AB\u8E22\uFF08Web \u7AEF\u540C\u65F6\u5728\u7EBF\u5B9E\u4F8B\u4E2A\u6570\u8D85\u51FA\u9650\u5236\uFF09\u3002", 10002: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002"), 10003: "\u8BF7\u6C42\u4E2D\u7684\u63A5\u53E3\u540D\u79F0\u9519\u8BEF\uFF0C\u8BF7\u6838\u5BF9\u63A5\u53E3\u540D\u79F0\u5E76\u91CD\u8BD5\u3002", 10004: "\u53C2\u6570\u975E\u6CD5\uFF0C\u8BF7\u6839\u636E\u9519\u8BEF\u63CF\u8FF0\u68C0\u67E5\u8BF7\u6C42\u662F\u5426\u6B63\u786E\u3002", 10005: "\u8BF7\u6C42\u5305\u4F53\u4E2D\u643A\u5E26\u7684\u5E10\u53F7\u6570\u91CF\u8FC7\u591A\u3002", 10006: "\u64CD\u4F5C\u9891\u7387\u9650\u5236\uFF0C\u8BF7\u5C1D\u8BD5\u964D\u4F4E\u8C03\u7528\u7684\u9891\u7387\u3002", 10007: "\u64CD\u4F5C\u6743\u9650\u4E0D\u8DB3\uFF0C\u4F8B\u5982 Work ".concat("\u7FA4\u7EC4", "\u4E2D\u666E\u901A\u6210\u5458\u5C1D\u8BD5\u6267\u884C\u8E22\u4EBA\u64CD\u4F5C\uFF0C\u4F46\u53EA\u6709 App \u7BA1\u7406\u5458\u624D\u6709\u6743\u9650\u3002"), 10008: "\u8BF7\u6C42\u975E\u6CD5\uFF0C\u53EF\u80FD\u662F\u8BF7\u6C42\u4E2D\u643A\u5E26\u7684\u7B7E\u540D\u4FE1\u606F\u9A8C\u8BC1\u4E0D\u6B63\u786E\uFF0C\u8BF7\u518D\u6B21\u5C1D\u8BD5\u3002", 10009: "\u8BE5\u7FA4\u4E0D\u5141\u8BB8\u7FA4\u4E3B\u4E3B\u52A8\u9000\u51FA\u3002", 10010: "".concat("\u7FA4\u7EC4", "\u4E0D\u5B58\u5728\uFF0C\u6216\u8005\u66FE\u7ECF\u5B58\u5728\u8FC7\uFF0C\u4F46\u662F\u76EE\u524D\u5DF2\u7ECF\u88AB\u89E3\u6563\u3002"), 10011: "\u89E3\u6790 JSON \u5305\u4F53\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u5305\u4F53\u7684\u683C\u5F0F\u662F\u5426\u7B26\u5408 JSON \u683C\u5F0F\u3002", 10012: "\u53D1\u8D77\u64CD\u4F5C\u7684 UserID \u975E\u6CD5\uFF0C\u8BF7\u68C0\u67E5\u53D1\u8D77\u64CD\u4F5C\u7684\u7528\u6237 UserID \u662F\u5426\u586B\u5199\u6B63\u786E\u3002", 10013: "\u88AB\u9080\u8BF7\u52A0\u5165\u7684\u7528\u6237\u5DF2\u7ECF\u662F\u7FA4\u6210\u5458\u3002", 10014: "\u7FA4\u5DF2\u6EE1\u5458\uFF0C\u65E0\u6CD5\u5C06\u8BF7\u6C42\u4E2D\u7684\u7528\u6237\u52A0\u5165".concat("\u7FA4\u7EC4", "\uFF0C\u5982\u679C\u662F\u6279\u91CF\u52A0\u4EBA\uFF0C\u53EF\u4EE5\u5C1D\u8BD5\u51CF\u5C11\u52A0\u5165\u7528\u6237\u7684\u6570\u91CF\u3002"), 10015: "\u627E\u4E0D\u5230\u6307\u5B9A ID \u7684".concat("\u7FA4\u7EC4", "\u3002"), 10016: "App \u540E\u53F0\u901A\u8FC7\u7B2C\u4E09\u65B9\u56DE\u8C03\u62D2\u7EDD\u672C\u6B21\u64CD\u4F5C\u3002", 10017: "\u56E0\u88AB\u7981\u8A00\u800C\u4E0D\u80FD\u53D1\u9001\u6D88\u606F\uFF0C\u8BF7\u68C0\u67E5\u53D1\u9001\u8005\u662F\u5426\u88AB\u8BBE\u7F6E\u7981\u8A00\u3002", 10018: "\u5E94\u7B54\u5305\u957F\u5EA6\u8D85\u8FC7\u6700\u5927\u5305\u957F\uFF081MB\uFF09\uFF0C\u8BF7\u6C42\u7684\u5185\u5BB9\u8FC7\u591A\uFF0C\u8BF7\u5C1D\u8BD5\u51CF\u5C11\u5355\u6B21\u8BF7\u6C42\u7684\u6570\u636E\u91CF\u3002", 10019: "\u8BF7\u6C42\u7684\u7528\u6237\u5E10\u53F7\u4E0D\u5B58\u5728\u3002", 10021: "".concat("\u7FA4\u7EC4", " ID \u5DF2\u88AB\u4F7F\u7528\uFF0C\u8BF7\u9009\u62E9\u5176\u4ED6\u7684").concat("\u7FA4\u7EC4", " ID\u3002"), 10023: "\u53D1\u6D88\u606F\u7684\u9891\u7387\u8D85\u9650\uFF0C\u8BF7\u5EF6\u957F\u4E24\u6B21\u53D1\u6D88\u606F\u65F6\u95F4\u7684\u95F4\u9694\u3002", 10024: "\u6B64\u9080\u8BF7\u6216\u8005\u7533\u8BF7\u8BF7\u6C42\u5DF2\u7ECF\u88AB\u5904\u7406\u3002", 10025: "".concat("\u7FA4\u7EC4", " ID \u5DF2\u88AB\u4F7F\u7528\uFF0C\u5E76\u4E14\u64CD\u4F5C\u8005\u4E3A\u7FA4\u4E3B\uFF0C\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u3002"), 10026: "\u8BE5 SDKAppID \u8BF7\u6C42\u7684\u547D\u4EE4\u5B57\u5DF2\u88AB\u7981\u7528\u3002", 10030: "\u8BF7\u6C42\u64A4\u56DE\u7684\u6D88\u606F\u4E0D\u5B58\u5728\u3002", 10031: "\u6D88\u606F\u64A4\u56DE\u8D85\u8FC7\u4E86\u65F6\u95F4\u9650\u5236\uFF08\u9ED8\u8BA42\u5206\u949F\uFF09\u3002", 10032: "\u8BF7\u6C42\u64A4\u56DE\u7684\u6D88\u606F\u4E0D\u652F\u6301\u64A4\u56DE\u64CD\u4F5C\u3002", 10033: "".concat("\u7FA4\u7EC4", "\u7C7B\u578B\u4E0D\u652F\u6301\u6D88\u606F\u64A4\u56DE\u64CD\u4F5C\u3002"), 10034: "\u8BE5\u6D88\u606F\u7C7B\u578B\u4E0D\u652F\u6301\u5220\u9664\u64CD\u4F5C\u3002", 10035: "\u76F4\u64AD\u7FA4\u548C\u5728\u7EBF\u6210\u5458\u5E7F\u64AD\u5927\u7FA4\u4E0D\u652F\u6301\u5220\u9664\u6D88\u606F\u3002", 10036: "\u76F4\u64AD\u7FA4\u521B\u5EFA\u6570\u91CF\u8D85\u8FC7\u4E86\u9650\u5236\uFF0C\u8BF7\u53C2\u8003\u4EF7\u683C\u8BF4\u660E(".concat(tr, "269/11673)\u8D2D\u4E70\u9884\u4ED8\u8D39\u5957\u9910\u201CIM\u76F4\u64AD\u7FA4\u201D\u3002"), 10037: "\u5355\u4E2A\u7528\u6237\u53EF\u521B\u5EFA\u548C\u52A0\u5165\u7684".concat("\u7FA4\u7EC4", "\u6570\u91CF\u8D85\u8FC7\u4E86\u9650\u5236\uFF0C\u8BF7\u53C2\u8003\u4EF7\u683C\u8BF4\u660E(").concat(tr, "269/11673)\u8D2D\u4E70\u6216\u5347\u7EA7\u9884\u4ED8\u8D39\u5957\u9910\u201C\u5355\u4EBA\u53EF\u521B\u5EFA\u4E0E\u52A0\u5165").concat("\u7FA4\u7EC4", "\u6570\u201D\u3002"), 10038: "\u7FA4\u6210\u5458\u6570\u91CF\u8D85\u8FC7\u9650\u5236\uFF0C\u8BF7\u53C2\u8003\u4EF7\u683C\u8BF4\u660E(".concat(tr, "269/11673)\u8D2D\u4E70\u6216\u5347\u7EA7\u9884\u4ED8\u8D39\u5957\u9910\u201C\u6269\u5C55\u7FA4\u4EBA\u6570\u4E0A\u9650\u201D\u3002"), 10041: "\u8BE5\u5E94\u7528\uFF08SDKAppID\uFF09\u5DF2\u914D\u7F6E\u4E0D\u652F\u6301\u7FA4\u6D88\u606F\u64A4\u56DE\u3002", 10050: "\u7FA4\u5C5E\u6027 key \u4E0D\u5B58\u5728", 10056: "\u8BF7\u5728\u5199\u5165\u7FA4\u5C5E\u6027\u524D\u5148\u4F7F\u7528 getGroupAttributes \u63A5\u53E3\u66F4\u65B0\u672C\u5730\u7FA4\u5C5E\u6027\uFF0C\u907F\u514D\u51B2\u7A81\u3002", 10059: "\u975E\u65D7\u8230\u7248", 10060: "\u7FA4\u4EBA\u6570\u8D85\u8FC7\u5DF2\u8BFB\u56DE\u6267\u4EBA\u6570\u4E0A\u9650", 10061: "\u5728\u7EBF\u6D88\u606F\u4E0D\u652F\u6301\u5DF2\u8BFB\u56DE\u6267", 10062: "\u627E\u4E0D\u5230\u7FA4\u6D88\u606F\u7684\u5DF2\u8BFB\u56DE\u6267\u4FE1\u606F", 20026: "\u6D88\u606F\u4E0D\u5B58\u5728", 20029: "\u8BE5\u7FA4\u7C7B\u578B\u4E0D\u652F\u6301\u4FEE\u6539\u6D88\u606F\u3002", 30001: "\u8BF7\u6C42\u53C2\u6570\u9519\u8BEF\uFF0C\u8BF7\u6839\u636E\u9519\u8BEF\u63CF\u8FF0\u68C0\u67E5\u8BF7\u6C42\u53C2\u6570", 30002: "SDKAppID \u4E0D\u5339\u914D", 30003: "\u8BF7\u6C42\u7684\u7528\u6237\u5E10\u53F7\u4E0D\u5B58\u5728", 30004: "\u8BF7\u6C42\u9700\u8981 App \u7BA1\u7406\u5458\u6743\u9650", 30005: "\u5173\u7CFB\u94FE\u5B57\u6BB5\u4E2D\u5305\u542B\u654F\u611F\u8BCD", 30006: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002"), 30007: "".concat("\u7F51\u7EDC\u8D85\u65F6\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5. "), 30008: "\u5E76\u53D1\u5199\u5BFC\u81F4\u5199\u51B2\u7A81\uFF0C\u5EFA\u8BAE\u4F7F\u7528\u6279\u91CF\u65B9\u5F0F", 30009: "\u540E\u53F0\u7981\u6B62\u8BE5\u7528\u6237\u53D1\u8D77\u52A0\u597D\u53CB\u8BF7\u6C42", 30010: "\u81EA\u5DF1\u7684\u597D\u53CB\u6570\u5DF2\u8FBE\u7CFB\u7EDF\u4E0A\u9650", 30011: "\u5206\u7EC4\u5DF2\u8FBE\u7CFB\u7EDF\u4E0A\u9650", 30012: "\u672A\u51B3\u6570\u5DF2\u8FBE\u7CFB\u7EDF\u4E0A\u9650", 30014: "\u5BF9\u65B9\u7684\u597D\u53CB\u6570\u5DF2\u8FBE\u7CFB\u7EDF\u4E0A\u9650", 30515: "\u8BF7\u6C42\u6DFB\u52A0\u597D\u53CB\u65F6\uFF0C\u5BF9\u65B9\u5728\u81EA\u5DF1\u7684\u9ED1\u540D\u5355\u4E2D\uFF0C\u4E0D\u5141\u8BB8\u52A0\u597D\u53CB", 30516: "\u8BF7\u6C42\u6DFB\u52A0\u597D\u53CB\u65F6\uFF0C\u5BF9\u65B9\u7684\u52A0\u597D\u53CB\u9A8C\u8BC1\u65B9\u5F0F\u662F\u4E0D\u5141\u8BB8\u4EFB\u4F55\u4EBA\u6DFB\u52A0\u81EA\u5DF1\u4E3A\u597D\u53CB", 30525: "\u8BF7\u6C42\u6DFB\u52A0\u597D\u53CB\u65F6\uFF0C\u81EA\u5DF1\u5728\u5BF9\u65B9\u7684\u9ED1\u540D\u5355\u4E2D\uFF0C\u4E0D\u5141\u8BB8\u52A0\u597D\u53CB", 30539: "\u7B49\u5F85\u5BF9\u65B9\u540C\u610F", 30540: "\u6DFB\u52A0\u597D\u53CB\u8BF7\u6C42\u88AB\u5B89\u5168\u7B56\u7565\u6253\u51FB\uFF0C\u8BF7\u52FF\u9891\u7E41\u53D1\u8D77\u6DFB\u52A0\u597D\u53CB\u8BF7\u6C42", 31704: "\u4E0E\u8BF7\u6C42\u5220\u9664\u7684\u5E10\u53F7\u4E4B\u95F4\u4E0D\u5B58\u5728\u597D\u53CB\u5173\u7CFB", 31707: "\u5220\u9664\u597D\u53CB\u8BF7\u6C42\u88AB\u5B89\u5168\u7B56\u7565\u6253\u51FB\uFF0C\u8BF7\u52FF\u9891\u7E41\u53D1\u8D77\u5220\u9664\u597D\u53CB\u8BF7\u6C42", 50001: "\u89E3\u5305\u5931\u8D25", 50002: "\u8BF7\u6C42\u53C2\u6570\u9519\u8BEF\uFF0C\u8BF7\u6839\u636E\u9519\u8BEF\u63CF\u8FF0\u68C0\u67E5\u8BF7\u6C42\u662F\u5426\u6B63\u786E", 50004: "\u4F1A\u8BDD\u5206\u7EC4\u4E0D\u5B58\u5728", 51006: "\u4F1A\u8BDD\u6807\u8BB0\u6BCF\u6B21\u8C03\u6574\u7684\u4F1A\u8BDD\u6570\u4E3A\u7A7A\u6216\u8005\u8D85\u8FC7\u4E86100\u4E2A\u4E0A\u9650", 51007: "GroupID \u6362 GroupCode \u5931\u8D25\uFF0C\u5185\u90E8\u9519\u8BEF\u6216 Group \u5DF2\u7ECF\u89E3\u6563", 51008: "\u4F1A\u8BDD\u5206\u7EC4\u7684\u603B\u7684\u4F1A\u8BDD\u6570\u8D85\u8FC7\u4E861000", 51009: "\u5220\u9664\u4F1A\u8BDD\u5206\u7EC4\u65F6\u5206\u7EC4\u4E0D\u5B58\u5728", 51010: "\u4F1A\u8BDD\u5206\u7EC4\u6570\u8D85\u8FC7\u4E86\u4E0A\u9650\uFF08\u9ED8\u8BA420\u4E2A\uFF09", 51011: "\u5206\u7EC4\u540D\u8D85\u8FC7\u4E8632\u4E2A\u5B57\u8282" }, rr = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        n2(this, o3), a3 = t3.call(this);
        var s3 = e4.code, r3 = e4.message, i3 = e4.data;
        return a3.code = s3, r3 ? a3.message = r3 : a3._isIntl ? a3.message = mn[a3.code] : a3.message = sr2[a3.code] || fn2[a3.code], a3.data = i3 || {}, a3;
      }
      return s2(o3);
    }(p2(Error)), ir = null, cr = function(e3) {
      ir = e3;
    }, ur = function(e3) {
      return Promise.resolve(er(e3));
    }, lr = function(e3) {
      var t3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
      if (e3 instanceof rr)
        return t3 && null !== ir && ir.emit(S2.ERROR, e3), Promise.reject(e3);
      if (e3 instanceof Error) {
        var o3 = new rr({ code: hn.UNCAUGHT_ERROR, message: mn[hn.UNCAUGHT_ERROR] });
        return t3 && null !== ir && ir.emit(S2.ERROR, o3), Promise.reject(o3);
      }
      if (!dt2(e3) && !dt2(e3.code)) {
        var n3 = new rr(e3);
        return t3 && null !== ir && ir.emit(S2.ERROR, n3), Promise.reject(n3);
      }
      Ye2.error("IMPromise.reject code required!");
    }, dr = function(e3) {
      i2(a3, e3);
      var o3 = f2(a3);
      function a3(e4) {
        var t3;
        return n2(this, a3), (t3 = o3.call(this, e4))._className = "C2CModule", t3._messageFromUnreadDBMap = /* @__PURE__ */ new Map(), t3;
      }
      return s2(a3, [{ key: "onNewC2CMessage", value: function(e4) {
        var t3 = e4.dataList, o4 = e4.isInstantMessage, n3 = e4.C2CRemainingUnreadList, a4 = e4.C2CPairUnreadList;
        Ye2.debug("".concat(this._className, ".onNewC2CMessage count:").concat(t3.length, " isInstantMessage:").concat(o4));
        var s3 = this._newC2CMessageStoredAndSummary({ dataList: t3, C2CRemainingUnreadList: n3, C2CPairUnreadList: a4, isInstantMessage: o4 }), r3 = s3.conversationOptionsList, i3 = s3.messageList, c3 = s3.isUnreadC2CMessage;
        (this.filterModifiedMessage(i3), r3.length > 0) && this.getModule(jo).onNewMessage({ conversationOptionsList: r3, isInstantMessage: o4, isUnreadC2CMessage: c3 });
        var u3 = this.filterUnmodifiedMessage(i3);
        o4 && u3.length > 0 && this.emitOuterEvent(S2.MESSAGE_RECEIVED, u3), i3.length = 0;
      } }, { key: "_newC2CMessageStoredAndSummary", value: function(e4) {
        for (var t3 = e4.dataList, o4 = e4.C2CRemainingUnreadList, n3 = e4.C2CPairUnreadList, a4 = e4.isInstantMessage, s3 = null, r3 = [], i3 = [], c3 = {}, u3 = this.getModule(Qo), l3 = this.getModule(un), d3 = false, p3 = this.getModule(jo), g3 = 0, _3 = t3.length; g3 < _3; g3++) {
          var h3 = t3[g3];
          h3.currentUser = this.getMyUserID(), h3.conversationType = D2.CONV_C2C, h3.isSystemMessage = !!h3.isSystemMessage, (dt2(h3.nick) || dt2(h3.avatar)) && (d3 = true, Ye2.debug("".concat(this._className, "._newC2CMessageStoredAndSummary nick or avatar missing!"))), s3 = new Zs(h3), h3.elements = u3.parseElements(h3.elements, h3.from), s3.setElement(h3.elements), s3.setNickAndAvatar({ nick: h3.nick, avatar: h3.avatar });
          var f3 = s3.conversationID;
          if (a4) {
            if (1 === this._messageFromUnreadDBMap.get(s3.ID))
              continue;
            var m3 = false;
            if (s3.from !== this.getMyUserID()) {
              var v3 = p3.getLatestMessageSentByPeer(f3);
              if (v3) {
                var M3 = v3.nick, y3 = v3.avatar;
                d3 ? s3.setNickAndAvatar({ nick: M3, avatar: y3 }) : M3 === s3.nick && y3 === s3.avatar || (m3 = true);
              }
            } else {
              var I3 = p3.getLatestMessageSentByMe(f3);
              if (I3) {
                var C3 = I3.nick, T3 = I3.avatar;
                C3 === s3.nick && T3 === s3.avatar || p3.modifyMessageSentByMe({ conversationID: f3, latestNick: s3.nick, latestAvatar: s3.avatar });
              }
            }
            var E3 = 1 === t3[g3].isModified;
            if (p3.isMessageSentByCurrentInstance(s3) ? s3.isModified = E3 : E3 = false, 0 === h3.msgLifeTime)
              s3._onlineOnlyFlag = true, p3.isMessageSentByCurrentInstance(s3) || i3.push(s3);
            else {
              if (!p3.pushIntoMessageList(i3, s3, E3))
                continue;
              m3 && (p3.modifyMessageSentByPeer({ conversationID: f3, latestNick: s3.nick, latestAvatar: s3.avatar }), p3.updateUserProfileSpecifiedKey({ conversationID: f3, nick: s3.nick, avatar: s3.avatar }));
            }
            a4 && s3.clientTime > 0 && l3.addMessageDelay(s3.clientTime);
          } else
            this._messageFromUnreadDBMap.set(s3.ID, 1);
          if (0 !== h3.msgLifeTime) {
            if (false === s3._onlineOnlyFlag) {
              var S3 = p3.getLastMessageTime(f3);
              if (rt2(S3) && s3.time < S3)
                continue;
              if (dt2(c3[f3])) {
                var N3 = 0;
                "in" === s3.flow && (s3._isExcludedFromUnreadCount || (N3 = 1)), c3[f3] = r3.push({ conversationID: f3, unreadCount: N3, type: s3.conversationType, subType: s3.conversationSubType, lastMessage: s3._isExcludedFromLastMessage ? "" : s3 }) - 1;
              } else {
                var A3 = c3[f3];
                r3[A3].type = s3.conversationType, r3[A3].subType = s3.conversationSubType, r3[A3].lastMessage = s3._isExcludedFromLastMessage ? "" : s3, "in" === s3.flow && (s3._isExcludedFromUnreadCount || r3[A3].unreadCount++);
              }
            }
          } else
            s3._onlineOnlyFlag = true;
        }
        var k3 = false;
        if (lt2(n3))
          for (var R3 = function(e5, t4) {
            if (n3[e5].unreadCount > 0) {
              k3 = true;
              var o5 = r3.find(function(t5) {
                return t5.conversationID === "C2C".concat(n3[e5].from);
              });
              o5 ? o5.unreadCount = n3[e5].unreadCount : r3.push({ conversationID: "C2C".concat(n3[e5].from), unreadCount: n3[e5].unreadCount, type: D2.CONV_C2C });
            }
          }, L3 = 0, O3 = n3.length; L3 < O3; L3++)
            R3(L3);
        if (lt2(o4))
          for (var G3 = function(e5, t4) {
            r3.find(function(t5) {
              return t5.conversationID === "C2C".concat(o4[e5].from);
            }) || r3.push({ conversationID: "C2C".concat(o4[e5].from), type: D2.CONV_C2C, lastMsgTime: o4[e5].lastMsgTime });
          }, P3 = 0, U3 = o4.length; P3 < U3; P3++)
            G3(P3);
        return { conversationOptionsList: r3, messageList: i3, isUnreadC2CMessage: k3 };
      } }, { key: "onC2CMessageRevoked", value: function(e4) {
        var t3 = this, o4 = this.getModule(jo), n3 = [], a4 = null, s3 = true;
        e4.dataList.forEach(function(e5) {
          if (e5.c2cMessageRevokedNotify) {
            var r3 = e5.c2cMessageRevokedNotify.revokedInfos;
            dt2(r3) || r3.forEach(function(e6) {
              var r4 = t3.getMyUserID() === e6.from ? "".concat(D2.CONV_C2C).concat(e6.to) : "".concat(D2.CONV_C2C).concat(e6.from);
              a4 = o4.revoke(r4, e6.sequence, e6.random);
              var i3 = e6.revokerInfo && e6.revokerInfo.revoker;
              if (a4)
                a4.revoker = i3, n3.push(a4);
              else {
                var c3 = { conversationID: r4, sequence: e6.sequence, time: e6.time, revoker: i3 };
                o4.isLastMessageRevoked(c3) && (n3.push(c3), s3 = false);
              }
            });
          }
        }), 0 !== n3.length && (o4.onMessageRevoked(n3), true === s3 && (Ye2.log("".concat(this._className, ".onC2CMessageRevoked count:").concat(n3.length)), this.emitOuterEvent(S2.MESSAGE_REVOKED, n3)));
      } }, { key: "onC2CMessageReadReceipt", value: function(e4) {
        var t3 = this;
        e4.dataList.forEach(function(e5) {
          if (!oo(e5.c2cMessageReadReceipt)) {
            var o4 = e5.c2cMessageReadReceipt.to;
            e5.c2cMessageReadReceipt.uinPairReadArray.forEach(function(e6) {
              var n3 = e6.peerReadTime;
              Ye2.debug("".concat(t3._className, "._onC2CMessageReadReceipt to:").concat(o4, " peerReadTime:").concat(n3));
              var a4 = "".concat(D2.CONV_C2C).concat(o4), s3 = t3.getModule(jo);
              s3.recordPeerReadTime(a4, n3), s3.updateMessageIsPeerReadProperty(a4, n3);
            });
          }
        });
      } }, { key: "onC2CMessageReadNotice", value: function(e4) {
        var t3 = this;
        e4.dataList.forEach(function(e5) {
          if (!oo(e5.c2cMessageReadNotice)) {
            var o4 = t3.getModule(jo);
            e5.c2cMessageReadNotice.uinPairReadArray.forEach(function(e6) {
              var n3 = e6.from, a4 = e6.peerReadTime;
              Ye2.debug("".concat(t3._className, ".onC2CMessageReadNotice from:").concat(n3, " lastReadTime:").concat(a4));
              var s3 = "".concat(D2.CONV_C2C).concat(n3);
              o4.updateIsReadAfterReadReport({ conversationID: s3, lastMessageTime: a4 }), o4.updateUnreadCount(s3);
            });
          }
        });
      } }, { key: "onC2CMessageModified", value: function(e4) {
        Ye2.debug("".concat(this._className, ".onC2CMessageModified options:"), JSON.stringify(e4));
        var o4 = this.getModule(jo);
        e4.dataList.forEach(function(e5) {
          o4.onMessageModified(t2(t2({}, e5), {}, { conversationType: D2.CONV_C2C }));
        });
      } }, { key: "onReadReceiptList", value: function(e4) {
        Ye2.debug("".concat(this._className, ".onReadReceiptList options:"), JSON.stringify(e4));
        var t3 = e4.dataList, o4 = t3.userID, n3 = t3.readReceiptList;
        this.getModule(jo).updateReadReceiptInfo({ userID: o4, readReceiptList: n3 });
      } }, { key: "sendMessage", value: function(e4, t3) {
        var o4 = this._createC2CMessagePack(e4, t3);
        return this.request(o4);
      } }, { key: "_createC2CMessagePack", value: function(e4, t3) {
        var o4 = null;
        t3 && (t3.offlinePushInfo && (o4 = t3.offlinePushInfo), true === t3.onlineUserOnly && (o4 ? o4.disablePush = true : o4 = { disablePush: true }));
        var n3 = "";
        it2(e4.cloudCustomData) && e4.cloudCustomData.length > 0 && (n3 = e4.cloudCustomData);
        var a4 = [];
        if (ut2(t3) && ut2(t3.messageControlInfo)) {
          var s3 = t3.messageControlInfo, r3 = s3.excludedFromUnreadCount, i3 = s3.excludedFromLastMessage;
          true === r3 && a4.push("NoUnread"), true === i3 && a4.push("NoLastMsg");
        }
        var c3 = this.isOnlineMessage(e4, t3) ? 0 : void 0;
        return { protocolName: Sn, tjgID: this.generateTjgID(e4), requestData: { fromAccount: this.getMyUserID(), toAccount: e4.to, msgBody: e4.getElements(), cloudCustomData: n3, msgSeq: e4.sequence, msgRandom: e4.random, msgLifeTime: c3, nick: e4.nick, avatar: e4.avatar, offlinePushInfo: o4 ? { pushFlag: true === o4.disablePush ? 1 : 0, title: o4.title || "", desc: o4.description || "", ext: o4.extension || "", apnsInfo: { badgeMode: true === o4.ignoreIOSBadge ? 1 : 0, isVoipPush: this._isVoipPush(o4) }, androidInfo: { OPPOChannelID: o4.androidOPPOChannelID || "" } } : void 0, messageControlInfo: 0 !== c3 ? a4 : void 0, clientTime: e4.clientTime, needReadReceipt: true === e4.needReadReceipt ? 1 : 0, isSupportExtension: true === e4.isSupportExtension ? 1 : 0 } };
      } }, { key: "_isVoipPush", value: function(e4) {
        var t3 = void 0;
        return dt2(e4.disableVoipPush) || (t3 = false === e4.disableVoipPush ? 1 : 0), t3;
      } }, { key: "isOnlineMessage", value: function(e4, t3) {
        return !(!t3 || true !== t3.onlineUserOnly);
      } }, { key: "revokeMessage", value: function(e4) {
        return this.request({ protocolName: On2, requestData: { msgInfo: { fromAccount: e4.from, toAccount: e4.to, msgSeq: e4.sequence, msgRandom: e4.random, msgTimeStamp: e4.time } } });
      } }, { key: "deleteMessage", value: function(e4) {
        var t3 = e4.to, o4 = e4.keyList;
        return Ye2.log("".concat(this._className, ".deleteMessage toAccount:").concat(t3, " count:").concat(o4.length)), this.request({ protocolName: Fn2, requestData: { fromAccount: this.getMyUserID(), to: t3, keyList: o4 } });
      } }, { key: "modifyRemoteMessage", value: function(e4) {
        var t3 = e4.from, o4 = e4.to, n3 = e4.version, a4 = void 0 === n3 ? 0 : n3, s3 = e4.sequence, r3 = e4.random, i3 = e4.time, c3 = e4.payload, u3 = e4.type, l3 = e4.cloudCustomData, d3 = void 0;
        return Jt(u3) && (d3 = []).push({ type: u3, content: c3 }), this.request({ protocolName: qn2, requestData: { from: t3, to: o4, version: a4, sequence: s3, random: r3, time: i3, elements: d3, cloudCustomData: l3 } });
      } }, { key: "setMessageRead", value: function(e4) {
        var t3 = this, o4 = e4.conversationID, n3 = e4.lastMessageTime, a4 = "".concat(this._className, ".setMessageRead");
        if (Ye2.log("".concat(a4, " conversationID:").concat(o4, " lastMessageTime:").concat(n3)), !rt2(n3)) {
          var s3 = "";
          s3 = this.isIntl() ? "Do not modify Conversation.lastMessage.lastTime, otherwise the result of setMessageRead will be incorrect" : "\u8BF7\u52FF\u4FEE\u6539 Conversation.lastMessage.lastTime\uFF0C\u5426\u5219\u53EF\u80FD\u4F1A\u5BFC\u81F4\u5DF2\u8BFB\u4E0A\u62A5\u7ED3\u679C\u4E0D\u51C6\u786E", Ye2.warn("".concat(a4, " ").concat(s3));
        }
        var r3 = new bs2(ws2.SET_C2C_MESSAGE_READ);
        return r3.setMessage("conversationID:".concat(o4, " lastMessageTime:").concat(n3)), this.request({ protocolName: Gn2, requestData: { C2CMsgReaded: { cookie: "", C2CMsgReadedItem: [{ toAccount: o4.replace("C2C", ""), lastMessageTime: n3, receipt: 1 }] } } }).then(function() {
          r3.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(a4, " ok"));
          var e5 = t3.getModule(jo);
          return e5.updateIsReadAfterReadReport({ conversationID: o4, lastMessageTime: n3 }), e5.updateUnreadCount(o4), er();
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            r3.setError(e5, n4, a5).end();
          }), Ye2.log("".concat(a4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "getRoamingMessage", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".getRoamingMessage"), n3 = e4.peerAccount, a4 = e4.conversationID, s3 = e4.count, r3 = e4.lastMessageTime, i3 = e4.messageKey, c3 = "peerAccount:".concat(n3, " count:").concat(s3 || 15, " lastMessageTime:").concat(r3 || 0, " messageKey:").concat(i3);
        Ye2.log("".concat(o4, " ").concat(c3));
        var u3 = new bs2(ws2.GET_C2C_ROAMING_MESSAGES);
        return this.request({ protocolName: bn2, requestData: { peerAccount: n3, count: s3 || 15, lastMessageTime: r3 || 0, messageKey: i3 } }).then(function(e5) {
          var n4 = e5.data, s4 = n4.complete, r4 = n4.messageList, i4 = n4.messageKey, l3 = n4.lastMessageTime;
          dt2(r4) ? Ye2.log("".concat(o4, " ok. complete:").concat(s4, " but messageList is undefined!")) : Ye2.log("".concat(o4, " ok. complete:").concat(s4, " count:").concat(r4.length)), u3.setNetworkType(t3.getNetworkType()).setMessage("".concat(c3, " complete:").concat(s4, " length:").concat(r4.length)).end();
          var d3 = t3.getModule(jo);
          1 === s4 && d3.setCompleted(a4);
          var p3 = d3.onRoamingMessage(r4, a4);
          d3.modifyMessageList(a4), d3.updateIsRead(a4), d3.updateRoamingMessageKeyAndTime(a4, i4, l3);
          var g3 = d3.getPeerReadTime(a4);
          if (Ye2.log("".concat(o4, " update isPeerRead property. conversationID:").concat(a4, " peerReadTime:").concat(g3)), g3)
            d3.updateMessageIsPeerReadProperty(a4, g3);
          else {
            var _3 = a4.replace(D2.CONV_C2C, "");
            t3.getRemotePeerReadTime([_3]).then(function() {
              d3.updateMessageIsPeerReadProperty(a4, d3.getPeerReadTime(a4));
            });
          }
          var h3 = "";
          if (p3.length > 0)
            h3 = p3[0].ID;
          else {
            var f3 = d3.getLocalOldestMessage(a4);
            f3 && (h3 = f3.ID);
          }
          return Ye2.log("".concat(o4, " nextReqID:").concat(h3, " stored message count:").concat(p3.length)), { nextReqID: h3, storedMessageList: p3 };
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            u3.setMessage(c3).setError(e5, n4, a5).end();
          }), Ye2.warn("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "getRoamingMessagesHopping", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".getRoamingMessagesHopping"), n3 = e4.peerAccount, a4 = e4.time, s3 = void 0 === a4 ? 0 : a4, r3 = e4.count, i3 = e4.direction, c3 = "".concat(D2.CONV_C2C).concat(n3), u3 = "peerAccount:".concat(n3, " count:").concat(r3, " time:").concat(s3, " direction:").concat(i3);
        Ye2.log("".concat(o4, " ").concat(u3));
        var l3 = new bs2(ws2.GET_C2C_ROAMING_MESSAGES_HOPPING);
        return this.request({ protocolName: bn2, requestData: { peerAccount: n3, count: r3 + 1, lastMessageTime: s3, direction: i3 } }).then(function(e5) {
          var n4 = e5.data, a5 = n4.complete, s4 = n4.messageList, r4 = void 0 === s4 ? [] : s4, d3 = n4.lastMessageTime;
          Ye2.log("".concat(o4, " ok. complete:").concat(a5, " count:").concat(r4.length)), l3.setNetworkType(t3.getNetworkType()).setMessage("".concat(u3, " complete:").concat(a5, " length:").concat(r4.length)).end(), 1 !== a5 && (1 === i3 ? r4.pop() : r4.shift());
          var p3 = t3.getModule(jo).onRoamingMessage(r4, c3, false);
          t3._modifyMessageList(c3, p3);
          var g3 = t3._computeResult({ complete: a5, lastMessageTime: d3, resultList: p3 });
          return er(g3);
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            l3.setMessage(u3).setError(e5, n4, a5).end();
          }), Ye2.warn("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "_computeResult", value: function(e4) {
        var t3 = e4.complete, o4 = void 0 === t3 ? 0 : t3, n3 = e4.lastMessageTime, a4 = e4.resultList, s3 = { messageList: v2(void 0 === a4 ? [] : a4), isCompleted: false, nextMessageTime: "" };
        return 1 === o4 ? (s3.isCompleted = true, s3) : (s3.nextMessageTime = n3, s3);
      } }, { key: "_modifyMessageList", value: function(e4, t3) {
        var o4 = this.getModule(jo).getLocalConversation(e4);
        if (o4)
          for (var n3 = o4.userProfile.nick, a4 = o4.userProfile.avatar, s3 = this.getModule(Vo).getNickAndAvatarByUserID(this.getMyUserID()), r3 = s3.nick, i3 = s3.avatar, c3 = t3.length - 1; c3 >= 0; c3--) {
            var u3 = t3[c3];
            "in" === u3.flow && (u3.nick !== n3 && u3.setNickAndAvatar({ nick: n3 }), u3.avatar !== a4 && u3.setNickAndAvatar({ avatar: a4 })), "out" === u3.flow && (u3.nick !== r3 && u3.setNickAndAvatar({ nick: r3 }), u3.avatar !== i3 && u3.setNickAndAvatar({ avatar: i3 }));
          }
      } }, { key: "getRemotePeerReadTime", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".getRemotePeerReadTime");
        if (oo(e4))
          return Ye2.warn("".concat(o4, " userIDList is empty!")), Promise.resolve();
        var n3 = new bs2(ws2.GET_PEER_READ_TIME);
        return Ye2.log("".concat(o4, " userIDList:").concat(e4)), this.request({ protocolName: wn2, requestData: { userIDList: e4 } }).then(function(a4) {
          var s3 = a4.data.peerReadTimeList;
          Ye2.log("".concat(o4, " ok. peerReadTimeList:").concat(s3));
          for (var r3 = "", i3 = t3.getModule(jo), c3 = 0; c3 < e4.length; c3++)
            r3 += "".concat(e4[c3], "-").concat(s3[c3], " "), s3[c3] > 0 && i3.recordPeerReadTime("C2C".concat(e4[c3]), s3[c3]);
          n3.setNetworkType(t3.getNetworkType()).setMessage(r3).end();
        }).catch(function(e5) {
          t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), a4 = o5[0], s3 = o5[1];
            n3.setError(e5, a4, s3).end();
          }), Ye2.warn("".concat(o4, " failed. error:"), e5);
        });
      } }, { key: "sendReadReceipt", value: function(e4) {
        var t3 = this, o4 = e4[0].conversationID.replace(D2.CONV_C2C, ""), n3 = new bs2(ws2.SEND_C2C_READ_RECEIPT);
        n3.setMessage("peerAccount:".concat(o4));
        var a4 = this.getMyUserID(), s3 = e4.filter(function(e5) {
          return e5.from !== a4 && true === e5.needReadReceipt;
        }).map(function(e5) {
          return { fromAccount: e5.from, toAccount: e5.to, sequence: e5.sequence, random: e5.random, time: e5.time, clientTime: e5.clientTime };
        });
        if (0 === s3.length)
          return lr({ code: hn.READ_RECEIPT_MESSAGE_LIST_EMPTY });
        var r3 = "".concat(this._className, ".sendReadReceipt");
        return Ye2.log("".concat(r3, ". peerAccount:").concat(o4, " messageInfoList length:").concat(s3.length)), this.request({ protocolName: ya, requestData: { peerAccount: o4, messageInfoList: s3 } }).then(function(e5) {
          return n3.end(), Ye2.log("".concat(r3, " ok")), er();
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), a5 = o5[0], s4 = o5[1];
            n3.setError(e5, a5, s4).end();
          }), Ye2.warn("".concat(r3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "getReadReceiptList", value: function(e4) {
        var t3 = "".concat(this._className, ".getReadReceiptList"), o4 = this.getMyUserID(), n3 = e4.filter(function(e5) {
          return e5.from === o4 && true === e5.needReadReceipt;
        });
        return Ye2.log("".concat(t3, " userID:").concat(o4, " messageList length:").concat(n3.length)), ur({ messageList: n3 });
      } }, { key: "getMessageExtensions", value: function(e4, t3) {
        return Ye2.log("".concat(this._className, ".getMessageExtensions startSequence:").concat(t3)), this.request({ protocolName: Vn2, requestData: { from: e4.from, to: e4.to, messageKey: this._getMessageKey(e4), startSequence: t3 } });
      } }, { key: "modifyMessageExtensions", value: function(e4, t3) {
        var o4 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        return Ye2.log("".concat(this._className, ".modifyMessageExtensions operateType:").concat(o4)), this.request({ protocolName: xn2, requestData: { from: e4.from, to: e4.to, messageKey: this._getMessageKey(e4), extensionList: t3, operateType: o4 } });
      } }, { key: "_getMessageKey", value: function(e4) {
        var t3 = e4.clientSequence, o4 = e4.random, n3 = e4.time;
        return "".concat(t3, "_").concat(o4, "_").concat(n3);
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._messageFromUnreadDBMap.clear();
      } }]), a3;
    }(vn), pr = function() {
      function e3() {
        n2(this, e3), this.list = /* @__PURE__ */ new Map(), this._className = "MessageListHandler", this._latestMessageSentByPeerMap = /* @__PURE__ */ new Map(), this._latestMessageSentByMeMap = /* @__PURE__ */ new Map();
      }
      return s2(e3, [{ key: "getLocalOldestMessageByConversationID", value: function(e4) {
        if (!e4)
          return null;
        if (!this.list.has(e4))
          return null;
        var t3 = this.list.get(e4).values();
        return t3 ? t3.next().value : null;
      } }, { key: "pushIn", value: function(e4) {
        var t3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], o3 = e4.conversationID, n3 = true;
        this.list.has(o3) || this.list.set(o3, /* @__PURE__ */ new Map());
        var a3 = this._getUniqueIDOfMessage(e4), s3 = this.list.get(o3).has(a3);
        if (s3) {
          var r3 = this.list.get(o3).get(a3);
          if (!t3 || true === r3.isModified)
            return n3 = false;
        }
        return this.list.get(o3).set(a3, e4), this._setLatestMessageSentByPeer(o3, e4), this._setLatestMessageSentByMe(o3, e4), n3;
      } }, { key: "unshift", value: function(e4, t3) {
        var o3;
        if (lt2(e4) ? e4.length > 0 && (o3 = e4[0].conversationID, this._unshiftMultipleMessages(e4, t3)) : (o3 = e4.conversationID, this._unshiftSingleMessage(e4, t3)), o3 && o3.startsWith(D2.CONV_C2C)) {
          var n3 = Array.from(this.list.get(o3).values()), a3 = n3.length;
          if (0 === a3)
            return;
          for (var s3 = a3 - 1; s3 >= 0; s3--)
            if ("out" === n3[s3].flow) {
              this._setLatestMessageSentByMe(o3, n3[s3]);
              break;
            }
          for (var r3 = a3 - 1; r3 >= 0; r3--)
            if ("in" === n3[r3].flow) {
              this._setLatestMessageSentByPeer(o3, n3[r3]);
              break;
            }
        }
      } }, { key: "_unshiftSingleMessage", value: function(e4, t3) {
        var o3 = e4.conversationID, n3 = this._getUniqueIDOfMessage(e4);
        if (!this.list.has(o3))
          return this.list.set(o3, /* @__PURE__ */ new Map()), this.list.get(o3).set(n3, e4), void t3.push(e4);
        var a3 = this.list.get(o3), s3 = Array.from(a3);
        a3.has(n3) || (s3.unshift([n3, e4]), this.list.set(o3, new Map(s3)), t3.push(e4));
      } }, { key: "_unshiftMultipleMessages", value: function(e4, t3) {
        for (var o3 = e4.length, n3 = [], a3 = e4[0].conversationID, s3 = this.list.get(a3), r3 = this.list.has(a3) ? Array.from(s3) : [], i3 = 0; i3 < o3; i3++) {
          var c3 = this._getUniqueIDOfMessage(e4[i3]);
          s3 && s3.has(c3) || (n3.push([c3, e4[i3]]), t3.push(e4[i3]));
        }
        this.list.set(a3, new Map(n3.concat(r3)));
      } }, { key: "remove", value: function(e4) {
        var t3 = e4.conversationID, o3 = this._getUniqueIDOfMessage(e4);
        this.list.has(t3) && this.list.get(t3).delete(o3);
      } }, { key: "revoke", value: function(e4, t3, o3) {
        if (Ye2.debug("revoke message", e4, t3, o3), this.list.has(e4)) {
          var n3, a3 = E2(this.list.get(e4));
          try {
            for (a3.s(); !(n3 = a3.n()).done; ) {
              var s3 = m2(n3.value, 2)[1];
              if (s3.sequence === t3 && (dt2(o3) || s3.random === o3))
                return s3.isRevoked = true, s3;
            }
          } catch (r3) {
            a3.e(r3);
          } finally {
            a3.f();
          }
        }
        return null;
      } }, { key: "removeByConversationID", value: function(e4) {
        this.list.has(e4) && (this.list.delete(e4), this._latestMessageSentByPeerMap.delete(e4), this._latestMessageSentByMeMap.delete(e4));
      } }, { key: "findMessage", value: function(e4) {
        var t3, o3 = null, n3 = E2(this.list);
        try {
          for (n3.s(); !(t3 = n3.n()).done; )
            for (var a3 = v2(m2(t3.value, 2)[1].values()), s3 = a3.length, r3 = 0; r3 < s3; r3++)
              if (a3[r3].ID === e4) {
                o3 = a3[r3];
                break;
              }
        } catch (i3) {
          n3.e(i3);
        } finally {
          n3.f();
        }
        return o3;
      } }, { key: "updateMessageIsPeerReadProperty", value: function(e4, t3) {
        var o3 = [];
        if (this.list.has(e4)) {
          var n3, a3 = E2(this.list.get(e4));
          try {
            for (a3.s(); !(n3 = a3.n()).done; ) {
              var s3 = m2(n3.value, 2)[1];
              s3.time <= t3 && !s3.isPeerRead && "out" === s3.flow && (s3.isPeerRead = true, o3.push(s3));
            }
          } catch (r3) {
            a3.e(r3);
          } finally {
            a3.f();
          }
          Ye2.log("".concat(this._className, ".updateMessageIsPeerReadProperty conversationID:").concat(e4, " peerReadTime:").concat(t3, " count:").concat(o3.length));
        }
        return o3;
      } }, { key: "updateMessageIsModifiedProperty", value: function(e4) {
        var t3 = e4.conversationID;
        if (this.list.has(t3)) {
          var o3 = this._getUniqueIDOfMessage(e4), n3 = this.list.get(t3).get(o3);
          n3 && (n3.isModified = true);
        }
      } }, { key: "hasLocalMessageList", value: function(e4) {
        return this.list.has(e4);
      } }, { key: "getLocalMessageList", value: function(e4) {
        return this.hasLocalMessageList(e4) ? v2(this.list.get(e4).values()) : [];
      } }, { key: "hasLocalMessage", value: function(e4, t3) {
        for (var o3 = false, n3 = this.getLocalMessageList(e4), a3 = n3.length, s3 = 0; s3 < a3; s3++)
          n3[s3].ID === t3 && (o3 = true);
        return o3;
      } }, { key: "getLocalMessage", value: function(e4, t3) {
        for (var o3 = null, n3 = this.getLocalMessageList(e4), a3 = n3.length, s3 = 0; s3 < a3; s3++)
          if (n3[s3].ID === t3) {
            o3 = n3[s3];
            break;
          }
        return o3;
      } }, { key: "getLocalLastMessage", value: function(e4) {
        var t3 = this.getLocalMessageList(e4);
        return t3[t3.length - 1];
      } }, { key: "getLocalOldestMessage", value: function(e4) {
        return this.getLocalMessageList(e4)[0];
      } }, { key: "_setLatestMessageSentByPeer", value: function(e4, t3) {
        e4.startsWith(D2.CONV_C2C) && "in" === t3.flow && this._latestMessageSentByPeerMap.set(e4, t3);
      } }, { key: "_setLatestMessageSentByMe", value: function(e4, t3) {
        e4.startsWith(D2.CONV_C2C) && "out" === t3.flow && this._latestMessageSentByMeMap.set(e4, t3);
      } }, { key: "getLatestMessageSentByPeer", value: function(e4) {
        return this._latestMessageSentByPeerMap.get(e4);
      } }, { key: "getLatestMessageSentByMe", value: function(e4) {
        return this._latestMessageSentByMeMap.get(e4);
      } }, { key: "modifyMessageSentByPeer", value: function(e4) {
        var t3 = e4.conversationID, o3 = e4.latestNick, n3 = e4.latestAvatar, a3 = this.list.get(t3);
        if (!oo(a3)) {
          var s3 = Array.from(a3.values()), r3 = s3.length;
          if (0 !== r3) {
            for (var i3 = null, c3 = 0, u3 = false, l3 = r3 - 1; l3 >= 0; l3--)
              "in" === s3[l3].flow && ((i3 = s3[l3]).nick !== o3 && (i3.setNickAndAvatar({ nick: o3 }), u3 = true), i3.avatar !== n3 && (i3.setNickAndAvatar({ avatar: n3 }), u3 = true), u3 && (c3 += 1));
            Ye2.log("".concat(this._className, ".modifyMessageSentByPeer conversationID:").concat(t3, " count:").concat(c3));
          }
        }
      } }, { key: "modifyMessageSentByMe", value: function(e4) {
        var t3 = e4.conversationID, o3 = e4.latestNick, n3 = e4.latestAvatar, a3 = this.list.get(t3);
        if (!oo(a3)) {
          var s3 = Array.from(a3.values()), r3 = s3.length;
          if (0 !== r3) {
            for (var i3 = null, c3 = 0, u3 = false, l3 = r3 - 1; l3 >= 0; l3--)
              "out" === s3[l3].flow && ((i3 = s3[l3]).nick !== o3 && (i3.setNickAndAvatar({ nick: o3 }), u3 = true), i3.avatar !== n3 && (i3.setNickAndAvatar({ avatar: n3 }), u3 = true), u3 && (c3 += 1));
            Ye2.log("".concat(this._className, ".modifyMessageSentByMe conversationID:").concat(t3, " count:").concat(c3));
          }
        }
      } }, { key: "getTopicConversationIDList", value: function(e4) {
        return v2(this.list.keys()).filter(function(t3) {
          return t3.startsWith("".concat(D2.CONV_GROUP).concat(e4));
        });
      } }, { key: "traversal", value: function() {
        if (0 !== this.list.size && -1 === Ye2.getLevel()) {
          console.group("conversationID-messageCount");
          var e4, t3 = E2(this.list);
          try {
            for (t3.s(); !(e4 = t3.n()).done; ) {
              var o3 = m2(e4.value, 2), n3 = o3[0], a3 = o3[1];
              console.log("".concat(n3, "-").concat(a3.size));
            }
          } catch (s3) {
            t3.e(s3);
          } finally {
            t3.f();
          }
          console.groupEnd();
        }
      } }, { key: "onMessageModified", value: function(e4, t3) {
        if (!this.list.has(e4))
          return { isUpdated: false, message: null };
        var o3 = this._getUniqueIDOfMessage(t3), n3 = this.list.get(e4).has(o3);
        if (Ye2.debug("".concat(this._className, ".onMessageModified conversationID:").concat(e4, " uniqueID:").concat(o3, " has:").concat(n3)), n3) {
          var a3 = this.list.get(e4).get(o3), s3 = t3.messageVersion, r3 = t3.elements, i3 = t3.cloudCustomData;
          return a3.version < s3 ? (a3.version = s3, a3._elements = JSON.parse(JSON.stringify(r3)), a3.payload = JSON.parse(JSON.stringify(r3[0].content)), a3.type = r3[0].type, a3.cloudCustomData = i3, a3.isModified = true, { isUpdated: true, message: a3 }) : { isUpdated: false, message: a3 };
        }
        return { isUpdated: false, message: null };
      } }, { key: "_getUniqueIDOfMessage", value: function(e4) {
        var t3 = e4.from, o3 = e4.to, n3 = e4.random, a3 = e4.sequence, s3 = e4.time;
        return "".concat(t3, "-").concat(o3, "-").concat(n3, "-").concat(a3, "-").concat(s3);
      } }, { key: "reset", value: function() {
        this.list.clear(), this._latestMessageSentByPeerMap.clear(), this._latestMessageSentByMeMap.clear();
      } }]), e3;
    }(), gr = "_a2KeyAndTinyIDUpdated", _r = "_cloudConfigUpdated", hr = "_profileUpdated";
    function fr(e3) {
      this.mixin(e3);
    }
    fr.mixin = function(e3) {
      var t3 = e3.prototype || e3;
      t3._isReady = false, t3.ready = function(e4) {
        var t4 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        if (e4)
          return this._isReady ? void (t4 ? e4.call(this) : setTimeout(e4, 1)) : (this._readyQueue = this._readyQueue || [], void this._readyQueue.push(e4));
      }, t3.triggerReady = function() {
        var e4 = this;
        this._isReady = true, setTimeout(function() {
          var t4 = e4._readyQueue;
          e4._readyQueue = [], t4 && t4.length > 0 && t4.forEach(function(e5) {
            e5.call(this);
          }, e4);
        }, 1);
      }, t3.resetReady = function() {
        this._isReady = false, this._readyQueue = [];
      }, t3.isReady = function() {
        return this._isReady;
      };
    };
    var mr = ["jpg", "jpeg", "gif", "png", "bmp", "image", "webp"], vr = ["mp4", "quicktime", "mov"], Mr = 1, yr = 2, Ir = 3, Cr = 255, Tr = function() {
      function e3(t3) {
        var o3 = this;
        n2(this, e3), oo(t3) || (this.userID = t3.userID || "", this.nick = t3.nick || "", this.gender = t3.gender || "", this.birthday = t3.birthday || 0, this.location = t3.location || "", this.selfSignature = t3.selfSignature || "", this.allowType = t3.allowType || D2.ALLOW_TYPE_ALLOW_ANY, this.language = t3.language || 0, this.avatar = t3.avatar || "", this.messageSettings = t3.messageSettings || 0, this.adminForbidType = t3.adminForbidType || D2.FORBID_TYPE_NONE, this.level = t3.level || 0, this.role = t3.role || 0, this.lastUpdatedTime = 0, this.profileCustomField = [], oo(t3.profileCustomField) || t3.profileCustomField.forEach(function(e4) {
          o3.profileCustomField.push({ key: e4.key, value: e4.value });
        }));
      }
      return s2(e3, [{ key: "validate", value: function(e4) {
        var t3 = true, o3 = "";
        if (oo(e4))
          return { valid: false, tips: "empty options" };
        if (e4.profileCustomField)
          for (var n3 = e4.profileCustomField.length, a3 = null, s3 = 0; s3 < n3; s3++) {
            if (a3 = e4.profileCustomField[s3], !it2(a3.key) || -1 === a3.key.indexOf("Tag_Profile_Custom"))
              return { valid: false, tips: "The prefix of keys of the custom profile key-value pairs (which is profileCustomField) must be Tag_Profile_Custom" };
            if (!it2(a3.value))
              return { valid: false, tips: "The type of values of the custom profile key-value pairs (which is profileCustomField) must be String" };
          }
        for (var r3 in e4)
          if (Object.prototype.hasOwnProperty.call(e4, r3)) {
            if ("profileCustomField" === r3)
              continue;
            if (oo(e4[r3]) && !it2(e4[r3]) && !rt2(e4[r3])) {
              o3 = "key:" + r3 + ", invalid value:" + e4[r3], t3 = false;
              continue;
            }
            switch (r3) {
              case "nick":
                it2(e4[r3]) || (o3 = "nick must be a string", t3 = false), It2(e4[r3]) > 500 && (o3 = "nick name limited: must less than or equal to ".concat(500, " bytes, current size: ").concat(It2(e4[r3]), " bytes"), t3 = false);
                break;
              case "gender":
                St2(ze2, e4.gender) || (o3 = "key:gender, invalid value:" + e4.gender, t3 = false);
                break;
              case "birthday":
                rt2(e4.birthday) || (o3 = "birthday must be a number", t3 = false);
                break;
              case "location":
                it2(e4.location) || (o3 = "location must be a string", t3 = false);
                break;
              case "selfSignature":
                it2(e4.selfSignature) || (o3 = "selfSignature must be a string", t3 = false);
                break;
              case "allowType":
                St2(Xe2, e4.allowType) || (o3 = "key:allowType, invalid value:" + e4.allowType, t3 = false);
                break;
              case "language":
                rt2(e4.language) || (o3 = "language must be a number", t3 = false);
                break;
              case "avatar":
                it2(e4.avatar) || (o3 = "avatar must be a string", t3 = false);
                break;
              case "messageSettings":
                0 !== e4.messageSettings && 1 !== e4.messageSettings && (o3 = "messageSettings must be 0 or 1", t3 = false);
                break;
              case "adminForbidType":
                St2(Je2, e4.adminForbidType) || (o3 = "key:adminForbidType, invalid value:" + e4.adminForbidType, t3 = false);
                break;
              case "level":
                rt2(e4.level) || (o3 = "level must be a number", t3 = false);
                break;
              case "role":
                rt2(e4.role) || (o3 = "role must be a number", t3 = false);
                break;
              default:
                o3 = "unknown key:" + r3 + "  " + e4[r3], t3 = false;
            }
          }
        return { valid: t3, tips: o3 };
      } }]), e3;
    }(), Er = s2(function e3(t3) {
      n2(this, e3), this.value = t3, this.next = null;
    }), Sr = function() {
      function e3(t3) {
        n2(this, e3), this.MAX_LENGTH = t3, this.pTail = null, this.pNodeToDel = null, this.map = /* @__PURE__ */ new Map(), Ye2.debug("SinglyLinkedList init MAX_LENGTH:".concat(this.MAX_LENGTH));
      }
      return s2(e3, [{ key: "set", value: function(e4) {
        var t3 = new Er(e4);
        if (this.map.size < this.MAX_LENGTH)
          null === this.pTail ? (this.pTail = t3, this.pNodeToDel = t3) : (this.pTail.next = t3, this.pTail = t3), this.map.set(e4, 1);
        else {
          var o3 = this.pNodeToDel;
          this.pNodeToDel = this.pNodeToDel.next, this.map.delete(o3.value), o3.next = null, o3 = null, this.pTail.next = t3, this.pTail = t3, this.map.set(e4, 1);
        }
      } }, { key: "has", value: function(e4) {
        return this.map.has(e4);
      } }, { key: "delete", value: function(e4) {
        this.has(e4) && this.map.delete(e4);
      } }, { key: "tail", value: function() {
        return this.pTail;
      } }, { key: "size", value: function() {
        return this.map.size;
      } }, { key: "data", value: function() {
        return Array.from(this.map.keys());
      } }, { key: "reset", value: function() {
        for (var e4; null !== this.pNodeToDel; )
          e4 = this.pNodeToDel, this.pNodeToDel = this.pNodeToDel.next, e4.next = null, e4 = null;
        this.pTail = null, this.map.clear();
      } }]), e3;
    }(), Dr = ["groupID", "name", "avatar", "type", "introduction", "notification", "ownerID", "selfInfo", "createTime", "infoSequence", "lastInfoTime", "lastMessage", "nextMessageSeq", "memberNum", "maxMemberNum", "memberList", "joinOption", "groupCustomField", "muteAllMembers", "isSupportTopic", "_lastRevokedTime"], Nr = function() {
      function e3(t3) {
        n2(this, e3), this.groupID = "", this.name = "", this.avatar = "", this.type = "", this.introduction = "", this.notification = "", this.ownerID = "", this.createTime = "", this.infoSequence = "", this.lastInfoTime = "", this.selfInfo = { messageRemindType: "", joinTime: "", nameCard: "", role: "", userID: "", memberCustomField: void 0, readedSequence: 0, excludedUnreadSequenceList: void 0 }, this.lastMessage = { lastTime: "", lastSequence: "", fromAccount: "", messageForShow: "" }, this.nextMessageSeq = "", this.memberNum = "", this.memberCount = "", this.maxMemberNum = "", this.maxMemberCount = "", this.joinOption = "", this.groupCustomField = [], this.muteAllMembers = false, this.isSupportTopic = false, this._lastRevokedTime = 0, this._initGroup(t3);
      }
      return s2(e3, [{ key: "memberNum", get: function() {
        return this.memberCount;
      }, set: function(e4) {
      } }, { key: "maxMemberNum", get: function() {
        return this.maxMemberCount;
      }, set: function(e4) {
      } }, { key: "_initGroup", value: function(e4) {
        for (var t3 in e4)
          Dr.indexOf(t3) < 0 || ("selfInfo" !== t3 ? ("memberNum" === t3 && (this.memberCount = e4[t3]), "maxMemberNum" === t3 && (this.maxMemberCount = e4[t3]), "isSupportTopic" !== t3 ? this[t3] = e4[t3] : this.isSupportTopic = 1 === e4[t3]) : this.updateSelfInfo(e4[t3]));
      } }, { key: "updateGroup", value: function(e4) {
        var t3 = this;
        e4.appid = void 0, e4.grossTopicNextMsgSeq = void 0, e4.selfInfo && (e4.selfInfo.grossTopicReadSeq = void 0);
        var o3 = JSON.parse(JSON.stringify(e4));
        o3.lastMsgTime && (this.lastMessage.lastTime = o3.lastMsgTime), dt2(o3.muteAllMembers) || ("On" === o3.muteAllMembers ? o3.muteAllMembers = true : o3.muteAllMembers = false), o3.groupCustomField && kt2(this.groupCustomField, o3.groupCustomField), dt2(o3.memberNum) || (this.memberCount = o3.memberNum), dt2(o3.maxMemberNum) || (this.maxMemberCount = o3.maxMemberNum), dt2(o3.isSupportTopic) || (this.isSupportTopic = rt2(o3.isSupportTopic) ? 1 === o3.isSupportTopic : o3.isSupportTopic), Mt(this, o3, ["members", "errorCode", "lastMsgTime", "groupCustomField", "memberNum", "maxMemberNum", "isSupportTopic"]), lt2(o3.members) && o3.members.length > 0 && o3.members.forEach(function(e5) {
          e5.userID === t3.selfInfo.userID && Mt(t3.selfInfo, e5, ["sequence"]);
        });
      } }, { key: "updateSelfInfo", value: function(e4) {
        var o3 = { nameCard: e4.nameCard, joinTime: e4.joinTime, role: e4.role, messageRemindType: e4.messageRemindType, readedSequence: e4.readedSequence, excludedUnreadSequenceList: e4.excludedUnreadSequenceList };
        Mt(this.selfInfo, t2({}, o3), [], ["", null, void 0, 0, NaN]);
      } }, { key: "setSelfNameCard", value: function(e4) {
        this.selfInfo.nameCard = e4;
      } }]), e3;
    }(), Ar = function(e3, o3) {
      return dt2(e3) ? { lastTime: 0, lastSequence: 0, fromAccount: 0, messageForShow: "", payload: null, type: "", isRevoked: false, cloudCustomData: "", onlineOnlyFlag: false, nick: "", nameCard: "", version: 0, isPeerRead: false, revoker: null } : e3 instanceof Zs ? { lastTime: e3.time || 0, lastSequence: e3.sequence || 0, fromAccount: e3.from || "", messageForShow: zt(e3.type, e3.payload, o3), payload: e3.payload || null, type: e3.type || null, isRevoked: e3.isRevoked || false, cloudCustomData: e3.cloudCustomData || "", onlineOnlyFlag: e3._onlineOnlyFlag || false, nick: e3.nick || "", nameCard: e3.nameCard || "", version: e3.version || 0, isPeerRead: e3.isPeerRead || false, revoker: e3.revoker || null } : t2(t2({}, e3), {}, { messageForShow: zt(e3.type, e3.payload, o3) });
    }, kr = function() {
      function e3(t3, o3) {
        n2(this, e3), this.conversationID = t3.conversationID || "", this.unreadCount = t3.unreadCount || 0, this.type = t3.type || "", this.lastMessage = Ar(t3.lastMessage, o3), t3.lastMsgTime && (this.lastMessage.lastTime = t3.lastMsgTime), this._isInfoCompleted = false, this.peerReadTime = t3.peerReadTime || 0, this.groupAtInfoList = [], this.remark = "", this.isPinned = t3.isPinned || false, this.messageRemindType = "", this.markList = t3.markList || [], this.customData = t3.customData || "", this.conversationGroupList = t3.conversationGroupList || [], this._initProfile(t3);
      }
      return s2(e3, [{ key: "toAccount", get: function() {
        return this.conversationID.startsWith(D2.CONV_C2C) ? this.conversationID.replace(D2.CONV_C2C, "") : this.conversationID.startsWith(D2.CONV_GROUP) ? this.conversationID.replace(D2.CONV_GROUP, "") : "";
      } }, { key: "subType", get: function() {
        return this.groupProfile ? this.groupProfile.type : "";
      } }, { key: "_initProfile", value: function(e4) {
        var t3 = this;
        Object.keys(e4).forEach(function(o3) {
          switch (o3) {
            case "userProfile":
              t3.userProfile = e4.userProfile;
              break;
            case "groupProfile":
              t3.groupProfile = e4.groupProfile;
          }
        }), dt2(this.userProfile) && this.type === D2.CONV_C2C ? this.userProfile = new Tr({ userID: e4.conversationID.replace("C2C", "") }) : dt2(this.groupProfile) && this.type === D2.CONV_GROUP && (this.groupProfile = new Nr({ groupID: e4.conversationID.replace("GROUP", "") }));
      } }, { key: "updateUnreadCount", value: function(e4) {
        var t3 = e4.nextUnreadCount, o3 = e4.isFromGetConversations, n3 = e4.isUnreadC2CMessage;
        dt2(t3) || (Lt(this.subType) ? this.unreadCount = 0 : o3 && this.type === D2.CONV_GROUP || o3 && this.type === D2.CONV_TOPIC || n3 && this.type === D2.CONV_C2C ? this.unreadCount = t3 : this.unreadCount = this.unreadCount + t3);
      } }, { key: "updateLastMessage", value: function(e4) {
        this.lastMessage = Ar(e4);
      } }, { key: "updateGroupAtInfoList", value: function(e4) {
        if (!this._isNeedMergeGroupAtInfo(e4)) {
          var t3, o3 = (M2(t3 = e4.groupAtType) || y2(t3) || I2(t3) || T2()).slice(0);
          -1 !== o3.indexOf(D2.CONV_AT_ME) && -1 !== o3.indexOf(D2.CONV_AT_ALL) && (o3 = [D2.CONV_AT_ALL_AT_ME]);
          var n3 = { from: e4.from, groupID: e4.groupID, topicID: e4.topicID, messageSequence: e4.sequence, atTypeArray: o3, __random: e4.__random, __sequence: e4.__sequence };
          this.groupAtInfoList.push(n3), Ye2.debug("Conversation.updateGroupAtInfoList conversationID:".concat(this.conversationID), this.groupAtInfoList);
        }
      } }, { key: "_isNeedMergeGroupAtInfo", value: function(e4) {
        var t3 = e4.groupID, o3 = e4.sequence;
        if (!Ot2({ groupID: t3 }))
          return false;
        var n3 = false;
        return this.groupAtInfoList.forEach(function(t4) {
          t4.messageSequence === o3 && (t4.atTypeArray.indexOf(D2.CONV_AT_ME) > -1 && e4.groupAtType.indexOf(D2.CONV_AT_ALL) > -1 && (t4.atTypeArray = [D2.CONV_AT_ALL_AT_ME]), t4.atTypeArray.indexOf(D2.CONV_AT_ALL) > -1 && e4.groupAtType.indexOf(D2.CONV_AT_ME) > -1 && (t4.atTypeArray = [D2.CONV_AT_ALL_AT_ME], t4.__random = e4.__random, t4.__sequence = e4.__sequence), n3 = true);
        }), n3;
      } }, { key: "clearGroupAtInfoList", value: function() {
        this.groupAtInfoList.length = 0;
      } }, { key: "reduceUnreadCount", value: function() {
        return this.unreadCount >= 1 && (this.unreadCount -= 1, true);
      } }, { key: "isLastMessageRevoked", value: function(e4) {
        var t3 = e4.sequence, o3 = e4.time;
        return this.type === D2.CONV_C2C && t3 === this.lastMessage.lastSequence && o3 === this.lastMessage.lastTime || this.type === D2.CONV_GROUP && t3 === this.lastMessage.lastSequence;
      } }, { key: "setLastMessageRevoked", value: function(e4) {
        this.lastMessage.isRevoked = e4;
      } }, { key: "setLastMessageRevoker", value: function(e4) {
        this.lastMessage.revoker = e4;
      } }]), e3;
    }(), Rr = function() {
      function e3(t3) {
        n2(this, e3), this._conversationModule = t3, this._className = "MessageRemindHandler", this._updateSequence = 0;
      }
      return s2(e3, [{ key: "getC2CMessageRemindType", value: function() {
        var e4 = this, t3 = "".concat(this._className, ".getC2CMessageRemindType");
        return this._conversationModule.request({ protocolName: Un2, updateSequence: this._updateSequence }).then(function(o3) {
          Ye2.log("".concat(t3, " ok"));
          var n3 = o3.data, a3 = n3.updateSequence, s3 = n3.muteFlagList;
          e4._updateSequence = a3, e4._patchC2CMessageRemindType(s3);
        }).catch(function(e5) {
          Ye2.error("".concat(t3, " failed. error:"), e5);
        });
      } }, { key: "_patchC2CMessageRemindType", value: function(e4) {
        var t3 = this, o3 = 0, n3 = "";
        lt2(e4) && e4.length > 0 && e4.forEach(function(e5) {
          var a3 = e5.userID, s3 = e5.muteFlag;
          0 === s3 ? n3 = D2.MSG_REMIND_ACPT_AND_NOTE : 1 === s3 ? n3 = D2.MSG_REMIND_DISCARD : 2 === s3 && (n3 = D2.MSG_REMIND_ACPT_NOT_NOTE), true === t3._conversationModule.patchMessageRemindType({ ID: a3, isC2CConversation: true, messageRemindType: n3 }) && (o3 += 1);
        }), Ye2.log("".concat(this._className, "._patchC2CMessageRemindType count:").concat(o3));
      } }, { key: "set", value: function(e4) {
        return e4.groupID ? this._setGroupMessageRemindType(e4) : lt2(e4.userIDList) ? this._setC2CMessageRemindType(e4) : void 0;
      } }, { key: "_setGroupMessageRemindType", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, "._setGroupMessageRemindType"), n3 = e4.groupID, a3 = e4.messageRemindType, s3 = "groupID:".concat(n3, " messageRemindType:").concat(a3), r3 = new bs2(ws2.SET_MESSAGE_REMIND_TYPE);
        return r3.setMessage(s3), this._getModule(Wo).modifyGroupMemberInfo({ groupID: n3, messageRemindType: a3, userID: this._conversationModule.getMyUserID() }).then(function() {
          r3.setNetworkType(t3._conversationModule.getNetworkType()).end(), Ye2.log("".concat(o3, " ok. ").concat(s3));
          var n4 = t3.onGroupMessageRemindTypeUpdated(e4);
          return t3._conversationModule.emitTotalUnreadMessageCountUpdate(), er(n4);
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            r3.setError(e5, n4, a4).end();
          }), Ye2.error("".concat(o3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "onGroupMessageRemindTypeUpdated", value: function(e4) {
        var t3 = e4.groupID, o3 = e4.messageRemindType, n3 = this._getModule(Ko).getLocalGroupProfile(t3);
        if (n3 && (n3.selfInfo.messageRemindType = o3), Gt(t3)) {
          var a3 = t3, s3 = $t(a3), r3 = this._getModule(Yo).getLocalTopic(s3, a3);
          return r3 && (r3.updateSelfInfo({ messageRemindType: o3 }), this._conversationModule.emitOuterEvent(S2.TOPIC_UPDATED, { groupID: s3, topic: r3 })), { topic: r3 };
        }
        return this._conversationModule.patchMessageRemindType({ ID: t3, isC2CConversation: false, messageRemindType: o3 }) && this._emitConversationUpdate(), { group: n3 };
      } }, { key: "_setC2CMessageRemindType", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, "._setC2CMessageRemindType"), n3 = e4.userIDList, a3 = e4.messageRemindType, s3 = n3.slice(0, 30), r3 = 0;
        a3 === D2.MSG_REMIND_DISCARD ? r3 = 1 : a3 === D2.MSG_REMIND_ACPT_NOT_NOTE && (r3 = 2);
        var i3 = "userIDList:".concat(s3, " messageRemindType:").concat(a3), c3 = new bs2(ws2.SET_MESSAGE_REMIND_TYPE);
        return c3.setMessage(i3), this._conversationModule.request({ protocolName: Pn2, requestData: { userIDList: s3, muteFlag: r3 } }).then(function(e5) {
          c3.setNetworkType(t3._conversationModule.getNetworkType()).end();
          var n4 = e5.data, r4 = n4.updateSequence, i4 = n4.errorList;
          t3._updateSequence = r4;
          var u3 = [], l3 = [];
          lt2(i4) && i4.forEach(function(e6) {
            u3.push(e6.userID), l3.push({ userID: e6.userID, code: e6.errorCode });
          });
          var d3 = s3.filter(function(e6) {
            return -1 === u3.indexOf(e6);
          });
          Ye2.log("".concat(o3, " ok. successUserIDList:").concat(d3, " failureUserIDList:").concat(JSON.stringify(l3)));
          var p3 = 0;
          return d3.forEach(function(e6) {
            t3._conversationModule.patchMessageRemindType({ ID: e6, isC2CConversation: true, messageRemindType: a3 }) && (p3 += 1);
          }), p3 >= 1 && t3._emitConversationUpdate(), s3.length = u3.length = 0, t3._conversationModule.emitTotalUnreadMessageCountUpdate(), ur({ successUserIDList: d3.map(function(e6) {
            return { userID: e6 };
          }), failureUserIDList: l3 });
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            c3.setError(e5, n4, a4).end();
          }), Ye2.error("".concat(o3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "_getModule", value: function(e4) {
        return this._conversationModule.getModule(e4);
      } }, { key: "_emitConversationUpdate", value: function() {
        this._conversationModule.emitConversationUpdate(true, false);
      } }, { key: "setUpdateSequence", value: function(e4) {
        this._updateSequence = e4;
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._updateSequence = 0;
      } }]), e3;
    }(), Lr = function() {
      function e3(t3) {
        n2(this, e3), this._conversationModule = t3, this._className = "ConvGroupHandler", this._convGroupMap = /* @__PURE__ */ new Map(), this._startIndex = 0, this._pagingStatus = io.NOT_START;
      }
      return s2(e3, [{ key: "setConvCustomData", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, ".setConvCustomData"), n3 = e4.conversationIDList, a3 = e4.customData;
        Ye2.log("".concat(o3, " options:"), e4);
        var s3 = new bs2(ws2.SET_CONV_CUSTOM_DATA);
        s3.setMessage(JSON.stringify(e4));
        var r3 = { fromAccount: this._getMyUserID(), itemList: [] }, i3 = [], c3 = [];
        return n3.forEach(function(e5) {
          if (!t3._hasLocalConversation(e5))
            return t3._onConversationNotFound(c3, e5), true;
          if (!Pt2(e5) && !Ut(e5))
            return t3._onConversationIDInvalid(c3, e5), true;
          var o4 = { operationType: 2, contactItem: void 0, customMark: a3 };
          Pt2(e5) ? o4.contactItem = { type: 1, toAccount: e5.replace(D2.CONV_C2C, "") } : Ut(e5) && (o4.contactItem = { type: 2, groupID: e5.replace(D2.CONV_GROUP, "") }), r3.itemList.push(o4);
        }), c3.length === n3.length ? ur({ successConversationIDList: i3, failureConversationIDList: c3 }) : this._conversationModule.request({ protocolName: $n2, requestData: r3 }).then(function(e5) {
          s3.setNetworkType(t3._conversationModule.getNetworkType()).end(), Ye2.log("".concat(o3, " ok"));
          var n4 = e5.data.resultItem;
          if (lt2(n4)) {
            var r4, u3, l3 = false;
            n4.forEach(function(e6) {
              r4 = t3._concatConversationID(e6.contactItem), 0 === e6.resultCode ? (i3.push(r4), (u3 = t3._getLocalConversation(r4)) && u3.customData !== a3 && (u3.customData = a3, l3 = true)) : c3.push({ conversationID: r4, code: e6.resultCode, message: e6.resultInfo });
            }), true === l3 && t3._emitConversationUpdate();
          }
          return er({ successConversationIDList: i3, failureConversationIDList: c3 });
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            s3.setError(e5, n4, a4).end();
          }), Ye2.error("".concat(o3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "markConversation", value: function(e4) {
        var t3 = this;
        if (!this._conversationModule.canIUse(W2.CONV_MARK))
          return lr({ code: hn.CANNOT_USE_COMMERCIAL_ABILITY });
        var o3 = "".concat(this._className, ".markConversation"), n3 = e4.conversationIDList, a3 = e4.markType, s3 = e4.enableMark;
        Ye2.log("".concat(o3, " options:"), e4);
        var r3 = new bs2(ws2.MARK_CONVERSATION);
        r3.setMessage(JSON.stringify(e4));
        var i3 = void 0, c3 = void 0, u3 = this._getFlagBit(a3);
        true === s3 ? c3 = [u3] : i3 = [u3];
        var l3 = { fromAccount: this._getMyUserID(), itemList: [] }, d3 = [], p3 = [];
        return n3.forEach(function(e5) {
          if (!t3._hasLocalConversation(e5))
            return t3._onConversationNotFound(p3, e5), true;
          if (!Pt2(e5) && !Ut(e5))
            return t3._onConversationIDInvalid(p3, e5), true;
          var o4 = { operationType: 1, contactItem: void 0, clearMark: i3, setMark: c3 };
          Pt2(e5) ? o4.contactItem = { type: 1, toAccount: e5.replace(D2.CONV_C2C, "") } : Ut(e5) && (o4.contactItem = { type: 2, groupID: e5.replace(D2.CONV_GROUP, "") }), l3.itemList.push(o4);
        }), p3.length === n3.length ? ur({ successConversationIDList: d3, failureConversationIDList: p3 }) : this._conversationModule.request({ protocolName: zn2, requestData: l3 }).then(function(e5) {
          r3.setNetworkType(t3._conversationModule.getNetworkType()).end(), Ye2.log("".concat(o3, " ok"));
          var n4 = e5.data.resultItem;
          if (lt2(n4)) {
            var i4, c4, u4 = false;
            n4.forEach(function(e6) {
              if (i4 = t3._concatConversationID(e6.contactItem), 0 === e6.resultCode) {
                if (d3.push(i4), c4 = t3._getLocalConversation(i4)) {
                  var o4 = c4.markList.indexOf(a3);
                  true === s3 ? -1 === o4 && (c4.markList.push(a3), u4 = true) : -1 !== o4 && (c4.markList.splice(o4, 1), u4 = true);
                }
              } else
                p3.push({ conversationID: i4, code: e6.resultCode, message: e6.resultInfo });
            }), true === u4 && t3._emitConversationUpdate();
          }
          return er({ successConversationIDList: d3, failureConversationIDList: p3 });
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            r3.setError(e5, n4, a4).end();
          }), Ye2.error("".concat(o3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "getLocalConvGroupList", value: function() {
        var e4 = this;
        return Ye2.log("".concat(this._className, ".getLocalConvGroupList pagingStatus:").concat(this._pagingStatus)), this._pagingStatus === io.REJECTED ? this.getRemoteConvGroupList().then(function() {
          return er(v2(e4._convGroupMap.values()));
        }) : ur(v2(this._convGroupMap.values()));
      } }, { key: "getRemoteConvGroupList", value: function() {
        var e4 = this, t3 = "".concat(this._className, ".getRemoteConvGroupList");
        return this._pagingStatus = io.PENDING, this._conversationModule.request({ protocolName: ta, requestData: { fromAccount: this._getMyUserID(), startIndex: this._startIndex, startTime: Be2() } }).then(function(o3) {
          var n3, a3, s3 = o3.data, r3 = s3.completeFlag, i3 = s3.contactItem, c3 = s3.nextStartIndex, u3 = void 0 === c3 ? 0 : c3, l3 = s3.groupItem;
          (e4._startIndex = u3, Ye2.log("".concat(t3, " completeFlag:").concat(r3, " nextStartIndex:").concat(u3)), lt2(l3) && l3.forEach(function(t4) {
            var o4 = t4.convGroupID, n4 = t4.groupName;
            e4._convGroupMap.set(o4, n4);
          }), lt2(i3)) && i3.forEach(function(t4) {
            var o4 = t4.standardMark, s4 = t4.customData, r4 = t4.convGroupIDList;
            if (n3 = e4._concatConversationID(t4), (a3 = e4._getLocalConversation(n3)) && (a3.markList = Xt(o4), a3.customData = s4 || "", lt2(r4))) {
              var i4 = [];
              r4.forEach(function(t5) {
                e4._convGroupMap.has(t5) && i4.push(e4._convGroupMap.get(t5));
              }), a3.conversationGroupList = [].concat(i4), i4.length = 0;
            }
          });
          if (0 === r3)
            return e4.getRemoteConvGroupList();
          1 === r3 && (e4._pagingStatus = io.RESOLVED, e4._emitConversationUpdate(), e4._emitConvGroupListUpdate());
        }).catch(function(o3) {
          e4._pagingStatus = io.REJECTED, Ye2.warn("".concat(t3, " failed. error:"), o3);
        });
      } }, { key: "createConvGroup", value: function(e4) {
        var t3 = this;
        if (!this._conversationModule.canIUse(W2.CONV_GROUP))
          return lr({ code: hn.CANNOT_USE_COMMERCIAL_ABILITY });
        var o3 = new bs2(ws2.CREATE_CONV_GROUP);
        o3.setMessage(JSON.stringify(e4));
        var n3 = "".concat(this._className, ".createConvGroup");
        Ye2.log("".concat(n3, " options:"), e4);
        var a3 = e4.groupName, s3 = e4.conversationIDList, r3 = { fromAccount: this._getMyUserID(), itemList: [{ groupName: a3, contactItem: [] }] }, i3 = [], c3 = [];
        return s3.forEach(function(e5) {
          return t3._hasLocalConversation(e5) ? Pt2(e5) || Ut(e5) ? void (Pt2(e5) ? r3.itemList[0].contactItem.push({ type: 1, toAccount: e5.replace(D2.CONV_C2C, "") }) : Ut(e5) && r3.itemList[0].contactItem.push({ type: 2, groupID: e5.replace(D2.CONV_GROUP, "") })) : (t3._onConversationIDInvalid(c3, e5), true) : (t3._onConversationNotFound(c3, e5), true);
        }), c3.length === s3.length ? ur({ successConversationIDList: i3, failureConversationIDList: c3 }) : this._conversationModule.request({ protocolName: Jn2, requestData: r3 }).then(function(e5) {
          o3.setNetworkType(t3._conversationModule.getNetworkType()).end(), Ye2.log("".concat(n3, " ok"));
          var s4 = e5.data.groupResultItem[0], r4 = s4.groupItem, u3 = s4.resultItem;
          if (ut2(r4) && (t3._convGroupMap.set(r4.convGroupID, r4.groupName), t3._emitConvGroupListUpdate()), lt2(u3)) {
            var l3, d3, p3 = false;
            u3.forEach(function(e6) {
              l3 = t3._concatConversationID(e6.contactItem), 0 === e6.resultCode ? (i3.push(l3), (d3 = t3._getLocalConversation(l3)) && -1 === d3.conversationGroupList.indexOf(a3) && (d3.conversationGroupList.push(a3), p3 = true)) : c3.push({ conversationID: l3, code: e6.resultCode, message: e6.resultInfo });
            }), true === p3 && (t3._emitConversationUpdate(), t3._emitConvGroupListUpdate());
          }
          return er({ successConversationIDList: i3, failureConversationIDList: c3 });
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), a4 = n4[0], s4 = n4[1];
            o3.setError(e5, a4, s4).end();
          }), Ye2.error("".concat(n3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "deleteConvGroup", value: function(e4) {
        var t3 = this;
        if (!this._conversationModule.canIUse(W2.CONV_GROUP))
          return lr({ code: hn.CANNOT_USE_COMMERCIAL_ABILITY });
        var o3 = new bs2(ws2.DELETE_CONV_GROUP);
        o3.setMessage(e4);
        var n3 = "".concat(this._className, ".deleteConvGroup");
        return Ye2.log("".concat(n3, " groupName:").concat(e4)), this._conversationModule.request({ protocolName: Xn2, requestData: { fromAccount: this._getMyUserID(), groupName: [e4] } }).then(function(a3) {
          o3.setNetworkType(t3._conversationModule.getNetworkType()).end(), Ye2.log("".concat(n3, " ok"));
          var s3 = a3.data.groupItem;
          if (lt2(s3)) {
            var r3 = false;
            s3.forEach(function(e5) {
              t3._convGroupMap.has(e5.convGroupID) && (t3._convGroupMap.delete(e5.convGroupID), r3 = true);
            }), true === r3 && t3._emitConvGroupListUpdate();
          }
          t3._eraseFromConversationGroupList([e4]);
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), a3 = n4[0], s3 = n4[1];
            o3.setError(e5, a3, s3).end();
          }), Ye2.error("".concat(n3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "renameConvGroup", value: function(e4) {
        var t3 = this;
        if (!this._conversationModule.canIUse(W2.CONV_GROUP))
          return lr({ code: hn.CANNOT_USE_COMMERCIAL_ABILITY });
        var o3 = new bs2(ws2.RENAME_CONV_GROUP);
        o3.setMessage(JSON.stringify(e4));
        var n3 = "".concat(this._className, ".renameConvGroup");
        Ye2.log("".concat(n3, " options:"), e4);
        var a3 = e4.oldName, s3 = e4.newName;
        return this._conversationModule.request({ protocolName: Qn2, requestData: { fromAccount: this._getMyUserID(), updateType: 1, updateGroup: { updateGroupType: 1, oldName: a3, newName: s3 } } }).then(function(e5) {
          o3.setNetworkType(t3._conversationModule.getNetworkType()).end(), Ye2.log("".concat(n3, " ok"));
          var r3 = e5.data.updateGroupResult.convGroupID;
          t3._convGroupMap.set(r3, s3), t3._emitConvGroupListUpdate();
          var i3, c3, u3 = t3._conversationModule.getLocalConversationList(), l3 = false;
          u3.forEach(function(e6) {
            i3 = e6.conversationGroupList, -1 !== (c3 = i3.indexOf(a3)) && (i3.splice(c3, 1, s3), l3 = true);
          }), true === l3 && t3._emitConversationUpdate();
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), a4 = n4[0], s4 = n4[1];
            o3.setError(e5, a4, s4).end();
          }), Ye2.error("".concat(n3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "addConvsToGroup", value: function(e4) {
        var t3 = this;
        if (!this._conversationModule.canIUse(W2.CONV_GROUP))
          return lr({ code: hn.CANNOT_USE_COMMERCIAL_ABILITY });
        var o3 = new bs2(ws2.ADD_CONVS_TO_GROUP);
        o3.setMessage(JSON.stringify(e4));
        var n3 = "".concat(this._className, ".addConvsToGroup");
        Ye2.log("".concat(n3, " options:"), e4);
        var a3 = e4.conversationIDList, s3 = e4.groupName, r3 = { fromAccount: this._getMyUserID(), updateType: 1, updateGroup: { updateGroupType: 2, groupName: s3, updateItem: [] } }, i3 = [], c3 = [];
        return a3.forEach(function(e5) {
          return t3._hasLocalConversation(e5) ? Pt2(e5) || Ut(e5) ? void (Pt2(e5) ? r3.updateGroup.updateItem.push({ operationType: 1, contactItem: { type: 1, toAccount: e5.replace(D2.CONV_C2C, "") } }) : Ut(e5) && r3.updateGroup.updateItem.push({ operationType: 1, contactItem: { type: 2, groupID: e5.replace(D2.CONV_GROUP, "") } })) : (t3._onConversationIDInvalid(c3, e5), true) : (t3._onConversationNotFound(c3, e5), true);
        }), c3.length === a3.length ? ur({ successConversationIDList: i3, failureConversationIDList: c3 }) : this._conversationModule.request({ protocolName: Zn2, requestData: r3 }).then(function(e5) {
          o3.setNetworkType(t3._conversationModule.getNetworkType()).end(), Ye2.log("".concat(n3, " ok"));
          var a4 = e5.data.updateGroupResult.contactResultItem;
          if (lt2(a4)) {
            var r4, u3, l3 = false;
            a4.forEach(function(e6) {
              r4 = t3._concatConversationID(e6.contactItem), 0 === e6.resultCode ? (u3 = t3._getLocalConversation(r4)) && -1 === u3.conversationGroupList.indexOf(s3) && (u3.conversationGroupList.push(s3), i3.push(r4), l3 = true) : c3.push({ conversationID: r4, code: e6.resultCode, message: e6.resultInfo });
            }), true === l3 && (t3._emitConversationUpdate(), t3._emitConvInGroupUpdate(s3));
          }
          return er({ successConversationIDList: i3, failureConversationIDList: c3 });
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), a4 = n4[0], s4 = n4[1];
            o3.setError(e5, a4, s4).end();
          }), Ye2.error("".concat(n3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "deleteConvsFromGroup", value: function(e4) {
        var t3 = this;
        if (!this._conversationModule.canIUse(W2.CONV_GROUP))
          return lr({ code: hn.CANNOT_USE_COMMERCIAL_ABILITY });
        var o3 = new bs2(ws2.DELETE_CONVS_FROM_GROUP);
        o3.setMessage(JSON.stringify(e4));
        var n3 = "".concat(this._className, ".deleteConvsFromGroup");
        Ye2.log("".concat(n3, " options:"), e4);
        var a3 = e4.conversationIDList, s3 = e4.groupName, r3 = { fromAccount: this._getMyUserID(), updateType: 1, updateGroup: { updateGroupType: 2, groupName: s3, updateItem: [] } }, i3 = [], c3 = [];
        return a3.forEach(function(e5) {
          return t3._hasLocalConversation(e5) ? Pt2(e5) || Ut(e5) ? void (Pt2(e5) ? r3.updateGroup.updateItem.push({ operationType: 2, contactItem: { type: 1, toAccount: e5.replace(D2.CONV_C2C, "") } }) : Ut(e5) && r3.updateGroup.updateItem.push({ operationType: 2, contactItem: { type: 2, groupID: e5.replace(D2.CONV_GROUP, "") } })) : (t3._onConversationIDInvalid(c3, e5), true) : (t3._onConversationNotFound(c3, e5), true);
        }), c3.length === a3.length ? ur({ successConversationIDList: i3, failureConversationIDList: c3 }) : this._conversationModule.request({ protocolName: ea, requestData: r3 }).then(function(e5) {
          o3.setNetworkType(t3._conversationModule.getNetworkType()).end(), Ye2.log("".concat(n3, " ok"));
          var a4 = e5.data.updateGroupResult.contactResultItem;
          if (lt2(a4)) {
            var r4, u3, l3 = false;
            a4.forEach(function(e6) {
              if (r4 = t3._concatConversationID(e6.contactItem), 0 === e6.resultCode) {
                if (u3 = t3._getLocalConversation(r4)) {
                  var o4 = u3.conversationGroupList.indexOf(s3);
                  -1 !== o4 && (u3.conversationGroupList.splice(o4, 1), i3.push(r4), l3 = true);
                }
              } else
                c3.push({ conversationID: r4, code: e6.resultCode, message: e6.resultInfo });
            }), true === l3 && (t3._emitConversationUpdate(), t3._emitConvInGroupUpdate(s3));
          }
          return er({ successConversationIDList: i3, failureConversationIDList: c3 });
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), a4 = n4[0], s4 = n4[1];
            o3.setError(e5, a4, s4).end();
          }), Ye2.error("".concat(n3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "onConvMarkUpdated", value: function(e4) {
        var t3 = this;
        if (!oo(e4)) {
          var o3, n3;
          Ye2.debug("".concat(this._className, ".onConvMarkUpdated markItemList:"), e4);
          var a3 = false;
          e4.forEach(function(e5) {
            var s3 = e5.recentContactItem, r3 = e5.optType, i3 = e5.standardMark, c3 = e5.customMark;
            if (o3 = t3._concatConversationID(s3), n3 = t3._getLocalConversation(o3))
              if (1 === r3) {
                var u3 = Xt(i3);
                true !== function(e6, t4) {
                  if (e6 === t4)
                    return true;
                  if (!e6 || !t4)
                    return false;
                  if (e6.length !== t4.length)
                    return false;
                  for (var o4 = 0, n4 = e6.length; o4 < n4; o4++)
                    if (e6[o4] !== t4[o4])
                      return false;
                  return true;
                }(n3.markList, u3) && (n3.markList = u3, a3 = true);
              } else
                2 === r3 && n3.customData !== c3 && void 0 !== c3 && (n3.customData = c3, a3 = true);
          }), true === a3 && this._emitConversationUpdate();
        }
      } }, { key: "onConvGroupCreated", value: function(e4) {
        var t3 = this;
        Ye2.debug("".concat(this._className, ".onConvGroupCreated resultList:"), e4);
        var o3 = false, n3 = false;
        lt2(e4) && (e4.forEach(function(e5) {
          var a3 = e5.msgGroupItem, s3 = a3.groupID, r3 = a3.groupName;
          t3._convGroupMap.get(s3) !== r3 && (t3._convGroupMap.set(s3, r3), n3 = true);
          var i3, c3, u3 = e5.msgRecentContactItem;
          lt2(u3) && u3.forEach(function(e6) {
            i3 = t3._concatConversationID(e6), (c3 = t3._getLocalConversation(i3)) && -1 === c3.conversationGroupList.indexOf(r3) && (c3.conversationGroupList.push(r3), o3 = true);
          });
        }), true === o3 && this._emitConversationUpdate(), true === n3 && this._emitConvGroupListUpdate());
      } }, { key: "onConvGroupDeleted", value: function(e4) {
        var t3 = this;
        Ye2.debug("".concat(this._className, ".onConvGroupDeleted groupItemList:"), e4);
        var o3 = [];
        if (lt2(e4)) {
          var n3 = false;
          e4.forEach(function(e5) {
            var a3 = e5.groupID, s3 = e5.groupName;
            t3._convGroupMap.has(a3) && (t3._convGroupMap.delete(a3), n3 = true, o3.push(s3));
          }), true === n3 && this._emitConvGroupListUpdate();
        }
        this._eraseFromConversationGroupList(o3);
      } }, { key: "_eraseFromConversationGroupList", value: function(e4) {
        oo(e4) || (this._conversationModule.getLocalConversationList().forEach(function(t3) {
          t3.conversationGroupList = t3.conversationGroupList.filter(function(t4) {
            return !e4.includes(t4);
          });
        }), this._emitConversationUpdate());
      } }, { key: "onConvGroupNameUpdated", value: function(e4) {
        Ye2.debug("".concat(this._className, ".onConvGroupNameUpdated options:"), e4);
        var t3 = e4.groupID, o3 = e4.groupName, n3 = e4.oldGroupName;
        if (this._convGroupMap.get(t3) !== o3) {
          this._convGroupMap.set(t3, o3), this._emitConvGroupListUpdate();
          var a3, s3, r3 = this._conversationModule.getLocalConversationList(), i3 = false;
          r3.forEach(function(e5) {
            a3 = e5.conversationGroupList, -1 !== (s3 = a3.indexOf(n3)) && (a3.splice(s3, 1, o3), i3 = true);
          }), true === i3 && this._emitConversationUpdate();
        }
      } }, { key: "onConvInGroupUpdated", value: function(e4) {
        var t3 = this;
        Ye2.debug("".concat(this._className, ".onConvInGroupUpdated options:"), e4);
        var o3 = e4.oldGroupName, n3 = e4.recentContactUpdateGroupItem;
        if (lt2(n3)) {
          var a3, s3, r3, i3 = false;
          n3.forEach(function(e5) {
            var n4 = e5.contactOptType, c3 = e5.recentContactItem;
            a3 = t3._concatConversationID(c3), (s3 = t3._getLocalConversation(a3)) && (r3 = s3.conversationGroupList.indexOf(o3), 1 === n4 ? -1 === r3 && (s3.conversationGroupList.push(o3), i3 = true) : 2 === n4 && -1 !== r3 && (s3.conversationGroupList.splice(r3, 1), i3 = true));
          }), true === i3 && (this._emitConversationUpdate(), this._emitConvInGroupUpdate(o3));
        }
      } }, { key: "onConvAddedToOrDeletedFromGroup", value: function(e4) {
        var t3 = this;
        Ye2.debug("".concat(this._className, ".onConvAddedToOrDeletedFromGroup options:"), e4);
        var o3 = e4.msgRecentContactItem, n3 = e4.msgRecentContactUpdateContactItem, a3 = this._concatConversationID(o3), s3 = this._getLocalConversation(a3);
        if (s3 && lt2(n3)) {
          var r3, i3 = false;
          n3.forEach(function(e5) {
            var o4 = e5.groupOptType, n4 = e5.recentContactGroupItem.groupName;
            r3 = s3.conversationGroupList.indexOf(n4), 1 === o4 ? -1 === r3 && (s3.conversationGroupList.push(n4), i3 = true) : 2 === o4 && -1 !== r3 && (s3.conversationGroupList.splice(r3, 1), i3 = true), true === i3 && t3._emitConvInGroupUpdate(n4);
          }), true === i3 && this._emitConversationUpdate();
        }
      } }, { key: "onConvGroupListSynced", value: function(e4) {
        var t3 = this;
        lt2(e4) && 0 !== e4.length && (Ye2.log("".concat(this._className, ".onConvGroupListSynced groupItemList:"), e4), e4.forEach(function(e5) {
          t3._convGroupMap.set(e5.convGroupID, e5.groupName);
        }));
      } }, { key: "getConvGroupListByID", value: function(e4) {
        var t3 = this;
        if (!oo(e4)) {
          var o3 = [];
          return e4.forEach(function(e5) {
            t3._convGroupMap.has(e5) && o3.push(t3._convGroupMap.get(e5));
          }), o3;
        }
      } }, { key: "_onConversationNotFound", value: function(e4, t3) {
        e4.push({ conversationID: t3, code: hn.CONVERSATION_NOT_FOUND, message: this._conversationModule.getErrorMessage(hn.CONVERSATION_NOT_FOUND) });
      } }, { key: "_onConversationIDInvalid", value: function(e4, t3) {
        e4.push({ conversationID: t3, code: hn.INVALID_CONVERSATION_ID, message: this._conversationModule.getErrorMessage(hn.INVALID_CONVERSATION_ID) });
      } }, { key: "_getFlagBit", value: function(e4) {
        for (var t3 = e4.toString(2), o3 = t3.length, n3 = o3 - 1; n3 >= 0; n3--)
          if ("1" === t3[n3])
            return o3 - n3 - 1;
      } }, { key: "_concatConversationID", value: function(e4) {
        var t3, o3 = e4.type, n3 = e4.to, a3 = e4.groupID, s3 = e4.userID;
        return 1 === o3 ? dt2(s3) ? dt2(n3) || (t3 = "".concat(D2.CONV_C2C).concat(n3)) : t3 = "".concat(D2.CONV_C2C).concat(s3) : 2 === o3 && (t3 = "".concat(D2.CONV_GROUP).concat(a3)), t3;
      } }, { key: "_getMyUserID", value: function() {
        return this._conversationModule.getMyUserID();
      } }, { key: "_insertConversationGroup", value: function(e4, t3) {
        var o3 = this._getLocalConversation(e4);
        if (o3) {
          var n3 = o3.conversationGroupList;
          -1 === n3.indexOf(t3) && n3.push(t3);
        }
      } }, { key: "_getLocalConversation", value: function(e4) {
        return this._conversationModule.getLocalConversation(e4);
      } }, { key: "_hasLocalConversation", value: function(e4) {
        return this._conversationModule.hasLocalConversation(e4);
      } }, { key: "_emitConversationUpdate", value: function() {
        this._conversationModule.emitConversationUpdate(true, false);
      } }, { key: "_emitConvGroupListUpdate", value: function() {
        this._conversationModule.emitOuterEvent(S2.CONVERSATION_GROUP_LIST_UPDATED, v2(this._convGroupMap.values()));
      } }, { key: "_emitConvInGroupUpdate", value: function(e4) {
        var t3 = { groupName: e4, conversationList: [] }, o3 = this._conversationModule.getLocalConversationList();
        t3.conversationList = o3.filter(function(t4) {
          return t4.conversationGroupList.includes(e4);
        }), this._conversationModule.emitOuterEvent(S2.CONVERSATION_IN_GROUP_UPDATED, t3);
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._convGroupMap.clear(), this._startIndex = 0, this._pagingStatus = io.NOT_START;
      } }]), e3;
    }(), Or = function(e3) {
      i2(a3, e3);
      var o3 = f2(a3);
      function a3(e4) {
        var t3;
        return n2(this, a3), (t3 = o3.call(this, e4))._className = "ConversationModule", fr.mixin(_2(t3)), t3._messageListHandler = new pr(), t3._messageRemindHandler = new Rr(_2(t3)), t3._convGroupHandler = new Lr(_2(t3)), t3.singlyLinkedList = new Sr(100), t3._pagingStatus = io.NOT_START, t3._pagingTimeStamp = 0, t3._pagingStartIndex = 0, t3._pagingPinnedTimeStamp = 0, t3._pagingPinnedStartIndex = 0, t3._conversationMap = /* @__PURE__ */ new Map(), t3._tmpGroupList = [], t3._tmpGroupAtTipsList = [], t3._peerReadTimeMap = /* @__PURE__ */ new Map(), t3._completedMap = /* @__PURE__ */ new Map(), t3._roamingMessageKeyAndTimeMap = /* @__PURE__ */ new Map(), t3._roamingMessageSequenceMap = /* @__PURE__ */ new Map(), t3._remoteGroupReadSequenceMap = /* @__PURE__ */ new Map(), t3._convTotalUnreadCount = 0, t3._initListeners(), t3;
      }
      return s2(a3, [{ key: "_initListeners", value: function() {
        var e4 = this.getInnerEmitterInstance();
        e4.on(gr, this._initLocalConversationList, this), e4.on(hr, this._onProfileUpdated, this);
      } }, { key: "onCheckTimer", value: function(e4) {
        e4 % 60 == 0 && this._messageListHandler.traversal();
      } }, { key: "_initLocalConversationList", value: function() {
        var e4 = this, t3 = new bs2(ws2.GET_CONVERSATION_LIST_IN_STORAGE);
        Ye2.log("".concat(this._className, "._initLocalConversationList."));
        var o4 = "", n3 = this._getStorageConversationList(), a4 = this.isIntl();
        if (n3) {
          for (var s3 = n3.length, r3 = 0; r3 < s3; r3++) {
            var i3 = n3[r3];
            if (i3) {
              if (i3.conversationID === "".concat(D2.CONV_C2C, "@TLS#ERROR") || i3.conversationID === "".concat(D2.CONV_C2C, "@TLS#NOT_FOUND"))
                continue;
              if (i3.groupProfile) {
                var c3 = i3.groupProfile.type;
                if (Lt(c3))
                  continue;
              }
            }
            this._conversationMap.set(n3[r3].conversationID, new kr(n3[r3], a4));
          }
          this.emitConversationUpdate(true, false), o4 = "count:".concat(s3);
        } else
          o4 = "count:0";
        t3.setNetworkType(this.getNetworkType()).setMessage(o4).end(), this.getModule(Bo) || this.triggerReady(), this.ready(function() {
          e4._tmpGroupList.length > 0 && (e4.updateConversationGroupProfile(e4._tmpGroupList), e4._tmpGroupList.length = 0);
        }), this.syncConversationList();
      } }, { key: "onMessageSent", value: function(e4) {
        this._onSendOrReceiveMessage({ conversationOptionsList: e4.conversationOptionsList, isInstantMessage: true });
      } }, { key: "onNewMessage", value: function(e4) {
        this._onSendOrReceiveMessage(e4);
      } }, { key: "_onSendOrReceiveMessage", value: function(e4) {
        var t3 = this, o4 = e4.conversationOptionsList, n3 = e4.isInstantMessage, a4 = void 0 === n3 || n3, s3 = e4.isUnreadC2CMessage, r3 = void 0 !== s3 && s3, i3 = e4.updateUnreadCount, c3 = void 0 === i3 || i3;
        this._isReady ? 0 !== o4.length && (this._getC2CPeerReadTime(o4), this._updateLocalConversationList({ conversationOptionsList: o4, isInstantMessage: a4, isUnreadC2CMessage: r3, isFromGetConversations: false, updateUnreadCount: c3 }), this._setStorageConversationList(), o4.filter(function(e5) {
          return e5.type === D2.CONV_TOPIC;
        }).length > 0 || this.emitConversationUpdate()) : this.ready(function() {
          t3._onSendOrReceiveMessage(e4);
        });
      } }, { key: "updateConversationGroupProfile", value: function(e4) {
        var t3 = this;
        if (!lt2(e4) || 0 !== e4.length)
          if (0 !== this._conversationMap.size) {
            var o4 = false;
            e4.forEach(function(e5) {
              var n3 = "GROUP".concat(e5.groupID);
              if (t3._conversationMap.has(n3)) {
                o4 = true;
                var a4 = t3._conversationMap.get(n3);
                a4.groupProfile = JSON.parse(JSON.stringify(e5)), a4.lastMessage.lastSequence < e5.nextMessageSeq && (a4.lastMessage.lastSequence = e5.nextMessageSeq - 1), a4.subType || (a4.subType = e5.type);
              }
            }), o4 && this.emitConversationUpdate(true, false);
          } else
            this._tmpGroupList = e4;
      } }, { key: "_updateConversationUserProfile", value: function(e4) {
        var t3 = this;
        e4.data.forEach(function(e5) {
          var o4 = "C2C".concat(e5.userID);
          t3._conversationMap.has(o4) && (t3._conversationMap.get(o4).userProfile = e5);
        }), this.emitConversationUpdate(true, false);
      } }, { key: "onMessageRevoked", value: function(e4) {
        var t3 = this;
        if (0 !== e4.length) {
          var o4 = null, n3 = false, a4 = [];
          e4.forEach(function(e5) {
            (o4 = t3._conversationMap.get(e5.conversationID)) && (o4.type === D2.CONV_TOPIC ? a4.push(e5) : (o4.reduceUnreadCount() && (n3 = true), o4.isLastMessageRevoked({ sequence: e5.sequence, time: e5.time }) && (o4.setLastMessageRevoked(true), o4.setLastMessageRevoker(e5.revoker), n3 = true)));
          }), this.getModule(Yo).onMessageRevoked(a4), n3 && (this.emitConversationUpdate(true, false), this.emitTotalUnreadMessageCountUpdate());
        }
      } }, { key: "isLastMessageRevoked", value: function(e4) {
        var t3 = false, o4 = e4.conversationID, n3 = e4.sequence, a4 = e4.time, s3 = this._conversationMap.get(o4);
        s3 && (t3 = s3.type === D2.CONV_TOPIC ? this.getModule(Yo).isLastMessageRevoked({ topicID: o4.replace(D2.CONV_GROUP, ""), sequence: n3 }) : s3.isLastMessageRevoked({ sequence: n3, time: a4 }));
        return Ye2.log("".concat(this._className, ".isLastMessageRevoked options:").concat(JSON.stringify(e4), " ret:").concat(t3)), t3;
      } }, { key: "onMessageDeleted", value: function(e4) {
        var t3 = this;
        if (0 !== e4.length) {
          var o4 = null;
          e4.forEach(function(e5) {
            (o4 = t3._messageListHandler.getLocalMessage(e5.conversationID, e5.ID)) && (o4.isDeleted = true), e5 !== o4 && (e5.isDeleted = true);
          });
          for (var n3 = e4[0].conversationID, a4 = this._messageListHandler.getLocalMessageList(n3), s3 = {}, r3 = a4.length - 1; r3 >= 0; r3--)
            if (!a4[r3].isDeleted) {
              s3 = a4[r3];
              break;
            }
          var i3 = this._conversationMap.get(n3);
          if (i3) {
            var c3 = false;
            i3.lastMessage.lastSequence === s3.sequence && i3.lastMessage.lastTime === s3.time || (oo(s3) && (s3 = void 0), i3.updateLastMessage(s3), i3.type !== D2.CONV_TOPIC && (c3 = true), Ye2.log("".concat(this._className, ".onMessageDeleted. update conversationID:").concat(n3, " with lastMessage:"), i3.lastMessage)), n3.startsWith(D2.CONV_C2C) && this.updateUnreadCount(n3), c3 && this.emitConversationUpdate(true, false);
          }
        }
      } }, { key: "onMessageModified", value: function(e4) {
        var t3 = e4.conversationType, o4 = e4.from, n3 = e4.to, a4 = e4.time, s3 = e4.sequence, r3 = e4.elements, i3 = e4.cloudCustomData, c3 = e4.messageVersion, u3 = this.getMyUserID(), l3 = "".concat(t3).concat(n3);
        n3 === u3 && t3 === D2.CONV_C2C && (l3 = "".concat(t3).concat(o4));
        var d3 = this._messageListHandler.onMessageModified(l3, e4), p3 = d3.isUpdated, g3 = d3.message;
        true === p3 && this.emitOuterEvent(S2.MESSAGE_MODIFIED, [g3]);
        var _3 = this._isTopicConversation(l3);
        if (Ye2.log("".concat(this._className, ".onMessageModified isUpdated:").concat(p3, " isTopicMessage:").concat(_3, " from:").concat(o4, " to:").concat(n3)), _3) {
          this.getModule(Yo).onMessageModified(e4);
        } else {
          var h3 = this._conversationMap.get(l3);
          if (h3) {
            var f3 = h3.lastMessage;
            Ye2.debug("".concat(this._className.onMessageModified, " lastMessage:"), JSON.stringify(f3), "options:", JSON.stringify(e4)), f3 && f3.lastTime === a4 && f3.lastSequence === s3 && f3.version !== c3 && (f3.type = r3[0].type, f3.payload = r3[0].content, f3.messageForShow = zt(f3.type, f3.payload, this.isIntl()), f3.cloudCustomData = i3, f3.version = c3, this.emitConversationUpdate(true, false));
          }
        }
        return g3;
      } }, { key: "onNewGroupAtTips", value: function(e4) {
        var o4 = this, n3 = e4.dataList, a4 = null;
        n3.forEach(function(e5) {
          e5.groupAtTips ? a4 = e5.groupAtTips : e5.elements ? a4 = t2(t2({}, e5.elements), {}, { sync: true }) : e5.groupAtType && (a4 = t2(t2({}, e5), {}, { sync: true })), a4.__random = e5.random, a4.__sequence = e5.clientSequence, o4._tmpGroupAtTipsList.push(a4);
        }), Ye2.debug("".concat(this._className, ".onNewGroupAtTips isReady:").concat(this._isReady), this._tmpGroupAtTipsList), this._isReady && this._handleGroupAtTipsList();
      } }, { key: "_handleGroupAtTipsList", value: function() {
        var e4 = this;
        if (0 !== this._tmpGroupAtTipsList.length) {
          var t3 = false;
          this._tmpGroupAtTipsList.forEach(function(o4) {
            var n3 = o4.groupID, a4 = o4.from, s3 = o4.topicID, r3 = void 0 === s3 ? void 0 : s3, i3 = o4.sync, c3 = void 0 !== i3 && i3;
            if (a4 !== e4.getMyUserID())
              if (dt2(r3)) {
                var u3 = e4._conversationMap.get("".concat(D2.CONV_GROUP).concat(n3));
                u3 && (u3.updateGroupAtInfoList(o4), t3 = true);
              } else {
                var l3 = e4._conversationMap.get("".concat(D2.CONV_GROUP).concat(r3));
                if (l3) {
                  l3.updateGroupAtInfoList(o4);
                  var d3 = e4.getModule(Yo), p3 = l3.groupAtInfoList;
                  d3.onConversationProxy({ topicID: r3, groupAtInfoList: p3 });
                }
                if (oo(l3) && c3)
                  e4.updateTopicConversation([{ conversationID: "".concat(D2.CONV_GROUP).concat(r3), type: D2.CONV_TOPIC }]), e4._conversationMap.get("".concat(D2.CONV_GROUP).concat(r3)).updateGroupAtInfoList(o4);
              }
          }), t3 && this.emitConversationUpdate(true, false), this._tmpGroupAtTipsList.length = 0;
        }
      } }, { key: "_getC2CPeerReadTime", value: function(e4) {
        var t3 = this, o4 = [];
        if (e4.forEach(function(e5) {
          t3._conversationMap.has(e5.conversationID) || e5.type !== D2.CONV_C2C || o4.push(e5.conversationID.replace(D2.CONV_C2C, ""));
        }), o4.length > 0) {
          Ye2.debug("".concat(this._className, "._getC2CPeerReadTime userIDList:").concat(o4));
          var n3 = this.getModule(Bo);
          n3 && n3.getRemotePeerReadTime(o4);
        }
      } }, { key: "_getStorageConversationList", value: function() {
        return this.getModule(zo).getItem("conversationMap");
      } }, { key: "_setStorageConversationList", value: function() {
        var e4 = this.getLocalConversationList().filter(function(e5) {
          return e5.type === D2.CONV_C2C || e5.type === D2.CONV_GROUP && e5.lastMessage.type !== D2.MSG_GRP_TIP;
        }).slice(0, 20).map(function(e5) {
          return { conversationID: e5.conversationID, type: e5.type, subType: e5.subType, lastMessage: e5.lastMessage, groupProfile: e5.groupProfile, userProfile: e5.userProfile };
        });
        this.getModule(zo).setItem("conversationMap", e4);
      } }, { key: "emitConversationUpdate", value: function() {
        var e4 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], o4 = this.getLocalConversationList();
        if (t3) {
          var n3 = this.getModule(Ko);
          n3 && n3.updateGroupLastMessage(o4);
        }
        e4 && this.emitOuterEvent(S2.CONVERSATION_LIST_UPDATED);
      } }, { key: "getLocalConversationList", value: function() {
        return v2(this._conversationMap.values()).filter(function(e4) {
          return e4.type !== D2.CONV_TOPIC;
        });
      } }, { key: "getLocalConversation", value: function(e4) {
        return this._conversationMap.get(e4);
      } }, { key: "hasLocalConversation", value: function(e4) {
        return this._conversationMap.has(e4);
      } }, { key: "getLocalOldestMessage", value: function(e4) {
        return this._messageListHandler.getLocalOldestMessage(e4);
      } }, { key: "syncConversationList", value: function() {
        var e4 = this, t3 = new bs2(ws2.SYNC_CONVERSATION_LIST);
        return this._pagingStatus === io.NOT_START && this._conversationMap.clear(), this._pagingGetConversationList().then(function(o4) {
          return e4._pagingStatus = io.RESOLVED, e4._setStorageConversationList(), e4._handleC2CPeerReadTime(), e4._patchConversationProperties(), t3.setMessage(e4._conversationMap.size).setNetworkType(e4.getNetworkType()).end(), o4;
        }).catch(function(o4) {
          return e4._pagingStatus = io.REJECTED, t3.setMessage(e4._pagingTimeStamp), e4.probeNetwork().then(function(e5) {
            var n3 = m2(e5, 2), a4 = n3[0], s3 = n3[1];
            t3.setError(o4, a4, s3).end();
          }), lr(o4);
        });
      } }, { key: "_patchConversationProperties", value: function() {
        var e4 = this, t3 = Date.now(), o4 = this.checkAndPatchRemark(), n3 = this._messageRemindHandler.getC2CMessageRemindType(), a4 = this.getModule(Ko).getGroupList();
        Promise.all([o4, n3, a4]).then(function() {
          var o5 = Date.now() - t3;
          Ye2.log("".concat(e4._className, "._patchConversationProperties ok. cost ").concat(o5, " ms")), e4.emitConversationUpdate(true, false), e4.emitTotalUnreadMessageCountUpdate();
        });
      } }, { key: "_pagingGetConversationList", value: function() {
        var e4 = this, t3 = "".concat(this._className, "._pagingGetConversationList");
        return Ye2.log("".concat(t3, " timeStamp:").concat(this._pagingTimeStamp, " startIndex:").concat(this._pagingStartIndex) + " pinnedTimeStamp:".concat(this._pagingPinnedTimeStamp, " pinnedStartIndex:").concat(this._pagingPinnedStartIndex)), this._pagingStatus = io.PENDING, this.request({ protocolName: Bn2, requestData: { fromAccount: this.getMyUserID(), timeStamp: this._pagingTimeStamp, startIndex: this._pagingStartIndex, pinnedTimeStamp: this._pagingPinnedTimeStamp, pinnedStartIndex: this._pagingPinnedStartIndex, orderType: 1 } }).then(function(o4) {
          var n3 = o4.data, a4 = n3.completeFlag, s3 = n3.conversations, r3 = void 0 === s3 ? [] : s3, i3 = n3.timeStamp, c3 = n3.startIndex, u3 = n3.pinnedTimeStamp, l3 = n3.pinnedStartIndex, d3 = n3.groupItem;
          if (Ye2.log("".concat(t3, " ok. completeFlag:").concat(a4, " count:").concat(r3.length, " isReady:").concat(e4._isReady)), e4._convGroupHandler.onConvGroupListSynced(d3), r3.length > 0) {
            var p3 = e4._getConversationOptions(r3);
            e4._updateLocalConversationList({ conversationOptionsList: p3, isFromGetConversations: true }), e4.isLoggedIn() && e4.emitConversationUpdate();
          }
          if (!e4._isReady) {
            if (!e4.isLoggedIn())
              return ur();
            e4.triggerReady();
          }
          return e4._pagingTimeStamp = i3, e4._pagingStartIndex = c3, e4._pagingPinnedTimeStamp = u3, e4._pagingPinnedStartIndex = l3, 1 !== a4 ? e4._pagingGetConversationList() : (e4._handleGroupAtTipsList(), e4._convGroupHandler.getRemoteConvGroupList(), ur());
        }).catch(function(o4) {
          throw e4.isLoggedIn() && (e4._isReady || (Ye2.warn("".concat(t3, " failed. error:"), o4), e4.triggerReady())), o4;
        });
      } }, { key: "_updateLocalConversationList", value: function(e4) {
        var t3, o4 = e4.isFromGetConversations, n3 = e4.isInstantMessage, a4 = Date.now();
        t3 = this._getTmpConversationListMapping(e4), this._conversationMap = new Map(this._sortConversationList([].concat(v2(t3.toBeUpdatedConversationList), v2(this._conversationMap)))), o4 || (this._updateUserOrGroupProfile(t3.newConversationList), n3 && this.emitTotalUnreadMessageCountUpdate()), Ye2.debug("".concat(this._className, "._updateLocalConversationList cost ").concat(Date.now() - a4, " ms"));
      } }, { key: "_getTmpConversationListMapping", value: function(e4) {
        for (var t3 = e4.conversationOptionsList, o4 = e4.isFromGetConversations, n3 = e4.isInstantMessage, a4 = e4.isUnreadC2CMessage, s3 = void 0 !== a4 && a4, r3 = e4.updateUnreadCount, i3 = [], c3 = [], u3 = this.getModule(Ko), l3 = this.getModule(Ho), d3 = this.isIntl(), p3 = 0, g3 = t3.length; p3 < g3; p3++) {
          var _3 = new kr(t3[p3], d3), h3 = _3.conversationID;
          if (h3 !== "".concat(D2.CONV_C2C, "@TLS#ERROR") && h3 !== "".concat(D2.CONV_C2C, "@TLS#NOT_FOUND"))
            if (this._conversationMap.has(h3)) {
              var f3 = this._conversationMap.get(h3), m3 = ["unreadCount", "allowType", "adminForbidType", "payload", "isPinned"];
              false === n3 && m3.push("lastMessage");
              var v3 = t3[p3].lastMessage, M3 = !dt2(v3);
              M3 || t3[p3].type === D2.CONV_TOPIC || this._onLastMessageNotExist(t3[p3]), dt2(n3) && M3 && null === f3.lastMessage.payload && (f3.lastMessage.payload = v3.payload), oo(f3.lastMessage.revoker) || (f3.lastMessage.revoker = null), Mt(f3, _3, m3, [null, void 0, "", 0, NaN]), true === r3 && f3.updateUnreadCount({ nextUnreadCount: _3.unreadCount, isFromGetConversations: o4, isUnreadC2CMessage: s3 }), n3 && M3 && (v3.payload && (f3.lastMessage.payload = v3.payload), f3.type === D2.CONV_GROUP && (f3.lastMessage.nameCard = v3.nameCard, f3.lastMessage.nick = v3.nick)), M3 && f3.lastMessage.cloudCustomData !== v3.cloudCustomData && (f3.lastMessage.cloudCustomData = v3.cloudCustomData || ""), this._conversationMap.delete(h3), i3.push([h3, f3]);
            } else {
              if (_3.type === D2.CONV_GROUP && u3) {
                var y3 = _3.groupProfile.groupID, I3 = u3.getLocalGroupProfile(y3);
                I3 && (_3.groupProfile = I3, true === r3 && _3.updateUnreadCount({ nextUnreadCount: 0 }));
              } else if (_3.type === D2.CONV_C2C) {
                var C3 = h3.replace(D2.CONV_C2C, "");
                l3 && l3.isMyFriend(C3) && (_3.remark = l3.getFriendRemark(C3));
              }
              c3.push(_3), i3.push([h3, _3]);
            }
        }
        var T3 = this.getModule(Yo);
        return i3.forEach(function(e5) {
          if (e5[1].type === D2.CONV_TOPIC) {
            var t4 = e5[1], o5 = t4.conversationID, n4 = t4.unreadCount, a5 = t4.groupAtInfoList;
            T3.onConversationProxy({ topicID: o5.replace(D2.CONV_GROUP, ""), unreadCount: n4, groupAtInfoList: oo(a5) ? void 0 : a5 });
          }
        }), { toBeUpdatedConversationList: i3, newConversationList: c3 };
      } }, { key: "_onLastMessageNotExist", value: function(e4) {
        new bs2(ws2.LAST_MESSAGE_NOT_EXIST).setMessage("".concat(JSON.stringify(e4))).setNetworkType(this.getNetworkType()).end();
      } }, { key: "_sortConversationList", value: function(e4) {
        var t3 = [], o4 = [];
        return e4.forEach(function(e5) {
          true === e5[1].isPinned ? t3.push(e5) : o4.push(e5);
        }), t3.sort(function(e5, t4) {
          return t4[1].lastMessage.lastTime - e5[1].lastMessage.lastTime;
        }).concat(o4.sort(function(e5, t4) {
          return t4[1].lastMessage.lastTime - e5[1].lastMessage.lastTime;
        }));
      } }, { key: "_sortConversationListAndEmitEvent", value: function() {
        this._conversationMap = new Map(this._sortConversationList(v2(this._conversationMap))), this.emitConversationUpdate(true, false);
      } }, { key: "_updateUserOrGroupProfile", value: function(e4) {
        var t3 = this;
        if (0 !== e4.length) {
          var o4 = [], n3 = [], a4 = this.getModule(Vo), s3 = this.getModule(Ko);
          e4.forEach(function(e5) {
            if (e5.type === D2.CONV_C2C)
              o4.push(e5.toAccount);
            else if (e5.type === D2.CONV_GROUP) {
              var t4 = e5.toAccount;
              s3.hasLocalGroup(t4) ? e5.groupProfile = s3.getLocalGroupProfile(t4) : n3.push(t4);
            }
          }), Ye2.log("".concat(this._className, "._updateUserOrGroupProfile c2cUserIDList:").concat(o4, " groupIDList:").concat(n3)), o4.length > 0 && a4.getUserProfile({ userIDList: o4 }).then(function(e5) {
            var o5 = e5.data;
            lt2(o5) ? o5.forEach(function(e6) {
              t3._conversationMap.get("C2C".concat(e6.userID)).userProfile = e6;
            }) : t3._conversationMap.get("C2C".concat(o5.userID)).userProfile = o5;
          }), n3.length > 0 && s3.getGroupProfileAdvance({ groupIDList: n3, responseFilter: { groupBaseInfoFilter: ["Type", "Name", "FaceUrl"] } }).then(function(e5) {
            e5.data.successGroupList.forEach(function(e6) {
              var o5 = "GROUP".concat(e6.groupID);
              if (t3._conversationMap.has(o5)) {
                var n4 = t3._conversationMap.get(o5);
                Mt(n4.groupProfile, e6, [], [null, void 0, "", 0, NaN]), !n4.subType && e6.type && (n4.subType = e6.type);
              }
            });
          });
        }
      } }, { key: "_getConversationOptions", value: function(e4) {
        var o4 = this, n3 = [], a4 = e4.filter(function(e5) {
          var t3 = e5.type, o5 = e5.userID;
          return 1 === t3 && "@TLS#NOT_FOUND" !== o5 && "@TLS#ERROR" !== o5 || 2 === t3;
        }), s3 = this.getMyUserID(), r3 = a4.map(function(e5) {
          if (dt2(e5.lastMsg) && (e5.lastMsg = { elements: [] }), 1 === e5.type) {
            var a5 = { userID: e5.userID, nick: e5.peerNick, avatar: e5.peerAvatar };
            return n3.push(a5), { conversationID: "C2C".concat(e5.userID), type: "C2C", lastMessage: { lastTime: e5.time, lastSequence: e5.sequence, fromAccount: e5.lastC2CMsgFromAccount, messageForShow: e5.messageShow, type: e5.lastMsg.elements[0] ? e5.lastMsg.elements[0].type : null, payload: e5.lastMsg.elements[0] ? o4._amendLayersOverLimitProperty(e5.lastMsg.elements[0].content) : null, cloudCustomData: e5.lastMsg.cloudCustomData || "", isRevoked: 8 === e5.lastMessageFlag, onlineOnlyFlag: false, nick: "", nameCard: "", version: 0, isPeerRead: e5.lastC2CMsgFromAccount === s3 && e5.time <= e5.c2cPeerReadTime, revoker: e5.lastMsg.revokerInfo ? e5.lastMsg.revokerInfo.revoker : null }, userProfile: new Tr(a5), peerReadTime: e5.c2cPeerReadTime, isPinned: 1 === e5.isPinned, messageRemindType: "", customData: e5.customMark || "", markList: Xt(e5.standardMark), conversationGroupList: o4._convGroupHandler.getConvGroupListByID(e5.contactGroupId) };
          }
          return { conversationID: "GROUP".concat(e5.groupID), type: "GROUP", lastMessage: t2(t2({ lastTime: e5.time, lastSequence: e5.messageReadSeq + e5.unreadCount, fromAccount: e5.msgGroupFromAccount, messageForShow: e5.messageShow }, o4._patchTypeAndPayload(e5)), {}, { cloudCustomData: e5.lastMsg.cloudCustomData || "", isRevoked: 2 === e5.lastMessageFlag, onlineOnlyFlag: false, nick: e5.senderNick || "", nameCard: e5.senderNameCard || "", revoker: e5.lastMsg.revokerInfo ? e5.lastMsg.revokerInfo.revoker : null }), groupProfile: new Nr({ groupID: e5.groupID, name: e5.groupNick, avatar: e5.groupImage }), unreadCount: e5.unreadCount, peerReadTime: 0, isPinned: 1 === e5.isPinned, messageRemindType: "", version: 0, customData: e5.customMark || "", markList: Xt(e5.standardMark), conversationGroupList: o4._convGroupHandler.getConvGroupListByID(e5.contactGroupId) };
        });
        n3.length > 0 && this.getModule(Vo).onConversationsProfileUpdated(n3);
        return r3;
      } }, { key: "_patchTypeAndPayload", value: function(e4) {
        var o4 = e4.lastMsg, n3 = o4.event, a4 = void 0 === n3 ? void 0 : n3, s3 = o4.elements, r3 = void 0 === s3 ? [] : s3, i3 = o4.groupTips, c3 = void 0 === i3 ? {} : i3;
        if (!dt2(a4) && !oo(c3)) {
          var u3 = new Zs(c3);
          u3.setElement({ type: D2.MSG_GRP_TIP, content: t2(t2({}, c3.elements), {}, { groupProfile: c3.groupProfile }) });
          var l3 = JSON.parse(JSON.stringify(u3.payload));
          return u3 = null, { type: D2.MSG_GRP_TIP, payload: l3 };
        }
        return { type: r3[0] ? r3[0].type : null, payload: r3[0] ? this._amendLayersOverLimitProperty(r3[0].content) : null };
      } }, { key: "_amendLayersOverLimitProperty", value: function(e4) {
        var t3 = e4.layersOverLimit;
        return 0 === t3 ? e4.layersOverLimit = false : 1 === t3 && (e4.layersOverLimit = true), e4;
      } }, { key: "getLocalMessageList", value: function(e4) {
        return this._messageListHandler.getLocalMessageList(e4);
      } }, { key: "deleteLocalMessage", value: function(e4) {
        e4 instanceof Zs && this._messageListHandler.remove(e4);
      } }, { key: "onConversationDeleted", value: function(e4) {
        var t3 = this;
        Ye2.log("".concat(this._className, ".onConversationDeleted")), lt2(e4) && e4.forEach(function(e5) {
          var o4 = e5.type, n3 = e5.userID, a4 = e5.groupID, s3 = "";
          1 === o4 ? s3 = "".concat(D2.CONV_C2C).concat(n3) : 2 === o4 && (s3 = "".concat(D2.CONV_GROUP).concat(a4)), t3.deleteLocalConversation(s3);
        });
      } }, { key: "onConversationPinned", value: function(e4) {
        var t3 = this;
        if (lt2(e4)) {
          var o4 = false;
          e4.forEach(function(e5) {
            var n3, a4 = e5.type, s3 = e5.userID, r3 = e5.groupID;
            1 === a4 ? n3 = t3.getLocalConversation("".concat(D2.CONV_C2C).concat(s3)) : 2 === a4 && (n3 = t3.getLocalConversation("".concat(D2.CONV_GROUP).concat(r3))), n3 && (Ye2.log("".concat(t3._className, ".onConversationPinned conversationID:").concat(n3.conversationID, " isPinned:").concat(n3.isPinned)), n3.isPinned || (n3.isPinned = true, o4 = true));
          }), o4 && this._sortConversationListAndEmitEvent();
        }
      } }, { key: "onConversationUnpinned", value: function(e4) {
        var t3 = this;
        if (lt2(e4)) {
          var o4 = false;
          e4.forEach(function(e5) {
            var n3, a4 = e5.type, s3 = e5.userID, r3 = e5.groupID;
            1 === a4 ? n3 = t3.getLocalConversation("".concat(D2.CONV_C2C).concat(s3)) : 2 === a4 && (n3 = t3.getLocalConversation("".concat(D2.CONV_GROUP).concat(r3))), n3 && (Ye2.log("".concat(t3._className, ".onConversationUnpinned conversationID:").concat(n3.conversationID, " isPinned:").concat(n3.isPinned)), n3.isPinned && (n3.isPinned = false, o4 = true));
          }), o4 && this._sortConversationListAndEmitEvent();
        }
      } }, { key: "getMessageList", value: function(e4) {
        var t3 = this, o4 = e4.conversationID, n3 = e4.nextReqMessageID, a4 = e4.count, s3 = "".concat(this._className, ".getMessageList"), r3 = this.getLocalConversation(o4), i3 = "";
        if (r3 && r3.groupProfile && (i3 = r3.groupProfile.type), Lt(i3))
          return Ye2.log("".concat(s3, " not available in avchatroom. conversationID:").concat(o4)), ur({ messageList: [], nextReqMessageID: "", isCompleted: true });
        (dt2(a4) || a4 > 15) && (a4 = 15), !n3 && this._isNotInCommunity(o4) && (this._messageListHandler.removeByConversationID(o4), this._completedMap.delete(o4), this._roamingMessageSequenceMap.delete(o4));
        var c3 = this._computeRemainingCount({ conversationID: o4, nextReqMessageID: n3 }), u3 = this._completedMap.has(o4);
        if (Ye2.log("".concat(s3, " conversationID:").concat(o4, " nextReqMessageID:").concat(n3) + " remainingCount:".concat(c3, " count:").concat(a4, " isCompleted:").concat(u3)), this._needGetHistory({ conversationID: o4, remainingCount: c3, count: a4 }))
          return this.getHistoryMessages({ conversationID: o4, nextReqMessageID: n3, count: 20 }).then(function(e5) {
            var n4 = e5.nextReqID, a5 = e5.storedMessageList, r4 = t3._completedMap.has(o4), i4 = a5;
            c3 > 0 && (i4 = t3._messageListHandler.getLocalMessageList(o4).slice(0, a5.length + c3));
            var u4 = { nextReqMessageID: r4 ? "" : n4, messageList: i4, isCompleted: r4 };
            return Ye2.log("".concat(s3, " ret.nextReqMessageID:").concat(u4.nextReqMessageID, " ret.isCompleted:").concat(u4.isCompleted, " ret.length:").concat(i4.length)), er(u4);
          });
        this.modifyMessageList(o4);
        var l3 = this._getMessageListFromMemory({ conversationID: o4, nextReqMessageID: n3, count: a4 });
        return ur(l3);
      } }, { key: "_getMessageListFromMemory", value: function(e4) {
        var t3 = e4.conversationID, o4 = e4.nextReqMessageID, n3 = e4.count, a4 = "".concat(this._className, "._getMessageListFromMemory"), s3 = this._messageListHandler.getLocalMessageList(t3), r3 = s3.length, i3 = 0, c3 = { isCompleted: false, nextReqMessageID: "", messageList: [] };
        return o4 ? (i3 = s3.findIndex(function(e5) {
          return e5.ID === o4;
        })) > n3 ? (c3.messageList = s3.slice(i3 - n3, i3), c3.nextReqMessageID = s3[i3 - n3].ID) : (c3.messageList = s3.slice(0, i3), c3.isCompleted = true) : r3 > n3 ? (i3 = r3 - n3, c3.messageList = s3.slice(i3, r3), c3.nextReqMessageID = s3[i3].ID) : (c3.messageList = s3.slice(0, r3), c3.isCompleted = true), Ye2.log("".concat(a4, " conversationID:").concat(t3) + " ret.nextReqMessageID:".concat(c3.nextReqMessageID, " ret.isCompleted:").concat(c3.isCompleted, " ret.length:").concat(c3.messageList.length)), c3;
      } }, { key: "getMessageListHopping", value: function(e4) {
        var t3 = e4.conversationID, o4 = e4.sequence, n3 = e4.time, a4 = e4.count, s3 = e4.direction, r3 = void 0 === s3 ? 0 : s3;
        if ((dt2(a4) || a4 > 15) && (a4 = 15), t3.startsWith(D2.CONV_C2C)) {
          var i3 = this.getModule(Bo), c3 = t3.replace(D2.CONV_C2C, "");
          return i3.getRoamingMessagesHopping({ peerAccount: c3, time: n3, count: a4, direction: r3 });
        }
        if (t3.startsWith(D2.CONV_GROUP)) {
          var u3 = this.getModule(Ko), l3 = t3.replace(D2.CONV_GROUP, "");
          return u3.getRoamingMessagesHopping({ groupID: l3, sequence: o4, count: a4, direction: r3 });
        }
      } }, { key: "_computeRemainingCount", value: function(e4) {
        var t3 = e4.conversationID, o4 = e4.nextReqMessageID, n3 = this._messageListHandler.getLocalMessageList(t3), a4 = n3.length;
        if (!o4)
          return a4;
        var s3 = 0;
        return Pt2(t3) ? s3 = n3.findIndex(function(e5) {
          return e5.ID === o4;
        }) : Ut(t3) && (s3 = -1 !== o4.indexOf("-") ? n3.findIndex(function(e5) {
          return e5.ID === o4;
        }) : n3.findIndex(function(e5) {
          return e5.sequence === o4;
        })), -1 === s3 && (s3 = 0), s3;
      } }, { key: "_getMessageListSize", value: function(e4) {
        return this._messageListHandler.getLocalMessageList(e4).length;
      } }, { key: "_needGetHistory", value: function(e4) {
        var t3 = e4.conversationID, o4 = e4.remainingCount, n3 = e4.count, a4 = this.getLocalConversation(t3), s3 = "";
        return a4 && a4.groupProfile && (s3 = a4.groupProfile.type), !bt2(t3) && !Lt(s3) && (!(Ut(t3) && this._isPagingGetGroupListCompleted() && this._getLocalGroupCount() <= 4e3 && !this._hasLocalGroup(t3) && !this._isTopicConversation(t3)) && (o4 <= n3 && !this._completedMap.has(t3)));
      } }, { key: "_isTopicConversation", value: function(e4) {
        var t3 = e4.replace(D2.CONV_GROUP, "");
        return Gt(t3);
      } }, { key: "getHistoryMessages", value: function(e4) {
        var t3 = e4.conversationID, o4 = e4.count;
        if (t3 === D2.CONV_SYSTEM)
          return ur();
        var n3 = 15;
        o4 > 20 && (n3 = 20);
        var a4 = null;
        if (Pt2(t3)) {
          var s3 = this._roamingMessageKeyAndTimeMap.has(t3);
          return (a4 = this.getModule(Bo)) ? a4.getRoamingMessage({ conversationID: t3, peerAccount: t3.replace(D2.CONV_C2C, ""), count: n3, lastMessageTime: s3 ? this._roamingMessageKeyAndTimeMap.get(t3).lastMessageTime : 0, messageKey: s3 ? this._roamingMessageKeyAndTimeMap.get(t3).messageKey : "" }) : lr({ code: hn.CANNOT_FIND_MODULE });
        }
        if (Ut(t3)) {
          if (!(a4 = this.getModule(Ko)))
            return lr({ code: hn.CANNOT_FIND_MODULE });
          var r3 = null;
          this._conversationMap.has(t3) && (r3 = this._conversationMap.get(t3).lastMessage);
          var i3 = 0;
          r3 && (i3 = r3.lastSequence);
          var c3 = this._roamingMessageSequenceMap.get(t3);
          return a4.getRoamingMessage({ conversationID: t3, groupID: t3.replace(D2.CONV_GROUP, ""), count: n3, sequence: c3 || i3 });
        }
        return ur();
      } }, { key: "patchConversationLastMessage", value: function(e4) {
        var t3 = this.getLocalConversation(e4);
        if (t3) {
          var o4 = t3.lastMessage, n3 = o4.messageForShow, a4 = o4.payload;
          if (oo(n3) || oo(a4)) {
            var s3 = this._messageListHandler.getLocalMessageList(e4);
            if (0 === s3.length)
              return;
            var r3 = s3[s3.length - 1];
            Ye2.log("".concat(this._className, ".patchConversationLastMessage conversationID:").concat(e4, " payload:"), r3.payload), t3.updateLastMessage(r3);
          }
        }
      } }, { key: "onRoamingMessage", value: function() {
        var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], o4 = arguments.length > 1 ? arguments[1] : void 0, n3 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], a4 = o4.startsWith(D2.CONV_C2C) ? D2.CONV_C2C : D2.CONV_GROUP, s3 = null, r3 = [], i3 = [], c3 = 0, u3 = e4.length, l3 = null, d3 = a4 === D2.CONV_GROUP, p3 = this.getModule(Qo), g3 = function() {
          c3 = d3 ? e4.length - 1 : 0, u3 = d3 ? 0 : e4.length;
        }, _3 = function() {
          d3 ? --c3 : ++c3;
        }, h3 = function() {
          return d3 ? c3 >= u3 : c3 < u3;
        };
        for (g3(); h3(); _3())
          if (d3 && 1 === e4[c3].sequence && n3 && this.setCompleted(o4), 1 !== e4[c3].isPlaceMessage)
            if ((s3 = new Zs(e4[c3])).to = e4[c3].to, a4 !== D2.CONV_GROUP || dt2(e4[c3].topicID) || (s3.to = e4[c3].topicID), s3.isSystemMessage = !!e4[c3].isSystemMessage, s3.conversationType = a4, 4 === e4[c3].event ? l3 = { type: D2.MSG_GRP_TIP, content: t2(t2({}, e4[c3].elements), {}, { groupProfile: e4[c3].groupProfile }) } : (e4[c3].elements = p3.parseElements(e4[c3].elements, e4[c3].from), l3 = e4[c3].elements), d3 || s3.setNickAndAvatar({ nick: e4[c3].nick, avatar: e4[c3].avatar }), oo(l3)) {
              var f3 = new bs2(ws2.EMPTY_MESSAGE_BODY);
              f3.setMessage("from:".concat(s3.from, " to:").concat(s3.to, " sequence:").concat(s3.sequence, " event:").concat(e4[c3].event)), f3.setNetworkType(this.getNetworkType()).setLevel("warning").end();
            } else
              s3.setElement(l3), s3.reInitialize(this.getMyUserID()), r3.push(s3);
        return g3 = _3 = h3 = null, n3 ? (this._messageListHandler.unshift(r3, i3), r3 = null, i3) : (i3 = null, r3);
      } }, { key: "findMessage", value: function(e4) {
        return this._messageListHandler.findMessage(e4);
      } }, { key: "_isNotInCommunity", value: function(e4) {
        var t3 = false;
        if (e4.startsWith(D2.CONV_GROUP) && this._isTopicConversation(e4)) {
          var o4 = $t(e4.replace(D2.CONV_GROUP, ""));
          this.getModule(Ko).hasLocalGroup(o4) || (t3 = true);
        }
        return t3;
      } }, { key: "deleteTopicRoamingMessageInfo", value: function(e4) {
        var t3 = this;
        Ot2({ groupID: e4 }) && this._messageListHandler.getTopicConversationIDList(e4).forEach(function(e5) {
          t3._messageListHandler.removeByConversationID(e5), t3._completedMap.delete(e5), t3._roamingMessageSequenceMap.delete(e5);
        });
      } }, { key: "deleteGroupRomaingMessageInfo", value: function(e4) {
        var t3 = "".concat(D2.CONV_GROUP).concat(e4);
        this._messageListHandler.removeByConversationID(t3), this._completedMap.delete(t3), this._roamingMessageSequenceMap.delete(t3);
      } }, { key: "setMessageRead", value: function(e4) {
        var t3 = e4.conversationID, o4 = this.getLocalConversation(t3);
        if (Ye2.log("".concat(this._className, ".setMessageRead conversationID:").concat(t3, " unreadCount:").concat(o4 ? o4.unreadCount : 0)), !o4)
          return ur();
        if (o4.type !== D2.CONV_GROUP && o4.type !== D2.CONV_TOPIC || oo(o4.groupAtInfoList) || this.deleteGroupAtTips(t3), 0 === o4.unreadCount)
          return ur();
        if (o4.type === D2.CONV_GROUP && !this._hasLocalGroup(t3))
          return 0 !== o4.unreadCount && (o4.unreadCount = 0, this.emitConversationUpdate(true, false)), ur();
        var n3 = this._messageListHandler.getLocalLastMessage(t3), a4 = o4.lastMessage.lastTime;
        n3 && a4 < n3.time && (a4 = n3.time);
        var s3 = o4.lastMessage.lastSequence;
        if (n3 && s3 < n3.sequence && (s3 = n3.sequence), o4.type === D2.CONV_TOPIC && dt2(n3)) {
          var r3 = this.getModule(Yo), i3 = t3.replace(D2.CONV_GROUP, ""), c3 = $t(i3), u3 = r3.getLocalTopic(c3, i3);
          u3 && (s3 = u3.nextMessageSeq - 1);
        }
        var l3 = null;
        switch (o4.type) {
          case D2.CONV_C2C:
            return (l3 = this.getModule(Bo)) ? l3.setMessageRead({ conversationID: t3, lastMessageTime: a4 }) : lr({ code: hn.CANNOT_FIND_MODULE });
          case D2.CONV_GROUP:
          case D2.CONV_TOPIC:
            return (l3 = this.getModule(Ko)) ? l3.setMessageRead({ conversationID: t3, lastMessageSeq: s3 }) : lr({ code: hn.CANNOT_FIND_MODULE });
          case D2.CONV_SYSTEM:
            return o4.unreadCount = 0, this.emitConversationUpdate(true, false), ur();
          default:
            return ur();
        }
      } }, { key: "setAllMessageRead", value: function() {
        var e4 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, o4 = "".concat(this._className, ".setAllMessageRead");
        t3.scope || (t3.scope = D2.READ_ALL_MSG), Ye2.log("".concat(o4, " options:"), t3);
        var n3 = this._createSetAllMessageReadPack(t3);
        if (0 === n3.readAllC2CMessage && 0 === n3.groupMessageReadInfoList.length)
          return ur();
        var a4 = new bs2(ws2.SET_ALL_MESSAGE_READ);
        return this.request({ protocolName: fa, requestData: n3 }).then(function(o5) {
          var n4 = o5.data, s3 = e4._handleAllMessageRead(n4);
          return a4.setMessage("scope:".concat(t3.scope, " failureGroups:").concat(JSON.stringify(s3))).setNetworkType(e4.getNetworkType()).end(), ur();
        }).catch(function(t4) {
          return e4.probeNetwork().then(function(e5) {
            var o5 = m2(e5, 2), n4 = o5[0], s3 = o5[1];
            a4.setError(t4, n4, s3).end();
          }), Ye2.warn("".concat(o4, " failed. error:"), t4), lr({ code: t4 && t4.code ? t4.code : hn.MESSAGE_UNREAD_ALL_FAIL, message: t4 && t4.message ? t4.message : void 0 });
        });
      } }, { key: "setConversationCustomData", value: function(e4) {
        return this._convGroupHandler.setConvCustomData(e4);
      } }, { key: "markConversation", value: function(e4) {
        return this._convGroupHandler.markConversation(e4);
      } }, { key: "getConversationGroupList", value: function() {
        return this._convGroupHandler.getLocalConvGroupList();
      } }, { key: "createConversationGroup", value: function(e4) {
        return this._convGroupHandler.createConvGroup(e4);
      } }, { key: "deleteConversationGroup", value: function(e4) {
        return this._convGroupHandler.deleteConvGroup(e4);
      } }, { key: "renameConversationGroup", value: function(e4) {
        return this._convGroupHandler.renameConvGroup(e4);
      } }, { key: "addConversationsToGroup", value: function(e4) {
        return this._convGroupHandler.addConvsToGroup(e4);
      } }, { key: "deleteConversationsFromGroup", value: function(e4) {
        return this._convGroupHandler.deleteConvsFromGroup(e4);
      } }, { key: "onConversationMarkUpdated", value: function(e4) {
        this._convGroupHandler.onConvMarkUpdated(e4);
      } }, { key: "onConversationGroupCreated", value: function(e4) {
        this._convGroupHandler.onConvGroupCreated(e4);
      } }, { key: "onConversationGroupDeleted", value: function(e4) {
        this._convGroupHandler.onConvGroupDeleted(e4);
      } }, { key: "onConversationGroupNameUpdated", value: function(e4) {
        this._convGroupHandler.onConvGroupNameUpdated(e4);
      } }, { key: "onConversationInGroupUpdated", value: function(e4) {
        this._convGroupHandler.onConvInGroupUpdated(e4);
      } }, { key: "onConversationAddedToOrDeletedFromGroup", value: function(e4) {
        this._convGroupHandler.onConvAddedToOrDeletedFromGroup(e4);
      } }, { key: "_getConversationLastMessageSequence", value: function(e4) {
        var t3 = this._messageListHandler.getLocalLastMessage(e4.conversationID), o4 = e4.lastMessage.lastSequence;
        return t3 && o4 < t3.sequence && (o4 = t3.sequence), o4;
      } }, { key: "_getConversationLastMessageTime", value: function(e4) {
        var t3 = this._messageListHandler.getLocalLastMessage(e4.conversationID), o4 = e4.lastMessage.lastTime;
        return t3 && o4 < t3.time && (o4 = t3.time), o4;
      } }, { key: "_createSetAllMessageReadPack", value: function(e4) {
        var t3, o4 = { readAllC2CMessage: 0, groupMessageReadInfoList: [] }, n3 = e4.scope, a4 = E2(this._conversationMap);
        try {
          for (a4.s(); !(t3 = a4.n()).done; ) {
            var s3 = m2(t3.value, 2)[1];
            if (s3.unreadCount > 0) {
              if (s3.type === D2.CONV_C2C && 0 === o4.readAllC2CMessage) {
                if (n3 === D2.READ_ALL_MSG)
                  o4.readAllC2CMessage = 1;
                else if (n3 === D2.READ_ALL_C2C_MSG) {
                  o4.readAllC2CMessage = 1;
                  break;
                }
              } else if (s3.type === D2.CONV_GROUP && (n3 === D2.READ_ALL_GROUP_MSG || n3 === D2.READ_ALL_MSG)) {
                var r3 = this._getConversationLastMessageSequence(s3);
                o4.groupMessageReadInfoList.push({ groupID: s3.groupProfile.groupID, messageSequence: r3 });
              }
            }
          }
        } catch (i3) {
          a4.e(i3);
        } finally {
          a4.f();
        }
        return o4;
      } }, { key: "onPushedAllMessageRead", value: function(e4) {
        this._handleAllMessageRead(e4);
      } }, { key: "_handleAllMessageRead", value: function(e4) {
        var t3 = e4.groupMessageReadInfoList, o4 = e4.readAllC2CMessage, n3 = this._parseGroupReadInfo(t3);
        return this._updateAllConversationUnreadCount({ readAllC2CMessage: o4 }) >= 1 && (this.emitConversationUpdate(true, false), this.emitTotalUnreadMessageCountUpdate()), n3;
      } }, { key: "_parseGroupReadInfo", value: function(e4) {
        var t3 = [];
        if (e4 && e4.length)
          for (var o4 = 0, n3 = e4.length; o4 < n3; o4++) {
            var a4 = e4[o4], s3 = a4.groupID, r3 = a4.sequence, i3 = a4.retCode, c3 = a4.lastMessageSeq;
            dt2(i3) ? this._remoteGroupReadSequenceMap.set(s3, c3) : (this._remoteGroupReadSequenceMap.set(s3, r3), 0 !== i3 && t3.push("".concat(s3, "-").concat(r3, "-").concat(i3)));
          }
        return t3;
      } }, { key: "_updateAllConversationUnreadCount", value: function(e4) {
        var t3, o4 = e4.readAllC2CMessage, n3 = 0, a4 = E2(this._conversationMap);
        try {
          for (a4.s(); !(t3 = a4.n()).done; ) {
            var s3 = m2(t3.value, 2), r3 = s3[0], i3 = s3[1];
            if (i3.unreadCount >= 1) {
              if (1 === o4 && i3.type === D2.CONV_C2C) {
                var c3 = this._getConversationLastMessageTime(i3);
                this.updateIsReadAfterReadReport({ conversationID: r3, lastMessageTime: c3 });
              } else if (i3.type === D2.CONV_GROUP) {
                var u3 = r3.replace(D2.CONV_GROUP, "");
                if (this._remoteGroupReadSequenceMap.has(u3)) {
                  var l3 = this._remoteGroupReadSequenceMap.get(u3), d3 = this._getConversationLastMessageSequence(i3);
                  this.updateIsReadAfterReadReport({ conversationID: r3, remoteReadSequence: l3 }), d3 >= l3 && this._remoteGroupReadSequenceMap.delete(u3);
                }
              }
              this.updateUnreadCount(r3, false) && (n3 += 1);
            }
          }
        } catch (p3) {
          a4.e(p3);
        } finally {
          a4.f();
        }
        return n3;
      } }, { key: "isRemoteRead", value: function(e4) {
        var t3 = e4.conversationID, o4 = e4.sequence, n3 = t3.replace(D2.CONV_GROUP, ""), a4 = false;
        if (this._remoteGroupReadSequenceMap.has(n3)) {
          var s3 = this._remoteGroupReadSequenceMap.get(n3);
          o4 <= s3 && (a4 = true, Ye2.log("".concat(this._className, ".isRemoteRead conversationID:").concat(t3, " messageSequence:").concat(o4, " remoteReadSequence:").concat(s3))), o4 >= s3 + 10 && this._remoteGroupReadSequenceMap.delete(n3);
        }
        return a4;
      } }, { key: "updateIsReadAfterReadReport", value: function(e4) {
        var t3 = e4.conversationID, o4 = e4.lastMessageSeq, n3 = e4.lastMessageTime, a4 = this._messageListHandler.getLocalMessageList(t3);
        if (0 !== a4.length) {
          for (var s3, r3 = a4.length - 1; r3 >= 0; r3--)
            if (s3 = a4[r3], !(n3 && s3.time > n3 || o4 && s3.sequence > o4)) {
              if ("in" === s3.flow && s3.isRead)
                break;
              s3.setIsRead(true);
            }
        }
      } }, { key: "updateUnreadCount", value: function(e4) {
        var t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], o4 = false, n3 = this.getLocalConversation(e4), a4 = this._messageListHandler.getLocalMessageList(e4);
        if (n3) {
          var s3 = n3.unreadCount, r3 = a4.filter(function(e5) {
            return !e5.isRead && !e5._onlineOnlyFlag && !e5.isDeleted;
          }).length;
          if (s3 !== r3 && (n3.unreadCount = r3, o4 = true, Ye2.log("".concat(this._className, ".updateUnreadCount from ").concat(s3, " to ").concat(r3, ", conversationID:").concat(e4)), true === t3 && (this.emitConversationUpdate(true, false), this.emitTotalUnreadMessageCountUpdate())), o4 && n3.type === D2.CONV_TOPIC) {
            var i3 = n3.unreadCount, c3 = this.getModule(Yo), u3 = e4.replace(D2.CONV_GROUP, "");
            c3.onConversationProxy({ topicID: u3, unreadCount: i3 });
          }
          return o4;
        }
      } }, { key: "clearGroupAtInfoList", value: function(e4) {
        var t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], o4 = this.getLocalConversation(e4);
        if (o4 && o4.groupAtInfoList.length > 0) {
          if (o4.clearGroupAtInfoList(), Ye2.log("".concat(this._className, ".clearGroupAtInfoList conversationID:").concat(e4)), o4.type === D2.CONV_TOPIC) {
            var n3 = o4.groupAtInfoList, a4 = this.getModule(Yo), s3 = e4.replace(D2.CONV_GROUP, "");
            a4.onConversationProxy({ topicID: s3, groupAtInfoList: n3 });
          }
          true === t3 && this.emitConversationUpdate(true, false);
        }
      } }, { key: "updateReadReceiptInfo", value: function(e4) {
        var t3 = this, o4 = e4.userID, n3 = void 0 === o4 ? void 0 : o4, a4 = e4.groupID, s3 = void 0 === a4 ? void 0 : a4, r3 = e4.readReceiptList;
        if (!oo(r3)) {
          var i3 = [];
          if (dt2(n3)) {
            if (!dt2(s3)) {
              var c3 = "".concat(D2.CONV_GROUP).concat(s3);
              r3.forEach(function(e5) {
                var o5 = e5.tinyID, n4 = e5.clientTime, a5 = e5.random, r4 = e5.readCount, u4 = e5.unreadCount, l3 = "".concat(o5, "-").concat(n4, "-").concat(a5), d3 = t3._messageListHandler.getLocalMessage(c3, l3), p3 = { groupID: s3, messageID: l3, readCount: 0, unreadCount: 0 };
                d3 && (rt2(r4) && (d3.readReceiptInfo.readCount = r4, p3.readCount = r4), rt2(u4) && (d3.readReceiptInfo.unreadCount = u4, p3.unreadCount = u4), i3.push(p3));
              });
            }
          } else {
            var u3 = "".concat(D2.CONV_C2C).concat(n3);
            r3.forEach(function(e5) {
              var o5 = e5.tinyID, a5 = e5.clientTime, s4 = e5.random, r4 = "".concat(o5, "-").concat(a5, "-").concat(s4), c4 = t3._messageListHandler.getLocalMessage(u3, r4);
              if (c4) {
                c4.readReceiptInfo.isPeerRead = true;
                var l3 = { userID: n3, messageID: r4, isPeerRead: true };
                i3.push(l3);
              }
            });
          }
          i3.length > 0 && this.emitOuterEvent(S2.MESSAGE_READ_RECEIPT_RECEIVED, i3);
        }
      } }, { key: "recomputeGroupUnreadCount", value: function(e4) {
        var t3 = e4.conversationID, o4 = e4.count, n3 = this.getLocalConversation(t3);
        if (n3) {
          var a4 = n3.unreadCount, s3 = a4 - o4;
          s3 < 0 && (s3 = 0), n3.unreadCount = s3, Ye2.log("".concat(this._className, ".recomputeGroupUnreadCount from ").concat(a4, " to ").concat(s3, ", conversationID:").concat(t3));
        }
      } }, { key: "updateIsRead", value: function(e4) {
        var t3 = this.getLocalConversation(e4), o4 = this.getLocalMessageList(e4);
        if (t3 && 0 !== o4.length && !bt2(t3.type)) {
          for (var n3 = [], a4 = 0, s3 = o4.length; a4 < s3; a4++)
            "in" !== o4[a4].flow ? "out" !== o4[a4].flow || o4[a4].isRead || o4[a4].setIsRead(true) : n3.push(o4[a4]);
          var r3 = 0;
          if (t3.type === D2.CONV_C2C) {
            var i3 = n3.slice(-t3.unreadCount).filter(function(e5) {
              return e5.isRevoked;
            }).length;
            r3 = n3.length - t3.unreadCount - i3;
          } else
            r3 = n3.length - t3.unreadCount;
          for (var c3 = 0; c3 < r3 && !n3[c3].isRead; c3++)
            n3[c3].setIsRead(true);
        }
      } }, { key: "deleteGroupAtTips", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".deleteGroupAtTips");
        Ye2.log("".concat(o4));
        var n3 = this._conversationMap.get(e4);
        if (!n3)
          return Promise.resolve();
        var a4 = n3.groupAtInfoList;
        if (0 === a4.length)
          return Promise.resolve();
        var s3 = void 0;
        e4.startsWith(D2.CONV_GROUP) && (s3 = e4.replace(D2.CONV_GROUP, ""));
        var r3 = v2(a4);
        if ((Ot2({ groupID: s3 }) || Gt(s3)) && 0 === (r3 = a4.filter(function(e5) {
          return !e5.atTypeArray.includes(D2.CONV_AT_ALL);
        })).length)
          return this.clearGroupAtInfoList(e4, false), Promise.resolve();
        var i3 = this.getMyUserID();
        return this.request({ protocolName: jn2, requestData: { messageListToDelete: r3.map(function(e5) {
          return { from: e5.from, to: i3, messageSeq: e5.__sequence, messageRandom: e5.__random, groupID: dt2(e5.topicID) ? e5.groupID : e5.topicID };
        }) } }).then(function() {
          return Ye2.log("".concat(o4, " ok. count:").concat(a4.length)), t3.clearGroupAtInfoList(e4, false), Promise.resolve();
        }).catch(function(e5) {
          return Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "appendToMessageList", value: function(e4) {
        this._messageListHandler.pushIn(e4);
      } }, { key: "setMessageRandom", value: function(e4) {
        this.singlyLinkedList.set(e4.random);
      } }, { key: "deleteMessageRandom", value: function(e4) {
        this.singlyLinkedList.delete(e4.random);
      } }, { key: "pushIntoMessageList", value: function(e4, t3, o4) {
        return !(!this._messageListHandler.pushIn(t3, o4) || this._isMessageFromCurrentInstance(t3) && !o4) && (e4.push(t3), true);
      } }, { key: "_isMessageFromCurrentInstance", value: function(e4) {
        return this.singlyLinkedList.has(e4.random);
      } }, { key: "revoke", value: function(e4, t3, o4) {
        return this._messageListHandler.revoke(e4, t3, o4);
      } }, { key: "getPeerReadTime", value: function(e4) {
        return this._peerReadTimeMap.get(e4);
      } }, { key: "recordPeerReadTime", value: function(e4, t3) {
        this._peerReadTimeMap.has(e4) ? this._peerReadTimeMap.get(e4) < t3 && this._peerReadTimeMap.set(e4, t3) : this._peerReadTimeMap.set(e4, t3);
      } }, { key: "updateMessageIsPeerReadProperty", value: function(e4, t3) {
        if (e4.startsWith(D2.CONV_C2C) && t3 > 0) {
          var o4 = this._messageListHandler.updateMessageIsPeerReadProperty(e4, t3);
          if (o4.length > 0 && this.emitOuterEvent(S2.MESSAGE_READ_BY_PEER, o4), this._conversationMap.has(e4)) {
            var n3 = this._conversationMap.get(e4).lastMessage;
            oo(n3) || n3.fromAccount === this.getMyUserID() && n3.lastTime <= t3 && !n3.isPeerRead && (n3.isPeerRead = true, this.emitConversationUpdate(true, false));
          }
        }
      } }, { key: "updateMessageIsModifiedProperty", value: function(e4) {
        this._messageListHandler.updateMessageIsModifiedProperty(e4);
      } }, { key: "setCompleted", value: function(e4) {
        Ye2.log("".concat(this._className, ".setCompleted. conversationID:").concat(e4)), this._completedMap.set(e4, true);
      } }, { key: "updateRoamingMessageKeyAndTime", value: function(e4, t3, o4) {
        this._roamingMessageKeyAndTimeMap.set(e4, { messageKey: t3, lastMessageTime: o4 });
      } }, { key: "updateRoamingMessageSequence", value: function(e4, t3) {
        this._roamingMessageSequenceMap.set(e4, t3);
      } }, { key: "getConversationList", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".getConversationList"), n3 = "pagingStatus:".concat(this._pagingStatus, ", local conversation count:").concat(this._conversationMap.size, ", options:").concat(e4);
        if (Ye2.log("".concat(o4, ". ").concat(n3)), this._pagingStatus === io.REJECTED) {
          var a4 = new bs2(ws2.GET_CONVERSATION_LIST);
          return a4.setMessage(n3), this.syncConversationList().then(function() {
            a4.setNetworkType(t3.getNetworkType()).end();
            var o5 = t3._getConversationList(e4);
            return er({ conversationList: o5, isSyncCompleted: t3._isSyncCompleted() });
          }).catch(function(e5) {
            return t3.probeNetwork().then(function(t4) {
              var o5 = m2(t4, 2), n4 = o5[0], s4 = o5[1];
              a4.setError(e5, n4, s4).end();
            }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
          });
        }
        if (0 === this._conversationMap.size) {
          var s3 = new bs2(ws2.GET_CONVERSATION_LIST);
          return s3.setMessage(n3), this.syncConversationList().then(function() {
            s3.setNetworkType(t3.getNetworkType()).end();
            var o5 = t3._getConversationList(e4);
            return er({ conversationList: o5, isSyncCompleted: t3._isSyncCompleted() });
          }).catch(function(e5) {
            return t3.probeNetwork().then(function(t4) {
              var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
              s3.setError(e5, n4, a5).end();
            }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
          });
        }
        var r3 = this._getConversationList(e4);
        return Ye2.log("".concat(o4, ". returned conversation count:").concat(r3.length)), ur({ conversationList: r3, isSyncCompleted: this._isSyncCompleted() });
      } }, { key: "_getConversationList", value: function(e4) {
        if (dt2(e4))
          return this.getLocalConversationList();
        if (lt2(e4))
          return 0 === e4.length ? [] : this.getLocalConversationList().filter(function(t4) {
            return e4.includes(t4.conversationID);
          });
        if (ut2(e4)) {
          var t3 = e4.type, o4 = e4.markType, n3 = e4.groupName;
          return this.getLocalConversationList().filter(function(e5) {
            return (t3 !== D2.CONV_C2C && t3 !== D2.CONV_GROUP || e5.type === t3) && (!it2(n3) || e5.conversationGroupList.includes(n3)) && (!rt2(o4) || e5.markList.includes(o4));
          });
        }
        return [];
      } }, { key: "_handleC2CPeerReadTime", value: function() {
        var e4, t3 = E2(this._conversationMap);
        try {
          for (t3.s(); !(e4 = t3.n()).done; ) {
            var o4 = m2(e4.value, 2), n3 = o4[0], a4 = o4[1];
            a4.type === D2.CONV_C2C && (Ye2.debug("".concat(this._className, "._handleC2CPeerReadTime conversationID:").concat(n3, " peerReadTime:").concat(a4.peerReadTime)), this.recordPeerReadTime(n3, a4.peerReadTime));
          }
        } catch (s3) {
          t3.e(s3);
        } finally {
          t3.f();
        }
      } }, { key: "_isPagingGetGroupListCompleted", value: function() {
        return this.getModule(Ko).isPagingGetCompleted();
      } }, { key: "_getLocalGroupCount", value: function() {
        return this.getModule(Ko).getLocalGroupList().length;
      } }, { key: "_hasLocalGroup", value: function(e4) {
        return this.getModule(Ko).hasLocalGroup(e4.replace(D2.CONV_GROUP, ""));
      } }, { key: "getConversationProfile", value: function(e4) {
        var t3, o4 = this;
        if ((t3 = this._conversationMap.has(e4) ? this._conversationMap.get(e4) : new kr({ conversationID: e4, type: e4.slice(0, 3) === D2.CONV_C2C ? D2.CONV_C2C : D2.CONV_GROUP }, this.isIntl()))._isInfoCompleted || t3.type === D2.CONV_SYSTEM)
          return ur({ conversation: t3 });
        if (Ut(e4) && !this._hasLocalGroup(e4))
          return ur({ conversation: t3 });
        var n3 = new bs2(ws2.GET_CONVERSATION_PROFILE), a4 = "".concat(this._className, ".getConversationProfile");
        return Ye2.log("".concat(a4, ". conversationID:").concat(e4, " remark:").concat(t3.remark, " lastMessage:"), t3.lastMessage), this._updateUserOrGroupProfileCompletely(t3).then(function(s3) {
          n3.setNetworkType(o4.getNetworkType()).setMessage("conversationID:".concat(e4, " unreadCount:").concat(s3.data.conversation.unreadCount)).end();
          var r3 = o4.getModule(Ho);
          if (r3 && t3.type === D2.CONV_C2C) {
            var i3 = e4.replace(D2.CONV_C2C, "");
            if (r3.isMyFriend(i3)) {
              var c3 = r3.getFriendRemark(i3);
              t3.remark !== c3 && (t3.remark = c3, Ye2.log("".concat(a4, ". conversationID:").concat(e4, " patch remark:").concat(t3.remark)));
            }
          }
          return Ye2.log("".concat(a4, " ok. conversationID:").concat(e4)), s3;
        }).catch(function(t4) {
          return o4.probeNetwork().then(function(o5) {
            var a5 = m2(o5, 2), s3 = a5[0], r3 = a5[1];
            n3.setError(t4, s3, r3).setMessage("conversationID:".concat(e4)).end();
          }), Ye2.error("".concat(a4, " failed. error:"), t4), lr(t4);
        });
      } }, { key: "_updateUserOrGroupProfileCompletely", value: function(e4) {
        var t3 = this;
        return e4.type === D2.CONV_C2C ? this.getModule(Vo).getUserProfile({ userIDList: [e4.toAccount] }).then(function(o4) {
          var n3 = o4.data;
          return 0 === n3.length ? lr(new rr({ code: hn.USER_OR_GROUP_NOT_FOUND })) : (e4.userProfile = n3[0], e4._isInfoCompleted = true, t3._unshiftConversation(e4), ur({ conversation: e4 }));
        }) : this.getModule(Ko).getGroupProfile({ groupID: e4.toAccount }).then(function(o4) {
          return e4.groupProfile = o4.data.group, e4._isInfoCompleted = true, t3._unshiftConversation(e4), ur({ conversation: e4 });
        });
      } }, { key: "_unshiftConversation", value: function(e4) {
        e4 instanceof kr && !this._conversationMap.has(e4.conversationID) && (this._conversationMap = new Map([[e4.conversationID, e4]].concat(v2(this._conversationMap))), this._setStorageConversationList(), this.emitConversationUpdate(true, false));
      } }, { key: "_onProfileUpdated", value: function(e4) {
        var t3 = this;
        e4.data.forEach(function(e5) {
          var o4 = e5.userID;
          if (o4 === t3.getMyUserID())
            t3._onMyProfileModified({ latestNick: e5.nick, latestAvatar: e5.avatar });
          else {
            var n3 = t3._conversationMap.get("".concat(D2.CONV_C2C).concat(o4));
            n3 && (n3.userProfile = e5);
          }
        });
      } }, { key: "_isSyncCompleted", value: function() {
        return this._pagingStatus === io.RESOLVED;
      } }, { key: "deleteConversation", value: function(e4) {
        var t3 = this, o4 = { fromAccount: this.getMyUserID(), toAccount: void 0, type: void 0, toGroupID: void 0 };
        if (!this._conversationMap.has(e4))
          return lr({ code: hn.CONVERSATION_NOT_FOUND });
        var n3 = this._conversationMap.get(e4).type;
        if (n3 === D2.CONV_C2C)
          o4.type = 1, o4.toAccount = e4.replace(D2.CONV_C2C, "");
        else {
          if (n3 !== D2.CONV_GROUP)
            return n3 === D2.CONV_SYSTEM ? (this.getModule(Ko).deleteGroupSystemNotice({ messageList: this._messageListHandler.getLocalMessageList(e4) }), this.deleteLocalConversation(e4), ur({ conversationID: e4 })) : lr({ code: hn.CONVERSATION_UN_RECORDED_TYPE });
          if (!this._hasLocalGroup(e4))
            return this.deleteLocalConversation(e4), ur({ conversationID: e4 });
          o4.type = 2, o4.toGroupID = e4.replace(D2.CONV_GROUP, "");
        }
        var a4 = new bs2(ws2.DELETE_CONVERSATION);
        a4.setMessage("conversationID:".concat(e4));
        var s3 = "".concat(this._className, ".deleteConversation");
        return Ye2.log("".concat(s3, ". conversationID:").concat(e4)), this.setMessageRead({ conversationID: e4 }).then(function() {
          return t3.request({ protocolName: Hn2, requestData: o4 });
        }).then(function() {
          return a4.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(s3, " ok")), t3.deleteLocalConversation(e4), ur({ conversationID: e4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], s4 = o5[1];
            a4.setError(e5, n4, s4).end();
          }), Ye2.error("".concat(s3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "clearHistoryMessage", value: function(e4) {
        var t3 = this, o4 = { fromAccount: this.getMyUserID(), toAccount: void 0, type: void 0, toGroupID: void 0 };
        if (!this._conversationMap.has(e4))
          return lr({ code: hn.CONVERSATION_NOT_FOUND });
        var n3 = this._conversationMap.get(e4).type;
        if (n3 === D2.CONV_C2C)
          o4.type = 1, o4.toAccount = e4.replace(D2.CONV_C2C, "");
        else {
          if (n3 !== D2.CONV_GROUP)
            return n3 === D2.CONV_SYSTEM ? (this.getModule(Ko).deleteGroupSystemNotice({ messageList: this._messageListHandler.getLocalMessageList(e4) }), ur({ conversationID: e4 })) : lr({ code: hn.CONVERSATION_UN_RECORDED_TYPE });
          o4.type = 2, o4.toGroupID = e4.replace(D2.CONV_GROUP, "");
        }
        var a4 = new bs2(ws2.CLEAR_HISTORY_MESSAGE);
        a4.setMessage("conversationID:".concat(e4));
        var s3 = "".concat(this._className, ".clearHistoryMessage");
        return Ye2.log("".concat(s3, ". conversationID:").concat(e4)), this.setMessageRead({ conversationID: e4 }).then(function() {
          return t3.request({ protocolName: Wn2, requestData: o4 });
        }).then(function() {
          a4.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(s3, " ok")), t3._messageListHandler.removeByConversationID(e4), t3.setCompleted(e4);
          var o5 = t3.getLocalConversation(e4);
          return o5 && (o5.updateLastMessage(), t3.emitConversationUpdate(true, false)), ur({ conversationID: e4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], s4 = o5[1];
            a4.setError(e5, n4, s4).end();
          }), Ye2.error("".concat(s3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "pinConversation", value: function(e4) {
        var t3 = this, o4 = e4.conversationID, n3 = e4.isPinned;
        if (!this._conversationMap.has(o4))
          return lr({ code: hn.CONVERSATION_NOT_FOUND });
        var a4 = this.getLocalConversation(o4);
        if (a4.isPinned === n3)
          return ur({ conversationID: o4 });
        var s3 = new bs2(ws2.PIN_CONVERSATION);
        s3.setMessage("conversationID:".concat(o4, " isPinned:").concat(n3));
        var r3 = "".concat(this._className, ".pinConversation");
        Ye2.log("".concat(r3, ". conversationID:").concat(o4, " isPinned:").concat(n3));
        var i3 = null;
        return Pt2(o4) ? i3 = { type: 1, toAccount: o4.replace(D2.CONV_C2C, "") } : Ut(o4) && (i3 = { type: 2, groupID: o4.replace(D2.CONV_GROUP, "") }), this.request({ protocolName: Yn2, requestData: { fromAccount: this.getMyUserID(), operationType: true === n3 ? 1 : 2, itemList: [i3] } }).then(function() {
          return s3.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(r3, " ok")), a4.isPinned !== n3 && (a4.isPinned = n3, t3._sortConversationListAndEmitEvent()), er({ conversationID: o4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            s3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(r3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "setMessageRemindType", value: function(e4) {
        return this._messageRemindHandler.set(e4);
      } }, { key: "patchMessageRemindType", value: function(e4) {
        var t3 = e4.ID, o4 = e4.isC2CConversation, n3 = e4.messageRemindType, a4 = false, s3 = this.getLocalConversation(o4 ? "".concat(D2.CONV_C2C).concat(t3) : "".concat(D2.CONV_GROUP).concat(t3));
        return s3 && s3.messageRemindType !== n3 && (s3.messageRemindType = n3, a4 = true), Ye2.debug("".concat(this._className, ".patchMessageRemindType options:"), e4, "ret:".concat(a4)), a4;
      } }, { key: "onC2CMessageRemindTypeSynced", value: function(e4) {
        var t3 = this;
        Ye2.debug("".concat(this._className, ".onC2CMessageRemindTypeSynced options:"), e4), e4.dataList.forEach(function(e5) {
          if (!oo(e5.muteNotificationsSync)) {
            var o4, n3 = e5.muteNotificationsSync, a4 = n3.to, s3 = n3.updateSequence, r3 = n3.muteFlag;
            t3._messageRemindHandler.setUpdateSequence(s3), 0 === r3 ? o4 = D2.MSG_REMIND_ACPT_AND_NOTE : 1 === r3 ? o4 = D2.MSG_REMIND_DISCARD : 2 === r3 && (o4 = D2.MSG_REMIND_ACPT_NOT_NOTE);
            var i3 = 0;
            t3.patchMessageRemindType({ ID: a4, isC2CConversation: true, messageRemindType: o4 }) && (i3 += 1), Ye2.log("".concat(t3._className, ".onC2CMessageRemindTypeSynced updateCount:").concat(i3)), i3 >= 1 && t3.emitConversationUpdate(true, false);
          }
        });
      } }, { key: "onGroupMessageRemindTypeSynced", value: function(e4) {
        Ye2.debug("".concat(this._className, ".onGroupMessageRemindTypeSynced options:"), e4), this._messageRemindHandler.onGroupMessageRemindTypeUpdated(e4);
      } }, { key: "deleteLocalConversation", value: function(e4) {
        var t3 = this._conversationMap.has(e4);
        if (Ye2.log("".concat(this._className, ".deleteLocalConversation conversationID:").concat(e4, " has:").concat(t3)), t3) {
          this._conversationMap.delete(e4), this._roamingMessageKeyAndTimeMap.has(e4) && this._roamingMessageKeyAndTimeMap.delete(e4), this._roamingMessageSequenceMap.has(e4) && this._roamingMessageSequenceMap.delete(e4), this._setStorageConversationList(), this._messageListHandler.removeByConversationID(e4), this._completedMap.delete(e4);
          var o4 = !this._isTopicConversation(e4);
          this.emitConversationUpdate(o4, false);
        }
      } }, { key: "isMessageSentByCurrentInstance", value: function(e4) {
        return !(!this._messageListHandler.hasLocalMessage(e4.conversationID, e4.ID) && !this.singlyLinkedList.has(e4.random));
      } }, { key: "modifyMessageList", value: function(e4) {
        if (e4.startsWith(D2.CONV_C2C) && this._conversationMap.has(e4)) {
          var t3 = this._conversationMap.get(e4), o4 = Date.now();
          this._messageListHandler.modifyMessageSentByPeer({ conversationID: e4, latestNick: t3.userProfile.nick, latestAvatar: t3.userProfile.avatar });
          var n3 = this.getModule(Vo).getNickAndAvatarByUserID(this.getMyUserID());
          this._messageListHandler.modifyMessageSentByMe({ conversationID: e4, latestNick: n3.nick, latestAvatar: n3.avatar }), Ye2.log("".concat(this._className, ".modifyMessageList conversationID:").concat(e4, " cost ").concat(Date.now() - o4, " ms"));
        }
      } }, { key: "updateUserProfileSpecifiedKey", value: function(e4) {
        Ye2.log("".concat(this._className, ".updateUserProfileSpecifiedKey options:"), e4);
        var t3 = e4.conversationID, o4 = e4.nick, n3 = e4.avatar;
        if (this._conversationMap.has(t3)) {
          var a4 = this._conversationMap.get(t3).userProfile;
          it2(o4) && a4.nick !== o4 && (a4.nick = o4), it2(n3) && a4.avatar !== n3 && (a4.avatar = n3), this.emitConversationUpdate(true, false);
        }
      } }, { key: "_onMyProfileModified", value: function(e4) {
        var o4 = this, n3 = this.getLocalConversationList(), a4 = Date.now();
        n3.forEach(function(n4) {
          o4.modifyMessageSentByMe(t2({ conversationID: n4.conversationID }, e4));
        }), Ye2.log("".concat(this._className, "._onMyProfileModified. modify all messages sent by me, cost ").concat(Date.now() - a4, " ms"));
      } }, { key: "modifyMessageSentByMe", value: function(e4) {
        this._messageListHandler.modifyMessageSentByMe(e4);
      } }, { key: "getLatestMessageSentByMe", value: function(e4) {
        return this._messageListHandler.getLatestMessageSentByMe(e4);
      } }, { key: "modifyMessageSentByPeer", value: function(e4) {
        this._messageListHandler.modifyMessageSentByPeer(e4);
      } }, { key: "getLatestMessageSentByPeer", value: function(e4) {
        return this._messageListHandler.getLatestMessageSentByPeer(e4);
      } }, { key: "pushIntoNoticeResult", value: function(e4, t3) {
        return !(!this._messageListHandler.pushIn(t3) || this.singlyLinkedList.has(t3.random)) && (e4.push(t3), true);
      } }, { key: "getLocalLastMessage", value: function(e4) {
        return this._messageListHandler.getLocalLastMessage(e4);
      } }, { key: "checkAndPatchRemark", value: function() {
        var e4 = Promise.resolve();
        if (0 === this._conversationMap.size)
          return e4;
        var t3 = this.getModule(Ho);
        if (!t3)
          return e4;
        var o4 = v2(this._conversationMap.values()).filter(function(e5) {
          return e5.type === D2.CONV_C2C;
        });
        if (0 === o4.length)
          return e4;
        var n3 = 0;
        return o4.forEach(function(e5) {
          var o5 = e5.conversationID.replace(D2.CONV_C2C, "");
          if (t3.isMyFriend(o5)) {
            var a4 = t3.getFriendRemark(o5);
            e5.remark !== a4 && (e5.remark = a4, n3 += 1);
          }
        }), Ye2.log("".concat(this._className, ".checkAndPatchRemark. c2c conversation count:").concat(o4.length, ", patched count:").concat(n3)), e4;
      } }, { key: "updateTopicConversation", value: function(e4) {
        this._updateLocalConversationList({ conversationOptionsList: e4, isFromGetConversations: true });
      } }, { key: "sendReadReceipt", value: function(e4) {
        var t3 = e4[0], o4 = null;
        return t3.conversationType === D2.CONV_C2C ? o4 = this._moduleManager.getModule(Bo) : t3.conversationType === D2.CONV_GROUP && (o4 = this._moduleManager.getModule(Ko)), o4 ? o4.sendReadReceipt(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "getReadReceiptList", value: function(e4) {
        var t3 = e4[0], o4 = null;
        return t3.conversationType === D2.CONV_C2C ? o4 = this._moduleManager.getModule(Bo) : t3.conversationType === D2.CONV_GROUP && (o4 = this._moduleManager.getModule(Ko)), o4 ? o4.getReadReceiptList(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "getLastMessageTime", value: function(e4) {
        var t3 = this.getLocalConversation(e4);
        return t3 ? t3.lastMessage.lastTime : 0;
      } }, { key: "getTotalUnreadMessageCount", value: function() {
        var e4 = this.getLocalConversationList(), t3 = 0;
        return e4.forEach(function(e5) {
          e5.type !== D2.CONV_SYSTEM && ("" !== e5.messageRemindType && e5.messageRemindType !== D2.MSG_REMIND_ACPT_AND_NOTE || (t3 += e5.unreadCount));
        }), t3;
      } }, { key: "emitTotalUnreadMessageCountUpdate", value: function() {
        var e4 = this.getTotalUnreadMessageCount();
        this._convTotalUnreadCount !== e4 && (Ye2.log("".concat(this._className, ".emitTotalUnreadMessageCountUpdate from ").concat(this._convTotalUnreadCount, " to ").concat(e4)), this._convTotalUnreadCount = e4, this.emitOuterEvent(S2.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED));
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._pagingStatus = io.NOT_START, this._messageListHandler.reset(), this._messageRemindHandler.reset(), this._roamingMessageKeyAndTimeMap.clear(), this._roamingMessageSequenceMap.clear(), this.singlyLinkedList.reset(), this._peerReadTimeMap.clear(), this._completedMap.clear(), this._conversationMap.clear(), this._pagingTimeStamp = 0, this._pagingStartIndex = 0, this._pagingPinnedTimeStamp = 0, this._pagingPinnedStartIndex = 0, this._remoteGroupReadSequenceMap.clear(), this._convTotalUnreadCount = 0, this.resetReady();
      } }]), a3;
    }(vn), Gr = function() {
      function e3(t3) {
        n2(this, e3), this._groupModule = t3, this._className = "GroupTipsHandler", this._cachedGroupTipsMap = /* @__PURE__ */ new Map(), this._checkCountMap = /* @__PURE__ */ new Map(), this.MAX_CHECK_COUNT = 4, this._getTopicPendingMap = /* @__PURE__ */ new Map();
      }
      return s2(e3, [{ key: "onCheckTimer", value: function(e4) {
        e4 % 1 == 0 && this._cachedGroupTipsMap.size > 0 && this._checkCachedGroupTips();
      } }, { key: "_checkCachedGroupTips", value: function() {
        var e4 = this;
        this._cachedGroupTipsMap.forEach(function(t3, o3) {
          var n3 = e4._checkCountMap.get(o3), a3 = e4._groupModule.hasLocalGroup(o3);
          Ye2.log("".concat(e4._className, "._checkCachedGroupTips groupID:").concat(o3, " hasLocalGroup:").concat(a3, " checkCount:").concat(n3)), a3 ? (e4._notifyCachedGroupTips(o3), e4._checkCountMap.delete(o3), e4._groupModule.deleteUnjoinedAVChatRoom(o3)) : n3 >= e4.MAX_CHECK_COUNT ? (e4._deleteCachedGroupTips(o3), e4._checkCountMap.delete(o3)) : (n3++, e4._checkCountMap.set(o3, n3));
        });
      } }, { key: "onNewGroupTips", value: function(e4) {
        Ye2.debug("".concat(this._className, ".onReceiveGroupTips count:").concat(e4.dataList.length));
        var t3 = this.newGroupTipsStoredAndSummary(e4), o3 = t3.eventDataList, n3 = t3.result, a3 = t3.AVChatRoomMessageList;
        (a3.length > 0 && this._groupModule.onAVChatRoomMessage(a3), o3.length > 0) && (this._groupModule.updateNextMessageSeq(o3), this._groupModule.getModule(jo).onNewMessage({ conversationOptionsList: o3, isInstantMessage: true }));
        n3.length > 0 && (this._groupModule.emitOuterEvent(S2.MESSAGE_RECEIVED, n3), this.handleMessageList(n3));
      } }, { key: "newGroupTipsStoredAndSummary", value: function(e4) {
        for (var o3 = this, n3 = e4.event, a3 = e4.dataList, s3 = null, r3 = [], i3 = [], c3 = {}, u3 = [], l3 = function(e5, l4) {
          var d4 = At2(a3[e5]);
          if (6 === n3) {
            if (o3._groupModule.isGroupAttributesUpdatedNotice(d4))
              return "continue";
            if (o3._groupModule.isGroupCountersNotice(d4))
              return "continue";
          }
          var p4 = d4.groupProfile, g3 = p4.groupID, _3 = p4.communityType, h3 = void 0 === _3 ? 0 : _3, f3 = p4.topicID, m3 = void 0 === f3 ? void 0 : f3, v3 = p4.invisible, M3 = void 0, y3 = o3._groupModule.isMessageFromTopic(h3, m3);
          if (y3) {
            M3 = D2.CONV_TOPIC, d4.to = m3;
            var I3 = o3._groupModule.getModule(Yo);
            I3.hasLocalTopic(g3, m3) || o3._getTopicPendingMap.has(m3) || (o3._getTopicPendingMap.set(m3, 1), I3.getTopicList({ groupID: g3, topicIDList: [m3] }).finally(function() {
              o3._getTopicPendingMap.delete(m3);
            }));
          }
          var C3 = o3._groupModule.hasLocalGroup(g3);
          if (!C3 && o3._groupModule.isUnjoinedAVChatRoom(g3))
            return "continue";
          if (!C3 && !y3)
            return o3._cacheGroupTipsAndProbe({ groupID: g3, event: n3, item: d4 }), "continue";
          if (o3._groupModule.isMessageFromOrToAVChatroom(g3))
            return d4.event = n3, u3.push(d4), "continue";
          if (d4.currentUser = o3._groupModule.getMyUserID(), d4.conversationType = D2.CONV_GROUP, (s3 = new Zs(d4)).setElement({ type: D2.MSG_GRP_TIP, content: t2(t2({}, d4.elements), {}, { groupProfile: d4.groupProfile }) }), s3.isSystemMessage = false, 1 === v3)
            return o3._qualityStat(s3), "continue";
          var T3 = o3._groupModule.getModule(jo), E3 = s3, S3 = E3.conversationID, N3 = E3.sequence;
          if (6 === n3)
            s3._onlineOnlyFlag = true, i3.push(s3);
          else if (!T3.pushIntoNoticeResult(i3, s3))
            return "continue";
          if (o3._groupModule.isMessageFromCommunityOfTopic(h3, m3))
            return "continue";
          if (6 === n3 && T3.getLocalConversation(S3))
            return "continue";
          6 !== n3 && o3._qualityStat(s3);
          var A3 = T3.isRemoteRead({ conversationID: S3, sequence: N3 });
          if (dt2(c3[S3])) {
            var k3 = 0;
            "in" === s3.flow && (s3._isExcludedFromUnreadCount || s3._onlineOnlyFlag || A3 || (k3 = 1)), c3[S3] = r3.push({ conversationID: S3, unreadCount: k3, type: dt2(M3) ? s3.conversationType : M3, subType: s3.conversationSubType, lastMessage: s3._isExcludedFromLastMessage ? "" : s3 }) - 1;
          } else {
            var R3 = c3[S3];
            r3[R3].type = s3.conversationType, r3[R3].subType = s3.conversationSubType, r3[R3].lastMessage = s3._isExcludedFromLastMessage ? "" : s3, "in" === s3.flow && (s3._isExcludedFromUnreadCount || s3._onlineOnlyFlag || A3 || r3[R3].unreadCount++);
          }
        }, d3 = 0, p3 = a3.length; d3 < p3; d3++)
          l3(d3);
        return { eventDataList: r3, result: i3, AVChatRoomMessageList: u3 };
      } }, { key: "_qualityStat", value: function(e4) {
        this._groupModule.getModule(un).addMessageSequence({ key: ks2, message: e4 });
      } }, { key: "handleMessageList", value: function(e4) {
        var t3 = this;
        e4.forEach(function(e5) {
          switch (e5.payload.operationType) {
            case 1:
              t3._onNewMemberComeIn(e5);
              break;
            case 2:
              t3._onMemberQuit(e5);
              break;
            case 3:
              t3._onMemberKickedOut(e5);
              break;
            case 4:
              t3._onMemberSetAdmin(e5);
              break;
            case 5:
              t3._onMemberCancelledAdmin(e5);
              break;
            case 6:
              t3._onGroupProfileModified(e5);
              break;
            case 7:
              t3._onMemberInfoModified(e5);
              break;
            case 8:
              t3._onTopicProfileUpdated(e5);
              break;
            default:
              Ye2.warn("".concat(t3._className, ".handleMessageList unknown operationType:").concat(e5.payload.operationType));
          }
        });
      } }, { key: "_onNewMemberComeIn", value: function(e4) {
        var t3 = e4.payload, o3 = t3.memberNum, n3 = t3.groupProfile.groupID, a3 = this._groupModule.getLocalGroupProfile(n3);
        a3 && rt2(o3) && a3.memberCount !== o3 && (a3.memberCount = o3, this._updateConversationGroupProfile(a3));
      } }, { key: "_onMemberQuit", value: function(e4) {
        var t3 = e4.payload, o3 = t3.memberNum, n3 = t3.groupProfile.groupID, a3 = this._groupModule.getLocalGroupProfile(n3);
        a3 && rt2(o3) && a3.memberCount !== o3 && (a3.memberCount = o3, this._updateConversationGroupProfile(a3)), this._groupModule.getModule(Wo).deleteLocalGroupMembers(n3, e4.payload.userIDList);
      } }, { key: "_onMemberKickedOut", value: function(e4) {
        var t3 = e4.payload, o3 = t3.memberNum, n3 = t3.groupProfile.groupID, a3 = this._groupModule.getLocalGroupProfile(n3);
        a3 && rt2(o3) && a3.memberCount !== o3 && (a3.memberCount = o3, this._updateConversationGroupProfile(a3)), this._groupModule.getModule(Wo).deleteLocalGroupMembers(n3, e4.payload.userIDList);
      } }, { key: "_updateConversationGroupProfile", value: function(e4) {
        this._groupModule.getModule(jo).updateConversationGroupProfile([e4]);
      } }, { key: "_onMemberSetAdmin", value: function(e4) {
        var t3 = e4.payload.groupProfile.groupID, o3 = e4.payload.userIDList, n3 = this._groupModule.getModule(Wo);
        o3.forEach(function(e5) {
          var o4 = n3.getLocalGroupMemberInfo(t3, e5);
          o4 && o4.updateRole(D2.GRP_MBR_ROLE_ADMIN);
        });
      } }, { key: "_onMemberCancelledAdmin", value: function(e4) {
        var t3 = e4.payload.groupProfile.groupID, o3 = e4.payload.userIDList, n3 = this._groupModule.getModule(Wo);
        o3.forEach(function(e5) {
          var o4 = n3.getLocalGroupMemberInfo(t3, e5);
          o4 && o4.updateRole(D2.GRP_MBR_ROLE_MEMBER);
        });
      } }, { key: "_onGroupProfileModified", value: function(e4) {
        var t3 = this, o3 = e4.payload, n3 = o3.newGroupProfile, a3 = o3.groupProfile.groupID, s3 = this._groupModule.getLocalGroupProfile(a3);
        Object.keys(n3).forEach(function(e5) {
          switch (e5) {
            case "ownerID":
              t3._ownerChanged(s3, n3);
              break;
            case "muteAllMembers":
              s3.muteAllMembers = n3.muteAllMembers;
              break;
            case "joinOption":
              s3.joinOption = n3.joinOption;
              break;
            default:
              s3[e5] = n3[e5];
          }
        });
        var r3 = !s3.isSupportTopic;
        this._groupModule.emitGroupListUpdate(true, r3);
      } }, { key: "_ownerChanged", value: function(e4, t3) {
        var o3 = e4.groupID, n3 = this._groupModule.getLocalGroupProfile(o3), a3 = this._groupModule.getMyUserID();
        if (a3 === t3.ownerID) {
          n3.updateGroup({ selfInfo: { role: D2.GRP_MBR_ROLE_OWNER } });
          var s3 = this._groupModule.getModule(Wo), r3 = s3.getLocalGroupMemberInfo(o3, a3), i3 = this._groupModule.getLocalGroupProfile(o3).ownerID, c3 = s3.getLocalGroupMemberInfo(o3, i3);
          r3 && r3.updateRole(D2.GRP_MBR_ROLE_OWNER), c3 && c3.updateRole(D2.GRP_MBR_ROLE_MEMBER);
        }
      } }, { key: "_onMemberInfoModified", value: function(e4) {
        var t3 = e4.to, o3 = e4.payload, n3 = o3.groupProfile, a3 = o3.memberList, s3 = n3.groupID;
        Gt(t3) && this._updateTopicMuteTime(e4);
        var r3 = this._groupModule.getModule(Wo);
        a3.forEach(function(e5) {
          var t4 = r3.getLocalGroupMemberInfo(s3, e5.userID);
          t4 && rt2(e5.muteTime) && t4.updateMuteUntil(e5.muteTime);
        });
      } }, { key: "_updateTopicMuteTime", value: function(e4) {
        var t3 = e4.to, o3 = e4.payload, n3 = o3.groupProfile, a3 = o3.memberList, s3 = void 0 === a3 ? [] : a3, r3 = this._groupModule.getModule(Yo), i3 = n3.groupID, c3 = r3.getLocalTopic(i3, t3);
        if (c3) {
          for (var u3 = false, l3 = 0; l3 < s3.length; l3++) {
            var d3 = s3[l3];
            if (d3.userID === this._groupModule.getMyUserID() && d3.muteTime >= 0) {
              c3.updateSelfInfo({ muteTime: d3.muteTime }), u3 = true;
              break;
            }
          }
          u3 && this._groupModule.emitOuterEvent(S2.TOPIC_UPDATED, { groupID: i3, topic: c3 });
        }
      } }, { key: "_onTopicProfileUpdated", value: function(e4) {
        var o3 = e4.payload, n3 = o3.groupProfile.groupID, a3 = o3.newTopicInfo;
        this._groupModule.getModule(Yo).onTopicProfileUpdated(t2({ groupID: n3, topicID: e4.to }, a3));
      } }, { key: "_cacheGroupTips", value: function(e4, t3) {
        this._cachedGroupTipsMap.has(e4) || this._cachedGroupTipsMap.set(e4, []), this._cachedGroupTipsMap.get(e4).push(t3);
      } }, { key: "_deleteCachedGroupTips", value: function(e4) {
        this._cachedGroupTipsMap.has(e4) && this._cachedGroupTipsMap.delete(e4);
      } }, { key: "_notifyCachedGroupTips", value: function(e4) {
        var t3 = this, o3 = this._cachedGroupTipsMap.get(e4) || [];
        o3.forEach(function(e5) {
          t3.onNewGroupTips(e5);
        }), this._deleteCachedGroupTips(e4), Ye2.log("".concat(this._className, "._notifyCachedGroupTips groupID:").concat(e4, " count:").concat(o3.length));
      } }, { key: "_cacheGroupTipsAndProbe", value: function(e4) {
        var t3 = this, o3 = e4.groupID, n3 = e4.event, a3 = e4.item;
        this._cacheGroupTips(o3, { event: n3, dataList: [a3] }), this._groupModule.getGroupSimplifiedInfo(o3).then(function(e5) {
          e5.type === D2.GRP_AVCHATROOM ? t3._groupModule.hasLocalGroup(o3) ? t3._notifyCachedGroupTips(o3) : t3._groupModule.setUnjoinedAVChatRoom(o3) : (t3._groupModule.updateGroupMap([e5]), t3._notifyCachedGroupTips(o3));
        }), this._checkCountMap.has(o3) || this._checkCountMap.set(o3, 0), Ye2.log("".concat(this._className, "._cacheGroupTipsAndProbe groupID:").concat(o3));
      } }, { key: "reset", value: function() {
        this._cachedGroupTipsMap.clear(), this._checkCountMap.clear(), this._getTopicPendingMap.clear();
      } }]), e3;
    }(), Pr = function() {
      function e3(t3) {
        n2(this, e3), this._groupModule = t3, this._className = "CommonGroupHandler", this.tempConversationList = null, this._cachedGroupMessageMap = /* @__PURE__ */ new Map(), this._checkCountMap = /* @__PURE__ */ new Map(), this.MAX_CHECK_COUNT = 4, this._getTopicPendingMap = /* @__PURE__ */ new Map(), this._isPagingGetCompleted = false, t3.getInnerEmitterInstance().once(gr, this._initGroupList, this);
      }
      return s2(e3, [{ key: "onCheckTimer", value: function(e4) {
        e4 % 1 == 0 && this._cachedGroupMessageMap.size > 0 && this._checkCachedGroupMessage();
      } }, { key: "_checkCachedGroupMessage", value: function() {
        var e4 = this;
        this._cachedGroupMessageMap.forEach(function(t3, o3) {
          var n3 = e4._checkCountMap.get(o3), a3 = e4._groupModule.hasLocalGroup(o3);
          Ye2.log("".concat(e4._className, "._checkCachedGroupMessage groupID:").concat(o3, " hasLocalGroup:").concat(a3, " checkCount:").concat(n3)), a3 ? (e4._notifyCachedGroupMessage(o3), e4._checkCountMap.delete(o3), e4._groupModule.deleteUnjoinedAVChatRoom(o3)) : n3 >= e4.MAX_CHECK_COUNT ? (e4._deleteCachedGroupMessage(o3), e4._checkCountMap.delete(o3)) : (n3++, e4._checkCountMap.set(o3, n3));
        });
      } }, { key: "_initGroupList", value: function() {
        var e4 = this;
        Ye2.log("".concat(this._className, "._initGroupList"));
        var t3 = new bs2(ws2.GET_GROUP_LIST_IN_STORAGE), o3 = this._groupModule.getStorageGroupList();
        if (lt2(o3) && o3.length > 0) {
          o3.forEach(function(t4) {
            e4._groupModule.initGroupMap(t4);
          }), this._groupModule.emitGroupListUpdate(true, false);
          var n3 = this._groupModule.getLocalGroupList().length;
          t3.setNetworkType(this._groupModule.getNetworkType()).setMessage("group count:".concat(n3)).end();
        } else
          t3.setNetworkType(this._groupModule.getNetworkType()).setMessage("group count:0").end();
        Ye2.log("".concat(this._className, "._initGroupList ok"));
      } }, { key: "handleUpdateGroupLastMessage", value: function(e4) {
        var o3 = "".concat(this._className, ".handleUpdateGroupLastMessage");
        if (Ye2.log("".concat(o3, " conversation count:").concat(e4.length, ", local group count:").concat(this._groupModule.getLocalGroupList().length)), 0 !== this._groupModule.getGroupMap().size) {
          for (var n3, a3, s3, r3 = false, i3 = 0, c3 = e4.length; i3 < c3; i3++)
            (n3 = e4[i3]).type === D2.CONV_GROUP && (a3 = n3.conversationID.split(/^GROUP/)[1], (s3 = this._groupModule.getLocalGroupProfile(a3)) && (s3.lastMessage = t2({}, n3.lastMessage), r3 = true));
          r3 && (this._groupModule.sortLocalGroupList(), this._groupModule.emitGroupListUpdate(true, false));
        } else
          this.tempConversationList = e4;
      } }, { key: "onNewGroupMessage", value: function(e4) {
        Ye2.debug("".concat(this._className, ".onNewGroupMessage count:").concat(e4.dataList.length));
        var t3 = this._newGroupMessageStoredAndSummary(e4), o3 = t3.conversationOptionsList, n3 = t3.messageList, a3 = t3.AVChatRoomMessageList;
        (a3.length > 0 && this._groupModule.onAVChatRoomMessage(a3), this._groupModule.filterModifiedMessage(n3), o3.length > 0) && (this._groupModule.updateNextMessageSeq(o3), this._groupModule.getModule(jo).onNewMessage({ conversationOptionsList: o3, isInstantMessage: e4.isInstantMessage || true, updateUnreadCount: e4.updateUnreadCount || true }));
        var s3 = this._groupModule.filterUnmodifiedMessage(n3);
        s3.length > 0 && this._groupModule.emitOuterEvent(S2.MESSAGE_RECEIVED, s3), n3.length = 0;
      } }, { key: "_newGroupMessageStoredAndSummary", value: function(e4) {
        var t3 = this, o3 = e4.dataList, n3 = e4.event, a3 = e4.isInstantMessage, s3 = null, r3 = [], i3 = [], c3 = [], u3 = {}, l3 = this._groupModule.getModule(Qo), d3 = o3.length;
        d3 > 1 && o3.sort(function(e5, t4) {
          return e5.sequence - t4.sequence;
        });
        for (var p3 = function(e5) {
          var d4 = At2(o3[e5]), p4 = d4.groupProfile, g4 = p4.groupID, _3 = p4.communityType, h3 = void 0 === _3 ? 0 : _3, f3 = p4.topicID, m3 = void 0 === f3 ? void 0 : f3, v3 = p4.invisible, M3 = void 0, y3 = t3._groupModule.isMessageFromTopic(h3, m3);
          if (y3) {
            M3 = D2.CONV_TOPIC, d4.to = m3;
            var I3 = t3._groupModule.getModule(Yo);
            I3.hasLocalTopic(g4, m3) || t3._getTopicPendingMap.has(m3) || (t3._getTopicPendingMap.set(m3, 1), I3.getTopicList({ groupID: g4, topicIDList: [m3] }).finally(function() {
              t3._getTopicPendingMap.delete(m3);
            }));
          }
          var C3 = t3._groupModule.hasLocalGroup(g4);
          if (!C3 && t3._groupModule.isUnjoinedAVChatRoom(g4))
            return "continue";
          if (!C3 && !y3)
            return t3._cacheGroupMessageAndProbe({ groupID: g4, event: n3, item: d4 }), "continue";
          if (t3._groupModule.isMessageFromOrToAVChatroom(g4))
            return d4.event = n3, c3.push(d4), "continue";
          if (d4.currentUser = t3._groupModule.getMyUserID(), d4.conversationType = D2.CONV_GROUP, d4.isSystemMessage = !!d4.isSystemMessage, s3 = new Zs(d4), d4.elements = l3.parseElements(d4.elements, d4.from), s3.setElement(d4.elements), 1 === v3)
            return t3._qualityStat(a3, s3), "continue";
          var T3 = 1 === o3[e5].isModified, E3 = t3._groupModule.getModule(jo);
          if (E3.isMessageSentByCurrentInstance(s3) ? s3.isModified = T3 : T3 = false, 1 === d4.onlineOnlyFlag)
            s3._onlineOnlyFlag = true, E3.isMessageSentByCurrentInstance(s3) || i3.push(s3);
          else {
            if (t3._groupModule.isMessageFromCommunityOfTopic(h3, m3))
              return i3.push(s3), "continue";
            if (!E3.pushIntoMessageList(i3, s3, T3))
              return "continue";
            t3._qualityStat(a3, s3);
            var S3 = s3, N3 = S3.conversationID, A3 = S3.sequence, k3 = E3.isRemoteRead({ conversationID: N3, sequence: A3 });
            if (dt2(u3[N3])) {
              var R3 = 0;
              "in" === s3.flow && (s3._isExcludedFromUnreadCount || k3 || (R3 = 1)), u3[N3] = r3.push({ conversationID: N3, unreadCount: R3, type: dt2(M3) ? s3.conversationType : M3, subType: s3.conversationSubType, lastMessage: s3._isExcludedFromLastMessage ? "" : s3 }) - 1;
            } else {
              var L3 = u3[N3];
              r3[L3].type = dt2(M3) ? s3.conversationType : M3, r3[L3].subType = s3.conversationSubType, r3[L3].lastMessage = s3._isExcludedFromLastMessage ? "" : s3, "in" === s3.flow && (s3._isExcludedFromUnreadCount || k3 || r3[L3].unreadCount++);
            }
          }
        }, g3 = 0; g3 < d3; g3++)
          p3(g3);
        return { conversationOptionsList: r3, messageList: i3, AVChatRoomMessageList: c3 };
      } }, { key: "_qualityStat", value: function(e4, t3) {
        var o3 = this._groupModule.getModule(un);
        o3.addMessageSequence({ key: ks2, message: t3 }), e4 && t3.clientTime > 0 && o3.addMessageDelay(t3.clientTime);
      } }, { key: "onGroupMessageRevoked", value: function(e4) {
        var t3 = this._groupModule.getModule(jo), o3 = [], n3 = null, a3 = true;
        e4.dataList.forEach(function(e5) {
          var s3 = e5.elements.revokedInfos;
          dt2(s3) || s3.forEach(function(e6) {
            var s4 = oo(e6.topicID) ? "GROUP".concat(e6.groupID) : "GROUP".concat(e6.topicID);
            n3 = t3.revoke(s4, e6.sequence, e6.random);
            var r3 = e6.revokerInfo && e6.revokerInfo.revoker;
            if (n3)
              n3.revoker = r3, o3.push(n3);
            else {
              var i3 = { conversationID: s4, to: e6.topicID || "", sequence: e6.sequence, time: e6.time, revoker: r3 };
              t3.isLastMessageRevoked(i3) && (o3.push(i3), a3 = false);
            }
          });
        }), 0 !== o3.length && (t3.onMessageRevoked(o3), true === a3 && (Ye2.log("".concat(this._className, ".onGroupMessageRevoked count:").concat(o3.length)), this._groupModule.emitOuterEvent(S2.MESSAGE_REVOKED, o3)));
      } }, { key: "_groupListTreeShaking", value: function(e4) {
        for (var t3 = new Map(v2(this._groupModule.getGroupMap())), o3 = 0, n3 = e4.length; o3 < n3; o3++)
          t3.delete(e4[o3].groupID);
        this._groupModule.hasJoinedAVChatRoom() && this._groupModule.getJoinedAVChatRoom().forEach(function(e5) {
          t3.delete(e5);
        });
        this._groupModule.getGroupMap().forEach(function(e5, o4) {
          e5.isSupportTopic && t3.delete(o4);
        });
        for (var a3 = v2(t3.keys()), s3 = 0, r3 = a3.length; s3 < r3; s3++)
          this._groupModule.deleteGroup(a3[s3]);
      } }, { key: "getGroupList", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, ".getGroupList"), n3 = new bs2(ws2.GET_GROUP_LIST);
        Ye2.log("".concat(o3));
        var a3 = { introduction: "Introduction", notification: "Notification", createTime: "CreateTime", ownerID: "Owner_Account", lastInfoTime: "LastInfoTime", memberNum: "MemberNum", maxMemberNum: "MaxMemberNum", joinOption: "ApplyJoinOption", muteAllMembers: "ShutUpAllMember" }, s3 = ["Type", "Name", "FaceUrl", "NextMsgSeq", "LastMsgTime", "AtInfoList", "LastRecallTime"], r3 = [];
        e4 && e4.groupProfileFilter && e4.groupProfileFilter.forEach(function(e5) {
          a3[e5] && s3.push(a3[e5]);
        });
        var i3 = (e4 || {}).isGroupWithTopicOnly, c3 = void 0 !== i3 && i3;
        return this._pagingGetGroupList({ limit: 50, offset: 0, groupBaseInfoFilter: s3, groupList: r3, isGroupWithTopicOnly: c3 }).then(function() {
          Ye2.log("".concat(o3, " ok. count:").concat(r3.length, " isGroupWithTopicOnly:").concat(c3)), c3 || t3._groupListTreeShaking(r3), t3._groupModule.updateGroupMap(r3);
          var e5 = t3._groupModule.getLocalGroupList().length;
          n3.setNetworkType(t3._groupModule.getNetworkType()).setMessage("remote count:".concat(r3.length, ", after tree shaking, local count:").concat(e5, ", isGroupWithTopicOnly:").concat(c3)).end(), t3.tempConversationList && (t3.handleUpdateGroupLastMessage(t3.tempConversationList), t3.tempConversationList = null), t3._groupModule.patchGroupMessageRemindType(), t3._groupModule.recomputeUnreadCount(), t3._groupModule.emitGroupListUpdate(true, !c3);
          var a4 = t3._groupModule.getLocalGroupList();
          if (c3) {
            var s4 = a4.filter(function(e6) {
              return true === e6.isSupportTopic;
            });
            return er({ groupList: s4 });
          }
          return t3._isPagingGetCompleted = true, er({ groupList: a4 });
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), a4 = o4[0], s4 = o4[1];
            n3.setError(e5, a4, s4).end();
          }), Ye2.error("".concat(o3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "isPagingGetCompleted", value: function() {
        return this._isPagingGetCompleted;
      } }, { key: "_pagingGetGroupList", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, "._pagingGetGroupList"), n3 = e4.isCommunityRelay, a3 = void 0 !== n3 && n3, s3 = e4.isGroupWithTopicOnly, r3 = void 0 !== s3 && s3, i3 = e4.limit, c3 = e4.offset, u3 = e4.groupBaseInfoFilter, l3 = e4.groupList;
        if (r3)
          return this._pagingGetGroupListWithTopic({ limit: i3, offset: c3, groupBaseInfoFilter: u3, groupList: l3 });
        var d3 = new bs2(ws2.PAGING_GET_GROUP_LIST);
        return this._groupModule.request({ protocolName: oa, requestData: { type: a3 ? D2.GRP_COMMUNITY : void 0, memberAccount: this._groupModule.getMyUserID(), limit: i3, offset: c3, responseFilter: { groupBaseInfoFilter: u3, selfInfoFilter: ["Role", "JoinTime", "MsgFlag", "MsgSeq"] } } }).then(function(e5) {
          var n4 = e5.data, s4 = n4.groups, r4 = void 0 === s4 ? [] : s4, p3 = n4.totalCount;
          l3.push.apply(l3, v2(r4)), t3._handleGroupAtInfoWithoutTopic(a3, r4);
          var g3 = c3 + i3, _3 = !(p3 > g3), h3 = "offset:".concat(c3, " totalCount:").concat(p3, " isCompleted:").concat(_3, " ") + "currentCount:".concat(l3.length, " isCommunityRelay:").concat(a3);
          return d3.setNetworkType(t3._groupModule.getNetworkType()).setMessage("".concat(h3)).end(), a3 || _3 ? !a3 && _3 ? (Ye2.log("".concat(o3, " start to get community list")), c3 = 0, t3._pagingGetGroupList({ limit: i3, offset: c3, groupBaseInfoFilter: u3, groupList: l3, isCommunityRelay: true })) : a3 && !_3 ? (c3 = g3, t3._pagingGetGroupList({ limit: i3, offset: c3, groupBaseInfoFilter: u3, groupList: l3, isCommunityRelay: true })) : (Ye2.log("".concat(o3, " ok. totalCount:").concat(l3.length)), er({ groupList: l3 })) : (c3 = g3, t3._pagingGetGroupList({ limit: i3, offset: c3, groupBaseInfoFilter: u3, groupList: l3 }));
        }).catch(function(e5) {
          return 11e3 !== e5.code && t3._groupModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], s4 = o4[1];
            d3.setMessage("isCommunityRelay:".concat(a3)).setError(e5, n4, s4).end();
          }), a3 ? (11e3 === e5.code && (d3 = null, Ye2.log("".concat(o3, " ok. community unavailable"))), ur({ groupList: l3 })) : lr(e5);
        });
      } }, { key: "_pagingGetGroupListWithTopic", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, "._pagingGetGroupListWithTopic"), n3 = e4.limit, a3 = e4.offset, s3 = e4.groupBaseInfoFilter, r3 = e4.groupList, i3 = new bs2(ws2.PAGING_GET_GROUP_LIST_WITH_TOPIC);
        return this._groupModule.request({ protocolName: oa, requestData: { type: D2.GRP_COMMUNITY, memberAccount: this._groupModule.getMyUserID(), limit: n3, offset: a3, responseFilter: { groupBaseInfoFilter: s3, selfInfoFilter: ["Role", "JoinTime", "MsgFlag", "MsgSeq"] }, isSupportTopic: 1 } }).then(function(e5) {
          var c3 = e5.data, u3 = c3.groups, l3 = void 0 === u3 ? [] : u3, d3 = c3.totalCount;
          r3.push.apply(r3, v2(l3));
          var p3 = a3 + n3, g3 = !(d3 > p3), _3 = "offset:".concat(a3, " totalCount:").concat(d3, " isCompleted:").concat(g3, " ") + "currentCount:".concat(r3.length);
          return i3.setNetworkType(t3._groupModule.getNetworkType()).setMessage("".concat(_3)).end(), g3 ? (Ye2.log("".concat(o3, " ok. totalCount:").concat(r3.length)), er({ groupList: r3 })) : (a3 = p3, t3._pagingGetGroupListWithTopic({ limit: n3, offset: a3, groupBaseInfoFilter: s3, groupList: r3 }));
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            i3.setError(e5, n4, a4).end();
          }), lr(e5);
        });
      } }, { key: "_cacheGroupMessage", value: function(e4, t3) {
        this._cachedGroupMessageMap.has(e4) || this._cachedGroupMessageMap.set(e4, []), this._cachedGroupMessageMap.get(e4).push(t3);
      } }, { key: "_deleteCachedGroupMessage", value: function(e4) {
        this._cachedGroupMessageMap.has(e4) && this._cachedGroupMessageMap.delete(e4);
      } }, { key: "_notifyCachedGroupMessage", value: function(e4) {
        var t3 = this, o3 = this._cachedGroupMessageMap.get(e4) || [];
        o3.forEach(function(e5) {
          t3.onNewGroupMessage(e5);
        }), this._deleteCachedGroupMessage(e4), Ye2.log("".concat(this._className, "._notifyCachedGroupMessage groupID:").concat(e4, " count:").concat(o3.length));
      } }, { key: "_cacheGroupMessageAndProbe", value: function(e4) {
        var t3 = this, o3 = e4.groupID, n3 = e4.event, a3 = e4.item;
        this._cacheGroupMessage(o3, { event: n3, dataList: [a3] }), this._groupModule.getGroupSimplifiedInfo(o3).then(function(e5) {
          e5.type === D2.GRP_AVCHATROOM ? t3._groupModule.hasLocalGroup(o3) ? t3._notifyCachedGroupMessage(o3) : t3._groupModule.setUnjoinedAVChatRoom(o3) : (t3._groupModule.updateGroupMap([e5]), t3._notifyCachedGroupMessage(o3));
        }), this._checkCountMap.has(o3) || this._checkCountMap.set(o3, 0), Ye2.log("".concat(this._className, "._cacheGroupMessageAndProbe groupID:").concat(o3));
      } }, { key: "_handleGroupAtInfoWithoutTopic", value: function(e4, o3) {
        var n3 = this;
        e4 && 0 !== o3.length && o3.forEach(function(e5) {
          var o4 = e5.groupID, a3 = e5.groupAtInfoList, s3 = [];
          dt2(a3) || (a3.forEach(function(e6) {
            s3.push(t2(t2({}, e6), {}, { groupID: o4 }));
          }), n3._groupModule.getModule(jo).onNewGroupAtTips({ dataList: s3 }));
        });
      } }, { key: "reset", value: function() {
        this._cachedGroupMessageMap.clear(), this._checkCountMap.clear(), this._getTopicPendingMap.clear(), this._isPagingGetCompleted = false, this._groupModule.getInnerEmitterInstance().once(gr, this._initGroupList, this);
      } }]), e3;
    }(), Ur = 1, br = 2, wr = 3, Fr = 4, qr = 5, xr = function() {
      function e3(t3) {
        n2(this, e3), this._groupModule = t3, this._className = "GroupAttributesHandler", this._groupAttributesMap = /* @__PURE__ */ new Map(), this.CACHE_EXPIRE_TIME = 3e4, this._groupModule.getInnerEmitterInstance().on(_r, this._onCloudConfigUpdated, this);
      }
      return s2(e3, [{ key: "_onCloudConfigUpdated", value: function() {
        var e4 = this._groupModule.getCloudConfig("grp_attr_cache_time");
        dt2(e4) || (this.CACHE_EXPIRE_TIME = Number(e4));
      } }, { key: "updateLocalMainSequenceOnReconnected", value: function() {
        this._groupAttributesMap.forEach(function(e4) {
          e4.localMainSequence = 0;
        });
      } }, { key: "isGroupAttributesUpdatedNotice", value: function(e4) {
        var t3 = e4.to, o3 = e4.elements.newGroupProfile, n3 = !dt2(o3) && !oo(o3.groupAttributeOption);
        return n3 && this._onGroupAttributesUpdated({ groupID: t3, groupAttributeOption: o3.groupAttributeOption }), n3;
      } }, { key: "_onGroupAttributesUpdated", value: function(e4) {
        var t3 = this, o3 = e4.groupID, n3 = e4.groupAttributeOption, a3 = n3.mainSequence, s3 = n3.isWithChangedAttributeInfo, r3 = n3.groupAttributeList, i3 = void 0 === r3 ? [] : r3, c3 = n3.operationType;
        if (Ye2.log("".concat(this._className, ".onGroupAttributesUpdated. ") + "groupID:".concat(o3, " isWithChangedAttributeInfo:").concat(s3, " operationType:").concat(c3)), !dt2(c3)) {
          if (1 === s3)
            return this._refreshCachedGroupAttributes({ groupID: o3, remoteMainSequence: a3, groupAttributeList: i3, operationType: c3 }), void this._emitGroupAttributesUpdated(o3);
          if (this._hasLocalGroupAttributes(o3)) {
            var u3 = this._getLocalGroupAttributes(o3).avChatRoomKey;
            this._getGroupAttributes({ groupID: o3, avChatRoomKey: u3 }).then(function() {
              t3._emitGroupAttributesUpdated(o3);
            });
          }
        }
      } }, { key: "initGroupAttributesCache", value: function(e4) {
        var t3 = e4.groupID, o3 = e4.avChatRoomKey, n3 = void 0 === o3 ? void 0 : o3;
        this._groupAttributesMap.set(t3, { lastUpdateTime: 0, localMainSequence: 0, remoteMainSequence: 0, attributes: /* @__PURE__ */ new Map(), avChatRoomKey: n3 }), Ye2.log("".concat(this._className, ".initGroupAttributesCache groupID:").concat(t3, " avChatRoomKey:").concat(n3));
      } }, { key: "initGroupAttributes", value: function(e4) {
        var t3 = this, o3 = e4.groupID, n3 = e4.groupAttributes, a3 = this._getLocalGroupAttributes(o3), s3 = a3.remoteMainSequence, r3 = a3.avChatRoomKey, i3 = new bs2(ws2.INIT_GROUP_ATTRIBUTES);
        return i3.setMessage("groupID:".concat(o3, " avChatRoomKey:").concat(r3, " mainSequence:").concat(s3)), this._groupModule.request({ protocolName: ka, requestData: { groupID: o3, avChatRoomKey: r3, mainSequence: s3, groupAttributeList: this._transformGroupAttributes(n3) } }).then(function(e5) {
          var a4 = e5.data, s4 = a4.mainSequence, r4 = v2(a4.groupAttributeList);
          return r4.forEach(function(e6) {
            e6.value = n3[e6.key];
          }), t3._refreshCachedGroupAttributes({ groupID: o3, remoteMainSequence: s4, groupAttributeList: r4, operationType: Ur }), i3.setNetworkType(t3._groupModule.getNetworkType()).end(), Ye2.log("".concat(t3._className, ".initGroupAttributes ok. groupID:").concat(o3)), er({ groupAttributes: n3 });
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            i3.setError(e5, n4, a4).end();
          }), lr(e5);
        });
      } }, { key: "setGroupAttributes", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, ".setGroupAttributes"), n3 = e4.groupID, a3 = e4.groupAttributes, s3 = this._getLocalGroupAttributes(n3), r3 = s3.remoteMainSequence, i3 = s3.avChatRoomKey, c3 = s3.attributes, u3 = this._transformGroupAttributes(a3);
        u3.forEach(function(e5) {
          var t4 = e5.key;
          e5.sequence = 0, c3.has(t4) && (e5.sequence = c3.get(t4).sequence);
        });
        var l3 = new bs2(ws2.SET_GROUP_ATTRIBUTES);
        return l3.setMessage("groupID:".concat(n3, "groupAttributes:").concat(JSON.stringify(a3))), Ye2.log("".concat(o3, ". groupID:").concat(n3, " mainSequence:").concat(r3)), this._groupModule.request({ protocolName: Ra, requestData: { groupID: n3, avChatRoomKey: i3, mainSequence: r3, groupAttributeList: u3 } }).then(function(e5) {
          var s4 = e5.data, r4 = s4.mainSequence, i4 = v2(s4.groupAttributeList);
          return i4.forEach(function(e6) {
            e6.value = a3[e6.key];
          }), t3._refreshCachedGroupAttributes({ groupID: n3, remoteMainSequence: r4, groupAttributeList: i4, operationType: br }), l3.setNetworkType(t3._groupModule.getNetworkType()).end(), Ye2.log("".concat(o3, " ok.")), er({ groupAttributes: a3 });
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            l3.setError(e5, n4, a4).end();
          }), lr(e5);
        });
      } }, { key: "deleteGroupAttributes", value: function(e4) {
        var t3 = this, o3 = e4.groupID, n3 = e4.keyList, a3 = void 0 === n3 ? [] : n3, s3 = this._getLocalGroupAttributes(o3), r3 = s3.remoteMainSequence, i3 = s3.avChatRoomKey, c3 = s3.attributes, u3 = v2(c3.keys()), l3 = Oa, d3 = wr, p3 = { groupID: o3, avChatRoomKey: i3, mainSequence: r3 }, g3 = [];
        a3.length > 0 && (u3 = [], l3 = La, d3 = Fr, a3.forEach(function(e5) {
          var t4 = 0;
          c3.has(e5) && (t4 = c3.get(e5).sequence, u3.push(e5)), g3.push({ key: e5, sequence: t4 });
        }), p3.groupAttributeList = g3);
        var _3 = new bs2(ws2.DELETE_GROUP_ATTRIBUTES);
        return _3.setMessage("groupID:".concat(o3, " mainSequence:").concat(r3, " keyList:").concat(a3, " protocolName:").concat(l3)), this._groupModule.request({ protocolName: l3, requestData: p3 }).then(function(e5) {
          var n4 = e5.data.mainSequence;
          return t3._refreshCachedGroupAttributes({ groupID: o3, remoteMainSequence: n4, groupAttributeList: g3, operationType: d3 }), _3.setNetworkType(t3._groupModule.getNetworkType()).end(), Ye2.log("".concat(t3._className, ".deleteGroupAttributes ok. groupID:").concat(o3)), er({ keyList: u3 });
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            _3.setError(e5, n4, a4).end();
          }), lr(e5);
        });
      } }, { key: "getGroupAttributes", value: function(e4) {
        var t3 = this, o3 = e4.groupID, n3 = this._getLocalGroupAttributes(o3), a3 = n3.avChatRoomKey, s3 = n3.lastUpdateTime, r3 = n3.localMainSequence, i3 = n3.remoteMainSequence, c3 = new bs2(ws2.GET_GROUP_ATTRIBUTES);
        if (c3.setMessage("groupID:".concat(o3, " localMainSequence:").concat(r3, " remoteMainSequence:").concat(i3, " keyList:").concat(e4.keyList)), Date.now() - s3 >= this.CACHE_EXPIRE_TIME || r3 < i3)
          return this._getGroupAttributes({ groupID: o3, avChatRoomKey: a3 }).then(function(n4) {
            c3.setMoreMessage("get attributes from remote. count:".concat(n4.length)).setNetworkType(t3._groupModule.getNetworkType()).end(), Ye2.log("".concat(t3._className, ".getGroupAttributes from remote. groupID:").concat(o3));
            var a4 = t3._getCachedAttributes(e4);
            return er({ groupAttributes: a4 });
          }).catch(function(e5) {
            return t3._groupModule.probeNetwork().then(function(t4) {
              var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
              c3.setError(e5, n4, a4).end();
            }), lr(e5);
          });
        c3.setMoreMessage("get attributes from cache").setNetworkType(this._groupModule.getNetworkType()).end(), Ye2.log("".concat(this._className, ".getGroupAttributes from cache. groupID:").concat(o3));
        var u3 = this._getCachedAttributes(e4);
        return ur({ groupAttributes: u3 });
      } }, { key: "_getGroupAttributes", value: function(e4) {
        var o3 = this, n3 = 0;
        return dt2(e4.avChatRoomKey) || (n3 = 1), this._groupModule.request({ protocolName: Ga, requestData: t2(t2({}, e4), {}, { groupType: n3 }) }).then(function(t3) {
          var n4 = t3.data, a3 = n4.mainSequence, s3 = n4.groupAttributeList, r3 = v2(s3);
          return dt2(a3) || o3._refreshCachedGroupAttributes({ groupID: e4.groupID, remoteMainSequence: a3, groupAttributeList: r3, operationType: qr }), Ye2.log("".concat(o3._className, "._getGroupAttributes ok. groupID:").concat(e4.groupID)), s3;
        }).catch(function(e5) {
          return lr(e5);
        });
      } }, { key: "_refreshCachedGroupAttributes", value: function(e4) {
        var t3 = e4.groupID, o3 = e4.remoteMainSequence, n3 = e4.groupAttributeList, a3 = e4.operationType;
        if (this._hasLocalGroupAttributes(t3)) {
          var s3 = this._getLocalGroupAttributes(t3), r3 = s3.localMainSequence;
          if (a3 === qr || o3 - r3 == 1)
            s3.remoteMainSequence = o3, s3.localMainSequence = o3, s3.lastUpdateTime = Date.now(), this._updateCachedAttributes({ groupAttributes: s3, groupAttributeList: n3, operationType: a3 });
          else {
            if (r3 === o3)
              return;
            s3.remoteMainSequence = o3;
          }
          this._groupAttributesMap.set(t3, s3);
          var i3 = "operationType:".concat(a3, " localMainSequence:").concat(r3, " remoteMainSequence:").concat(o3);
          Ye2.log("".concat(this._className, "._refreshCachedGroupAttributes. ").concat(i3));
        }
      } }, { key: "_getCachedAttributes", value: function(e4) {
        var t3 = e4.groupID, o3 = e4.keyList, n3 = void 0 === o3 ? [] : o3, a3 = {};
        if (this._hasLocalGroupAttributes(t3)) {
          var s3 = this._getLocalGroupAttributes(t3).attributes;
          if (n3.length > 0)
            n3.forEach(function(e5) {
              s3.has(e5) && (a3[e5] = s3.get(e5).value);
            });
          else {
            var r3, i3 = E2(s3.keys());
            try {
              for (i3.s(); !(r3 = i3.n()).done; ) {
                var c3 = r3.value;
                a3[c3] = s3.get(c3).value;
              }
            } catch (u3) {
              i3.e(u3);
            } finally {
              i3.f();
            }
          }
        }
        return a3;
      } }, { key: "_updateCachedAttributes", value: function(e4) {
        var t3 = e4.groupAttributes, o3 = e4.groupAttributeList, n3 = e4.operationType;
        n3 !== wr ? n3 !== Fr ? (n3 === Ur && t3.attributes.clear(), o3.forEach(function(e5) {
          var o4 = e5.key, n4 = e5.value, a3 = e5.sequence;
          t3.attributes.set(o4, { value: n4, sequence: a3 });
        })) : o3.forEach(function(e5) {
          t3.attributes.delete(e5.key);
        }) : t3.attributes.clear();
      } }, { key: "_hasLocalGroupAttributes", value: function(e4) {
        return this._groupAttributesMap.has(e4);
      } }, { key: "_getLocalGroupAttributes", value: function(e4) {
        return this._hasLocalGroupAttributes(e4) || this.initGroupAttributesCache({ groupID: e4 }), this._groupAttributesMap.get(e4);
      } }, { key: "_transformGroupAttributes", value: function(e4) {
        var t3 = [];
        return Object.keys(e4).forEach(function(o3) {
          t3.push({ key: o3, value: e4[o3] });
        }), t3;
      } }, { key: "_emitGroupAttributesUpdated", value: function(e4) {
        var t3 = this._getCachedAttributes({ groupID: e4 });
        this._groupModule.emitOuterEvent(S2.GROUP_ATTRIBUTES_UPDATED, { groupID: e4, groupAttributes: t3 });
      } }, { key: "deleteLocalGroupAttributes", value: function(e4) {
        this._hasLocalGroupAttributes(e4) && this._groupAttributesMap.delete(e4);
      } }, { key: "reset", value: function() {
        this._groupAttributesMap.clear(), this.CACHE_EXPIRE_TIME = 3e4;
      } }]), e3;
    }(), Vr = "Set", Br = "Increase", Kr = "Decrease", Hr = function() {
      function e3(t3) {
        n2(this, e3), this._groupModule = t3, this._className = "GroupCountersHandler", this._groupCountersMap = /* @__PURE__ */ new Map(), this.EXPIRE_TIME = 3e4, this._groupModule.getInnerEmitterInstance().on(_r, this._onCloudConfigUpdated, this);
      }
      return s2(e3, [{ key: "_onCloudConfigUpdated", value: function() {
        var e4 = this._groupModule.getCloudConfig("grp_counter_expire_time");
        dt2(e4) || (this.EXPIRE_TIME = Number(e4));
      } }, { key: "isGroupCountersNotice", value: function(e4) {
        var t3 = e4.to, o3 = e4.elements.groupCounterInfo, n3 = false;
        return oo(o3) || (this._onGroupCountersUpdated({ groupID: t3, groupCounterInfo: o3 }), n3 = true), n3;
      } }, { key: "_onGroupCountersUpdated", value: function(e4) {
        var t3 = this, o3 = e4.groupID;
        e4.groupCounterInfo.forEach(function(e5) {
          var n3 = e5.type, a3 = e5.groupCounterSeq, s3 = e5.counterList, r3 = void 0 === s3 ? [] : s3;
          0 !== n3 && 2 !== n3 || (t3._updateLocalGroupCounters({ groupID: o3, groupCounterSeq: a3, counterList: r3 }), r3.forEach(function(e6) {
            t3._groupModule.emitOuterEvent(S2.GROUP_COUNTER_UPDATED, { groupID: o3, key: e6.key, value: e6.value });
          })), 1 === n3 && t3._deleteLocalGroupCounters({ groupID: o3, groupCounterSeq: a3, counterList: r3 });
        }), Ye2.log("".concat(this._className, "._onGroupCountersUpdated groupID:").concat(o3));
      } }, { key: "initGroupCountersCache", value: function(e4) {
        var t3 = e4.groupID, o3 = e4.avChatRoomKey;
        this._groupCountersMap.set(t3, { lastUpdateTime: 0, groupCounterSeq: 0, counters: /* @__PURE__ */ new Map(), avChatRoomKey: o3 }), Ye2.log("".concat(this._className, ".initGroupCountersCache groupID:").concat(t3, " avChatRoomKey:").concat(o3));
      } }, { key: "setGroupCounters", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, ".setGroupCounters"), n3 = e4.groupID, a3 = e4.counters, s3 = this._convertObjectToList(a3), r3 = this._getLocalGroupCounters(n3).avChatRoomKey, i3 = "groupID:".concat(n3, " count:").concat(s3.length), c3 = new bs2(ws2.SET_GROUP_COUNTERS);
        return c3.setMessage("".concat(i3)), Ye2.log("".concat(o3, ". ").concat(i3)), this._updateGroupCounters({ groupID: n3, counterList: s3, avChatRoomKey: r3, mode: Vr }).then(function(e5) {
          return c3.end(), Ye2.log("".concat(o3, " ok.")), er({ counters: e5 });
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            c3.setError(e5, n4, a4).end();
          }), Ye2.error("".concat(o3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "increaseGroupCounter", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, ".increaseGroupCounters"), n3 = e4.groupID, a3 = e4.key, s3 = e4.value, r3 = this._getLocalGroupCounters(n3).avChatRoomKey, i3 = "groupID:".concat(n3, " key:").concat(a3, " value:").concat(s3), c3 = new bs2(ws2.INCREASE_GROUP_COUNTER);
        c3.setMessage("".concat(i3)), Ye2.log("".concat(o3, ". ").concat(i3));
        var u3 = [{ key: a3, value: s3 }];
        return this._updateGroupCounters({ groupID: n3, counterList: u3, avChatRoomKey: r3, mode: Br }).then(function(e5) {
          return c3.end(), Ye2.log("".concat(o3, " ok.")), er({ counters: e5 });
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            c3.setError(e5, n4, a4).end();
          }), Ye2.error("".concat(o3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "decreaseGroupCounter", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, ".decreaseGroupCounter"), n3 = e4.groupID, a3 = e4.key, s3 = e4.value, r3 = this._getLocalGroupCounters(n3).avChatRoomKey, i3 = "groupID:".concat(n3, " key:").concat(a3, " value:").concat(s3), c3 = new bs2(ws2.DECREASE_GROUP_COUNTER);
        c3.setMessage("".concat(i3)), Ye2.log("".concat(o3, ". ").concat(i3));
        var u3 = [{ key: a3, value: s3 }];
        return this._updateGroupCounters({ groupID: n3, counterList: u3, avChatRoomKey: r3, mode: Kr }).then(function(e5) {
          return c3.end(), Ye2.log("".concat(o3, " ok.")), er({ counters: e5 });
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            c3.setError(e5, n4, a4).end();
          }), Ye2.error("".concat(o3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "getGroupCounters", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, ".getGroupCounters"), n3 = e4.groupID, a3 = e4.keyList, s3 = void 0 === a3 ? [] : a3, r3 = this._getLocalGroupCounters(n3), i3 = r3.avChatRoomKey, c3 = r3.lastUpdateTime, u3 = new bs2(ws2.GET_GROUP_COUNTERS);
        if (u3.setMessage("groupID:".concat(n3)), Date.now() - c3 >= this.EXPIRE_TIME)
          return this._getRemoteGroupCounters({ groupID: n3, avChatRoomKey: i3 }).then(function(e5) {
            u3.setMoreMessage("from remote. count:".concat(e5.length)).end(), Ye2.log("".concat(o3, " from remote. groupID:").concat(n3));
            var a4 = t3._getLocalCounters(n3, s3);
            return er({ counters: a4 });
          }).catch(function(e5) {
            return t3._groupModule.probeNetwork().then(function(t4) {
              var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
              u3.setError(e5, n4, a4).end();
            }), lr(e5);
          });
        u3.setMoreMessage("from cache").end(), Ye2.log("".concat(o3, " from cache. groupID:").concat(n3));
        var l3 = this._getLocalCounters(n3, s3);
        return ur({ counters: l3 });
      } }, { key: "_getRemoteGroupCounters", value: function(e4) {
        var o3 = this;
        return this._groupModule.request({ protocolName: Fa, requestData: t2({}, e4) }).then(function(t3) {
          var n3 = t3.data, a3 = n3.counterList, s3 = void 0 === a3 ? [] : a3, r3 = n3.groupCounterSeq;
          return o3._updateLocalGroupCounters({ groupID: e4.groupID, counterList: s3, groupCounterSeq: r3 }), Ye2.log("".concat(o3._className, "._getRemoteGroupCounters ok. groupID:").concat(e4.groupID)), s3;
        }).catch(function(e5) {
          return lr(e5);
        });
      } }, { key: "_convertObjectToList", value: function(e4) {
        var t3 = [];
        return Object.keys(e4).forEach(function(o3) {
          t3.push({ key: o3, value: e4[o3] });
        }), t3;
      } }, { key: "_updateGroupCounters", value: function(e4) {
        var o3 = "".concat(this._className, "._updateGroupCounters"), n3 = e4.groupID, a3 = e4.avChatRoomKey, s3 = e4.mode;
        return Ye2.log("".concat(o3, ". groupID:").concat(n3, " avChatRoomKey:").concat(a3, " mode:").concat(s3)), this._groupModule.request({ protocolName: wa, requestData: t2({}, e4) }).then(function(e5) {
          Ye2.log("".concat(o3, " ok."));
          var t3 = e5.data.counterList, n4 = {};
          return (void 0 === t3 ? [] : t3).forEach(function(e6) {
            var t4 = e6.key, o4 = e6.value;
            n4[t4] = o4;
          }), n4;
        }).catch(function(e5) {
          return lr(e5);
        });
      } }, { key: "_hasLocalGroupCounters", value: function(e4) {
        return this._groupCountersMap.has(e4);
      } }, { key: "_getLocalGroupCounters", value: function(e4) {
        return this._hasLocalGroupCounters(e4) || this.initGroupCountersCache({ groupID: e4 }), this._groupCountersMap.get(e4);
      } }, { key: "_updateLocalGroupCounters", value: function(e4) {
        var t3 = e4.groupID, o3 = e4.counterList, n3 = void 0 === o3 ? [] : o3, a3 = e4.groupCounterSeq;
        if (this._hasLocalGroupCounters(t3)) {
          var s3 = this._getLocalGroupCounters(t3), r3 = s3.counters, i3 = s3.avChatRoomKey, c3 = s3.groupCounterSeq;
          if (a3 > 0 && a3 < c3)
            return;
          n3.forEach(function(e5) {
            var t4 = e5.key, o4 = e5.value;
            r3.set(t4, o4);
          }), this._groupCountersMap.set(t3, { lastUpdateTime: Date.now(), groupCounterSeq: a3, counters: r3, avChatRoomKey: i3 });
        }
      } }, { key: "_deleteLocalGroupCounters", value: function(e4) {
        var t3 = e4.groupID, o3 = e4.counterList, n3 = void 0 === o3 ? [] : o3, a3 = e4.groupCounterSeq;
        if (this._hasLocalGroupCounters(t3)) {
          var s3 = this._getLocalGroupCounters(t3), r3 = s3.counters, i3 = s3.avChatRoomKey;
          n3.forEach(function(e5) {
            r3.delete(e5.key);
          }), this._groupCountersMap.set(t3, { lastUpdateTime: Date.now(), groupCounterSeq: a3, counters: r3, avChatRoomKey: i3 });
        }
      } }, { key: "_getLocalCounters", value: function(e4, t3) {
        var o3 = {};
        if (!this._hasLocalGroupCounters(e4))
          return o3;
        var n3 = this._getLocalGroupCounters(e4).counters;
        if (t3.length > 0)
          t3.forEach(function(e5) {
            n3.has(e5) && (o3[e5] = n3.get(e5));
          });
        else {
          var a3, s3 = E2(n3.keys());
          try {
            for (s3.s(); !(a3 = s3.n()).done; ) {
              var r3 = a3.value;
              o3[r3] = n3.get(r3);
            }
          } catch (i3) {
            s3.e(i3);
          } finally {
            s3.f();
          }
        }
        return o3;
      } }, { key: "reset", value: function() {
        this._groupCountersMap.clear(), this.EXPIRE_TIME = 3e4;
      } }]), e3;
    }(), Wr = function() {
      function e3(t3) {
        n2(this, e3);
        var o3 = t3.manager, a3 = t3.groupID, s3 = t3.onInit, r3 = t3.onSuccess, i3 = t3.onFail;
        this._className = "Polling", this._manager = o3, this._groupModule = o3._groupModule, this._onInit = s3, this._onSuccess = r3, this._onFail = i3, this._groupID = a3, this._timeoutID = -1, this._isRunning = false, this._protocolName = Ea;
      }
      return s2(e3, [{ key: "start", value: function() {
        var e4 = this._groupModule.isLoggedIn();
        e4 || (this._protocolName = Sa), Ye2.log("".concat(this._className, ".start pollingInterval:").concat(this._manager.getPollingInterval(), " isLoggedIn:").concat(e4)), this._isRunning = true, this._request();
      } }, { key: "isRunning", value: function() {
        return this._isRunning;
      } }, { key: "_request", value: function() {
        var e4 = this, t3 = this._onInit(this._groupID);
        this._groupModule.request({ protocolName: this._protocolName, requestData: t3 }).then(function(t4) {
          e4._onSuccess(e4._groupID, t4), e4.isRunning() && (clearTimeout(e4._timeoutID), e4._timeoutID = setTimeout(e4._request.bind(e4), e4._manager.getPollingInterval()));
        }).catch(function(t4) {
          e4._onFail(e4._groupID, t4), e4.isRunning() && (clearTimeout(e4._timeoutID), e4._timeoutID = setTimeout(e4._request.bind(e4), e4._manager.MAX_POLLING_INTERVAL));
        });
      } }, { key: "stop", value: function() {
        Ye2.log("".concat(this._className, ".stop")), this._timeoutID > 0 && (clearTimeout(this._timeoutID), this._timeoutID = -1), this._isRunning = false;
      } }]), e3;
    }(), Yr = { 3: true, 4: true, 5: true, 6: true, 17: true }, jr = function() {
      function e3(t3) {
        n2(this, e3), this._groupModule = t3, this._className = "AVChatRoomHandler", this._joinedGroupMap = /* @__PURE__ */ new Map(), this._pollingRequestInfoMap = /* @__PURE__ */ new Map(), this._pollingInstanceMap = /* @__PURE__ */ new Map(), this.sequencesLinkedList = new Sr(200), this.messageIDLinkedList = new Sr(100), this.receivedMessageCount = 0, this._reportMessageStackedCount = 0, this._onlineMemberCountMap = /* @__PURE__ */ new Map(), this.DEFAULT_EXPIRE_TIME = 60, this.DEFAULT_POLLING_INTERVAL = 300, this.MAX_POLLING_INTERVAL = 2e3, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL, this.DEFAULT_POLLING_NO_MESSAGE_COUNT = 20, this.DEFAULT_POLLING_INTERVAL_PLUS = 2e3, this._pollingNoMessageCount = 0, this._startBroadcastSeq = 1, this._broadcastMessageIDMap = /* @__PURE__ */ new Map();
      }
      return s2(e3, [{ key: "hasJoinedAVChatRoom", value: function() {
        return this._joinedGroupMap.size > 0;
      } }, { key: "checkJoinedAVChatRoomByID", value: function(e4) {
        return this._joinedGroupMap.has(e4);
      } }, { key: "getJoinedAVChatRoom", value: function() {
        return this._joinedGroupMap.size > 0 ? v2(this._joinedGroupMap.keys()) : null;
      } }, { key: "_updateRequestData", value: function(e4) {
        var o3 = this._pollingRequestInfoMap.get(e4);
        return e4 === v2(this._pollingInstanceMap.keys())[0] ? t2(t2({}, o3), {}, { startBroadcastSeq: this._startBroadcastSeq }) : t2({}, o3);
      } }, { key: "_handleSuccess", value: function(e4, t3) {
        var o3 = t3.data, n3 = o3.key, a3 = o3.nextSeq, s3 = o3.rspMsgList, r3 = o3.errorCode, i3 = o3.nextBroadcastSeq, c3 = o3.broadcastMessageList;
        if (0 !== r3) {
          var u3 = this._pollingRequestInfoMap.get(e4), l3 = new bs2(ws2.LONG_POLLING_AV_ERROR), d3 = u3 ? "".concat(u3.key, "-").concat(u3.startSeq) : "requestInfo is undefined";
          l3.setMessage("".concat(e4, "-").concat(d3, "-").concat(t3.errorInfo)).setCode(t3.errorCode).setNetworkType(this._groupModule.getNetworkType()).end(true);
        } else {
          if (!this.checkJoinedAVChatRoomByID(e4))
            return;
          it2(n3) && rt2(a3) && this._pollingRequestInfoMap.set(e4, { key: n3, startSeq: a3 }), rt2(i3) && i3 > this._startBroadcastSeq && (this._startBroadcastSeq = i3), lt2(s3) && s3.length > 0 ? (s3.forEach(function(e5) {
            e5.to = e5.groupID;
          }), this.onMessage(s3)) : (this._pollingNoMessageCount += 1, this._pollingNoMessageCount === this.DEFAULT_POLLING_NO_MESSAGE_COUNT && (this._pollingInterval = this.DEFAULT_POLLING_INTERVAL + this.DEFAULT_POLLING_INTERVAL_PLUS)), this._onBroadcastMessage(c3);
        }
      } }, { key: "_handleFailure", value: function(e4, t3) {
      } }, { key: "onMessage", value: function(e4) {
        if (lt2(e4) && 0 !== e4.length) {
          0 !== this._pollingNoMessageCount && (this._pollingNoMessageCount = 0, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL);
          var t3 = null, o3 = [], n3 = this._getModule(jo), a3 = this._getModule(un), s3 = e4.length;
          s3 > 1 && e4.sort(function(e5, t4) {
            return e5.sequence - t4.sequence;
          });
          for (var r3 = this._getModule($o), i3 = 0; i3 < s3; i3++)
            if (Yr[e4[i3].event]) {
              if (6 === e4[i3].event) {
                if (this._groupModule.isGroupAttributesUpdatedNotice(e4[i3]))
                  continue;
                if (this._groupModule.isGroupCountersNotice(e4[i3]))
                  continue;
              }
              this.receivedMessageCount += 1, t3 = this.packMessage(e4[i3], e4[i3].event);
              var c3 = 1 === e4[i3].isModified, u3 = 1 === e4[i3].isHistoryMessage;
              if ((r3.isUnlimitedAVChatRoom() || !this.sequencesLinkedList.has(t3.sequence)) && !this.messageIDLinkedList.has(t3.ID)) {
                var l3 = t3.conversationID;
                if (this.receivedMessageCount % 50 == 0 ? this._getModule(an).detectFirstRound(l3, this.sequencesLinkedList.data()) : this.receivedMessageCount % 80 == 0 && this._getModule(an).detectSecondRound(l3, this.sequencesLinkedList.data()), null !== this.sequencesLinkedList.tail()) {
                  var d3 = this.sequencesLinkedList.tail().value, p3 = t3.sequence - d3;
                  p3 > 1 && p3 <= 20 ? this._getModule(an).onMessageMaybeLost(l3, d3 + 1, p3 - 1) : p3 < -1 && p3 >= -20 && this._getModule(an).onMessageMaybeLost(l3, t3.sequence + 1, Math.abs(p3) - 1);
                }
                this.sequencesLinkedList.set(t3.sequence), this.messageIDLinkedList.set(t3.ID);
                var g3 = false;
                if (this._isMessageSentByCurrentInstance(t3) ? c3 && (g3 = true, t3.isModified = c3, n3.updateMessageIsModifiedProperty(t3)) : g3 = true, g3) {
                  if (t3.conversationType === D2.CONV_SYSTEM && 5 === t3.payload.operationType && this._onGroupDismissed(t3.payload.groupProfile.groupID), !u3 && t3.conversationType !== D2.CONV_SYSTEM) {
                    var _3 = t3.conversationID.replace(D2.CONV_GROUP, "");
                    this._pollingInstanceMap.has(_3) ? this._groupModule.isLoggedIn() && a3.addMessageSequence({ key: Ls, message: t3 }) : (t3.type !== D2.MSG_GRP_TIP && t3.clientTime > 0 && a3.addMessageDelay(t3.clientTime), a3.addMessageSequence({ key: Rs, message: t3 }));
                  }
                  o3.push(t3);
                }
              }
            } else
              Ye2.warn("".concat(this._className, ".onMessage unknown event:").concat(e4[i3].event));
          if (0 !== o3.length) {
            this._groupModule.filterModifiedMessage(o3);
            var h3 = this.packConversationOption(o3);
            if (h3.length > 0)
              this._getModule(jo).onNewMessage({ conversationOptionsList: h3, isInstantMessage: true });
            Ye2.debug("".concat(this._className, ".onMessage count:").concat(o3.length)), this._checkMessageStacked(o3);
            var f3 = this._groupModule.filterUnmodifiedMessage(o3);
            f3.length > 0 && this._groupModule.emitOuterEvent(S2.MESSAGE_RECEIVED, f3), o3.length = 0;
          }
        }
      } }, { key: "_onGroupDismissed", value: function(e4) {
        Ye2.log("".concat(this._className, "._onGroupDismissed groupID:").concat(e4)), this._groupModule.deleteLocalGroupAndConversation(e4), this.reset(e4);
      } }, { key: "_checkMessageStacked", value: function(e4) {
        var t3 = "".concat(this._className, "._checkMessageStacked"), o3 = e4.length;
        o3 >= 100 && (this._groupModule.isIntl() || Ye2.warn("".concat(t3, " \u76F4\u64AD\u7FA4\u6D88\u606F\u5806\u79EF\u6570:").concat(e4.length, '\uFF01\u53EF\u80FD\u4F1A\u5BFC\u81F4\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F\u6E32\u67D3\u65F6\u9047\u5230 "Dom limit exceeded" \u7684\u9519\u8BEF\uFF0C\u5EFA\u8BAE\u63A5\u5165\u4FA7\u6B64\u65F6\u53EA\u6E32\u67D3\u6700\u8FD1\u768410\u6761\u6D88\u606F')), this._reportMessageStackedCount < 5 && (new bs2(ws2.MESSAGE_STACKED).setNetworkType(this._groupModule.getNetworkType()).setMessage("count:".concat(o3, " groupID:").concat(v2(this._joinedGroupMap.keys()))).setLevel("warning").end(), this._reportMessageStackedCount += 1));
      } }, { key: "_isMessageSentByCurrentInstance", value: function(e4) {
        return !!this._getModule(jo).isMessageSentByCurrentInstance(e4);
      } }, { key: "packMessage", value: function(e4, t3) {
        e4.currentUser = this._groupModule.getMyUserID(), e4.conversationType = 5 === t3 ? D2.CONV_SYSTEM : D2.CONV_GROUP, e4.isSystemMessage = !!e4.isSystemMessage;
        var o3 = new Zs(e4), n3 = this.packElements(e4, t3);
        return o3.setElement(n3), o3;
      } }, { key: "packElements", value: function(e4, o3) {
        return 4 === o3 || 6 === o3 ? (this._updateMemberCountByGroupTips(e4), { type: D2.MSG_GRP_TIP, content: t2(t2({}, e4.elements), {}, { groupProfile: e4.groupProfile }) }) : 5 === o3 ? { type: D2.MSG_GRP_SYS_NOTICE, content: t2(t2({}, e4.elements), {}, { groupProfile: t2(t2({}, e4.groupProfile), {}, { groupID: e4.groupID }) }) } : this._getModule(Qo).parseElements(e4.elements, e4.from);
      } }, { key: "packConversationOption", value: function(e4) {
        for (var t3 = /* @__PURE__ */ new Map(), o3 = 0; o3 < e4.length; o3++) {
          var n3 = e4[o3], a3 = n3.conversationID;
          if (t3.has(a3)) {
            var s3 = t3.get(a3);
            s3.lastMessage = n3, "in" === n3.flow && s3.unreadCount++;
          } else
            t3.set(a3, { conversationID: n3.conversationID, unreadCount: "out" === n3.flow ? 0 : 1, type: n3.conversationType, subType: n3.conversationSubType, lastMessage: n3 });
        }
        return v2(t3.values());
      } }, { key: "_updateMemberCountByGroupTips", value: function(e4) {
        var t3 = e4.groupProfile.groupID, o3 = e4.elements.onlineMemberInfo, n3 = void 0 === o3 ? void 0 : o3;
        if (!oo(n3)) {
          var a3 = n3.onlineMemberNum, s3 = void 0 === a3 ? 0 : a3, r3 = n3.expireTime, i3 = void 0 === r3 ? this.DEFAULT_EXPIRE_TIME : r3, c3 = this._onlineMemberCountMap.get(t3) || {}, u3 = Date.now();
          oo(c3) ? Object.assign(c3, { lastReqTime: 0, lastSyncTime: 0, latestUpdateTime: u3, memberCount: s3, expireTime: i3 }) : (c3.latestUpdateTime = u3, c3.memberCount = s3), Ye2.debug("".concat(this._className, "._updateMemberCountByGroupTips info:"), c3), this._onlineMemberCountMap.set(t3, c3);
        }
      } }, { key: "_onBroadcastMessage", value: function(e4) {
        if (!oo(e4)) {
          for (var t3 = [], o3 = e4.length, n3 = null, a3 = 0; a3 < o3; a3++)
            Yr[e4[a3].event] ? ((n3 = this.packMessage(e4[a3], e4[a3].event)).isBroadcastMessage = true, this._broadcastMessageIDMap.has(n3.ID) || (t3.push(n3), this._broadcastMessageIDMap.set(n3.ID, 1))) : Ye2.warn("".concat(this._className, "._onBroadcastMessage unknown event:").concat(e4[a3].event));
          t3.length > 0 && this._groupModule.emitOuterEvent(S2.MESSAGE_RECEIVED, t3);
        }
      } }, { key: "start", value: function(e4) {
        if (this._pollingInstanceMap.has(e4)) {
          var t3 = this._pollingInstanceMap.get(e4);
          t3.isRunning() || t3.start();
        } else {
          var o3 = new Wr({ manager: this, groupID: e4, onInit: this._updateRequestData.bind(this), onSuccess: this._handleSuccess.bind(this), onFail: this._handleFailure.bind(this) });
          o3.start(), this._pollingInstanceMap.set(e4, o3), Ye2.log("".concat(this._className, ".start groupID:").concat(e4));
        }
      } }, { key: "handleJoinResult", value: function(e4) {
        var t3 = this;
        return this._preCheck().then(function() {
          var o3 = e4.longPollingKey, n3 = e4.group, a3 = n3.groupID;
          return t3._joinedGroupMap.set(a3, n3), t3._groupModule.updateGroupMap([n3]), t3._groupModule.deleteUnjoinedAVChatRoom(a3), t3._groupModule.emitGroupListUpdate(true, false), dt2(o3) ? ur({ status: Qe2, group: n3 }) : Promise.resolve();
        });
      } }, { key: "startRunLoop", value: function(e4) {
        var t3 = this;
        return this.handleJoinResult(e4).then(function() {
          var o3 = e4.longPollingKey, n3 = e4.group, a3 = e4.startSeq, s3 = void 0 === a3 ? 0 : a3, r3 = n3.groupID;
          return t3._pollingRequestInfoMap.set(r3, { key: o3, startSeq: s3 }), t3.start(r3), t3._groupModule.isLoggedIn() ? ur({ status: Qe2, group: n3 }) : ur({ status: Qe2 });
        });
      } }, { key: "_preCheck", value: function() {
        if (this._getModule($o).isUnlimitedAVChatRoom())
          return Promise.resolve();
        if (!this.hasJoinedAVChatRoom())
          return Promise.resolve();
        var e4 = m2(this._joinedGroupMap.entries().next().value, 2), t3 = e4[0], o3 = e4[1];
        if (this._groupModule.isLoggedIn()) {
          if (!(o3.selfInfo.role === D2.GRP_MBR_ROLE_OWNER || o3.ownerID === this._groupModule.getMyUserID()))
            return this._groupModule.quitGroup(t3);
          this._groupModule.deleteLocalGroupAndConversation(t3);
        } else
          this._groupModule.deleteLocalGroupAndConversation(t3);
        return this.reset(t3), Promise.resolve();
      } }, { key: "joinWithoutAuth", value: function(e4) {
        var t3 = this, o3 = e4.groupID, n3 = "".concat(this._className, ".joinWithoutAuth"), a3 = new bs2(ws2.JOIN_WITHOUT_AUTH);
        return this._groupModule.request({ protocolName: ca, requestData: e4 }).then(function(e5) {
          var s3 = e5.data.longPollingKey;
          if (t3._groupModule.probeNetwork().then(function(e6) {
            var t4 = m2(e6, 2), n4 = (t4[0], t4[1]);
            a3.setNetworkType(n4).setMessage("groupID:".concat(o3, " longPollingKey:").concat(s3)).end(true);
          }), dt2(s3))
            return lr({ code: hn.CANNOT_JOIN_NON_AVCHATROOM_WITHOUT_LOGIN });
          Ye2.log("".concat(n3, " ok. groupID:").concat(o3)), t3._getModule(jo).setCompleted("".concat(D2.CONV_GROUP).concat(o3));
          var r3 = new Nr({ groupID: o3 });
          return t3.startRunLoop({ group: r3, longPollingKey: s3 }), er({ status: Qe2 });
        }).catch(function(e5) {
          return Ye2.error("".concat(n3, " failed. groupID:").concat(o3, " error:"), e5), t3._groupModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), s3 = n4[0], r3 = n4[1];
            a3.setError(e5, s3, r3).setMessage("groupID:".concat(o3)).end(true);
          }), lr(e5);
        }).finally(function() {
          t3._groupModule.getModule(Jo).reportAtOnce();
        });
      } }, { key: "getGroupOnlineMemberCount", value: function(e4) {
        var t3 = this._onlineMemberCountMap.get(e4) || {}, o3 = Date.now();
        return oo(t3) || o3 - t3.lastSyncTime > 1e3 * t3.expireTime && o3 - t3.latestUpdateTime > 1e4 && o3 - t3.lastReqTime > 3e3 ? (t3.lastReqTime = o3, this._onlineMemberCountMap.set(e4, t3), this._getGroupOnlineMemberCount(e4).then(function(e5) {
          return er({ memberCount: e5.memberCount });
        }).catch(function(e5) {
          return lr(e5);
        })) : ur({ memberCount: t3.memberCount });
      } }, { key: "_getGroupOnlineMemberCount", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, "._getGroupOnlineMemberCount");
        return this._groupModule.request({ protocolName: Da, requestData: { groupID: e4 } }).then(function(n3) {
          var a3 = t3._onlineMemberCountMap.get(e4) || {}, s3 = n3.data, r3 = s3.onlineMemberNum, i3 = void 0 === r3 ? 0 : r3, c3 = s3.expireTime, u3 = void 0 === c3 ? t3.DEFAULT_EXPIRE_TIME : c3;
          Ye2.log("".concat(o3, " ok. groupID:").concat(e4, " memberCount:").concat(i3, " expireTime:").concat(u3));
          var l3 = Date.now();
          return oo(a3) && (a3.lastReqTime = l3), t3._onlineMemberCountMap.set(e4, Object.assign(a3, { lastSyncTime: l3, latestUpdateTime: l3, memberCount: i3, expireTime: u3 })), { memberCount: i3 };
        }).catch(function(n3) {
          return Ye2.warn("".concat(o3, " failed. error:"), n3), new bs2(ws2.GET_GROUP_ONLINE_MEMBER_COUNT).setCode(n3.code).setMessage("groupID:".concat(e4, " error:").concat(JSON.stringify(n3))).setNetworkType(t3._groupModule.getNetworkType()).end(), Promise.reject(n3);
        });
      } }, { key: "_getModule", value: function(e4) {
        return this._groupModule.getModule(e4);
      } }, { key: "setPollingInterval", value: function(e4) {
        dt2(e4) || (rt2(e4) ? this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = e4 : this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = parseInt(e4, 10));
      } }, { key: "setPollingIntervalPlus", value: function(e4) {
        dt2(e4) || (rt2(e4) ? this.DEFAULT_POLLING_INTERVAL_PLUS = e4 : this.DEFAULT_POLLING_INTERVAL_PLUS = parseInt(e4, 10));
      } }, { key: "setPollingNoMessageCount", value: function(e4) {
        dt2(e4) || (rt2(e4) ? this.DEFAULT_POLLING_NO_MESSAGE_COUNT = e4 : this.DEFAULT_POLLING_NO_MESSAGE_COUNT = parseInt(e4, 10));
      } }, { key: "getPollingInterval", value: function() {
        return this._pollingInterval;
      } }, { key: "onAVChatRoomMemberBanned", value: function(e4) {
        var t3 = e4.payload.groupProfile.groupID;
        Ye2.log("".concat(this._className, ".onAVChatRoomMemberBanned groupID:").concat(t3)), this._groupModule.deleteLocalGroupAndConversation(t3), this.reset(t3);
      } }, { key: "reset", value: function(e4) {
        if (e4) {
          Ye2.log("".concat(this._className, ".reset groupID:").concat(e4));
          var t3 = this._pollingInstanceMap.get(e4);
          t3 && t3.stop(), this._pollingInstanceMap.delete(e4), this._joinedGroupMap.delete(e4), this._pollingRequestInfoMap.delete(e4), this._onlineMemberCountMap.delete(e4);
        } else {
          Ye2.log("".concat(this._className, ".reset all"));
          var o3, n3 = E2(this._pollingInstanceMap.values());
          try {
            for (n3.s(); !(o3 = n3.n()).done; ) {
              o3.value.stop();
            }
          } catch (a3) {
            n3.e(a3);
          } finally {
            n3.f();
          }
          this._pollingInstanceMap.clear(), this._joinedGroupMap.clear(), this._pollingRequestInfoMap.clear(), this._onlineMemberCountMap.clear(), this._broadcastMessageIDMap.clear();
        }
        this.sequencesLinkedList.reset(), this.messageIDLinkedList.reset(), this.receivedMessageCount = 0, this._reportMessageStackedCount = 0, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = 300, this.DEFAULT_POLLING_NO_MESSAGE_COUNT = 20, this.DEFAULT_POLLING_INTERVAL_PLUS = 2e3, this._pollingNoMessageCount = 0;
      } }]), e3;
    }(), $r = 1, zr = 15, Jr = function() {
      function e3(t3) {
        n2(this, e3), this._groupModule = t3, this._className = "GroupSystemNoticeHandler", this.pendencyMap = /* @__PURE__ */ new Map();
      }
      return s2(e3, [{ key: "onNewGroupSystemNotice", value: function(e4) {
        var t3 = e4.dataList, o3 = e4.isSyncingEnded, n3 = e4.isInstantMessage;
        Ye2.debug("".concat(this._className, ".onReceiveSystemNotice count:").concat(t3.length));
        var a3 = this.newSystemNoticeStoredAndSummary({ notifiesList: t3, isInstantMessage: n3 }), s3 = a3.eventDataList, r3 = a3.result;
        s3.length > 0 && (this._groupModule.getModule(jo).onNewMessage({ conversationOptionsList: s3, isInstantMessage: n3 }), this._onReceivedGroupSystemNotice({ result: r3, isInstantMessage: n3 }));
        n3 ? r3.length > 0 && this._groupModule.emitOuterEvent(S2.MESSAGE_RECEIVED, r3) : true === o3 && this._clearGroupSystemNotice();
      } }, { key: "newSystemNoticeStoredAndSummary", value: function(e4) {
        var o3 = e4.notifiesList, n3 = e4.isInstantMessage, a3 = null, s3 = o3.length, r3 = 0, i3 = [], c3 = { conversationID: D2.CONV_SYSTEM, unreadCount: 0, type: D2.CONV_SYSTEM, subType: null, lastMessage: null };
        for (r3 = 0; r3 < s3; r3++) {
          var u3 = o3[r3], l3 = u3.groupProfile, d3 = l3.communityType, p3 = void 0 === d3 ? 0 : d3, g3 = l3.topicID, _3 = void 0 === g3 ? void 0 : g3, h3 = u3.elements, f3 = h3.topicIDList, m3 = void 0 === f3 ? void 0 : f3, v3 = h3.operationType;
          if (!(2 !== p3 || oo(_3) && oo(m3))) {
            if ([17, 18, 20].includes(v3)) {
              this._handleTopicSystemNotice(u3);
              continue;
            }
            oo(_3) || (u3.to = _3);
          }
          if (u3.elements.operationType !== zr)
            u3.currentUser = this._groupModule.getMyUserID(), u3.conversationType = D2.CONV_SYSTEM, u3.conversationID = D2.CONV_SYSTEM, (a3 = new Zs(u3)).setElement({ type: D2.MSG_GRP_SYS_NOTICE, content: t2(t2({}, u3.elements), {}, { groupProfile: t2({}, u3.groupProfile) }) }), a3.isSystemMessage = true, (1 === a3.sequence && 1 === a3.random || 2 === a3.sequence && 2 === a3.random) && (a3.sequence = Ct(), a3.random = Ct(), a3.generateMessageID(), Ye2.log("".concat(this._className, ".newSystemNoticeStoredAndSummary sequence and random maybe duplicated, regenerate. ID:").concat(a3.ID))), this._groupModule.getModule(jo).pushIntoNoticeResult(i3, a3) && (n3 ? c3.unreadCount++ : a3.setIsRead(true), c3.subType = a3.conversationSubType);
        }
        return c3.lastMessage = i3[i3.length - 1], { eventDataList: i3.length > 0 ? [c3] : [], result: i3 };
      } }, { key: "_clearGroupSystemNotice", value: function() {
        var e4 = this;
        this._getPendencyList().then(function(t3) {
          t3.forEach(function(t4) {
            e4.pendencyMap.set("".concat(t4.from, "_").concat(t4.groupID, "_").concat(t4.to), t4);
          });
          var o3 = e4._groupModule.getModule(jo).getLocalMessageList(D2.CONV_SYSTEM), n3 = [];
          o3.forEach(function(t4) {
            var o4 = t4.payload, a3 = o4.operatorID, s3 = o4.operationType, r3 = o4.groupProfile;
            if (s3 === $r) {
              var i3 = "".concat(a3, "_").concat(r3.groupID, "_").concat(r3.to), c3 = e4.pendencyMap.get(i3);
              c3 && rt2(c3.handled) && 0 !== c3.handled && n3.push(t4);
            }
          }), e4.deleteGroupSystemNotice({ messageList: n3 });
        });
      } }, { key: "deleteGroupSystemNotice", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, ".deleteGroupSystemNotice");
        return lt2(e4.messageList) && 0 !== e4.messageList.length ? (Ye2.log("".concat(o3, " ") + e4.messageList.map(function(e5) {
          return e5.ID;
        })), this._groupModule.request({ protocolName: Ta, requestData: { messageListToDelete: e4.messageList.map(function(e5) {
          return { from: D2.CONV_SYSTEM, messageSeq: e5.clientSequence, messageRandom: e5.random };
        }) } }).then(function() {
          Ye2.log("".concat(o3, " ok"));
          var n3 = t3._groupModule.getModule(jo);
          return e4.messageList.forEach(function(e5) {
            n3.deleteLocalMessage(e5);
          }), er();
        }).catch(function(e5) {
          return Ye2.error("".concat(o3, " error:"), e5), lr(e5);
        })) : ur();
      } }, { key: "_getPendencyList", value: function(e4) {
        var t3 = this;
        return this._groupModule.request({ protocolName: Ca, requestData: { startTime: e4 && e4.startTime ? e4.startTime : 0, limit: e4 && e4.limit ? e4.limit : 10, handleAccount: this._groupModule.getMyUserID() } }).then(function(e5) {
          var o3 = e5.data.pendencyList;
          return 0 !== e5.data.nextStartTime ? t3._getPendencyList({ startTime: e5.data.nextStartTime }).then(function(e6) {
            return [].concat(v2(o3), v2(e6));
          }) : o3;
        });
      } }, { key: "getGroupApplicationList", value: function() {
        var e4 = this;
        return this._getPendencyList().then(function(t3) {
          var o3 = [];
          return t3.forEach(function(t4) {
            e4.pendencyMap.set("".concat(t4.from, "_").concat(t4.groupID, "_").concat(t4.to), t4), 0 === t4.handled && o3.push({ applicant: t4.from, applicantNick: t4.fromUserNickName, groupName: t4.groupName, groupID: t4.groupID, authentication: t4.authentication, messageKey: t4.time });
          }), ur({ applicationList: o3 });
        });
      } }, { key: "_onReceivedGroupSystemNotice", value: function(e4) {
        var t3 = this, o3 = e4.result;
        e4.isInstantMessage && o3.forEach(function(e5) {
          switch (e5.payload.operationType) {
            case 1:
              break;
            case 2:
              t3._onApplyGroupRequestAgreed(e5);
              break;
            case 3:
              break;
            case 4:
              t3._onMemberKicked(e5);
              break;
            case 5:
              t3._onGroupDismissed(e5);
              break;
            case 6:
              break;
            case 7:
              t3._onInviteGroup(e5);
              break;
            case 8:
              t3._onQuitGroup(e5);
              break;
            case 9:
              t3._onSetManager(e5);
              break;
            case 10:
              t3._onDeleteManager(e5);
              break;
            case 11:
            case 12:
            case 15:
              break;
            case 20:
              t3._onMessageRemindTypeSynced(e5);
              break;
            case 21:
              t3._groupModule.onAVChatRoomMemberBanned(e5);
          }
        });
      } }, { key: "_onApplyGroupRequestAgreed", value: function(e4) {
        var t3 = this, o3 = e4.payload.groupProfile.groupID;
        this._groupModule.hasLocalGroup(o3) || this._groupModule.getGroupProfile({ groupID: o3 }).then(function(e5) {
          var o4 = e5.data.group;
          if (o4) {
            t3._groupModule.updateGroupMap([o4]);
            var n3 = !o4.isSupportTopic;
            t3._groupModule.emitGroupListUpdate(true, n3);
          }
        });
      } }, { key: "_onMemberKicked", value: function(e4) {
        var t3 = e4.payload.groupProfile.groupID;
        this._groupModule.hasLocalGroup(t3) && this._groupModule.deleteLocalGroupAndConversation(t3);
      } }, { key: "_onGroupDismissed", value: function(e4) {
        var t3 = e4.payload.groupProfile.groupID;
        this._groupModule.hasLocalGroup(t3) && this._groupModule.deleteLocalGroupAndConversation(t3);
        var o3 = this._groupModule._AVChatRoomHandler;
        o3 && o3.checkJoinedAVChatRoomByID(t3) && o3.reset(t3);
      } }, { key: "_onInviteGroup", value: function(e4) {
        var t3 = this, o3 = e4.payload.groupProfile.groupID;
        this._groupModule.hasLocalGroup(o3) || this._groupModule.getGroupProfile({ groupID: o3 }).then(function(e5) {
          var o4 = e5.data.group;
          o4 && (t3._groupModule.updateGroupMap([o4]), t3._groupModule.emitGroupListUpdate());
        });
      } }, { key: "_onQuitGroup", value: function(e4) {
        var t3 = e4.payload.groupProfile.groupID;
        this._groupModule.hasLocalGroup(t3) && this._groupModule.deleteLocalGroupAndConversation(t3);
      } }, { key: "_onSetManager", value: function(e4) {
        var t3 = e4.payload.groupProfile, o3 = t3.to, n3 = t3.groupID, a3 = this._groupModule.getModule(Wo).getLocalGroupMemberInfo(n3, o3);
        a3 && a3.updateRole(D2.GRP_MBR_ROLE_ADMIN);
      } }, { key: "_onDeleteManager", value: function(e4) {
        var t3 = e4.payload.groupProfile, o3 = t3.to, n3 = t3.groupID, a3 = this._groupModule.getModule(Wo).getLocalGroupMemberInfo(n3, o3);
        a3 && a3.updateRole(D2.GRP_MBR_ROLE_MEMBER);
      } }, { key: "_onMessageRemindTypeSynced", value: function(e4) {
        var t3 = e4.payload.groupProfile.groupID, o3 = e4.payload.messageRemindType;
        this._groupModule.getModule(jo).onGroupMessageRemindTypeSynced({ groupID: t3, messageRemindType: o3 });
      } }, { key: "_handleTopicSystemNotice", value: function(e4) {
        var t3 = e4.groupProfile, o3 = t3.groupID, n3 = t3.topicID, a3 = e4.elements, s3 = a3.operationType, r3 = a3.topicIDList, i3 = a3.messageRemindType, c3 = this._groupModule.getModule(Yo);
        17 === s3 ? c3.onTopicCreated({ groupID: o3, topicID: n3 }) : 18 === s3 ? c3.onTopicDeleted({ groupID: o3, topicIDList: r3 }) : 20 === s3 && c3.onTopicMessageRemindTypeUpdated({ groupID: o3, topicID: n3, messageRemindType: i3 });
      } }, { key: "reset", value: function() {
        this.pendencyMap.clear();
      } }]), e3;
    }(), Xr = ["relayFlag"], Qr = function(e3) {
      i2(a3, e3);
      var o3 = f2(a3);
      function a3(e4) {
        var t3;
        return n2(this, a3), (t3 = o3.call(this, e4))._className = "GroupModule", t3._commonGroupHandler = null, t3._AVChatRoomHandler = null, t3._groupSystemNoticeHandler = null, t3._commonGroupHandler = new Pr(_2(t3)), t3._groupAttributesHandler = new xr(_2(t3)), t3._groupCountersHandler = new Hr(_2(t3)), t3._AVChatRoomHandler = new jr(_2(t3)), t3._groupTipsHandler = new Gr(_2(t3)), t3._groupSystemNoticeHandler = new Jr(_2(t3)), t3.groupMap = /* @__PURE__ */ new Map(), t3._unjoinedAVChatRoomList = /* @__PURE__ */ new Map(), t3._receiptDetailCompleteMap = /* @__PURE__ */ new Map(), t3.getInnerEmitterInstance().on(_r, t3._onCloudConfigUpdated, _2(t3)), t3;
      }
      return s2(a3, [{ key: "_onCloudConfigUpdated", value: function() {
        var e4 = this.getCloudConfig("polling_interval"), t3 = this.getCloudConfig("polling_interval_plus"), o4 = this.getCloudConfig("polling_no_msg_count");
        this._AVChatRoomHandler && (Ye2.log("".concat(this._className, "._onCloudConfigUpdated pollingInterval:").concat(e4) + " pollingIntervalPlus:".concat(t3, " pollingNoMessageCount:").concat(o4)), this._AVChatRoomHandler.setPollingInterval(e4), this._AVChatRoomHandler.setPollingIntervalPlus(t3), this._AVChatRoomHandler.setPollingNoMessageCount(o4));
      } }, { key: "onCheckTimer", value: function(e4) {
        this.isLoggedIn() && (this._commonGroupHandler.onCheckTimer(e4), this._groupTipsHandler.onCheckTimer(e4));
      } }, { key: "guardForAVChatRoom", value: function(e4) {
        var t3 = this;
        if (e4.conversationType === D2.CONV_GROUP) {
          var o4 = Gt(e4.to) ? $t(e4.to) : e4.to;
          return this.hasLocalGroup(o4) ? ur() : this.getGroupProfile({ groupID: o4 }).then(function(n3) {
            var a4 = n3.data.group.type;
            if (Ye2.log("".concat(t3._className, ".guardForAVChatRoom. groupID:").concat(o4, " type:").concat(a4)), a4 === D2.GRP_AVCHATROOM) {
              var s3 = hn.MESSAGE_SEND_FAIL_NOT_IN_AVCHATROOM, r3 = t3.isIntl() ? "".concat(mn[s3], ". See https://web.sdk.qcloud.com/im/doc/en/SDK.html#joinGroup") : "userID:".concat(e4.from, " \u672A\u52A0\u5165\u7FA4 groupID:").concat(o4, "\u3002\u53D1\u6D88\u606F\u524D\u5148\u4F7F\u7528 joinGroup \u63A5\u53E3\u7533\u8BF7\u52A0\u7FA4\uFF0C\u8BE6\u7EC6\u8BF7\u53C2\u8003 https://web.sdk.qcloud.com/im/doc/zh-cn/SDK.html#joinGroup");
              return Ye2.warn("".concat(t3._className, ".guardForAVChatRoom. ").concat(r3)), lr(new rr({ code: s3, message: r3, data: { message: e4 } }));
            }
            return ur();
          });
        }
        return ur();
      } }, { key: "checkJoinedAVChatRoomByID", value: function(e4) {
        return !!this._AVChatRoomHandler && this._AVChatRoomHandler.checkJoinedAVChatRoomByID(e4);
      } }, { key: "onNewGroupMessage", value: function(e4) {
        this._commonGroupHandler && this._commonGroupHandler.onNewGroupMessage(e4);
      } }, { key: "updateNextMessageSeq", value: function(e4) {
        var t3 = this;
        if (lt2(e4)) {
          var o4 = this.getModule(Yo);
          e4.forEach(function(e5) {
            var n3 = e5.conversationID.replace(D2.CONV_GROUP, "");
            Gt(n3) && o4.updateLastMessage(n3, e5.lastMessage), t3.groupMap.has(n3) && (t3.groupMap.get(n3).nextMessageSeq = e5.lastMessage.sequence + 1);
          });
        }
      } }, { key: "onNewGroupTips", value: function(e4) {
        this._groupTipsHandler && this._groupTipsHandler.onNewGroupTips(e4);
      } }, { key: "onGroupMessageRevoked", value: function(e4) {
        this._commonGroupHandler && this._commonGroupHandler.onGroupMessageRevoked(e4);
      } }, { key: "onNewGroupSystemNotice", value: function(e4) {
        this._groupSystemNoticeHandler && this._groupSystemNoticeHandler.onNewGroupSystemNotice(e4);
      } }, { key: "onGroupMessageReadNotice", value: function(e4) {
        var t3 = this;
        e4.dataList.forEach(function(e5) {
          var o4 = e5.elements.groupMessageReadNotice;
          if (!dt2(o4)) {
            var n3 = t3.getModule(jo);
            o4.forEach(function(e6) {
              var o5 = e6.groupID, a4 = e6.topicID, s3 = void 0 === a4 ? void 0 : a4, r3 = e6.lastMessageSeq;
              Ye2.debug("".concat(t3._className, ".onGroupMessageReadNotice groupID:").concat(o5, " lastMessageSeq:").concat(r3));
              var i3 = "".concat(D2.CONV_GROUP).concat(o5), c3 = true;
              oo(s3) || (i3 = "".concat(D2.CONV_GROUP).concat(s3), c3 = false), n3.updateIsReadAfterReadReport({ conversationID: i3, lastMessageSeq: r3 }), n3.updateUnreadCount(i3, c3), n3.clearGroupAtInfoList(i3, c3);
            });
          }
        });
      } }, { key: "onReadReceiptList", value: function(e4) {
        var t3 = this;
        Ye2.debug("".concat(this._className, ".onReadReceiptList options:"), JSON.stringify(e4)), e4.dataList.forEach(function(e5) {
          var o4 = e5.groupProfile, n3 = e5.elements, a4 = o4.groupID, s3 = t3.getModule(jo), r3 = n3.readReceiptList;
          s3.updateReadReceiptInfo({ groupID: a4, readReceiptList: r3 });
        });
      } }, { key: "onGroupMessageModified", value: function(e4) {
        Ye2.debug("".concat(this._className, ".onGroupMessageModified options:"), JSON.stringify(e4));
        var o4 = this.getModule(jo);
        e4.dataList.forEach(function(e5) {
          o4.onMessageModified(t2(t2({}, e5), {}, { conversationType: D2.CONV_GROUP, to: e5.topicID ? e5.topicID : e5.groupID }));
        });
      } }, { key: "deleteGroupSystemNotice", value: function(e4) {
        this._groupSystemNoticeHandler && this._groupSystemNoticeHandler.deleteGroupSystemNotice(e4);
      } }, { key: "initGroupMap", value: function(e4) {
        this.groupMap.set(e4.groupID, new Nr(e4));
      } }, { key: "deleteGroup", value: function(e4) {
        this.groupMap.delete(e4);
      } }, { key: "updateGroupMap", value: function(e4) {
        var t3, o4 = this, n3 = this.getModule(jo);
        e4.forEach(function(e5) {
          t3 = e5.groupID, o4.groupMap.has(t3) ? o4.groupMap.get(t3).updateGroup(e5) : (o4.groupMap.set(t3, new Nr(e5)), n3.deleteGroupRomaingMessageInfo(t3));
        });
        var a4, s3 = this.getMyUserID(), r3 = E2(this.groupMap);
        try {
          for (r3.s(); !(a4 = r3.n()).done; ) {
            var i3 = m2(a4.value, 2)[1];
            i3.selfInfo.userID = s3, "Owner" === i3.selfInfo.role && (i3.ownerID = s3);
          }
        } catch (c3) {
          r3.e(c3);
        } finally {
          r3.f();
        }
        this._setStorageGroupList();
      } }, { key: "getStorageGroupList", value: function() {
        return this.getModule(zo).getItem("groupMap");
      } }, { key: "_setStorageGroupList", value: function() {
        var e4 = this.getLocalGroupList().filter(function(e5) {
          var t3 = e5.type;
          return !Lt(t3);
        }).filter(function(e5) {
          return !e5.isSupportTopic;
        }).slice(0, 20).map(function(e5) {
          return { groupID: e5.groupID, name: e5.name, avatar: e5.avatar, type: e5.type };
        });
        this.getModule(zo).setItem("groupMap", e4);
      } }, { key: "getGroupMap", value: function() {
        return this.groupMap;
      } }, { key: "getLocalGroupList", value: function() {
        return v2(this.groupMap.values());
      } }, { key: "getLocalGroupProfile", value: function(e4) {
        return this.groupMap.get(e4);
      } }, { key: "sortLocalGroupList", value: function() {
        var e4 = v2(this.groupMap).filter(function(e5) {
          var t3 = m2(e5, 2);
          t3[0];
          return !oo(t3[1].lastMessage);
        });
        e4.sort(function(e5, t3) {
          return t3[1].lastMessage.lastTime - e5[1].lastMessage.lastTime;
        }), this.groupMap = new Map(v2(e4));
      } }, { key: "updateGroupLastMessage", value: function(e4) {
        this._commonGroupHandler && this._commonGroupHandler.handleUpdateGroupLastMessage(e4);
      } }, { key: "emitGroupListUpdate", value: function() {
        var e4 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], o4 = this.getLocalGroupList();
        if (e4 && this.emitOuterEvent(S2.GROUP_LIST_UPDATED), t3) {
          var n3 = JSON.parse(JSON.stringify(o4)), a4 = this.getModule(jo);
          a4.updateConversationGroupProfile(n3);
        }
      } }, { key: "patchGroupMessageRemindType", value: function() {
        var e4 = this.getLocalGroupList(), t3 = this.getModule(jo), o4 = 0;
        e4.forEach(function(e5) {
          true === t3.patchMessageRemindType({ ID: e5.groupID, isC2CConversation: false, messageRemindType: e5.selfInfo.messageRemindType }) && (o4 += 1);
        }), Ye2.log("".concat(this._className, ".patchGroupMessageRemindType count:").concat(o4));
      } }, { key: "recomputeUnreadCount", value: function() {
        var e4 = this.getLocalGroupList(), t3 = this.getModule(jo);
        e4.forEach(function(e5) {
          var o4 = e5.groupID, n3 = e5.selfInfo, a4 = n3.excludedUnreadSequenceList, s3 = n3.readedSequence;
          if (lt2(a4)) {
            var r3 = 0;
            a4.forEach(function(t4) {
              t4 >= s3 && t4 <= e5.nextMessageSeq - 1 && (r3 += 1);
            }), r3 >= 1 && t3.recomputeGroupUnreadCount({ conversationID: "".concat(D2.CONV_GROUP).concat(o4), count: r3 });
          }
        });
      } }, { key: "getMyNameCardByGroupID", value: function(e4) {
        var t3 = this.getLocalGroupProfile(e4);
        return t3 ? t3.selfInfo.nameCard : "";
      } }, { key: "isPagingGetCompleted", value: function() {
        return !!this._commonGroupHandler && this._commonGroupHandler.isPagingGetCompleted();
      } }, { key: "getGroupList", value: function(e4) {
        return this._commonGroupHandler ? this._commonGroupHandler.getGroupList(e4) : ur();
      } }, { key: "getGroupProfile", value: function(e4) {
        var t3 = this, o4 = new bs2(ws2.GET_GROUP_PROFILE), n3 = "".concat(this._className, ".getGroupProfile"), a4 = e4.groupID, s3 = e4.groupCustomFieldFilter;
        Ye2.log("".concat(n3, " groupID:").concat(a4));
        var r3 = { groupIDList: [a4], responseFilter: { groupBaseInfoFilter: ["Type", "Name", "Introduction", "Notification", "FaceUrl", "Owner_Account", "CreateTime", "InfoSeq", "LastInfoTime", "LastMsgTime", "MemberNum", "MaxMemberNum", "ApplyJoinOption", "NextMsgSeq", "ShutUpAllMember"], groupCustomFieldFilter: s3, memberInfoFilter: ["Role", "JoinTime", "MsgSeq", "MsgFlag", "NameCard"] } };
        return this.getGroupProfileAdvance(r3).then(function(e5) {
          var s4, r4 = e5.data, i3 = r4.successGroupList, c3 = r4.failureGroupList;
          if (Ye2.log("".concat(n3, " ok")), c3.length > 0)
            return lr(c3[0]);
          (Lt(i3[0].type) && !t3.hasLocalGroup(a4) ? s4 = new Nr(i3[0]) : (t3.updateGroupMap(i3), s4 = t3.getLocalGroupProfile(a4)), s4.isSupportTopic) || t3.getModule(jo).updateConversationGroupProfile([s4]);
          return o4.setNetworkType(t3.getNetworkType()).setMessage("groupID:".concat(a4, " type:").concat(s4.type, " muteAllMembers:").concat(s4.muteAllMembers, " ownerID:").concat(s4.ownerID)).end(), er({ group: s4 });
        }).catch(function(a5) {
          return t3.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), s4 = n4[0], r4 = n4[1];
            o4.setError(a5, s4, r4).setMessage("groupID:".concat(e4.groupID)).end();
          }), Ye2.error("".concat(n3, " failed. error:"), a5), lr(a5);
        });
      } }, { key: "getGroupProfileAdvance", value: function(e4) {
        var o4 = this, n3 = "".concat(this._className, ".getGroupProfileAdvance"), a4 = e4.groupIDList;
        lt2(a4) && a4.length > 50 && (Ye2.warn("".concat(n3, " \u83B7\u53D6\u7FA4\u8D44\u6599\u7684\u6570\u91CF\u4E0D\u80FD\u8D85\u8FC750\u4E2A")), a4.length = 50);
        var s3 = [], r3 = [];
        a4.forEach(function(e5) {
          Ot2({ groupID: e5 }) ? r3.push(e5) : s3.push(e5);
        });
        var i3 = [];
        if (s3.length > 0) {
          var c3 = this._getGroupProfileAdvance(t2(t2({}, e4), {}, { groupIDList: s3 }));
          i3.push(c3);
        }
        if (r3.length > 0) {
          var u3 = this._getGroupProfileAdvance(t2(t2({}, e4), {}, { groupIDList: r3, relayFlag: s3.length > 0 }));
          i3.push(u3);
        }
        return Promise.all(i3).then(function(e5) {
          var t3 = [], o5 = [];
          return e5.forEach(function(e6) {
            t3.push.apply(t3, v2(e6.successGroupList)), o5.push.apply(o5, v2(e6.failureGroupList));
          }), er({ successGroupList: t3, failureGroupList: o5 });
        }).catch(function(e5) {
          return Ye2.error("".concat(o4._className, "._getGroupProfileAdvance failed. error:"), e5), lr(e5);
        });
      } }, { key: "_getGroupProfileAdvance", value: function(e4) {
        var t3 = this, o4 = e4.relayFlag, n3 = void 0 !== o4 && o4, a4 = g2(e4, Xr);
        return this.request({ protocolName: na, requestData: a4 }).then(function(e5) {
          Ye2.log("".concat(t3._className, "._getGroupProfileAdvance ok."));
          var o5 = e5.data.groups;
          return { successGroupList: o5.filter(function(e6) {
            return dt2(e6.errorCode) || 0 === e6.errorCode;
          }), failureGroupList: o5.filter(function(e6) {
            return e6.errorCode && 0 !== e6.errorCode;
          }).map(function(e6) {
            return new rr({ code: e6.errorCode, message: e6.errorInfo, data: { groupID: e6.groupID } });
          }) };
        }).catch(function(t4) {
          return n3 && Ot2({ groupID: e4.groupIDList[0] }) ? { successGroupList: [], failureGroupList: [] } : lr(t4);
        });
      } }, { key: "createGroup", value: function(e4) {
        var o4 = this, n3 = "".concat(this._className, ".createGroup"), a4 = e4.type, s3 = e4.groupID;
        if (e4.name && false === this._filterProfanity("name", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        if (e4.introduction && false === this._filterProfanity("introduction", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        if (e4.notification && false === this._filterProfanity("notification", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        if (!["Public", "Private", "ChatRoom", "AVChatRoom", "Community"].includes(a4))
          return lr({ code: hn.ILLEGAL_GROUP_TYPE });
        if (!Ot2({ type: a4 })) {
          if (!oo(s3) && Ot2({ groupID: s3 }))
            return lr({ code: hn.ILLEGAL_GROUP_ID });
          e4.isSupportTopic = void 0;
        }
        if (Lt(a4) && !dt2(e4.memberList) && e4.memberList.length > 0 && (e4.memberList = void 0), Rt(a4) || dt2(e4.joinOption) || (e4.joinOption = void 0), Ot2({ type: a4 })) {
          if (!oo(s3) && !Ot2({ groupID: s3 }))
            return lr({ code: hn.ILLEGAL_GROUP_ID });
          e4.isSupportTopic = true === e4.isSupportTopic ? 1 : 0;
        }
        var r3 = new bs2(ws2.CREATE_GROUP);
        Ye2.log("".concat(n3, " options:"), e4);
        var i3 = null, c3 = [];
        return this.request({ protocolName: aa, requestData: t2(t2({}, e4), {}, { ownerID: this.getMyUserID(), webPushFlag: 1 }) }).then(function(a5) {
          var s4 = a5.data, u3 = s4.groupID, l3 = s4.overLimitUserIDList, d3 = void 0 === l3 ? [] : l3;
          if (i3 = u3, c3 = d3, r3.setNetworkType(o4.getNetworkType()).setMessage("groupType:".concat(e4.type, " groupID:").concat(u3, " overLimitUserIDList=").concat(d3)).end(), Ye2.log("".concat(n3, " ok groupID:").concat(u3, " overLimitUserIDList:"), d3), e4.type === D2.GRP_AVCHATROOM)
            return o4.getGroupProfile({ groupID: u3 });
          if (e4.type === D2.GRP_COMMUNITY && 1 === e4.isSupportTopic)
            return o4.getGroupProfile({ groupID: u3 });
          oo(e4.memberList) || oo(d3) || (e4.memberList = e4.memberList.filter(function(e5) {
            return -1 === d3.indexOf(e5.userID);
          })), o4.updateGroupMap([t2(t2({}, e4), {}, { groupID: u3 })]);
          var p3 = o4.getModule(qo), g3 = p3.createCustomMessage({ to: u3, conversationType: D2.CONV_GROUP, payload: { data: "group_create", extension: o4.isIntl() ? "".concat(o4.getMyUserID(), " created a group") : "".concat(o4.getMyUserID(), "\u521B\u5EFA\u7FA4\u7EC4") } });
          return p3.sendMessageInstance(g3), o4.emitGroupListUpdate(), o4.getGroupProfile({ groupID: u3 });
        }).then(function(e5) {
          var t3 = e5.data.group, o5 = t3.selfInfo, n4 = o5.nameCard, a5 = o5.joinTime;
          return t3.updateSelfInfo({ nameCard: n4, joinTime: a5, messageRemindType: D2.MSG_REMIND_ACPT_AND_NOTE, role: D2.GRP_MBR_ROLE_OWNER }), er({ group: t3, overLimitUserIDList: c3 });
        }).catch(function(a5) {
          if (r3.setMessage("groupType:".concat(e4.type)), o4.probeNetwork().then(function(e5) {
            var t3 = m2(e5, 2), o5 = t3[0], n4 = t3[1];
            r3.setError(a5, o5, n4).end();
          }), 10010 === a5.code || 10007 === a5.code) {
            o4.updateGroupMap([t2(t2({}, e4), {}, { groupID: i3 })]);
            var s4 = o4.getLocalGroupProfile(i3);
            return Ye2.log("".concat(n3, " success, but failed to get group profile.")), er({ group: s4, overLimitUserIDList: c3 });
          }
          return Ye2.error("".concat(n3, " failed. error:"), a5), lr(a5);
        });
      } }, { key: "dismissGroup", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".dismissGroup");
        if (this.hasLocalGroup(e4) && this.getLocalGroupProfile(e4).type === D2.GRP_WORK)
          return lr(new rr({ code: hn.CANNOT_DISMISS_WORK }));
        var n3 = new bs2(ws2.DISMISS_GROUP);
        return n3.setMessage("groupID:".concat(e4)), Ye2.log("".concat(o4, " groupID:").concat(e4)), this.request({ protocolName: sa, requestData: { groupID: e4 } }).then(function() {
          return n3.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(o4, " ok")), t3.deleteLocalGroupAndConversation(e4), t3.checkJoinedAVChatRoomByID(e4) && t3._AVChatRoomHandler.reset(e4), er({ groupID: e4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), a4 = o5[0], s3 = o5[1];
            n3.setError(e5, a4, s3).end();
          }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "updateGroupProfile", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".updateGroupProfile");
        if (!this.hasLocalGroup(e4.groupID) || Rt(this.getLocalGroupProfile(e4.groupID).type) || dt2(e4.joinOption) || (Ye2.warn("".concat(o4, " joinOption is unavailable for Work/Meeting/AVChatRoom/Community")), e4.joinOption = void 0), dt2(e4.muteAllMembers) || (e4.muteAllMembers ? e4.muteAllMembers = "On" : e4.muteAllMembers = "Off"), e4.name && false === this._filterProfanity("name", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        if (e4.introduction && false === this._filterProfanity("introduction", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        if (e4.notification && false === this._filterProfanity("notification", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        var n3 = new bs2(ws2.UPDATE_GROUP_PROFILE);
        return n3.setMessage(JSON.stringify(e4)), Ye2.log("".concat(o4, " groupID:").concat(e4.groupID)), this.request({ protocolName: ra, requestData: e4 }).then(function() {
          (n3.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(o4, " ok")), t3.hasLocalGroup(e4.groupID)) && (t3.groupMap.get(e4.groupID).updateGroup(e4), t3._setStorageGroupList());
          return er({ group: t3.groupMap.get(e4.groupID) });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), a4 = o5[0], s3 = o5[1];
            n3.setError(e5, a4, s3).end();
          }), Ye2.log("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "_filterProfanity", value: function(e4, t3) {
        var o4 = this.getModule(pn2);
        if (!o4)
          return true;
        var n3 = o4.filterText(t3[e4], X2), a4 = n3.isAllowedToSend, s3 = n3.modifiedText;
        return true === a4 && (t3[e4] = s3, true);
      } }, { key: "joinGroup", value: function(e4) {
        var t3 = this, o4 = e4.groupID, n3 = e4.type, a4 = "".concat(this._className, ".joinGroup");
        if (n3 === D2.GRP_WORK)
          return lr({ code: hn.CANNOT_JOIN_WORK });
        if (this.deleteUnjoinedAVChatRoom(o4), this.hasLocalGroup(o4)) {
          if (!this.isLoggedIn())
            return ur({ status: D2.JOIN_STATUS_ALREADY_IN_GROUP });
          var s3 = new bs2(ws2.APPLY_JOIN_GROUP);
          return this.getGroupProfile({ groupID: o4 }).then(function() {
            return s3.setNetworkType(t3.getNetworkType()).setMessage("groupID:".concat(o4, " joinedStatus:").concat(D2.JOIN_STATUS_ALREADY_IN_GROUP)).end(), ur({ status: D2.JOIN_STATUS_ALREADY_IN_GROUP });
          }).catch(function(n4) {
            return s3.setNetworkType(t3.getNetworkType()).setMessage("groupID:".concat(o4, " unjoined")).end(), Ye2.warn("".concat(a4, " ").concat(o4, " was unjoined, now join!")), t3.groupMap.delete(o4), t3.applyJoinGroup(e4);
          });
        }
        return Ye2.log("".concat(a4, " groupID:").concat(o4)), this.isLoggedIn() ? this.applyJoinGroup(e4) : this._AVChatRoomHandler.joinWithoutAuth(e4);
      } }, { key: "applyJoinGroup", value: function(e4) {
        var o4 = this, n3 = "".concat(this._className, ".applyJoinGroup"), a4 = e4.groupID;
        if (!oo(e4.applyMessage) && false === this._filterProfanity("applyMessage", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        var s3 = new bs2(ws2.APPLY_JOIN_GROUP), r3 = t2({}, e4), i3 = this.canIUse(W2.AVCHATROOM_HISTORY_MSG);
        return i3 && (r3.historyMessageFlag = 1), this.getModule(jo).deleteTopicRoamingMessageInfo(a4), this.request({ protocolName: ia, requestData: r3 }).then(function(e5) {
          var t3 = e5.data, r4 = t3.joinedStatus, c3 = t3.longPollingKey, u3 = t3.startSeq, l3 = t3.avChatRoomFlag, d3 = t3.avChatRoomKey, p3 = t3.messageList, g3 = "groupID:".concat(a4, " joinedStatus:").concat(r4, " longPollingKey:").concat(c3, " startSeq:").concat(u3) + " avChatRoomFlag:".concat(l3, " canGetAVChatRoomHistoryMessage:").concat(i3, ",") + " history message count:".concat(oo(p3) ? 0 : p3.length);
          switch (s3.setNetworkType(o4.getNetworkType()).setMessage("".concat(g3)).end(), Ye2.log("".concat(n3, " ok. ").concat(g3)), r4) {
            case Ze2:
              return er({ status: Ze2 });
            case Qe2:
              return o4.getGroupProfile({ groupID: a4 }).then(function(e6) {
                var t4, n4 = e6.data.group, s4 = { status: Qe2, group: n4 };
                return 1 === l3 ? (o4.getModule(jo).setCompleted("".concat(D2.CONV_GROUP).concat(a4)), o4._groupAttributesHandler.initGroupAttributesCache({ groupID: a4, avChatRoomKey: d3 }), o4._groupCountersHandler.initGroupCountersCache({ groupID: a4, avChatRoomKey: d3 }), (t4 = dt2(c3) ? o4._AVChatRoomHandler.handleJoinResult({ group: n4 }) : o4._AVChatRoomHandler.startRunLoop({ longPollingKey: c3, group: n4, startSeq: u3 })).then(function() {
                  o4._onAVChatRoomHistoryMessage(p3);
                }), t4) : (o4.emitGroupListUpdate(true, false), er(s4));
              });
            default:
              var _3 = new rr({ code: hn.JOIN_GROUP_FAIL });
              return Ye2.error("".concat(n3, " failed. error:"), _3), lr(_3);
          }
        }).catch(function(e5) {
          return s3.setMessage("groupID:".concat(a4)), o4.probeNetwork().then(function(t3) {
            var o5 = m2(t3, 2), n4 = o5[0], a5 = o5[1];
            s3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(n3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "quitGroup", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".quitGroup");
        Ye2.log("".concat(o4, " groupID:").concat(e4));
        var n3 = this.checkJoinedAVChatRoomByID(e4);
        if (!n3 && !this.hasLocalGroup(e4))
          return lr({ code: hn.MEMBER_NOT_IN_GROUP });
        if (n3 && !this.isLoggedIn())
          return Ye2.log("".concat(o4, " anonymously ok. groupID:").concat(e4)), this.deleteLocalGroupAndConversation(e4), this._AVChatRoomHandler.reset(e4), ur({ groupID: e4 });
        var a4 = new bs2(ws2.QUIT_GROUP);
        return a4.setMessage("groupID:".concat(e4)), this.request({ protocolName: ua, requestData: { groupID: e4 } }).then(function() {
          return a4.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(o4, " ok")), t3.deleteLocalGroupAndConversation(e4), n3 && t3._AVChatRoomHandler.reset(e4), t3._groupAttributesHandler.deleteLocalGroupAttributes(e4), er({ groupID: e4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], s3 = o5[1];
            a4.setError(e5, n4, s3).end();
          }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "searchGroupByID", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".searchGroupByID"), n3 = { groupIDList: [e4] }, a4 = new bs2(ws2.SEARCH_GROUP_BY_ID);
        return a4.setMessage("groupID:".concat(e4)), Ye2.log("".concat(o4, " groupID:").concat(e4)), this.request({ protocolName: la, requestData: n3 }).then(function(e5) {
          var n4 = e5.data.groupProfile;
          if (0 !== n4[0].errorCode)
            throw new rr({ code: n4[0].errorCode, message: n4[0].errorInfo });
          return a4.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(o4, " ok")), er({ group: new Nr(n4[0]) });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], s3 = o5[1];
            a4.setError(e5, n4, s3).end();
          }), Ye2.warn("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "changeGroupOwner", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".changeGroupOwner");
        if (this.hasLocalGroup(e4.groupID) && this.getLocalGroupProfile(e4.groupID).type === D2.GRP_AVCHATROOM)
          return lr({ code: hn.CANNOT_CHANGE_OWNER_IN_AVCHATROOM });
        if (e4.newOwnerID === this.getMyUserID())
          return lr({ code: hn.CANNOT_CHANGE_OWNER_TO_SELF });
        var n3 = new bs2(ws2.CHANGE_GROUP_OWNER);
        return n3.setMessage("groupID:".concat(e4.groupID, " newOwnerID:").concat(e4.newOwnerID)), Ye2.log("".concat(o4, " groupID:").concat(e4.groupID)), this.request({ protocolName: da, requestData: e4 }).then(function() {
          n3.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(o4, " ok"));
          var a4 = e4.groupID, s3 = e4.newOwnerID;
          t3.groupMap.get(a4).ownerID = s3;
          var r3 = t3.getModule(Wo).getLocalGroupMemberList(a4);
          if (r3 instanceof Map) {
            var i3 = r3.get(t3.getMyUserID());
            dt2(i3) || (i3.updateRole("Member"), t3.groupMap.get(a4).selfInfo.role = "Member");
            var c3 = r3.get(s3);
            dt2(c3) || c3.updateRole("Owner");
          }
          return t3.emitGroupListUpdate(true, false), er({ group: t3.groupMap.get(a4) });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), a4 = o5[0], s3 = o5[1];
            n3.setError(e5, a4, s3).end();
          }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "getGroupApplicationList", value: function() {
        return this._groupSystemNoticeHandler.getGroupApplicationList();
      } }, { key: "handleGroupApplication", value: function(e4) {
        var t3, o4, n3, a4, s3 = this, r3 = "".concat(this._className, ".handleGroupApplication"), i3 = e4.handleAction, c3 = e4.handleMessage, u3 = e4.message, l3 = e4.application;
        u3 ? (t3 = u3.payload.operatorID, o4 = u3.payload.groupProfile.groupID, n3 = u3.payload.authentication, a4 = u3.payload.messageKey) : l3 && (t3 = l3.applicant, o4 = l3.groupID, n3 = l3.authentication, a4 = l3.messageKey);
        var d3 = new bs2(ws2.HANDLE_GROUP_APPLICATION);
        return d3.setMessage("groupID:".concat(o4)), Ye2.log("".concat(r3, " groupID:").concat(o4)), this.request({ protocolName: pa, requestData: { handleAction: i3, handleMessage: c3, applicant: t3, groupID: o4, authentication: n3, messageKey: a4 } }).then(function() {
          return d3.setNetworkType(s3.getNetworkType()).end(), Ye2.log("".concat(r3, " ok")), u3 && s3._groupSystemNoticeHandler.deleteGroupSystemNotice({ messageList: [e4.message] }), er({ group: s3.getLocalGroupProfile(o4) });
        }).catch(function(e5) {
          return s3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            d3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(r3, " failed. error"), e5), lr(e5);
        });
      } }, { key: "handleGroupInvitation", value: function(e4) {
        var o4 = this, n3 = "".concat(this._className, ".handleGroupInvitation"), a4 = e4.message.payload, s3 = a4.groupProfile.groupID, r3 = a4.authentication, i3 = a4.messageKey, c3 = a4.operatorID, u3 = e4.handleAction, l3 = new bs2(ws2.HANDLE_GROUP_INVITATION);
        return l3.setMessage("groupID:".concat(s3, " inviter:").concat(c3, " handleAction:").concat(u3)), Ye2.log("".concat(n3, " groupID:").concat(s3, " inviter:").concat(c3, " handleAction:").concat(u3)), this.request({ protocolName: ga, requestData: t2(t2({}, e4), {}, { inviter: c3, groupID: s3, authentication: r3, messageKey: i3 }) }).then(function() {
          return l3.setNetworkType(o4.getNetworkType()).end(), Ye2.log("".concat(n3, " ok")), o4._groupSystemNoticeHandler.deleteGroupSystemNotice({ messageList: [e4.message] }), er({ group: o4.getLocalGroupProfile(s3) });
        }).catch(function(e5) {
          return o4.probeNetwork().then(function(t3) {
            var o5 = m2(t3, 2), n4 = o5[0], a5 = o5[1];
            l3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(n3, " failed. error"), e5), lr(e5);
        });
      } }, { key: "getGroupOnlineMemberCount", value: function(e4) {
        return this._AVChatRoomHandler ? this._AVChatRoomHandler.checkJoinedAVChatRoomByID(e4) ? this._AVChatRoomHandler.getGroupOnlineMemberCount(e4) : ur({ memberCount: 0 }) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "hasLocalGroup", value: function(e4) {
        return this.groupMap.has(e4);
      } }, { key: "deleteLocalGroupAndConversation", value: function(e4) {
        var t3 = this.checkJoinedAVChatRoomByID(e4);
        (Ye2.log("".concat(this._className, ".deleteLocalGroupAndConversation isJoinedAVChatRoom:").concat(t3)), t3) && this.getModule(jo).deleteLocalConversation("".concat(D2.CONV_GROUP).concat(e4));
        if (Ot2({ groupID: e4 })) {
          var o4 = this.getLocalGroupProfile(e4);
          if (o4 && true === o4.isSupportTopic)
            this.getModule(Yo).deleteTopicListInCommunity(e4);
        }
        this._deleteLocalGroup(e4), this.emitGroupListUpdate(true, false);
      } }, { key: "_deleteLocalGroup", value: function(e4) {
        this.groupMap.delete(e4), this.getModule(Wo).deleteGroupMemberList(e4), this._setStorageGroupList();
      } }, { key: "sendMessage", value: function(e4, t3) {
        if (lt2(e4._receiverList) && e4._receiverList.length > 0 && !this.canIUse(W2.MSG_TO_SPECIFIED_GRP_MBR))
          return lr({ code: hn.CANNOT_USE_COMMERCIAL_ABILITY });
        var o4 = this.createGroupMessagePack(e4, t3);
        return this.request(o4);
      } }, { key: "createGroupMessagePack", value: function(e4, t3) {
        var o4 = null;
        t3 && t3.offlinePushInfo && (o4 = t3.offlinePushInfo);
        var n3 = "";
        it2(e4.cloudCustomData) && e4.cloudCustomData.length > 0 && (n3 = e4.cloudCustomData);
        var a4 = [];
        if (ut2(t3) && ut2(t3.messageControlInfo)) {
          var s3 = t3.messageControlInfo, r3 = s3.excludedFromUnreadCount, i3 = s3.excludedFromLastMessage;
          true === r3 && a4.push("NoUnread"), true === i3 && a4.push("NoLastMsg");
        }
        var c3 = void 0;
        lt2(e4._receiverList) && e4._receiverList.length > 0 && (c3 = e4._receiverList, e4._receiverList.length > 50 && (c3 = e4._receiverList.slice(0, 50), Ye2.warn("".concat(this._className, ".createGroupMessagePack receiverList must be less than or equal to 50."))));
        var u3 = this.isOnlineMessage(e4, t3) ? 1 : 0, l3 = e4.getGroupAtInfoList(), d3 = { fromAccount: this.getMyUserID(), groupID: e4.to, msgBody: e4.getElements(), cloudCustomData: n3, random: e4.random, priority: e4.priority, clientSequence: e4.clientSequence, groupAtInfo: e4.type !== D2.MSG_TEXT || oo(l3) ? void 0 : l3, onlineOnlyFlag: u3, clientTime: e4.clientTime, offlinePushInfo: o4 ? { pushFlag: true === o4.disablePush ? 1 : 0, title: o4.title || "", desc: o4.description || "", ext: o4.extension || "", apnsInfo: { badgeMode: true === o4.ignoreIOSBadge ? 1 : 0, isVoipPush: this._isVoipPush(o4) }, androidInfo: { OPPOChannelID: o4.androidOPPOChannelID || "" } } : void 0, messageControlInfo: 0 === u3 ? a4 : void 0, needReadReceipt: true !== e4.needReadReceipt || this.isMessageFromOrToAVChatroom(e4.to) ? 0 : 1, receiverList: c3, isSupportExtension: true === e4.isSupportExtension ? 1 : 0 };
        return Gt(e4.to) && (d3.groupID = $t(e4.to), d3.topicID = e4.to), { protocolName: Dn2, tjgID: this.generateTjgID(e4), requestData: d3 };
      } }, { key: "_isVoipPush", value: function(e4) {
        var t3 = void 0;
        return dt2(e4.disableVoipPush) || (t3 = false === e4.disableVoipPush ? 1 : 0), t3;
      } }, { key: "revokeMessage", value: function(e4) {
        var t3 = { groupID: e4.to, msgSeqList: [{ msgSeq: e4.sequence }] };
        return Gt(e4.to) && (t3.groupID = $t(e4.to), t3.topicID = e4.to), this.request({ protocolName: _a2, requestData: t3 });
      } }, { key: "deleteMessage", value: function(e4) {
        var t3 = e4.to, o4 = e4.keyList;
        Ye2.log("".concat(this._className, ".deleteMessage groupID:").concat(t3, " count:").concat(o4.length));
        var n3 = { groupID: t3, deleter: this.getMyUserID(), keyList: o4 };
        return Gt(t3) && (n3.groupID = $t(t3), n3.topicID = t3), this.request({ protocolName: Na, requestData: n3 });
      } }, { key: "modifyRemoteMessage", value: function(e4) {
        var t3 = e4.to, o4 = e4.sequence, n3 = e4.payload, a4 = e4.type, s3 = e4.version, r3 = void 0 === s3 ? 0 : s3, i3 = e4.cloudCustomData, c3 = t3, u3 = void 0;
        Gt(t3) && (c3 = $t(t3), u3 = t3);
        var l3 = void 0;
        return Jt(a4) && (l3 = []).push({ type: a4, content: n3 }), this.request({ protocolName: Aa, requestData: { groupID: c3, topicID: u3, sequence: o4, version: r3, elements: l3, cloudCustomData: i3 } });
      } }, { key: "getRoamingMessage", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".getRoamingMessage"), n3 = e4.conversationID, a4 = e4.groupID, s3 = e4.sequence, r3 = new bs2(ws2.GET_GROUP_ROAMING_MESSAGES), i3 = 0, c3 = void 0;
        return Gt(a4) && (a4 = $t(c3 = a4)), this._computeLastSequence({ groupID: a4, topicID: c3, sequence: s3 }).then(function(e5) {
          return i3 = e5, Ye2.log("".concat(o4, " groupID:").concat(a4, " startSequence:").concat(i3)), t3.request({ protocolName: ma, requestData: { groupID: a4, count: 21, sequence: i3, topicID: c3 } });
        }).then(function(e5) {
          var s4 = e5.data, u3 = s4.messageList, l3 = s4.complete, d3 = s4.invisibleSequenceList, p3 = void 0 === d3 ? [] : d3;
          dt2(u3) ? Ye2.log("".concat(o4, " ok. complete:").concat(l3, " but messageList is undefined!")) : Ye2.log("".concat(o4, " ok. complete:").concat(l3, " count:").concat(u3.length));
          var g3 = t3._getMinSequence(p3, u3) - 1;
          r3.setNetworkType(t3.getNetworkType()).setMessage("groupID:".concat(a4, " topicID:").concat(c3, " startSequence:").concat(i3, " complete:").concat(l3, " nextSequence:").concat(g3)).end();
          var _3 = t3.getModule(jo), h3 = [];
          return oo(u3) || (_3.updateRoamingMessageSequence(n3, g3), h3 = _3.onRoamingMessage(u3, n3), _3.updateIsRead(n3), _3.patchConversationLastMessage(n3)), 2 === l3 && (_3.setCompleted(n3), g3 = ""), Ye2.log("".concat(o4, " nextReqID:").concat(g3, ", stored message count:").concat(h3.length, ", invisible sequence count:").concat(p3.length)), { nextReqID: g3 + "", storedMessageList: h3 };
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], s4 = o5[1];
            r3.setError(e5, n4, s4).setMessage("groupID:".concat(a4, " topicID:").concat(c3, " startSequence:").concat(i3)).end();
          }), Ye2.warn("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "_getGroupIDOfMessage", value: function(e4) {
        return e4.conversationID.replace(D2.CONV_GROUP, "");
      } }, { key: "_getMinSequence", value: function(e4, t3) {
        var o4 = 0;
        oo(t3) || (o4 = t3[t3.length - 1].sequence);
        var n3 = 0;
        oo(e4) || (n3 = e4[e4.length - 1]);
        return Ye2.log("".concat(this._className, "._getMinSequence minVisibleSequence:").concat(o4, " minInvisibleSequence:").concat(n3)), n3 > 0 && n3 < o4 ? n3 : o4;
      } }, { key: "getReadReceiptList", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".getReadReceiptList"), n3 = this._getGroupIDOfMessage(e4[0]), a4 = this.getMyUserID(), s3 = e4.filter(function(e5) {
          return e5.from === a4 && true === e5.needReadReceipt;
        }).map(function(e5) {
          return { sequence: e5.sequence };
        });
        if (Ye2.log("".concat(o4, " groupID:").concat(n3, " sequenceList:").concat(JSON.stringify(s3))), 0 === s3.length)
          return ur({ messageList: e4 });
        var r3 = new bs2(ws2.GET_READ_RECEIPT);
        return r3.setMessage("groupID:".concat(n3)), this.request({ protocolName: va, requestData: { groupID: n3, sequenceList: s3 } }).then(function(t4) {
          r3.end(), Ye2.log("".concat(o4, " ok"));
          var n4 = t4.data.readReceiptList;
          return lt2(n4) && n4.forEach(function(t5) {
            e4.forEach(function(e5) {
              0 === t5.code && t5.sequence === e5.sequence && (e5.readReceiptInfo.readCount = t5.readCount, e5.readReceiptInfo.unreadCount = t5.unreadCount);
            });
          }), er({ messageList: e4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            r3.setError(e5, n4, a5).end();
          }), Ye2.warn("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "sendReadReceipt", value: function(e4) {
        var t3 = this, o4 = this._getGroupIDOfMessage(e4[0]), n3 = new bs2(ws2.SEND_READ_RECEIPT);
        n3.setMessage("groupID:".concat(o4));
        var a4 = this.getMyUserID(), s3 = e4.filter(function(e5) {
          return e5.from !== a4 && true === e5.needReadReceipt;
        }).map(function(e5) {
          return { sequence: e5.sequence };
        });
        if (0 === s3.length)
          return lr({ code: hn.READ_RECEIPT_MESSAGE_LIST_EMPTY });
        var r3 = "".concat(this._className, ".sendReadReceipt");
        return Ye2.log("".concat(r3, ". sequenceList:").concat(JSON.stringify(s3))), this.request({ protocolName: Ma, requestData: { groupID: o4, sequenceList: s3 } }).then(function(e5) {
          return n3.end(), Ye2.log("".concat(r3, " ok")), er();
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), a5 = o5[0], s4 = o5[1];
            n3.setError(e5, a5, s4).end();
          }), Ye2.warn("".concat(r3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "getReadReceiptDetail", value: function(e4) {
        var t3 = this, o4 = e4.message, n3 = e4.filter, a4 = e4.cursor, s3 = e4.count, r3 = this._getGroupIDOfMessage(o4), i3 = o4.ID, c3 = o4.sequence, u3 = "".concat(this._className, ".getReadReceiptDetail"), l3 = this._receiptDetailCompleteMap.get(i3) || false, d3 = 0 !== n3 && 1 !== n3 ? 0 : n3, p3 = it2(a4) ? a4 : "", g3 = !rt2(s3) || s3 <= 0 || s3 >= 100 ? 100 : s3, _3 = "groupID:".concat(r3, " sequence:").concat(c3, " cursor:").concat(p3, " filter:").concat(d3, " completeFlag:").concat(l3);
        Ye2.log("".concat(u3, " ").concat(_3));
        var h3 = { cursor: "", isCompleted: false, messageID: i3, unreadUserIDList: [], readUserIDList: [] }, f3 = new bs2(ws2.GET_READ_RECEIPT_DETAIL);
        return f3.setMessage(_3), this.request({ protocolName: Ia, requestData: { groupID: r3, sequence: c3, flag: d3, cursor: p3, count: g3 } }).then(function(e5) {
          f3.end();
          var o5 = e5.data, n4 = o5.cursor, a5 = o5.isCompleted, s4 = o5.unreadUserIDList, r4 = o5.readUserIDList;
          return h3.cursor = n4, 1 === a5 && (h3.isCompleted = true, t3._receiptDetailCompleteMap.set(i3, true)), 0 === d3 ? h3.readUserIDList = r4.map(function(e6) {
            return e6.userID;
          }) : 1 === d3 && (h3.unreadUserIDList = s4.map(function(e6) {
            return e6.userID;
          })), Ye2.log("".concat(u3, " ok")), er(h3);
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            f3.setError(e5, n4, a5).end();
          }), Ye2.warn("".concat(u3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "getRoamingMessagesHopping", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".getRoamingMessagesHopping"), n3 = new bs2(ws2.GET_GROUP_ROAMING_MESSAGES_HOPPING), a4 = e4.groupID, s3 = e4.count, r3 = e4.sequence, i3 = e4.direction, c3 = r3;
        1 === i3 && (c3 = r3 + s3 - 1);
        var u3 = void 0;
        Gt(a4) && (a4 = $t(u3 = a4));
        var l3 = "".concat(u3 ? "topicID:".concat(u3) : "groupID:".concat(a4), " sequence:").concat(r3, " direction:").concat(i3);
        return Ye2.log("".concat(o4, " ").concat(l3)), this.request({ protocolName: ma, requestData: { groupID: a4, topicID: u3, count: s3, sequence: c3 } }).then(function(a5) {
          var s4 = a5.data, c4 = s4.messageList, u4 = s4.complete, d3 = "complete:".concat(u4, " count:").concat(c4 ? c4.length : 0);
          if (Ye2.log("".concat(o4, " ok. ").concat(d3)), n3.setNetworkType(t3.getNetworkType()).setMessage("".concat(l3, " ").concat(d3)).end(), 2 === u4 || oo(c4)) {
            var p3 = t3._computeResult();
            return er(p3);
          }
          var g3 = "".concat(D2.CONV_GROUP).concat(e4.groupID), _3 = t3.getModule(jo).onRoamingMessage(c4, g3, false), h3 = t3._computeResult({ direction: i3, sequence: r3, remoteMessageList: c4, processedMessageList: _3 });
          return er(h3);
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), i4 = o5[0], c4 = o5[1];
            n3.setError(e5, i4, c4).setMessage("groupID:".concat(a4, " sequence:").concat(r3, " count:").concat(s3)).end();
          }), Ye2.warn("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "_computeResult", value: function(e4) {
        var t3 = { messageList: [], isCompleted: false, nextMessageSeq: "" };
        if (dt2(e4))
          return t3.isCompleted = true, t3;
        var o4 = e4.direction, n3 = e4.sequence, a4 = e4.remoteMessageList, s3 = void 0 === a4 ? [] : a4, r3 = e4.processedMessageList, i3 = void 0 === r3 ? [] : r3, c3 = s3.length;
        return 1 === o4 ? (t3.nextMessageSeq = s3[0].sequence + 1, i3.forEach(function(e5) {
          e5.sequence >= n3 && t3.messageList.push(e5);
        }), 0 === t3.messageList.length && s3[0].sequence < n3 && (t3.isCompleted = true, t3.nextMessageSeq = ""), t3) : (t3.nextMessageSeq = s3[c3 - 1].sequence - 1, t3.messageList = v2(i3), 0 === t3.nextMessageSeq && (t3.isCompleted = true, t3.nextMessageSeq = ""), t3);
      } }, { key: "setMessageRead", value: function(e4) {
        var t3 = this, o4 = e4.conversationID, n3 = e4.lastMessageSeq, a4 = "".concat(this._className, ".setMessageRead");
        Ye2.log("".concat(a4, " conversationID:").concat(o4, " lastMessageSeq:").concat(n3)), rt2(n3) || Ye2.warn("".concat(a4, " \u8BF7\u52FF\u4FEE\u6539 Conversation.lastMessage.lastSequence\uFF0C\u5426\u5219\u53EF\u80FD\u4F1A\u5BFC\u81F4\u5DF2\u8BFB\u4E0A\u62A5\u7ED3\u679C\u4E0D\u51C6\u786E"));
        var s3 = new bs2(ws2.SET_GROUP_MESSAGE_READ);
        s3.setMessage("".concat(o4, "-").concat(n3));
        var r3 = o4.replace(D2.CONV_GROUP, ""), i3 = void 0;
        return Gt(r3) && (r3 = $t(i3 = r3)), this.request({ protocolName: ha, requestData: { groupID: r3, topicID: i3, messageReadSeq: n3 } }).then(function() {
          s3.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(a4, " ok."));
          var e5 = t3.getModule(jo);
          e5.updateIsReadAfterReadReport({ conversationID: o4, lastMessageSeq: n3 });
          var c3 = true;
          if (!dt2(i3)) {
            c3 = false;
            var u3 = t3.getModule(Yo).getLocalTopic(r3, i3);
            u3 && u3.updateSelfInfo({ readedSequence: n3 });
          }
          return e5.updateUnreadCount(o4, c3), er();
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            s3.setError(e5, n4, a5).end();
          }), Ye2.log("".concat(a4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "_computeLastSequence", value: function(e4) {
        var t3 = e4.groupID, o4 = e4.topicID, n3 = void 0 === o4 ? void 0 : o4, a4 = e4.sequence;
        return a4 > 0 ? Promise.resolve(a4) : dt2(n3) || this.hasLocalGroup(t3) ? dt2(n3) ? this.getGroupLastSequence(t3) : this.getTopicLastSequence({ groupID: t3, topicID: n3 }) : Promise.resolve(0);
      } }, { key: "getGroupLastSequence", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".getGroupLastSequence"), n3 = new bs2(ws2.GET_GROUP_LAST_SEQUENCE), a4 = 0, s3 = "";
        if (this.hasLocalGroup(e4)) {
          var r3 = this.getLocalGroupProfile(e4), i3 = r3.lastMessage;
          if (i3.lastSequence > 0 && false === i3.onlineOnlyFlag)
            return a4 = i3.lastSequence, s3 = "got lastSequence:".concat(a4, " from local group profile[lastMessage.lastSequence]. groupID:").concat(e4), Ye2.log("".concat(o4, " ").concat(s3)), n3.setNetworkType(this.getNetworkType()).setMessage("".concat(s3)).end(), Promise.resolve(a4);
          if (r3.nextMessageSeq > 1)
            return a4 = r3.nextMessageSeq - 1, s3 = "got lastSequence:".concat(a4, " from local group profile[nextMessageSeq]. groupID:").concat(e4), Ye2.log("".concat(o4, " ").concat(s3)), n3.setNetworkType(this.getNetworkType()).setMessage("".concat(s3)).end(), Promise.resolve(a4);
        }
        var c3 = "GROUP".concat(e4), u3 = this.getModule(jo).getLocalConversation(c3);
        if (u3 && u3.lastMessage.lastSequence && false === u3.lastMessage.onlineOnlyFlag)
          return a4 = u3.lastMessage.lastSequence, s3 = "got lastSequence:".concat(a4, " from local conversation profile[lastMessage.lastSequence]. groupID:").concat(e4), Ye2.log("".concat(o4, " ").concat(s3)), n3.setNetworkType(this.getNetworkType()).setMessage("".concat(s3)).end(), Promise.resolve(a4);
        var l3 = { groupIDList: [e4], responseFilter: { groupBaseInfoFilter: ["NextMsgSeq"] } };
        return this.getGroupProfileAdvance(l3).then(function(r4) {
          var i4 = r4.data.successGroupList;
          return oo(i4) ? Ye2.log("".concat(o4, " successGroupList is empty. groupID:").concat(e4)) : (a4 = i4[0].nextMessageSeq - 1, s3 = "got lastSequence:".concat(a4, " from getGroupProfileAdvance. groupID:").concat(e4), Ye2.log("".concat(o4, " ").concat(s3))), n3.setNetworkType(t3.getNetworkType()).setMessage("".concat(s3)).end(), a4;
        }).catch(function(a5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), s4 = o5[0], r4 = o5[1];
            n3.setError(a5, s4, r4).setMessage("get lastSequence failed from getGroupProfileAdvance. groupID:".concat(e4)).end();
          }), Ye2.warn("".concat(o4, " failed. error:"), a5), lr(a5);
        });
      } }, { key: "getTopicLastSequence", value: function(e4) {
        var t3 = this, o4 = e4.groupID, n3 = e4.topicID, a4 = "".concat(this._className, ".getTopicLastSequence"), s3 = new bs2(ws2.GET_TOPIC_LAST_SEQUENCE), r3 = 0, i3 = "", c3 = this.getModule(Yo);
        return c3.hasLocalTopic(o4, n3) ? (r3 = c3.getLocalTopic(o4, n3).nextMessageSeq - 1, i3 = "get lastSequence:".concat(r3, " from local topic info[nextMessageSeq]. topicID:").concat(n3), Ye2.log("".concat(a4, " ").concat(i3)), s3.setNetworkType(this.getNetworkType()).setMessage("".concat(i3)).end(), Promise.resolve(r3)) : c3.getTopicList({ groupID: o4, topicIDList: [n3] }).then(function(e5) {
          var o5 = e5.data.successTopicList;
          return oo(o5) ? Ye2.log("".concat(a4, " successTopicList is empty. topicID:").concat(n3)) : (r3 = o5[0].nextMessageSeq - 1, i3 = "get lastSequence:".concat(r3, " from getTopicList. topicID:").concat(n3), Ye2.log("".concat(a4, " ").concat(i3))), s3.setNetworkType(t3.getNetworkType()).setMessage("".concat(i3)).end(), r3;
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), a5 = o5[0], r4 = o5[1];
            s3.setError(e5, a5, r4).setMessage("get lastSequence failed from getTopicList. topicID:".concat(n3)).end();
          }), Ye2.warn("".concat(a4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "isMessageFromOrToAVChatroom", value: function(e4) {
        return !!this._AVChatRoomHandler && this._AVChatRoomHandler.checkJoinedAVChatRoomByID(e4);
      } }, { key: "hasJoinedAVChatRoom", value: function() {
        return this._AVChatRoomHandler ? this._AVChatRoomHandler.hasJoinedAVChatRoom() : 0;
      } }, { key: "getJoinedAVChatRoom", value: function() {
        return this._AVChatRoomHandler ? this._AVChatRoomHandler.getJoinedAVChatRoom() : [];
      } }, { key: "isOnlineMessage", value: function(e4, t3) {
        return !(!this._canIUseOnlineOnlyFlag(e4) || !t3 || true !== t3.onlineUserOnly);
      } }, { key: "_canIUseOnlineOnlyFlag", value: function(e4) {
        var t3 = this.getJoinedAVChatRoom();
        return !t3 || !t3.includes(e4.to) || e4.conversationType !== D2.CONV_GROUP;
      } }, { key: "_onAVChatRoomHistoryMessage", value: function(e4) {
        if (!oo(e4)) {
          Ye2.log("".concat(this._className, "._onAVChatRoomHistoryMessage count:").concat(e4.length));
          var o4 = [];
          e4.forEach(function(e5) {
            o4.push(t2(t2({}, e5), {}, { isHistoryMessage: 1 }));
          }), this.onAVChatRoomMessage(o4);
        }
      } }, { key: "onAVChatRoomMessage", value: function(e4) {
        this._AVChatRoomHandler && this._AVChatRoomHandler.onMessage(e4);
      } }, { key: "onAVChatRoomMemberBanned", value: function(e4) {
        this._AVChatRoomHandler && this._AVChatRoomHandler.onAVChatRoomMemberBanned(e4);
      } }, { key: "getGroupSimplifiedInfo", value: function(e4) {
        var t3 = this, o4 = new bs2(ws2.GET_GROUP_SIMPLIFIED_INFO), n3 = { groupIDList: [e4], responseFilter: { groupBaseInfoFilter: ["Type", "Name"] } };
        return this.getGroupProfileAdvance(n3).then(function(n4) {
          var a4 = n4.data.successGroupList;
          return o4.setNetworkType(t3.getNetworkType()).setMessage("groupID:".concat(e4, " type:").concat(a4[0].type)).end(), a4[0];
        }).catch(function(n4) {
          t3.probeNetwork().then(function(t4) {
            var a4 = m2(t4, 2), s3 = a4[0], r3 = a4[1];
            o4.setError(n4, s3, r3).setMessage("groupID:".concat(e4)).end();
          });
        });
      } }, { key: "setUnjoinedAVChatRoom", value: function(e4) {
        this._unjoinedAVChatRoomList.set(e4, 1);
      } }, { key: "deleteUnjoinedAVChatRoom", value: function(e4) {
        this._unjoinedAVChatRoomList.has(e4) && this._unjoinedAVChatRoomList.delete(e4);
      } }, { key: "isUnjoinedAVChatRoom", value: function(e4) {
        return this._unjoinedAVChatRoomList.has(e4);
      } }, { key: "isGroupAttributesUpdatedNotice", value: function(e4) {
        return this._groupAttributesHandler.isGroupAttributesUpdatedNotice(e4);
      } }, { key: "updateLocalMainSequenceOnReconnected", value: function() {
        this._groupAttributesHandler.updateLocalMainSequenceOnReconnected();
      } }, { key: "initGroupAttributes", value: function(e4) {
        return this._groupAttributesHandler.initGroupAttributes(e4);
      } }, { key: "setGroupAttributes", value: function(e4) {
        return this._groupAttributesHandler.setGroupAttributes(e4);
      } }, { key: "deleteGroupAttributes", value: function(e4) {
        return this._groupAttributesHandler.deleteGroupAttributes(e4);
      } }, { key: "getGroupAttributes", value: function(e4) {
        return this._groupAttributesHandler.getGroupAttributes(e4);
      } }, { key: "isMessageFromTopic", value: function(e4, t3) {
        return 2 === e4 && !oo(t3);
      } }, { key: "isMessageFromCommunityOfTopic", value: function(e4, t3) {
        return 2 === e4 && oo(t3);
      } }, { key: "getMessageExtensions", value: function(e4, t3) {
        return Ye2.log("".concat(this._className, ".getMessageExtensions startSequence:").concat(t3)), this.request({ protocolName: Ua, requestData: { groupID: e4.to, messageSequence: e4.sequence, startSequence: t3 } });
      } }, { key: "modifyMessageExtensions", value: function(e4, t3) {
        var o4 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        return Ye2.log("".concat(this._className, ".modifyMessageExtensions operateType:").concat(o4)), this.request({ protocolName: Pa, requestData: { groupID: e4.to, messageSequence: e4.sequence, extensionList: t3, operateType: o4 } });
      } }, { key: "getGroupNotify", value: function(e4) {
        var o4 = this;
        if (this.hasLocalGroup(e4)) {
          var n3 = this.getLocalGroupProfile(e4), a4 = n3.type, s3 = n3.isSupportTopic;
          if (!Lt(a4) && !s3) {
            var r3 = "".concat(this._className, ".getGroupNotify"), i3 = this._getGroupLastRevokedTime(e4), c3 = 1e3 * xe2();
            Ye2.log("".concat(r3, " groupID:").concat(e4, " type:").concat(a4, " beginTime:").concat(i3, " endTime:").concat(c3)), this.request({ protocolName: ba, requestData: { type: Ot2({ type: a4, groupID: e4 }) ? D2.GRP_COMMUNITY : void 0, groupID: e4, beginTime: i3, endTime: c3 } }).then(function(n4) {
              var a5 = n4.data, s4 = a5.nextRevokedTime, i4 = a5.notifyList;
              Ye2.log("".concat(r3, " ok. nextRevokedTime:").concat(s4));
              var c4 = { dataList: [{ elements: { revokedInfos: [] } }] };
              lt2(i4) && i4.forEach(function(o5) {
                c4.dataList[0].elements.revokedInfos.push({ groupID: e4, sequence: o5.sequence, random: o5.random, revokerInfo: t2({}, o5.revokerInfo) });
              }), o4.onGroupMessageRevoked(c4), 0 !== s4 ? (o4._setGroupLastRevokedTime(e4, s4), o4.getGroupNotify(e4)) : o4._setGroupLastRevokedTime(e4, 1e3 * xe2());
            }).catch(function(e5) {
              Ye2.error("".concat(r3, " failed. error:"), e5);
            });
          }
        }
      } }, { key: "_getGroupLastRevokedTime", value: function(e4) {
        return this.hasLocalGroup(e4) ? this.getLocalGroupProfile(e4)._lastRevokedTime : 0;
      } }, { key: "_setGroupLastRevokedTime", value: function(e4, t3) {
        this.hasLocalGroup(e4) && (this.getLocalGroupProfile(e4)._lastRevokedTime = t3);
      } }, { key: "isGroupCountersNotice", value: function(e4) {
        return this._groupCountersHandler.isGroupCountersNotice(e4);
      } }, { key: "setGroupCounters", value: function(e4) {
        return this._groupCountersHandler.setGroupCounters(e4);
      } }, { key: "increaseGroupCounter", value: function(e4) {
        return this._groupCountersHandler.increaseGroupCounter(e4);
      } }, { key: "decreaseGroupCounter", value: function(e4) {
        return this._groupCountersHandler.decreaseGroupCounter(e4);
      } }, { key: "getGroupCounters", value: function(e4) {
        return this._groupCountersHandler.getGroupCounters(e4);
      } }, { key: "reset", value: function() {
        this.groupMap.clear(), this._unjoinedAVChatRoomList.clear(), this._receiptDetailCompleteMap.clear(), this._commonGroupHandler.reset(), this._groupSystemNoticeHandler.reset(), this._groupTipsHandler.reset(), this._groupAttributesHandler.reset(), this._groupCountersHandler.reset(), this._AVChatRoomHandler && this._AVChatRoomHandler.reset();
      } }]), a3;
    }(vn), Zr = function() {
      function e3(t3) {
        n2(this, e3), this.userID = "", this.avatar = "", this.nick = "", this.role = "", this.joinTime = "", this.lastSendMsgTime = "", this.nameCard = "", this.muteUntil = 0, this.memberCustomField = [], this._initMember(t3);
      }
      return s2(e3, [{ key: "_initMember", value: function(e4) {
        this.updateMember(e4);
      } }, { key: "updateMember", value: function(e4) {
        var t3 = [null, void 0, "", 0, NaN];
        e4.memberCustomField && kt2(this.memberCustomField, e4.memberCustomField), Mt(this, e4, ["memberCustomField", "marks"], t3);
      } }, { key: "updateRole", value: function(e4) {
        ["Owner", "Admin", "Member"].indexOf(e4) < 0 || (this.role = e4);
      } }, { key: "updateMuteUntil", value: function(e4) {
        dt2(e4) || (this.muteUntil = Math.floor((Date.now() + 1e3 * e4) / 1e3));
      } }, { key: "updateNameCard", value: function(e4) {
        dt2(e4) || (this.nameCard = e4);
      } }, { key: "updateMemberCustomField", value: function(e4) {
        e4 && kt2(this.memberCustomField, e4);
      } }]), e3;
    }(), ei = function(e3) {
      i2(a3, e3);
      var o3 = f2(a3);
      function a3(e4) {
        var t3;
        return n2(this, a3), (t3 = o3.call(this, e4))._className = "GroupMemberModule", t3.groupMemberListMap = /* @__PURE__ */ new Map(), t3.getInnerEmitterInstance().on(hr, t3._onProfileUpdated, _2(t3)), t3;
      }
      return s2(a3, [{ key: "_onProfileUpdated", value: function(e4) {
        for (var t3 = this, o4 = e4.data, n3 = function(e5) {
          var n4 = o4[e5];
          t3.groupMemberListMap.forEach(function(e6) {
            e6.has(n4.userID) && e6.get(n4.userID).updateMember({ nick: n4.nick, avatar: n4.avatar });
          });
        }, a4 = 0; a4 < o4.length; a4++)
          n3(a4);
      } }, { key: "deleteGroupMemberList", value: function(e4) {
        this.groupMemberListMap.delete(e4);
      } }, { key: "getGroupMemberList", value: function(e4) {
        var t3 = this, o4 = e4.groupID, n3 = e4.offset, a4 = void 0 === n3 ? 0 : n3, s3 = e4.count, r3 = void 0 === s3 ? 15 : s3, i3 = e4.filter, c3 = void 0 === i3 ? void 0 : i3, u3 = "".concat(this._className, ".getGroupMemberList"), l3 = this.getModule(Ko), d3 = l3.hasLocalGroup(o4);
        if (Ye2.log("".concat(u3, " groupID:").concat(o4, " offset:").concat(a4, " count:").concat(r3, " hasLocalGroup:").concat(d3)), !d3)
          return ur({ memberList: [], offset: 0 });
        if (l3.getLocalGroupProfile(o4).type === D2.GRP_AVCHATROOM) {
          if (this.canIUse(W2.AVCHATROOM_MBR_LIST))
            return this._getAVChatRoomMemberList({ groupID: o4, offset: a4, filter: c3 });
          this.isIntl() || Ye2.warn("".concat(u3, " \u4ECE v2.22.0 \u8D77\uFF0CSDK \u652F\u6301\u83B7\u53D6\u76F4\u64AD\u7FA4\u5728\u7EBF\u6210\u5458\u5217\u8868\uFF0C\u8BF7\u5347\u7EA7\u65D7\u8230\u7248\u5957\u9910\u4E14\u524D\u5F80\u5373\u65F6\u901A\u4FE1 IM \u63A7\u5236\u53F0\uFF1Ahttps://console.cloud.tencent.com/im \u5F00\u542F\u5F00\u5173\u3002"));
        }
        var p3 = new bs2(ws2.GET_GROUP_MEMBER_LIST), g3 = 0, _3 = { groupID: o4, limit: r3 > 100 ? 100 : r3 };
        Ot2({ groupID: o4 }) ? _3.next = "".concat(a4) : (_3.offset = a4, g3 = a4 + r3);
        var h3 = [];
        return this.request({ protocolName: qa, requestData: _3 }).then(function(e5) {
          var n4 = e5.data, a5 = n4.members, s4 = n4.memberNum, r4 = n4.next, i4 = void 0 === r4 ? void 0 : r4;
          if (dt2(i4) || (g3 = oo(i4) ? 0 : i4), !lt2(a5) || 0 === a5.length)
            return g3 = 0, Promise.resolve([]);
          var c4 = t3.getModule(Ko);
          return c4.hasLocalGroup(o4) && (c4.getLocalGroupProfile(o4).memberNum = s4), h3 = t3._updateLocalGroupMemberMap(o4, a5), t3.getModule(Vo).getUserProfile({ userIDList: a5.map(function(e6) {
            return e6.userID;
          }), tagList: [$e2.NICK, $e2.AVATAR] });
        }).then(function(e5) {
          var n4 = e5.data;
          if (!lt2(n4) || 0 === n4.length)
            return ur({ memberList: [], offset: g3 });
          var s4 = n4.map(function(e6) {
            return { userID: e6.userID, nick: e6.nick, avatar: e6.avatar };
          });
          return t3._updateLocalGroupMemberMap(o4, s4), h3.length < r3 && (g3 = 0), p3.setNetworkType(t3.getNetworkType()).setMessage("groupID:".concat(o4, " offset:").concat(a4, " count:").concat(r3)).end(), Ye2.log("".concat(u3, " ok.")), er({ memberList: h3, offset: g3 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            p3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(u3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "_getAVChatRoomMemberList", value: function(e4) {
        var t3 = this, o4 = e4.groupID, n3 = e4.offset, a4 = e4.filter, s3 = "".concat(this._className, "._getAVChatRoomMemberList"), r3 = new bs2(ws2.GET_AVCHATROOM_MEMBER_LIST);
        return r3.setMessage("groupID:".concat(o4, " offset:").concat(n3, " filter:").concat(a4)), this.request({ protocolName: xa, requestData: { groupID: o4, offset: n3, filter: a4 } }).then(function(e5) {
          var n4 = e5.data, a5 = n4.memberList, i3 = void 0 === a5 ? [] : a5, c3 = n4.offset, u3 = void 0 === c3 ? 0 : c3;
          r3.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(s3, " ok. member count:").concat(i3.length, ", next request timestamp:").concat(u3));
          var l3 = t3._updateLocalGroupMemberMap(o4, i3);
          return er({ memberList: l3, offset: u3 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            r3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(s3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "getGroupMemberProfile", value: function(e4) {
        var o4 = this, n3 = "".concat(this._className, ".getGroupMemberProfile"), a4 = new bs2(ws2.GET_GROUP_MEMBER_PROFILE);
        a4.setMessage(e4.userIDList.length > 5 ? "userIDList.length:".concat(e4.userIDList.length) : "userIDList:".concat(e4.userIDList)), Ye2.log("".concat(n3, " groupID:").concat(e4.groupID, " userIDList:").concat(e4.userIDList.join(","))), e4.userIDList.length > 50 && (e4.userIDList = e4.userIDList.slice(0, 50));
        var s3 = e4.groupID, r3 = e4.userIDList;
        return this._getGroupMemberProfileAdvance(t2(t2({}, e4), {}, { userIDList: r3 })).then(function(e5) {
          var t3 = e5.data.members;
          return lt2(t3) && 0 !== t3.length ? (o4._updateLocalGroupMemberMap(s3, t3), o4.getModule(Vo).getUserProfile({ userIDList: t3.map(function(e6) {
            return e6.userID;
          }), tagList: [$e2.NICK, $e2.AVATAR] })) : ur([]);
        }).then(function(e5) {
          var t3 = e5.data.map(function(e6) {
            return { userID: e6.userID, nick: e6.nick, avatar: e6.avatar };
          });
          o4._updateLocalGroupMemberMap(s3, t3);
          var n4 = r3.filter(function(e6) {
            return o4.hasLocalGroupMember(s3, e6);
          }).map(function(e6) {
            return o4.getLocalGroupMemberInfo(s3, e6);
          });
          return a4.setNetworkType(o4.getNetworkType()).end(), er({ memberList: n4 });
        });
      } }, { key: "addGroupMember", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".addGroupMember"), n3 = e4.groupID, a4 = this.getModule(Ko).getLocalGroupProfile(n3), s3 = a4.type, r3 = new bs2(ws2.ADD_GROUP_MEMBER);
        if (r3.setMessage("groupID:".concat(n3, " groupType:").concat(s3)), Lt(s3)) {
          var i3 = new rr({ code: hn.CANNOT_ADD_MEMBER_IN_AVCHATROOM });
          return r3.setError(i3, true, this.getNetworkType()).end(), lr(i3);
        }
        return e4.userIDList = e4.userIDList.map(function(e5) {
          return { userID: e5 };
        }), Ye2.log("".concat(o4, " groupID:").concat(n3)), this.request({ protocolName: Ba, requestData: e4 }).then(function(n4) {
          var s4 = n4.data.members;
          Ye2.log("".concat(o4, " ok"));
          var i4 = s4.filter(function(e5) {
            return 1 === e5.result;
          }).map(function(e5) {
            return e5.userID;
          }), c3 = s4.filter(function(e5) {
            return 0 === e5.result;
          }).map(function(e5) {
            return e5.userID;
          }), u3 = s4.filter(function(e5) {
            return 2 === e5.result;
          }).map(function(e5) {
            return e5.userID;
          }), l3 = s4.filter(function(e5) {
            return 4 === e5.result;
          }).map(function(e5) {
            return e5.userID;
          }), d3 = "groupID:".concat(e4.groupID, ", ") + "successUserIDList:".concat(i4, ", ") + "failureUserIDList:".concat(c3, ", ") + "existedUserIDList:".concat(u3, ", ") + "overLimitUserIDList:".concat(l3);
          return r3.setNetworkType(t3.getNetworkType()).setMoreMessage(d3).end(), 0 === i4.length ? er({ successUserIDList: i4, failureUserIDList: c3, existedUserIDList: u3, overLimitUserIDList: l3 }) : (a4.memberCount += i4.length, t3._updateConversationGroupProfile(a4), er({ successUserIDList: i4, failureUserIDList: c3, existedUserIDList: u3, overLimitUserIDList: l3, group: a4 }));
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            r3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "deleteGroupMember", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".deleteGroupMember"), n3 = e4.groupID, a4 = e4.userIDList, s3 = this.getModule(Ko).getLocalGroupProfile(n3);
        if (dt2(s3))
          return lr({ code: hn.CANNOT_FIND_GROUP });
        if (Lt(s3.type))
          return this.canIUse(W2.AVCHATROOM_BAN_MBR) ? this._banAVChatRoomMember(e4) : lr({ code: hn.CANNOT_USE_COMMERCIAL_ABILITY });
        var r3 = new bs2(ws2.DELETE_GROUP_MEMBER), i3 = "groupID:".concat(n3, " ").concat(a4.length > 5 ? "userIDList.length:".concat(a4.length) : "userIDList:".concat(a4));
        return r3.setMessage(i3), Ye2.log("".concat(o4, " groupID:").concat(n3, " userIDList:"), a4), this.request({ protocolName: Ka, requestData: e4 }).then(function() {
          return r3.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(o4, " ok")), s3.memberCount -= 1, t3._updateConversationGroupProfile(s3), t3.deleteLocalGroupMembers(n3, a4), er({ group: s3, userIDList: a4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            r3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "_updateConversationGroupProfile", value: function(e4) {
        this.getModule(jo).updateConversationGroupProfile([e4]);
      } }, { key: "_banAVChatRoomMember", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, "._banAVChatRoomMember"), n3 = e4.groupID, a4 = e4.userIDList, s3 = "groupID:".concat(n3, " ").concat(a4.length > 5 ? "userIDList.length:".concat(a4.length) : "userIDList:".concat(a4)), r3 = new bs2(ws2.BAN_AVCHATROOM_MEMBER);
        r3.setMessage(s3), Ye2.log("".concat(o4, " groupID:").concat(n3, " userIDList:"), a4);
        var i3 = this.getModule(Ko).getLocalGroupProfile(n3);
        return dt2(e4.duration) || 0 === e4.duration ? lr({ code: hn.BAN_DURATION_INVALID }) : this.request({ protocolName: Ha, requestData: e4 }).then(function() {
          return r3.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(o4, " ok")), t3.deleteLocalGroupMembers(n3, a4), er({ group: i3, userIDList: a4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            r3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "setGroupMemberMuteTime", value: function(e4) {
        var t3 = this, o4 = e4.groupID, n3 = e4.userID, a4 = e4.muteTime, s3 = "".concat(this._className, ".setGroupMemberMuteTime");
        if (n3 === this.getMyUserID())
          return lr(new rr({ code: hn.CANNOT_MUTE_SELF }));
        Ye2.log("".concat(s3, " groupID:").concat(o4, " userID:").concat(n3));
        var r3 = new bs2(ws2.SET_GROUP_MEMBER_MUTE_TIME);
        return r3.setMessage("groupID:".concat(o4, " userID:").concat(n3, " muteTime:").concat(a4)), this.modifyGroupMemberInfo({ groupID: o4, userID: n3, muteTime: a4 }).then(function(e5) {
          r3.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(s3, " ok"));
          var n4 = t3.getModule(Ko);
          return er({ group: n4.getLocalGroupProfile(o4), member: e5 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            r3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(s3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "setGroupMemberRole", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".setGroupMemberRole"), n3 = e4.groupID, a4 = e4.userID, s3 = e4.role, r3 = this.getModule(Ko).getLocalGroupProfile(n3);
        if (r3.selfInfo.role !== D2.GRP_MBR_ROLE_OWNER)
          return lr({ code: hn.NOT_OWNER });
        if ([D2.GRP_WORK, D2.GRP_AVCHATROOM].includes(r3.type))
          return lr({ code: hn.CANNOT_SET_MEMBER_ROLE_IN_WORK_AND_AVCHATROOM });
        var i3 = [D2.GRP_MBR_ROLE_ADMIN, D2.GRP_MBR_ROLE_MEMBER];
        if (Ot2({ groupID: n3 }) && i3.push(D2.GRP_MBR_ROLE_CUSTOM), i3.indexOf(s3) < 0)
          return lr({ code: hn.INVALID_MEMBER_ROLE });
        if (a4 === this.getMyUserID())
          return lr({ code: hn.CANNOT_SET_SELF_MEMBER_ROLE });
        var c3 = new bs2(ws2.SET_GROUP_MEMBER_ROLE);
        return c3.setMessage("groupID:".concat(n3, " userID:").concat(a4, " role:").concat(s3)), Ye2.log("".concat(o4, " groupID:").concat(n3, " userID:").concat(a4)), this.modifyGroupMemberInfo({ groupID: n3, userID: a4, role: s3 }).then(function(e5) {
          return c3.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(o4, " ok")), er({ group: r3, member: e5 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            c3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "_filterProfanity", value: function(e4, t3) {
        var o4 = this.getModule(pn2);
        if (!o4)
          return true;
        var n3 = o4.filterText(t3[e4], Q2), a4 = n3.isAllowedToSend, s3 = n3.modifiedText;
        return true === a4 && (t3[e4] = s3, true);
      } }, { key: "setGroupMemberNameCard", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".setGroupMemberNameCard");
        if (e4.nameCard && false === this._filterProfanity("nameCard", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        var n3 = e4.groupID, a4 = e4.userID, s3 = void 0 === a4 ? this.getMyUserID() : a4, r3 = e4.nameCard;
        Ye2.log("".concat(o4, " groupID:").concat(n3, " userID:").concat(s3));
        var i3 = new bs2(ws2.SET_GROUP_MEMBER_NAME_CARD);
        return i3.setMessage("groupID:".concat(n3, " userID:").concat(s3, " nameCard:").concat(r3)), this.modifyGroupMemberInfo({ groupID: n3, userID: s3, nameCard: r3 }).then(function(e5) {
          Ye2.log("".concat(o4, " ok")), i3.setNetworkType(t3.getNetworkType()).end();
          var a5 = t3.getModule(Ko).getLocalGroupProfile(n3);
          return s3 === t3.getMyUserID() && a5 && a5.setSelfNameCard(r3), er({ group: a5, member: e5 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            i3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "setGroupMemberCustomField", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".setGroupMemberCustomField"), n3 = e4.groupID, a4 = e4.userID, s3 = void 0 === a4 ? this.getMyUserID() : a4, r3 = e4.memberCustomField;
        Ye2.log("".concat(o4, " groupID:").concat(n3, " userID:").concat(s3));
        var i3 = new bs2(ws2.SET_GROUP_MEMBER_CUSTOM_FIELD);
        return i3.setMessage("groupID:".concat(n3, " userID:").concat(s3, " memberCustomField:").concat(JSON.stringify(r3))), this.modifyGroupMemberInfo({ groupID: n3, userID: s3, memberCustomField: r3 }).then(function(e5) {
          i3.setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(o4, " ok"));
          var a5 = t3.getModule(Ko).getLocalGroupProfile(n3);
          return er({ group: a5, member: e5 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            i3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "modifyGroupMemberInfo", value: function(e4) {
        var o4 = this, n3 = e4.groupID, a4 = e4.userID, s3 = void 0;
        return Gt(n3) && (n3 = $t(s3 = n3)), this.request({ protocolName: Wa, requestData: t2(t2({}, e4), {}, { groupID: n3, topicID: s3 }) }).then(function() {
          if (o4.hasLocalGroupMember(n3, a4)) {
            var t3 = o4.getLocalGroupMemberInfo(n3, a4);
            return dt2(e4.muteTime) || t3.updateMuteUntil(e4.muteTime), dt2(e4.role) || t3.updateRole(e4.role), dt2(e4.nameCard) || t3.updateNameCard(e4.nameCard), dt2(e4.memberCustomField) || t3.updateMemberCustomField(e4.memberCustomField), t3;
          }
          return o4.getGroupMemberProfile({ groupID: n3, userIDList: [a4] }).then(function(e5) {
            return m2(e5.data.memberList, 1)[0];
          });
        });
      } }, { key: "markGroupMemberList", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".markGroupMemberList"), n3 = e4.groupID, a4 = e4.markType, s3 = e4.enableMark, r3 = e4.userIDList, i3 = void 0 === r3 ? [] : r3, c3 = "groupID:".concat(n3, " markType:").concat(a4, " enableMark:").concat(s3, " userIDList count: ").concat(i3.length);
        Ye2.log("".concat(o4, " ").concat(c3));
        var u3 = 2, l3 = [];
        true === s3 && (u3 = 1);
        var d3 = v2(i3);
        i3.length > 500 && (d3 = i3.slice(0, 500), Ye2.warn("".concat(o4, " ").concat(eo(500)))), d3.forEach(function(e5) {
          l3.push({ userID: e5, markType: [a4] });
        }), d3 = null;
        var p3 = new bs2(ws2.MARK_GROUP_MEMBER_LIST);
        return p3.setMessage("".concat(c3)), this.request({ protocolName: Ya, requestData: { groupID: n3, operationType: u3, memberList: l3 } }).then(function(e5) {
          var n4 = e5.data.memberList, a5 = void 0 === n4 ? [] : n4, s4 = [], r4 = [];
          a5.length === i3.length ? s4.push.apply(s4, v2(i3)) : (a5.forEach(function(e6) {
            s4.push(e6.userID);
          }), i3.forEach(function(e6) {
            s4.includes(e6) || r4.push(e6);
          }));
          var c4 = "success count:".concat(s4.length, " fail count:").concat(r4.length);
          return p3.setNetworkType(t3.getNetworkType()).setMessage(c4).end(), Ye2.log("".concat(o4, " ok. ").concat(c4)), er({ successUserIDList: s4, failureUserIDList: r4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            p3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "_getGroupMemberProfileAdvance", value: function(e4) {
        return this.request({ protocolName: Va, requestData: t2(t2({}, e4), {}, { memberInfoFilter: e4.memberInfoFilter ? e4.memberInfoFilter : ["Role", "JoinTime", "NameCard", "ShutUpUntil"] }) });
      } }, { key: "_updateLocalGroupMemberMap", value: function(e4, t3) {
        var o4 = this;
        return lt2(t3) && 0 !== t3.length ? t3.map(function(t4) {
          return o4.hasLocalGroupMember(e4, t4.userID) ? o4.getLocalGroupMemberInfo(e4, t4.userID).updateMember(t4) : o4.setLocalGroupMember(e4, new Zr(t4)), o4.getLocalGroupMemberInfo(e4, t4.userID);
        }) : [];
      } }, { key: "deleteLocalGroupMembers", value: function(e4, t3) {
        var o4 = this.groupMemberListMap.get(e4);
        o4 && t3.forEach(function(e5) {
          o4.delete(e5);
        });
      } }, { key: "getLocalGroupMemberInfo", value: function(e4, t3) {
        return this.groupMemberListMap.has(e4) ? this.groupMemberListMap.get(e4).get(t3) : null;
      } }, { key: "setLocalGroupMember", value: function(e4, t3) {
        if (this.groupMemberListMap.has(e4))
          this.groupMemberListMap.get(e4).set(t3.userID, t3);
        else {
          var o4 = (/* @__PURE__ */ new Map()).set(t3.userID, t3);
          this.groupMemberListMap.set(e4, o4);
        }
      } }, { key: "getLocalGroupMemberList", value: function(e4) {
        return this.groupMemberListMap.get(e4);
      } }, { key: "hasLocalGroupMember", value: function(e4, t3) {
        return this.groupMemberListMap.has(e4) && this.groupMemberListMap.get(e4).has(t3);
      } }, { key: "hasLocalGroupMemberMap", value: function(e4) {
        return this.groupMemberListMap.has(e4);
      } }, { key: "reset", value: function() {
        this.groupMemberListMap.clear();
      } }]), a3;
    }(vn), ti = ["topicID", "topicName", "avatar", "introduction", "notification", "unreadCount", "muteAllMembers", "customData", "groupAtInfoList", "nextMessageSeq", "selfInfo"], oi = function(e3, t3) {
      return oo(e3) ? { lastTime: 0, lastSequence: 0, fromAccount: "", payload: null, type: "", messageForShow: "", nick: "", version: 0, cloudCustomData: "", isRevoked: false, revoker: null } : { lastTime: e3.time || 0, lastSequence: e3.sequence || 0, fromAccount: e3.from || "", payload: e3.payload || null, type: e3.type || "", messageForShow: zt(e3.type, e3.payload, t3), nick: e3.nick || "", version: e3.version || 0, cloudCustomData: e3.cloudCustomData || "", isRevoked: e3.isRevoked || false, revoker: e3.revoker || null };
    }, ni = function() {
      function e3(t3, o3) {
        n2(this, e3), this.topicID = "", this.topicName = "", this.avatar = "", this.introduction = "", this.notification = "", this.unreadCount = 0, this.muteAllMembers = false, this.customData = "", this.groupAtInfoList = [], this.nextMessageSeq = 0, this.lastMessage = oi(t3.lastMessage, o3), this.selfInfo = { muteTime: 0, readedSequence: 0, messageRemindType: "", excludedUnreadSequenceList: void 0 }, this._initTopic(t3);
      }
      return s2(e3, [{ key: "_initTopic", value: function(e4) {
        for (var t3 in e4)
          ti.indexOf(t3) < 0 || ("selfInfo" === t3 ? this.updateSelfInfo(e4[t3]) : this[t3] = "muteAllMembers" === t3 ? 1 === e4[t3] : e4[t3]);
      } }, { key: "updateUnreadCount", value: function() {
        var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
        this.unreadCount = e4;
      } }, { key: "updateNextMessageSeq", value: function(e4) {
        this.nextMessageSeq = e4;
      } }, { key: "updateLastMessage", value: function(e4) {
        this.lastMessage = oi(e4);
      } }, { key: "updateGroupAtInfoList", value: function(e4) {
        this.groupAtInfoList = JSON.parse(JSON.stringify(e4));
      } }, { key: "updateTopic", value: function(e4) {
        dt2(e4.selfInfo) || this.updateSelfInfo(e4.selfInfo), dt2(e4.muteAllMembers) || (this.muteAllMembers = 1 === e4.muteAllMembers), Mt(this, e4, ["groupID", "lastMessageTime", "selfInfo", "muteAllMembers", "lastMsg"]);
      } }, { key: "updateSelfInfo", value: function(e4) {
        return 0 !== Mt(this.selfInfo, e4, [], [""]);
      } }, { key: "reduceUnreadCount", value: function() {
        return this.unreadCount >= 1 && (this.unreadCount -= 1, true);
      } }, { key: "isLastMessageRevoked", value: function(e4) {
        return e4.sequence === this.lastMessage.lastSequence;
      } }, { key: "setLastMessageRevoked", value: function(e4) {
        this.lastMessage.isRevoked = e4;
      } }, { key: "setLastMessageRevoker", value: function(e4) {
        this.lastMessage.revoker = e4;
      } }]), e3;
    }(), ai = function(e3) {
      i2(a3, e3);
      var o3 = f2(a3);
      function a3(e4) {
        var t3;
        return n2(this, a3), (t3 = o3.call(this, e4))._className = "TopicModule", t3._topicMap = /* @__PURE__ */ new Map(), t3._getTopicTimeMap = /* @__PURE__ */ new Map(), t3.TOPIC_CACHE_TIME = 300, t3.TOPIC_LAST_ACTIVE_TIME = 3600, t3.getInnerEmitterInstance().on(_r, t3._onCloudConfigUpdated, _2(t3)), t3;
      }
      return s2(a3, [{ key: "_onCloudConfigUpdated", value: function() {
        var e4 = this.getCloudConfig("topic_cache_time"), t3 = this.getCloudConfig("topic_last_active_time");
        dt2(e4) || (this.TOPIC_CACHE_TIME = Number(e4)), dt2(t3) || (this.TOPIC_LAST_ACTIVE_TIME = Number(t3));
      } }, { key: "onTopicCreated", value: function(e4) {
        var t3 = e4.groupID;
        this.resetGetTopicTime(t3), this.emitOuterEvent(S2.TOPIC_CREATED, e4);
      } }, { key: "onTopicDeleted", value: function(e4) {
        var t3 = this, o4 = e4.groupID, n3 = e4.topicIDList;
        (void 0 === n3 ? [] : n3).forEach(function(e5) {
          t3._deleteLocalTopic(o4, e5);
        }), this.emitOuterEvent(S2.TOPIC_DELETED, e4);
      } }, { key: "onTopicMessageRemindTypeUpdated", value: function(e4) {
        var t3 = e4.groupID, o4 = e4.topicID, n3 = e4.messageRemindType, a4 = this.getLocalTopic(t3, o4);
        if (a4) {
          var s3 = a4.updateSelfInfo({ messageRemindType: n3 });
          s3 && this.emitOuterEvent(S2.TOPIC_UPDATED, { groupID: t3, topic: a4 }), Ye2.debug("".concat(this._className, ".onTopicMessageRemindTypeUpdated topicID:").concat(o4) + " messageRemindType:".concat(n3, " isTopicUpdated:").concat(s3));
        }
      } }, { key: "onTopicProfileUpdated", value: function(e4) {
        var t3 = e4.groupID, o4 = e4.topicID, n3 = this.getLocalTopic(t3, o4);
        n3 && (n3.updateTopic(e4), this.emitOuterEvent(S2.TOPIC_UPDATED, { groupID: t3, topic: n3 }));
      } }, { key: "onConversationProxy", value: function(e4) {
        var t3 = e4.topicID, o4 = e4.unreadCount, n3 = e4.groupAtInfoList, a4 = $t(t3), s3 = this.getLocalTopic(a4, t3), r3 = false;
        s3 && (dt2(o4) || s3.unreadCount === o4 || (s3.updateUnreadCount(o4), r3 = true), dt2(n3) || (s3.updateGroupAtInfoList(n3), r3 = true)), r3 && this.emitOuterEvent(S2.TOPIC_UPDATED, { groupID: a4, topic: s3 });
      } }, { key: "onMessageSent", value: function(e4) {
        var t3 = e4.groupID, o4 = e4.topicID, n3 = e4.lastMessage, a4 = this.getLocalTopic(t3, o4);
        a4 && (a4.nextMessageSeq += 1, a4.updateLastMessage(n3), this.emitOuterEvent(S2.TOPIC_UPDATED, { groupID: t3, topic: a4 }));
      } }, { key: "onMessageModified", value: function(e4) {
        var t3 = e4.to, o4 = e4.time, n3 = e4.sequence, a4 = e4.elements, s3 = e4.cloudCustomData, r3 = e4.messageVersion, i3 = $t(t3), c3 = this.getLocalTopic(i3, t3);
        if (c3) {
          var u3 = c3.lastMessage;
          Ye2.debug("".concat(this._className, ".onMessageModified topicID:").concat(t3, " lastMessage:"), JSON.stringify(u3), "options:", JSON.stringify(e4)), u3 && (null === u3.payload || u3.lastTime === o4 && u3.lastSequence === n3 && u3.version !== r3) && (u3.type = a4[0].type, u3.payload = a4[0].content, u3.messageForShow = zt(u3.type, u3.payload, this.isIntl()), u3.cloudCustomData = s3, u3.version = r3, u3.lastSequence = n3, u3.lastTime = o4, this.emitOuterEvent(S2.TOPIC_UPDATED, { groupID: i3, topic: c3 }));
        }
      } }, { key: "onMessageRevoked", value: function(e4) {
        var t3 = this;
        if (0 !== e4.length) {
          var o4 = null, n3 = null, a4 = false;
          e4.forEach(function(e5) {
            var s3 = e5.to;
            n3 = $t(s3), (o4 = t3.getLocalTopic(n3, s3)) && (o4.reduceUnreadCount() && (a4 = true), o4.isLastMessageRevoked(e5) && (o4.setLastMessageRevoked(true), o4.setLastMessageRevoker(e5.revoker), a4 = true));
          }), a4 && this.emitOuterEvent(S2.TOPIC_UPDATED, { groupID: n3, topic: o4 });
        }
      } }, { key: "isLastMessageRevoked", value: function(e4) {
        var t3 = e4.topicID, o4 = e4.sequence, n3 = $t(t3), a4 = this.getLocalTopic(n3, t3), s3 = false;
        return a4 && (s3 = a4.isLastMessageRevoked({ sequence: o4 })), s3;
      } }, { key: "getJoinedCommunityList", value: function() {
        return this.getModule(Ko).getGroupList({ isGroupWithTopicOnly: true }).then(function(e4) {
          var t3 = e4.data.groupList;
          return er({ groupList: void 0 === t3 ? [] : t3 });
        }).catch(function(e4) {
          return lr(e4);
        });
      } }, { key: "createTopicInCommunity", value: function(e4) {
        var o4 = this, n3 = "".concat(this._className, ".createTopicInCommunity"), a4 = e4.topicID;
        if (!dt2(a4) && !Gt(a4))
          return lr({ code: hn.ILLEGAL_TOPIC_ID });
        if (e4.topicName && false === this._filterProfanity("topicName", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        if (e4.introduction && false === this._filterProfanity("introduction", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        if (e4.notification && false === this._filterProfanity("notification", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        var s3 = new bs2(ws2.CREATE_TOPIC);
        return this.request({ protocolName: us2, requestData: t2({}, e4) }).then(function(a5) {
          var r3 = a5.data.topicID;
          return s3.setMessage("topicID:".concat(r3)).setNetworkType(o4.getNetworkType()).end(), Ye2.log("".concat(n3, " ok")), o4._updateTopicMap([t2(t2({}, e4), {}, { topicID: r3 })]), er({ topicID: r3 });
        }).catch(function(e5) {
          return o4.probeNetwork().then(function(t3) {
            var o5 = m2(t3, 2), n4 = o5[0], a5 = o5[1];
            s3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(n3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "deleteTopicFromCommunity", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".deleteTopicFromCommunity"), n3 = e4.groupID, a4 = e4.topicIDList, s3 = void 0 === a4 ? [] : a4, r3 = new bs2(ws2.DELETE_TOPIC);
        return r3.setMessage("groupID:".concat(n3, " topicIDList:").concat(s3)), this.request({ protocolName: ls2, requestData: { groupID: n3, topicIDList: s3 } }).then(function(e5) {
          var o5 = e5.data.resultList, a5 = [], s4 = [];
          (void 0 === o5 ? [] : o5).forEach(function(e6) {
            var t4 = e6.topicID, o6 = e6.errorCode, n4 = e6.errorInfo;
            0 === o6 ? a5.push({ topicID: t4 }) : s4.push({ topicID: t4, code: o6, message: n4 });
          });
          var i3 = "success count:".concat(a5.length, ", fail count:").concat(s4.length);
          return r3.setMoreMessage("".concat(i3)).setNetworkType(t3.getNetworkType()).end(), Ye2.log("".concat(i3)), a5.forEach(function(e6) {
            t3._deleteLocalTopic(n3, e6.topicID);
          }), er({ successTopicList: a5, failureTopicList: s4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var o5 = m2(t4, 2), n4 = o5[0], a5 = o5[1];
            r3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "updateTopicProfile", value: function(e4) {
        var o4 = this, n3 = "".concat(this._className, ".updateTopicProfile");
        if (Ye2.log("".concat(n3, " options:"), e4), e4.topicName && false === this._filterProfanity("topicName", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        if (e4.introduction && false === this._filterProfanity("introduction", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        if (e4.notification && false === this._filterProfanity("notification", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        var a4 = new bs2(ws2.UPDATE_TOPIC_PROFILE);
        return a4.setMessage("groupID:".concat(e4.groupID, " topicID:").concat(e4.topicID)), dt2(e4.muteAllMembers) || (e4.muteAllMembers = true === e4.muteAllMembers ? "On" : "Off"), this.request({ protocolName: ds2, requestData: t2({}, e4) }).then(function() {
          return a4.setNetworkType(o4.getNetworkType()).end(), Ye2.log("".concat(n3, " ok")), o4._updateTopicMap([e4]), er({ topic: o4.getLocalTopic(e4.groupID, e4.topicID) });
        }).catch(function(e5) {
          return o4.probeNetwork().then(function(t3) {
            var o5 = m2(t3, 2), n4 = o5[0], s3 = o5[1];
            a4.setError(e5, n4, s3).end();
          }), Ye2.error("".concat(n3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "getTopicList", value: function(e4) {
        var o4 = this, n3 = "".concat(this._className, ".getTopicList"), a4 = e4.groupID, s3 = e4.topicIDList, r3 = void 0 === s3 ? [] : s3, i3 = 0 === r3.length, c3 = new bs2(ws2.GET_TOPIC_LIST);
        if (c3.setMessage("groupID:".concat(a4)), this._getTopicTimeMap.has(a4)) {
          var u3 = this._getTopicTimeMap.get(a4), l3 = u3.isGetAll, d3 = u3.time;
          if ((l3 || !l3 && !i3) && Date.now() - d3 < 1e3 * this.TOPIC_CACHE_TIME) {
            var p3 = this._getLocalTopicList(a4, r3);
            if (i3 || p3.length === r3.length)
              return c3.setNetworkType(this.getNetworkType()).setMoreMessage("from cache, topic count:".concat(p3.length)).end(), Ye2.log("".concat(n3, " groupID:").concat(a4, " from cache, topic count:").concat(p3.length)), ur({ successTopicList: p3, failureTopicList: [] });
          }
        }
        return this.request({ protocolName: ps2, requestData: { groupID: a4, topicIDList: r3 } }).then(function(e5) {
          var s4 = e5.data.topicInfoList, r4 = [], u4 = [], l4 = [];
          (void 0 === s4 ? [] : s4).forEach(function(e6) {
            var o5 = e6.topic, n4 = e6.selfInfo, a5 = e6.errorCode, s5 = e6.errorInfo, i4 = o5.topicID;
            0 === a5 ? (r4.push(t2(t2({}, o5), {}, { selfInfo: n4 })), u4.push(i4)) : l4.push({ topicID: i4, code: a5, message: s5 });
          }), o4._updateTopicMap(r4), o4._handleTopicAtInfo(r4);
          var d4 = "success count:".concat(u4.length, ", fail count:").concat(l4.length);
          c3.setNetworkType(o4.getNetworkType()).setMoreMessage("".concat(d4)).end(), Ye2.log("".concat(n3, " groupID:").concat(a4, " from remote, ").concat(d4));
          var p4 = [];
          return oo(u4) || (o4._getTopicTimeMap.set(a4, { time: Date.now(), isGetAll: i3 }), p4 = o4._getLocalTopicList(a4, u4)), er({ successTopicList: p4, failureTopicList: l4 });
        }).catch(function(e5) {
          return o4.probeNetwork(e5).then(function(t3) {
            var o5 = m2(t3, 2), n4 = o5[0], a5 = o5[1];
            c3.setError(e5, n4, a5).end();
          }), Ye2.error("".concat(n3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "hasLocalTopic", value: function(e4, t3) {
        return !!this._topicMap.has(e4) && this._topicMap.get(e4).has(t3);
      } }, { key: "getLocalTopic", value: function(e4, t3) {
        var o4 = null;
        return this._topicMap.has(e4) && (o4 = this._topicMap.get(e4).get(t3)), o4;
      } }, { key: "_getLocalTopicList", value: function(e4) {
        var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], o4 = this._topicMap.get(e4), n3 = [];
        return o4 && (n3 = v2(o4.values())), 0 === t3.length ? n3 : n3.filter(function(e5) {
          return t3.includes(e5.topicID);
        });
      } }, { key: "_deleteLocalTopic", value: function(e4, t3) {
        this._topicMap.has(e4) && (this._topicMap.get(e4).delete(t3), Ye2.log("".concat(this._className, "._deleteLocalTopic groupID:").concat(e4, " topicID:").concat(t3)));
      } }, { key: "_updateTopicMap", value: function(e4) {
        var t3 = this, o4 = [];
        (e4.forEach(function(e5) {
          var n3 = e5.groupID, a4 = e5.topicID, s3 = null;
          t3._topicMap.has(n3) || t3._topicMap.set(n3, /* @__PURE__ */ new Map()), t3._topicMap.get(n3).has(a4) ? (s3 = t3._topicMap.get(n3).get(a4)).updateTopic(e5) : (t3._getTopicLastMessage(e5), s3 = new ni(e5, t3.isIntl()), t3._topicMap.get(n3).set(a4, s3));
          var r3 = t3._computeUnreadCount(s3);
          s3.updateUnreadCount(r3), o4.push({ conversationID: "".concat(D2.CONV_GROUP).concat(a4), type: D2.CONV_TOPIC, unreadCount: r3 });
        }), o4.length > 0) && this.getModule(jo).updateTopicConversation(o4);
      } }, { key: "resetGetTopicTime", value: function(e4) {
        var t3 = this;
        dt2(e4) ? v2(this._getTopicTimeMap.keys()).forEach(function(e5) {
          t3._getTopicTimeMap.set(e5, 0);
        }) : this._getTopicTimeMap.set(e4, 0);
      } }, { key: "getTopicListOnReconnected", value: function() {
        var e4 = this, t3 = v2(this._topicMap.keys()), o4 = [];
        t3.forEach(function(t4) {
          var n3 = [];
          e4._getLocalTopicList(t4).forEach(function(t5) {
            var o5 = t5.lastMessage.lastTime, a4 = void 0 === o5 ? 0 : o5;
            Date.now() - 1e3 * a4 < 1e3 * e4.TOPIC_LAST_ACTIVE_TIME && n3.push(t5.topicID);
          }), n3.length > 0 && o4.push({ groupID: t4, topicIDList: n3 });
        }), Ye2.log("".concat(this._className, ".getTopicListOnReconnected. active community count:").concat(o4.length)), this._relayGetTopicList(o4);
      } }, { key: "_relayGetTopicList", value: function(e4) {
        var t3 = this;
        if (0 !== e4.length) {
          var o4 = e4.shift(), n3 = o4.topicIDList.length > 5 ? "topicIDList.length:".concat(o4.topicIDList.length) : "topicIDList:".concat(o4.topicIDList), a4 = new bs2(ws2.RELAY_GET_TOPIC_LIST);
          a4.setMessage(n3), Ye2.log("".concat(this._className, "._relayGetTopicList. ").concat(n3)), this.getTopicList(o4).then(function() {
            a4.setNetworkType(t3.getNetworkType()).end(), t3._relayGetTopicList(e4);
          }).catch(function(o5) {
            t3.probeNetwork().then(function(e5) {
              var t4 = m2(e5, 2), n4 = t4[0], s3 = t4[1];
              a4.setError(o5, n4, s3).end();
            }), t3._relayGetTopicList(e4);
          });
        }
      } }, { key: "_handleTopicAtInfo", value: function(e4) {
        var o4 = this;
        0 !== e4.length && e4.forEach(function(e5) {
          var n3 = e5.groupID, a4 = e5.topicID, s3 = e5.groupAtInfoList, r3 = [];
          dt2(s3) || (s3.forEach(function(e6) {
            r3.push(t2(t2({}, e6), {}, { groupID: n3, topicID: a4 }));
          }), o4.getModule(jo).onNewGroupAtTips({ dataList: r3 }));
        });
      } }, { key: "_getTopicLastMessage", value: function(e4) {
        if (!dt2(e4.lastMsg)) {
          var t3 = { time: e4.lastMsg.time, sequence: e4.lastMsg.sequence, from: e4.lastMsg.from, payload: e4.lastMsg.elements[0] ? e4.lastMsg.elements[0].content : null, type: e4.lastMsg.elements[0] ? e4.lastMsg.elements[0].type : "", nick: e4.lastMsg.nick, version: e4.lastMsg.messageVersion, cloudCustomData: e4.lastMsg.cloudCustomData, isRevoked: 2 === e4.lastMsg.isPlaceMessage, revoker: oo(e4.lastMsg.revokerInfo) ? null : e4.lastMsg.revokerInfo.revoker };
          e4.lastMessage = t3;
        }
      } }, { key: "deleteTopicListInCommunity", value: function(e4) {
        var t3 = this, o4 = this._getLocalTopicList(e4), n3 = this.getModule(jo);
        o4.forEach(function(o5) {
          var a4 = o5.topicID;
          t3._deleteLocalTopic(e4, a4), t3._getTopicTimeMap.delete(e4), n3.deleteLocalConversation("".concat(D2.CONV_GROUP).concat(a4));
        });
      } }, { key: "_computeUnreadCount", value: function(e4) {
        var t3 = e4.selfInfo, o4 = t3.excludedUnreadSequenceList, n3 = t3.readedSequence, a4 = e4.nextMessageSeq - e4.selfInfo.readedSequence - 1;
        if (lt2(o4)) {
          var s3 = 0;
          o4.forEach(function(t4) {
            t4 >= n3 && t4 <= e4.nextMessageSeq - 1 && (s3 += 1);
          }), s3 >= 1 && (a4 -= s3);
        }
        return a4 < 0 ? 0 : a4;
      } }, { key: "_filterProfanity", value: function(e4, t3) {
        var o4 = this.getModule(pn2);
        if (!o4)
          return true;
        var n3 = o4.filterText(t3[e4], X2), a4 = n3.isAllowedToSend, s3 = n3.modifiedText;
        return true === a4 && (t3[e4] = s3, true);
      } }, { key: "updateLastMessage", value: function(e4, t3) {
        var o4 = $t(e4), n3 = this.getLocalTopic(o4, e4);
        if (n3) {
          var a4 = t3.sequence + 1;
          n3.updateNextMessageSeq(a4), n3.updateLastMessage(t3), this.emitOuterEvent(S2.TOPIC_UPDATED, { groupID: o4, topic: n3 });
        }
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._topicMap.clear(), this._getTopicTimeMap.clear(), this.TOPIC_CACHE_TIME = 300, this.TOPIC_LAST_ACTIVE_TIME = 3600;
      } }]), a3;
    }(vn), si = function() {
      function e3(t3) {
        n2(this, e3), this._userModule = t3, this._className = "ProfileHandler", this.TAG = "profile", this.accountProfileMap = /* @__PURE__ */ new Map(), this.expirationTime = 864e5;
      }
      return s2(e3, [{ key: "setExpirationTime", value: function(e4) {
        this.expirationTime = e4;
      } }, { key: "getUserProfile", value: function(e4) {
        var t3 = this, o3 = e4.userIDList;
        e4.fromAccount = this._userModule.getMyAccount(), o3.length > 100 && (Ye2.warn("".concat(this._className, ".getUserProfile ").concat(eo(100))), o3.length = 100);
        for (var n3, a3 = [], s3 = [], r3 = 0, i3 = o3.length; r3 < i3; r3++)
          n3 = o3[r3], this._userModule.isMyFriend(n3) && this._containsAccount(n3) ? s3.push(this._getProfileFromMap(n3)) : a3.push(n3);
        if (0 === a3.length)
          return ur(s3);
        e4.toAccount = a3;
        var c3 = e4.bFromGetMyProfile || false, u3 = [];
        e4.toAccount.forEach(function(e5) {
          u3.push({ toAccount: e5, standardSequence: 0, customSequence: 0 });
        }), e4.userItem = u3;
        var l3 = new bs2(ws2.GET_USER_PROFILE);
        return l3.setMessage(o3.length > 5 ? "userIDList.length:".concat(o3.length) : "userIDList:".concat(o3)), this._userModule.request({ protocolName: Nn2, requestData: e4 }).then(function(e5) {
          l3.setNetworkType(t3._userModule.getNetworkType()).end(), Ye2.info("".concat(t3._className, ".getUserProfile ok"));
          var o4 = t3._handleResponse(e5).concat(s3);
          return er(c3 ? o4[0] : o4);
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            l3.setError(e5, n4, a4).end();
          }), Ye2.error("".concat(t3._className, ".getUserProfile failed. error:"), e5), lr(e5);
        });
      } }, { key: "getMyProfile", value: function() {
        var e4 = this._userModule.getMyAccount();
        if (Ye2.log("".concat(this._className, ".getMyProfile myAccount:").concat(e4)), this._fillMap(), this._containsAccount(e4)) {
          var t3 = this._getProfileFromMap(e4);
          return Ye2.debug("".concat(this._className, ".getMyProfile from cache, myProfile:") + JSON.stringify(t3)), ur(t3);
        }
        return this.getUserProfile({ fromAccount: e4, userIDList: [e4], bFromGetMyProfile: true });
      } }, { key: "_handleResponse", value: function(e4) {
        for (var t3, o3, n3 = vt2(), a3 = e4.data.userProfileItem, s3 = [], r3 = 0, i3 = a3.length; r3 < i3; r3++)
          "@TLS#NOT_FOUND" !== a3[r3].to && "" !== a3[r3].to && (t3 = a3[r3].to, o3 = this._updateMap(t3, this._getLatestProfileFromResponse(t3, a3[r3].profileItem)), s3.push(o3));
        return Ye2.log("".concat(this._className, "._handleResponse cost ").concat(vt2() - n3, " ms")), s3;
      } }, { key: "_getLatestProfileFromResponse", value: function(e4, t3) {
        var o3 = {};
        if (o3.userID = e4, o3.profileCustomField = [], !oo(t3))
          for (var n3 = 0, a3 = t3.length; n3 < a3; n3++)
            if (t3[n3].tag.indexOf("Tag_Profile_Custom") > -1)
              o3.profileCustomField.push({ key: t3[n3].tag, value: t3[n3].value });
            else
              switch (t3[n3].tag) {
                case $e2.NICK:
                  o3.nick = t3[n3].value;
                  break;
                case $e2.GENDER:
                  o3.gender = t3[n3].value;
                  break;
                case $e2.BIRTHDAY:
                  o3.birthday = t3[n3].value;
                  break;
                case $e2.LOCATION:
                  o3.location = t3[n3].value;
                  break;
                case $e2.SELFSIGNATURE:
                  o3.selfSignature = t3[n3].value;
                  break;
                case $e2.ALLOWTYPE:
                  o3.allowType = t3[n3].value;
                  break;
                case $e2.LANGUAGE:
                  o3.language = t3[n3].value;
                  break;
                case $e2.AVATAR:
                  o3.avatar = t3[n3].value;
                  break;
                case $e2.MESSAGESETTINGS:
                  o3.messageSettings = t3[n3].value;
                  break;
                case $e2.ADMINFORBIDTYPE:
                  o3.adminForbidType = t3[n3].value;
                  break;
                case $e2.LEVEL:
                  o3.level = t3[n3].value;
                  break;
                case $e2.ROLE:
                  o3.role = t3[n3].value;
                  break;
                default:
                  Ye2.warn("".concat(this._className, "._handleResponse unknown tag:"), t3[n3].tag, t3[n3].value);
              }
        return o3;
      } }, { key: "updateMyProfile", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, ".updateMyProfile");
        if (e4.nick && false === this._userModule.filterProfanity("nick", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        if (e4.selfSignature && false === this._userModule.filterProfanity("selfSignature", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        var n3 = new bs2(ws2.UPDATE_MY_PROFILE);
        n3.setMessage(JSON.stringify(e4));
        var a3 = new Tr().validate(e4);
        if (!a3.valid)
          return n3.setCode(hn.UPDATE_PROFILE_INVALID_PARAM).setMoreMessage("updateMyProfile info:".concat(a3.tips)).setNetworkType(this._userModule.getNetworkType()).end(), Ye2.error("".concat(o3, " info:").concat(a3.tips)), lr({ code: hn.UPDATE_PROFILE_INVALID_PARAM });
        var s3 = [];
        for (var r3 in e4)
          Object.prototype.hasOwnProperty.call(e4, r3) && ("profileCustomField" === r3 ? e4.profileCustomField.forEach(function(e5) {
            s3.push({ tag: e5.key, value: e5.value });
          }) : s3.push({ tag: $e2[r3.toUpperCase()], value: e4[r3] }));
        if (0 === s3.length) {
          var i3 = new rr({ code: hn.UPDATE_PROFILE_NO_KEY });
          return n3.setError(i3, true, this._userModule.getNetworkType()).end(), Ye2.error("".concat(o3, " failed. error:"), i3), lr(i3);
        }
        return this._userModule.request({ protocolName: An2, requestData: { fromAccount: this._userModule.getMyAccount(), profileItem: s3 } }).then(function(a4) {
          n3.setNetworkType(t3._userModule.getNetworkType()).end(), Ye2.info("".concat(o3, " ok"));
          var s4 = t3._updateMap(t3._userModule.getMyAccount(), e4);
          return t3._userModule.emitOuterEvent(S2.PROFILE_UPDATED, [s4]), ur(s4);
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), a4 = o4[0], s4 = o4[1];
            n3.setError(e5, a4, s4).end();
          }), Ye2.error("".concat(o3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "onProfileModified", value: function(e4) {
        var t3 = e4.dataList;
        if (!oo(t3)) {
          var o3, n3, a3 = t3.length;
          Ye2.debug("".concat(this._className, ".onProfileModified count:").concat(a3, " dataList:"), e4.dataList);
          for (var s3 = [], r3 = 0; r3 < a3; r3++)
            o3 = t3[r3].userID, n3 = this._updateMap(o3, this._getLatestProfileFromResponse(o3, t3[r3].profileList)), s3.push(n3);
          s3.length > 0 && (this._userModule.emitInnerEvent(hr, s3), this._userModule.emitOuterEvent(S2.PROFILE_UPDATED, s3));
        }
      } }, { key: "_fillMap", value: function() {
        if (0 === this.accountProfileMap.size) {
          for (var e4 = this._getCachedProfiles(), t3 = Date.now(), o3 = 0, n3 = e4.length; o3 < n3; o3++)
            t3 - e4[o3].lastUpdatedTime < this.expirationTime && this.accountProfileMap.set(e4[o3].userID, e4[o3]);
          Ye2.log("".concat(this._className, "._fillMap from cache, map.size:").concat(this.accountProfileMap.size));
        }
      } }, { key: "_updateMap", value: function(e4, t3) {
        var o3, n3 = Date.now();
        return this._containsAccount(e4) ? (o3 = this._getProfileFromMap(e4), t3.profileCustomField && kt2(o3.profileCustomField, t3.profileCustomField), Mt(o3, t3, ["profileCustomField"]), o3.lastUpdatedTime = n3) : (o3 = new Tr(t3), (this._userModule.isMyFriend(e4) || e4 === this._userModule.getMyAccount()) && (o3.lastUpdatedTime = n3, this.accountProfileMap.set(e4, o3))), this._flushMap(e4 === this._userModule.getMyAccount()), o3;
      } }, { key: "_flushMap", value: function(e4) {
        var t3 = v2(this.accountProfileMap.values()), o3 = this._userModule.getStorageModule();
        Ye2.debug("".concat(this._className, "._flushMap length:").concat(t3.length, " flushAtOnce:").concat(e4)), o3.setItem(this.TAG, t3, e4);
      } }, { key: "_containsAccount", value: function(e4) {
        return this.accountProfileMap.has(e4);
      } }, { key: "_getProfileFromMap", value: function(e4) {
        return this.accountProfileMap.get(e4);
      } }, { key: "_getCachedProfiles", value: function() {
        var e4 = this._userModule.getStorageModule().getItem(this.TAG);
        return oo(e4) ? [] : e4;
      } }, { key: "onConversationsProfileUpdated", value: function(e4) {
        for (var t3, o3, n3, a3 = [], s3 = 0, r3 = e4.length; s3 < r3; s3++)
          o3 = (t3 = e4[s3]).userID, this._userModule.isMyFriend(o3) || (this._containsAccount(o3) ? (n3 = this._getProfileFromMap(o3), Mt(n3, t3) > 0 && a3.push(o3)) : a3.push(t3.userID));
        0 !== a3.length && (Ye2.info("".concat(this._className, ".onConversationsProfileUpdated toAccountList:").concat(a3)), this.getUserProfile({ userIDList: a3 }));
      } }, { key: "getNickAndAvatarByUserID", value: function(e4) {
        if (this._containsAccount(e4)) {
          var t3 = this._getProfileFromMap(e4);
          return { nick: t3.nick, avatar: t3.avatar };
        }
        return { nick: "", avatar: "" };
      } }, { key: "reset", value: function() {
        this._flushMap(true), this.accountProfileMap.clear();
      } }]), e3;
    }(), ri = s2(function e3(t3) {
      n2(this, e3), oo || (this.userID = t3.userID || "", this.timeStamp = t3.timeStamp || 0);
    }), ii = function() {
      function e3(t3) {
        n2(this, e3), this._userModule = t3, this._className = "BlacklistHandler", this._blacklistMap = /* @__PURE__ */ new Map(), this.startIndex = 0, this.maxLimited = 100, this.currentSequence = 0;
      }
      return s2(e3, [{ key: "getLocalBlacklist", value: function() {
        return v2(this._blacklistMap.keys());
      } }, { key: "getBlacklist", value: function() {
        var e4 = this, t3 = "".concat(this._className, ".getBlacklist"), o3 = { fromAccount: this._userModule.getMyAccount(), maxLimited: this.maxLimited, startIndex: 0, lastSequence: this.currentSequence }, n3 = new bs2(ws2.GET_BLACKLIST);
        return this._userModule.request({ protocolName: kn, requestData: o3 }).then(function(o4) {
          var a3 = o4.data, s3 = a3.blackListItem, r3 = a3.currentSequence, i3 = oo(s3) ? 0 : s3.length;
          n3.setNetworkType(e4._userModule.getNetworkType()).setMessage("count:".concat(i3)).end(), Ye2.info("".concat(t3, " ok")), e4.currentSequence = r3, e4._handleResponse(s3, true), e4._userModule.emitOuterEvent(S2.BLACKLIST_UPDATED, v2(e4._blacklistMap.keys()));
        }).catch(function(o4) {
          return e4._userModule.probeNetwork().then(function(e5) {
            var t4 = m2(e5, 2), a3 = t4[0], s3 = t4[1];
            n3.setError(o4, a3, s3).end();
          }), Ye2.error("".concat(t3, " failed. error:"), o4), lr(o4);
        });
      } }, { key: "addBlacklist", value: function(e4) {
        var t3 = this, o3 = new bs2(ws2.ADD_TO_BLACKLIST), n3 = "".concat(this._className, ".addBlacklist"), a3 = this._userModule.getMyAccount();
        if (1 === e4.userIDList.length && e4.userIDList[0] === a3) {
          var s3 = hn.CANNOT_ADD_SELF_TO_BLACKLIST, r3 = this._userModule.getErrorMessage(s3);
          o3.setCode(s3).setMessage(r3).setNetworkType(this._userModule.getNetworkType()).end();
          var i3 = new rr({ code: s3 });
          return Ye2.error("".concat(n3, " failed. error:"), i3), lr(i3);
        }
        return e4.userIDList.includes(a3) && (e4.userIDList = e4.userIDList.filter(function(e5) {
          return e5 !== a3;
        })), e4.fromAccount = this._userModule.getMyAccount(), e4.toAccount = e4.userIDList, this._userModule.request({ protocolName: Rn2, requestData: e4 }).then(function(a4) {
          return o3.setNetworkType(t3._userModule.getNetworkType()).setMessage(e4.userIDList.length > 5 ? "userIDList.length:".concat(e4.userIDList.length) : "userIDList:".concat(e4.userIDList)).end(), Ye2.info("".concat(n3, " ok")), t3._handleResponse(a4.resultItem, true), er(v2(t3._blacklistMap.keys()));
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), a4 = n4[0], s4 = n4[1];
            o3.setError(e5, a4, s4).end();
          }), Ye2.error("".concat(n3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "_handleResponse", value: function(e4, t3) {
        if (!oo(e4))
          for (var o3, n3, a3, s3 = 0, r3 = e4.length; s3 < r3; s3++)
            n3 = e4[s3].to, a3 = e4[s3].resultCode, (dt2(a3) || 0 === a3) && (t3 ? ((o3 = this._blacklistMap.has(n3) ? this._blacklistMap.get(n3) : new ri()).userID = n3, !oo(e4[s3].addBlackTimeStamp) && (o3.timeStamp = e4[s3].addBlackTimeStamp), this._blacklistMap.set(n3, o3)) : this._blacklistMap.has(n3) && (o3 = this._blacklistMap.get(n3), this._blacklistMap.delete(n3)));
        Ye2.log("".concat(this._className, "._handleResponse total:").concat(this._blacklistMap.size, " bAdd:").concat(t3));
      } }, { key: "deleteBlacklist", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, ".deleteBlacklist"), n3 = new bs2(ws2.REMOVE_FROM_BLACKLIST);
        return e4.fromAccount = this._userModule.getMyAccount(), e4.toAccount = e4.userIDList, this._userModule.request({ protocolName: Ln2, requestData: e4 }).then(function(a3) {
          return n3.setNetworkType(t3._userModule.getNetworkType()).setMessage(e4.userIDList.length > 5 ? "userIDList.length:".concat(e4.userIDList.length) : "userIDList:".concat(e4.userIDList)).end(), Ye2.info("".concat(o3, " ok")), t3._handleResponse(a3.data.resultItem, false), er(v2(t3._blacklistMap.keys()));
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), a3 = o4[0], s3 = o4[1];
            n3.setError(e5, a3, s3).end();
          }), Ye2.error("".concat(o3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "onAccountDeleted", value: function(e4) {
        for (var t3, o3 = [], n3 = 0, a3 = e4.length; n3 < a3; n3++)
          t3 = e4[n3], this._blacklistMap.has(t3) && (this._blacklistMap.delete(t3), o3.push(t3));
        o3.length > 0 && (Ye2.log("".concat(this._className, ".onAccountDeleted count:").concat(o3.length, " userIDList:"), o3), this._userModule.emitOuterEvent(S2.BLACKLIST_UPDATED, v2(this._blacklistMap.keys())));
      } }, { key: "onAccountAdded", value: function(e4) {
        for (var t3, o3 = [], n3 = 0, a3 = e4.length; n3 < a3; n3++)
          t3 = e4[n3], this._blacklistMap.has(t3) || (this._blacklistMap.set(t3, new ri({ userID: t3 })), o3.push(t3));
        o3.length > 0 && (Ye2.log("".concat(this._className, ".onAccountAdded count:").concat(o3.length, " userIDList:"), o3), this._userModule.emitOuterEvent(S2.BLACKLIST_UPDATED, v2(this._blacklistMap.keys())));
      } }, { key: "reset", value: function() {
        this._blacklistMap.clear(), this.startIndex = 0, this.maxLimited = 100, this.currentSequence = 0;
      } }]), e3;
    }(), ci = function(e3) {
      var t3 = String(e3).replace(/[=]+$/, ""), o3 = "";
      if (t3.length % 4 == 1)
        return Ye2.warn("decodeBase64 failed: ".concat(e3, " to be decoded is not correctly encoded.")), "";
      for (var n3, a3, s3 = 0, r3 = 0; a3 = t3.charAt(r3++); ~a3 && (n3 = s3 % 4 ? 64 * n3 + a3 : a3, s3++ % 4) ? o3 += String.fromCharCode(255 & n3 >> (-2 * s3 & 6)) : 0)
        a3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(a3);
      try {
        return decodeURIComponent(escape(o3));
      } catch (i3) {
        return Ye2.warn("decodeBase64 failed: ".concat(e3, " to be decoded is not correctly encoded.")), "";
      }
    }, ui = function() {
      function e3(t3) {
        n2(this, e3), this._userModule = t3, this._className = "UserStatusHandler", this.MAX_QUERY_USER_COUNT = 500, this.MAX_SUBSCRIBE_USER_COUNT = 100, this.MAX_UNSUBSCRIBE_USER_COUNT = 100, this._userModule.getInnerEmitterInstance().on(_r, this._onCloudConfigUpdated, this);
      }
      return s2(e3, [{ key: "_onCloudConfigUpdated", value: function() {
        var e4 = this._userModule.getCloudConfig("status_query_count"), t3 = this._userModule.getCloudConfig("status_sub_count"), o3 = this._userModule.getCloudConfig("status_unsub_count");
        Ye2.log("".concat(this._className, "._onCloudConfigUpdated statusQueryCount:").concat(e4, " statusSubscribeCount:").concat(t3) + " statusUnsubscribeCount:".concat(o3)), dt2(e4) || (this.MAX_QUERY_USER_COUNT = parseInt(e4, 10)), dt2(e4) || (this.MAX_SUBSCRIBE_USER_COUNT = parseInt(t3, 10)), dt2(e4) || (this.MAX_UNSUBSCRIBE_USER_COUNT = parseInt(o3, 10));
      } }, { key: "onUserStatusUpdated", value: function(e4) {
        var t3 = e4.dataList, o3 = this._userModule.getMyUserID(), n3 = this._userModule.getModule($o), a3 = t3.map(function(e5) {
          var t4 = e5.to, a4 = e5.statusType, s3 = e5.customStatus, r3 = ci(s3);
          return t4 === o3 && n3.setCustomStatus(r3), { userID: t4, statusType: a4, customStatus: r3 };
        });
        this._userModule.emitOuterEvent(S2.USER_STATUS_UPDATED, a3);
      } }, { key: "setSelfStatus", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, ".setSelfStatus");
        if (false === this._userModule.filterProfanity("customStatus", e4))
          return lr({ code: hn.PROFANITY_FOUND });
        var n3 = new bs2(ws2.SET_SELF_STATUS), a3 = e4.customStatus;
        return this._userModule.request({ protocolName: gs2, requestData: { customStatus: a3 } }).then(function(e5) {
          return n3.setNetworkType(t3._userModule.getNetworkType()).setMessage("customStatus:".concat(a3)).end(), Ye2.log("".concat(o3, " ok. customStatus:").concat(a3)), t3._userModule.getModule($o).setCustomStatus(a3), er({ userID: t3._userModule.getMyUserID(), statusType: 1, customStatus: a3 });
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), a4 = o4[0], s3 = o4[1];
            n3.setError(e5, a4, s3).end();
          }), Ye2.error("".concat(o3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "getUserStatus", value: function(e4) {
        var t3 = this, o3 = "".concat(this._className, ".getUserStatus"), n3 = e4.userIDList, a3 = void 0 === n3 ? [] : n3, s3 = this._userModule.getMyUserID(), r3 = v2(a3), i3 = void 0, c3 = r3.indexOf(s3);
        if (c3 > -1) {
          r3.splice(c3, 1);
          var u3 = this._userModule.getModule($o).getCustomStatus();
          i3 = { userID: s3, statusType: 1, customStatus: u3 };
        }
        if (0 === r3.length)
          return ur({ successUserList: [i3], failureUserList: [] });
        if (!this._userModule.canIUse(W2.USER_STATUS))
          return lr({ code: hn.CANNOT_USE_COMMERCIAL_ABILITY });
        r3.length > this.MAX_QUERY_USER_COUNT && (Ye2.warn("".concat(o3, " ").concat(eo(this.MAX_QUERY_USER_COUNT))), r3 = a3.slice(0, this.MAX_QUERY_USER_COUNT));
        var l3 = new bs2(ws2.GET_USER_STATUS);
        return this._userModule.request({ protocolName: _s2, requestData: { userIDList: r3 } }).then(function(e5) {
          var n4 = e5.data, s4 = n4.successUserList, r4 = void 0 === s4 ? [] : s4, c4 = n4.failureUserList, u4 = void 0 === c4 ? [] : c4, d3 = r4.map(function(e6) {
            var t4 = e6.userID, o4 = e6.statusType, n5 = e6.customStatus;
            return { userID: t4, statusType: o4, customStatus: ci(n5) };
          }), p3 = u4.map(function(e6) {
            var t4 = e6.userID, o4 = e6.invalidUserID, n5 = e6.errorCode, a4 = e6.errorInfo;
            return { userID: oo(o4) ? t4 : o4, code: n5, message: a4 };
          });
          dt2(i3) || d3.unshift(i3);
          var g3 = "userID count:".concat(a3.length, ", success count:").concat(d3.length, ", fail count:").concat(p3.length);
          return l3.setNetworkType(t3._userModule.getNetworkType()).setMessage("".concat(g3)).end(), Ye2.log("".concat(o3, " ok. ").concat(g3, ".")), er({ successUserList: d3, failureUserList: p3 });
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], s4 = o4[1];
            l3.setMessage("userID count:".concat(a3.length)).setError(e5, n4, s4).end();
          }), Ye2.error("".concat(o3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "subscribeUserStatus", value: function(e4) {
        var t3 = this;
        if (!this._userModule.canIUse(W2.USER_STATUS))
          return lr({ code: hn.CANNOT_USE_COMMERCIAL_ABILITY });
        var o3 = "".concat(this._className, ".subscribeUserStatus"), n3 = e4.userIDList, a3 = void 0 === n3 ? [] : n3, s3 = v2(a3);
        s3.length > this.MAX_SUBSCRIBE_USER_COUNT && (Ye2.warn("".concat(o3, " ").concat(eo(this.MAX_SUBSCRIBE_USER_COUNT))), s3 = a3.slice(0, this.MAX_SUBSCRIBE_USER_COUNT));
        var r3 = new bs2(ws2.SUBSCRIBE_USER_STATUS), i3 = "userID count:".concat(a3.length);
        return Ye2.log("".concat(o3, " ").concat(i3)), this._userModule.request({ protocolName: hs2, requestData: { userIDList: s3 } }).then(function(e5) {
          var n4 = e5.data.failureUserList, a4 = (void 0 === n4 ? [] : n4).map(function(e6) {
            var t4 = e6.userID, o4 = e6.invalidUserID, n5 = e6.errorCode, a5 = e6.errorInfo;
            return { userID: oo(o4) ? t4 : o4, code: n5, message: a5 };
          });
          return r3.setNetworkType(t3._userModule.getNetworkType()).setMessage("".concat(i3, " fail count:").concat(a4.length)).end(), Ye2.log("".concat(o3, " ok. fail count:").concat(a4.length, ".")), er({ failureUserList: a4 });
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            r3.setMessage("".concat(i3)).setError(e5, n4, a4).end();
          }), Ye2.error("".concat(o3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "unsubscribeUserStatus", value: function(e4) {
        var t3 = this;
        if (!this._userModule.canIUse(W2.USER_STATUS))
          return lr({ code: hn.CANNOT_USE_COMMERCIAL_ABILITY });
        var o3 = "".concat(this._className, ".unsubscribeUserStatus"), n3 = (e4 || {}).userIDList, a3 = void 0 === n3 ? [] : n3, s3 = v2(a3);
        a3.length > this.MAX_UNSUBSCRIBE_USER_COUNT && (Ye2.warn("".concat(o3, " ").concat(eo(this.MAX_UNSUBSCRIBE_USER_COUNT))), s3 = a3.slice(0, this.MAX_UNSUBSCRIBE_USER_COUNT));
        var r3 = new bs2(ws2.UNSUBSCRIBE_USER_STATUS), i3 = "userID count:".concat(a3.length);
        Ye2.log("".concat(o3, " ").concat(i3));
        var c3 = { userIDList: s3 };
        return 0 === s3.length && (c3.userIDList = void 0, c3.unsubscribeAll = 1), this._userModule.request({ protocolName: fs2, requestData: c3 }).then(function(e5) {
          var n4 = e5.data.failureUserList, a4 = (void 0 === n4 ? [] : n4).map(function(e6) {
            var t4 = e6.userID, o4 = e6.invalidUserID, n5 = e6.errorCode, a5 = e6.errorInfo;
            return { userID: oo(o4) ? t4 : o4, code: n5, message: a5 };
          });
          return r3.setNetworkType(t3._userModule.getNetworkType()).setMessage("".concat(i3, " fail count:").concat(a4.length)).end(), Ye2.log("".concat(o3, " ok. fail count:").concat(a4.length, ".")), er({ failureUserList: a4 });
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            r3.setMessage("".concat(i3)).setError(e5, n4, a4).end();
          }), Ye2.error("".concat(o3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "reset", value: function() {
        this.MAX_QUERY_USER_COUNT = 500, this.MAX_SUBSCRIBE_USER_COUNT = 100, this.MAX_UNSUBSCRIBE_USER_COUNT = 100;
      } }]), e3;
    }(), li = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        return n2(this, o3), (a3 = t3.call(this, e4))._className = "UserModule", a3._profileHandler = new si(_2(a3)), a3._blacklistHandler = new ii(_2(a3)), a3._userStatusHandler = new ui(_2(a3)), a3.getInnerEmitterInstance().on(gr, a3.onContextUpdated, _2(a3)), a3;
      }
      return s2(o3, [{ key: "onContextUpdated", value: function(e4) {
        this._profileHandler.getMyProfile(), this._blacklistHandler.getBlacklist();
      } }, { key: "onProfileModified", value: function(e4) {
        this._profileHandler.onProfileModified(e4);
      } }, { key: "onRelationChainModified", value: function(e4) {
        var t4 = e4.dataList;
        if (!oo(t4)) {
          var o4 = [];
          t4.forEach(function(e5) {
            e5.blackListDelAccount && o4.push.apply(o4, v2(e5.blackListDelAccount));
          }), o4.length > 0 && this._blacklistHandler.onAccountDeleted(o4);
          var n3 = [];
          t4.forEach(function(e5) {
            e5.blackListAddAccount && n3.push.apply(n3, v2(e5.blackListAddAccount));
          }), n3.length > 0 && this._blacklistHandler.onAccountAdded(n3);
        }
      } }, { key: "onConversationsProfileUpdated", value: function(e4) {
        this._profileHandler.onConversationsProfileUpdated(e4);
      } }, { key: "getMyAccount", value: function() {
        return this.getMyUserID();
      } }, { key: "getMyProfile", value: function() {
        return this._profileHandler.getMyProfile();
      } }, { key: "getStorageModule", value: function() {
        return this.getModule(zo);
      } }, { key: "filterProfanity", value: function(e4, t4) {
        var o4 = this.getModule(pn2);
        if (!o4)
          return true;
        var n3 = o4.filterText(t4[e4], J2), a3 = n3.isAllowedToSend, s3 = n3.modifiedText;
        return true === a3 && (t4[e4] = s3, true);
      } }, { key: "isMyFriend", value: function(e4) {
        var t4 = this.getModule(Ho);
        return !!t4 && t4.isMyFriend(e4);
      } }, { key: "getUserProfile", value: function(e4) {
        return this._profileHandler.getUserProfile(e4);
      } }, { key: "updateMyProfile", value: function(e4) {
        return this._profileHandler.updateMyProfile(e4);
      } }, { key: "getNickAndAvatarByUserID", value: function(e4) {
        return this._profileHandler.getNickAndAvatarByUserID(e4);
      } }, { key: "getLocalBlacklist", value: function() {
        var e4 = this._blacklistHandler.getLocalBlacklist();
        return ur(e4);
      } }, { key: "addBlacklist", value: function(e4) {
        return this._blacklistHandler.addBlacklist(e4);
      } }, { key: "deleteBlacklist", value: function(e4) {
        return this._blacklistHandler.deleteBlacklist(e4);
      } }, { key: "onUserStatusUpdated", value: function(e4) {
        this._userStatusHandler.onUserStatusUpdated(e4);
      } }, { key: "setSelfStatus", value: function(e4) {
        return this._userStatusHandler.setSelfStatus(e4);
      } }, { key: "getUserStatus", value: function(e4) {
        return this._userStatusHandler.getUserStatus(e4);
      } }, { key: "subscribeUserStatus", value: function(e4) {
        return this._userStatusHandler.subscribeUserStatus(e4);
      } }, { key: "unsubscribeUserStatus", value: function(e4) {
        return this._userStatusHandler.unsubscribeUserStatus(e4);
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._profileHandler.reset(), this._blacklistHandler.reset(), this._userStatusHandler.reset();
      } }]), o3;
    }(vn), di = function() {
      function e3(t3, o3) {
        n2(this, e3), this._moduleManager = t3, this._isLoggedIn = false, this._SDKAppID = o3.SDKAppID, this._userID = o3.userID || "", this._userSig = o3.userSig || "", this._version = "2.26.1", this._a2Key = "", this._tinyID = "", this._customStatus = "", this._contentType = "json", this._unlimitedAVChatRoom = o3.unlimitedAVChatRoom, this._scene = o3.scene || "", this._oversea = o3.oversea, this._instanceID = o3.instanceID, this._statusInstanceID = 0, this._isDevMode = o3.devMode, this._proxyServer = o3.proxyServer;
      }
      return s2(e3, [{ key: "isLoggedIn", value: function() {
        return this._isLoggedIn;
      } }, { key: "isOversea", value: function() {
        return this._oversea;
      } }, { key: "isPrivateNetWork", value: function() {
        return this._proxyServer;
      } }, { key: "isDevMode", value: function() {
        return this._isDevMode;
      } }, { key: "isSingaporeSite", value: function() {
        return this._SDKAppID >= 2e7 && this._SDKAppID < 3e7 || this._SDKAppID >= 172e7 && this._SDKAppID < 173e7;
      } }, { key: "isKoreaSite", value: function() {
        return this._SDKAppID >= 3e7 && this._SDKAppID < 4e7 || this._SDKAppID >= 173e7 && this._SDKAppID < 174e7;
      } }, { key: "isGermanySite", value: function() {
        return this._SDKAppID >= 4e7 && this._SDKAppID < 5e7 || this._SDKAppID >= 174e7 && this._SDKAppID < 175e7;
      } }, { key: "isIndiaSite", value: function() {
        return this._SDKAppID >= 5e7 && this._SDKAppID < 6e7 || this._SDKAppID >= 175e7 && this._SDKAppID < 176e7;
      } }, { key: "isJapanSite", value: function() {
        return this._SDKAppID >= 6e7 && this._SDKAppID < 7e7 || this._SDKAppID >= 176e7 && this._SDKAppID < 177e7;
      } }, { key: "isUSASite", value: function() {
        return this._SDKAppID >= 7e7 && this._SDKAppID < 8e7 || this._SDKAppID >= 177e7 && this._SDKAppID < 178e7;
      } }, { key: "isIntl", value: function() {
        return Qt(this._SDKAppID);
      } }, { key: "isUnlimitedAVChatRoom", value: function() {
        return this._unlimitedAVChatRoom;
      } }, { key: "setUserID", value: function(e4) {
        this._userID = e4;
      } }, { key: "getUserID", value: function() {
        return this._userID;
      } }, { key: "setUserSig", value: function(e4) {
        this._userSig = e4;
      } }, { key: "getUserSig", value: function() {
        return this._userSig;
      } }, { key: "getSDKAppID", value: function() {
        return this._SDKAppID;
      } }, { key: "setTinyID", value: function(e4) {
        this._tinyID = e4, this._isLoggedIn = true;
      } }, { key: "getTinyID", value: function() {
        return this._tinyID;
      } }, { key: "setCustomStatus", value: function(e4) {
        this._customStatus = e4;
      } }, { key: "getCustomStatus", value: function() {
        return this._customStatus;
      } }, { key: "getScene", value: function() {
        return Ge2 ? window.tencent_cloud_im_csig_flutter_for_web_25F_cy : this._isTUIKit() ? "tuikit" : this._scene;
      } }, { key: "getInstanceID", value: function() {
        return this._instanceID;
      } }, { key: "getStatusInstanceID", value: function() {
        return this._statusInstanceID;
      } }, { key: "setStatusInstanceID", value: function(e4) {
        this._statusInstanceID = e4;
      } }, { key: "getVersion", value: function() {
        return this._version;
      } }, { key: "getA2Key", value: function() {
        return this._a2Key;
      } }, { key: "setA2Key", value: function(e4) {
        this._a2Key = e4;
      } }, { key: "getContentType", value: function() {
        return this._contentType;
      } }, { key: "getProxyServer", value: function() {
        return this._proxyServer;
      } }, { key: "_isTUIKit", value: function() {
        var e4 = false, t3 = false, o3 = false, n3 = false, a3 = [];
        le2 && (a3 = Object.keys(pe2)), de2 && (a3 = ue2 ? Object.keys(index$1) : Object.keys(window));
        for (var s3 = 0, r3 = a3.length; s3 < r3; s3++)
          if (a3[s3].toLowerCase().includes("uikit")) {
            e4 = true;
            break;
          }
        if (a3 = null, le2 && !gt2(pe2.createGamePortal) && !dt2(getApp())) {
          var i3 = getApp().globalData;
          ut2(i3) && true === i3.isTUIKit && (t3 = true);
        }
        true === this._moduleManager.getModule(zo).getStorageSync("TIM_".concat(this._SDKAppID, "_isTUIKit")) && (o3 = true);
        var c3 = null;
        if (ne2 && !se2 && "undefined" == typeof index$1 && __wxConfig && (c3 = __wxConfig.pages), ae2 && "undefined" == typeof index$1 && __qqConfig && (c3 = __qqConfig.pages), lt2(c3) && c3.length > 0) {
          for (var u3 = 0, l3 = c3.length; u3 < l3; u3++)
            if (c3[u3].toLowerCase().includes("tui")) {
              n3 = true;
              break;
            }
          c3 = null;
        }
        return e4 || t3 || o3 || n3;
      } }, { key: "reset", value: function() {
        this._isLoggedIn = false, this._userSig = "", this._a2Key = "", this._tinyID = "", this._customStatus = "", this._statusInstanceID = 0;
      } }]), e3;
    }(), pi = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        return n2(this, o3), (a3 = t3.call(this, e4))._className = "SignModule", a3._helloInterval = 120, a3._lastLoginTs = 0, a3._lastWsHelloTs = 0, a3._isWebUniapp = 0, fr.mixin(_2(a3)), a3;
      }
      return s2(o3, [{ key: "onCheckTimer", value: function(e4) {
        this.isLoggedIn() && e4 % this._helloInterval == 0 && this._hello();
      } }, { key: "login", value: function(e4) {
        if (this.isLoggedIn()) {
          var t4 = this.getMyUserID(), o4 = this.isIntl() ? "You have already logged in to account ".concat(t4, ". If you want to switch accounts, please call the logout interface, and then call the login interface") : "\u60A8\u5DF2\u7ECF\u767B\u5F55\u5E10\u53F7 ".concat(t4, " \uFF01\u5982\u9700\u5207\u6362\u5E10\u53F7\u767B\u5F55\uFF0C\u8BF7\u5148\u8C03\u7528 logout \u63A5\u53E3\u767B\u51FA\uFF0C\u518D\u8C03\u7528 login \u63A5\u53E3\u767B\u5F55\u3002");
          return Ye2.warn(o4), ur({ actionStatus: "OK", errorCode: 0, errorInfo: o4, repeatLogin: true });
        }
        if (Date.now() - this._lastLoginTs <= 15e3)
          return Ye2.warn(this.isIntl() ? "You are trying to login in to account ".concat(e4.userID, ", please do not login in again") : "\u60A8\u6B63\u5728\u5C1D\u8BD5\u767B\u5F55\u5E10\u53F7 ".concat(e4.userID, "\uFF01\u8BF7\u52FF\u91CD\u590D\u767B\u5F55\u3002")), lr({ code: hn.REPEAT_LOGIN });
        Ye2.log("".concat(this._className, ".login userID:").concat(e4.userID));
        var n3 = this._checkLoginInfo(e4);
        if (0 !== n3.code)
          return lr(n3);
        var a3 = this.getModule($o), s3 = e4.userID, r3 = e4.userSig;
        return a3.setUserID(s3), a3.setUserSig(r3), this.getModule(on).updateProtocolConfig(), this._login();
      } }, { key: "_login", value: function() {
        var e4 = this, t4 = this.getModule($o), o4 = t4.getScene(), n3 = 0, a3 = new bs2(ws2.LOGIN);
        a3.setMessage("".concat(o4)).setMoreMessage("identifier:".concat(this.getMyUserID())), ue2 ? "tuikit" === o4 ? a3.setUIPlatform(4) : a3.setUIPlatform(3) : le2 ? "tuikit" === o4 ? a3.setUIPlatform(12) : a3.setUIPlatform(11) : de2 && (Ge2 ? "flutter_web_uikit" === o4 ? a3.setUIPlatform(21) : a3.setUIPlatform(20) : this._isReactUIKit() ? Oe2 ? a3.setUIPlatform(25) : a3.setUIPlatform(24) : Oe2 ? "tuikit" === o4 ? a3.setUIPlatform(17) : a3.setUIPlatform(16) : "tuikit" === o4 ? a3.setUIPlatform(14) : a3.setUIPlatform(13));
        var s3 = this.getModule(dn);
        if (s3.canIUseOfflinePush()) {
          this._isWebUniapp = s3.getUniAppPlatform();
          var r3 = this._getStatusInstanceID();
          t4.setStatusInstanceID(r3), this.getModule(on).updateProtocolConfig(), n3 = s3.getDeviceBrand();
        }
        return this._lastLoginTs = Date.now(), this.request({ protocolName: Mn2, requestData: { deviceBrand: n3, isWebUniapp: this._isWebUniapp } }).then(function(n4) {
          e4._lastLoginTs = 0;
          var s4 = Date.now(), r4 = null, i3 = n4.data, c3 = i3.a2Key, u3 = i3.tinyID, l3 = i3.helloInterval, d3 = i3.instanceID, p3 = i3.timeStamp, g3 = i3.customStatus, _3 = void 0 === g3 ? "" : g3;
          Ye2.log("".concat(e4._className, ".login ok. scene:").concat(o4, " helloInterval:").concat(l3, " instanceID:").concat(d3, " timeStamp:").concat(p3));
          var h3 = 1e3 * p3, f3 = s4 - a3.getStartTs(), m3 = h3 + parseInt(f3 / 2) - s4, v3 = a3.getStartTs() + m3;
          if (a3.start(v3), function(e5, t5) {
            qe2 = t5;
            var o5 = new Date();
            o5.setTime(e5), Ye2.info("baseTime from server:".concat(o5, " offset:").concat(qe2));
          }(h3, m3), !u3)
            throw r4 = new rr({ code: hn.NO_TINYID }), a3.setError(r4, true, e4.getNetworkType()).end(), r4;
          if (!c3)
            throw r4 = new rr({ code: hn.NO_A2KEY }), a3.setError(r4, true, e4.getNetworkType()).end(), r4;
          var M3 = ci(_3);
          a3.setNetworkType(e4.getNetworkType()).setMoreMessage("helloInterval:".concat(l3, " instanceID:").concat(d3, " offset:").concat(m3, " customStatus:").concat(M3)).end(), t4.setA2Key(c3), t4.setTinyID(u3), t4.setStatusInstanceID(d3), t4.setCustomStatus(M3), e4.getModule(on).updateProtocolConfig(), e4.emitInnerEvent(gr), e4._helloInterval = l3, e4.triggerReady();
          var y3 = e4.getModule(dn);
          return y3.canIUseOfflinePush() && (index$1.setStorageSync("timUniAppInstanceID", d3), y3.init()), e4._fetchCloudControlConfig(), e4.getModule(pn2).init(), n4;
        }).catch(function(t5) {
          return e4.probeNetwork().then(function(e5) {
            var o5 = m2(e5, 2), n4 = o5[0], s4 = o5[1];
            a3.setError(t5, n4, s4).end(true);
          }), e4._moduleManager.setNotReadyReason(hn.LOGIN_FAILED), Ye2.error("".concat(e4._className, ".login failed. error:"), t5), e4._lastLoginTs = 0, e4._moduleManager.onLoginFailed(), lr(t5);
        });
      } }, { key: "logout", value: function() {
        var e4 = this, t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
        if (!this.isLoggedIn())
          return lr({ code: hn.USER_NOT_LOGGED_IN });
        var o4 = new bs2(ws2.LOGOUT);
        return o4.setNetworkType(this.getNetworkType()).setMessage("identifier:".concat(this.getMyUserID())).end(true), Ye2.info("".concat(this._className, ".logout type:").concat(t4)), 0 === t4 && this._moduleManager.setNotReadyReason(hn.LOGGED_OUT), this.request({ protocolName: yn2, requestData: { type: t4 } }).then(function() {
          return e4.resetReady(), ur({});
        }).catch(function(t5) {
          return Ye2.error("".concat(e4._className, "._logout error:"), t5), e4.resetReady(), ur({});
        });
      } }, { key: "_fetchCloudControlConfig", value: function() {
        this.getModule(sn).fetchConfig();
      } }, { key: "_getStatusInstanceID", value: function() {
        return index$1.getStorageSync("timUniAppInstanceID");
      } }, { key: "_hello", value: function() {
        var e4 = this;
        this._lastWsHelloTs = Date.now(), this.request({ protocolName: In, requestData: { isWebUniapp: this._isWebUniapp } }).catch(function(t4) {
          Ye2.warn("".concat(e4._className, "._hello error:"), t4);
        });
      } }, { key: "getLastWsHelloTs", value: function() {
        return this._lastWsHelloTs;
      } }, { key: "_checkLoginInfo", value: function(e4) {
        var t4 = 0;
        return oo(this.getModule($o).getSDKAppID()) ? t4 = hn.NO_SDKAPPID : oo(e4.userID) ? t4 = hn.NO_IDENTIFIER : oo(e4.userSig) && (t4 = hn.NO_USERSIG), { code: t4 };
      } }, { key: "_isReactUIKit", value: function() {
        return de2 && void 0 !== window.tencent_cloud_im_csig_react_uikit_23F_xa;
      } }, { key: "onMultipleAccountKickedOut", value: function(e4) {
        var t4 = this;
        new bs2(ws2.KICKED_OUT).setNetworkType(this.getNetworkType()).setMessage("type:".concat(D2.KICKED_OUT_MULT_ACCOUNT, " newInstanceInfo:").concat(JSON.stringify(e4))).end(true), Ye2.warn("".concat(this._className, ".onMultipleAccountKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e4), this.logout(1).then(function() {
          t4.emitOuterEvent(S2.KICKED_OUT, { type: D2.KICKED_OUT_MULT_ACCOUNT }), t4._moduleManager.setNotReadyReason(hn.KICKED_OUT_MULT_ACCOUNT), t4._moduleManager.reset();
        });
      } }, { key: "onMultipleDeviceKickedOut", value: function(e4) {
        var t4 = this;
        new bs2(ws2.KICKED_OUT).setNetworkType(this.getNetworkType()).setMessage("type:".concat(D2.KICKED_OUT_MULT_DEVICE, " newInstanceInfo:").concat(JSON.stringify(e4))).end(true), Ye2.warn("".concat(this._className, ".onMultipleDeviceKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e4), this.logout(1).then(function() {
          t4.emitOuterEvent(S2.KICKED_OUT, { type: D2.KICKED_OUT_MULT_DEVICE }), t4._moduleManager.setNotReadyReason(hn.KICKED_OUT_MULT_DEVICE), t4._moduleManager.reset();
        });
      } }, { key: "onUserSigExpired", value: function() {
        new bs2(ws2.KICKED_OUT).setNetworkType(this.getNetworkType()).setMessage(D2.KICKED_OUT_USERSIG_EXPIRED).end(true), Ye2.warn("".concat(this._className, ".onUserSigExpired: userSig \u7B7E\u540D\u8FC7\u671F\u88AB\u8E22\u4E0B\u7EBF")), 0 !== this.getModule($o).getStatusInstanceID() && (this.emitOuterEvent(S2.KICKED_OUT, { type: D2.KICKED_OUT_USERSIG_EXPIRED }), this._moduleManager.setNotReadyReason(hn.KICKED_OUT_USERSIG_EXPIRED), this._moduleManager.reset());
      } }, { key: "onRestApiKickedOut", value: function(e4) {
        (new bs2(ws2.KICKED_OUT).setNetworkType(this.getNetworkType()).setMessage("type:".concat(D2.KICKED_OUT_REST_API, " newInstanceInfo:").concat(JSON.stringify(e4))).end(true), Ye2.warn("".concat(this._className, ".onRestApiKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e4), 0 !== this.getModule($o).getStatusInstanceID()) && (this.emitOuterEvent(S2.KICKED_OUT, { type: D2.KICKED_OUT_REST_API }), this._moduleManager.setNotReadyReason(hn.KICKED_OUT_REST_API), this._moduleManager.reset(), this.getModule(nn).onRestApiKickedOut());
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this.resetReady(), this._helloInterval = 120, this._lastLoginTs = 0, this._lastWsHelloTs = 0, this._isWebUniapp = 0;
      } }]), o3;
    }(vn);
    function gi() {
      return null;
    }
    var _i = function() {
      function e3(t3) {
        n2(this, e3), this._moduleManager = t3, this._className = "StorageModule", this._storageQueue = /* @__PURE__ */ new Map(), this._errorTolerantHandle();
      }
      return s2(e3, [{ key: "_errorTolerantHandle", value: function() {
        le2 || !dt2(window) && this._canIUseCookies() || (this.getItem = gi, this.setItem = gi, this.removeItem = gi, this.clear = gi);
      } }, { key: "onCheckTimer", value: function(e4) {
        if (e4 % 20 == 0) {
          if (0 === this._storageQueue.size)
            return;
          this._doFlush();
        }
      } }, { key: "_doFlush", value: function() {
        try {
          var e4, t3 = E2(this._storageQueue);
          try {
            for (t3.s(); !(e4 = t3.n()).done; ) {
              var o3 = m2(e4.value, 2), n3 = o3[0], a3 = o3[1];
              this._setStorageSync(this._getKey(n3), a3);
            }
          } catch (s3) {
            t3.e(s3);
          } finally {
            t3.f();
          }
          this._storageQueue.clear();
        } catch (r3) {
          Ye2.warn("".concat(this._className, "._doFlush error:"), r3);
        }
      } }, { key: "_getPrefix", value: function() {
        var e4 = this._moduleManager.getModule($o);
        return "TIM_".concat(e4.getSDKAppID(), "_").concat(e4.getUserID(), "_");
      } }, { key: "_getKey", value: function(e4) {
        return "".concat(this._getPrefix()).concat(e4);
      } }, { key: "getItem", value: function(e4) {
        var t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
        try {
          var o3 = t3 ? this._getKey(e4) : e4;
          return this.getStorageSync(o3);
        } catch (n3) {
          return Ye2.warn("".concat(this._className, ".getItem error:"), n3), {};
        }
      } }, { key: "setItem", value: function(e4, t3) {
        var o3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], n3 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];
        if (o3) {
          var a3 = n3 ? this._getKey(e4) : e4;
          this._setStorageSync(a3, t3);
        } else
          this._storageQueue.set(e4, t3);
      } }, { key: "clear", value: function() {
        try {
          le2 ? pe2.clearStorageSync() : this._canIUseCookies() && localStorage.clear();
        } catch (e4) {
          Ye2.warn("".concat(this._className, ".clear error:"), e4);
        }
      } }, { key: "removeItem", value: function(e4) {
        var t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
        try {
          var o3 = t3 ? this._getKey(e4) : e4;
          this._removeStorageSync(o3);
        } catch (n3) {
          Ye2.warn("".concat(this._className, ".removeItem error:"), n3);
        }
      } }, { key: "getSize", value: function(e4) {
        var t3 = this, o3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "b";
        try {
          var n3 = { size: 0, limitSize: 5242880, unit: o3 };
          if (Object.defineProperty(n3, "leftSize", { enumerable: true, get: function() {
            return n3.limitSize - n3.size;
          } }), le2 && (n3.limitSize = 1024 * pe2.getStorageInfoSync().limitSize), e4)
            n3.size = JSON.stringify(this.getItem(e4)).length + this._getKey(e4).length;
          else if (le2) {
            var a3 = pe2.getStorageInfoSync(), s3 = a3.keys;
            s3.forEach(function(e5) {
              n3.size += JSON.stringify(t3.getStorageSync(e5)).length + t3._getKey(e5).length;
            });
          } else if (this._canIUseCookies())
            for (var r3 in localStorage)
              localStorage.hasOwnProperty(r3) && (n3.size += localStorage.getItem(r3).length + r3.length);
          return this._convertUnit(n3);
        } catch (i3) {
          Ye2.warn("".concat(this._className, " error:"), i3);
        }
      } }, { key: "_convertUnit", value: function(e4) {
        var t3 = {}, o3 = e4.unit;
        for (var n3 in t3.unit = o3, e4)
          "number" == typeof e4[n3] && ("kb" === o3.toLowerCase() ? t3[n3] = Math.round(e4[n3] / 1024) : "mb" === o3.toLowerCase() ? t3[n3] = Math.round(e4[n3] / 1024 / 1024) : t3[n3] = e4[n3]);
        return t3;
      } }, { key: "_setStorageSync", value: function(e4, t3) {
        le2 ? ie2 ? my.setStorageSync({ key: e4, data: t3 }) : pe2.setStorageSync(e4, t3) : this._canIUseCookies() && localStorage.setItem(e4, JSON.stringify(t3));
      } }, { key: "getStorageSync", value: function(e4) {
        return le2 ? ie2 ? my.getStorageSync({ key: e4 }).data : pe2.getStorageSync(e4) : this._canIUseCookies() ? JSON.parse(localStorage.getItem(e4)) : {};
      } }, { key: "_removeStorageSync", value: function(e4) {
        le2 ? ie2 ? my.removeStorageSync({ key: e4 }) : pe2.removeStorageSync(e4) : this._canIUseCookies() && localStorage.removeItem(e4);
      } }, { key: "_canIUseCookies", value: function() {
        return navigator && navigator.cookieEnabled && localStorage;
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._doFlush();
      } }]), e3;
    }(), hi = function() {
      function e3(t3) {
        n2(this, e3), this._className = "SSOLogBody", this._report = [];
      }
      return s2(e3, [{ key: "pushIn", value: function(e4) {
        Ye2.debug("".concat(this._className, ".pushIn"), this._report.length, e4), this._report.push(e4);
      } }, { key: "backfill", value: function(e4) {
        var t3;
        lt2(e4) && 0 !== e4.length && (Ye2.debug("".concat(this._className, ".backfill"), this._report.length, e4.length), (t3 = this._report).unshift.apply(t3, v2(e4)));
      } }, { key: "getLogsNumInMemory", value: function() {
        return this._report.length;
      } }, { key: "isEmpty", value: function() {
        return 0 === this._report.length;
      } }, { key: "_reset", value: function() {
        this._report.length = 0, this._report = [];
      } }, { key: "getLogsInMemory", value: function() {
        var e4 = this._report.slice();
        return this._reset(), e4;
      } }]), e3;
    }(), fi = function(e3) {
      var t3 = e3.getModule($o);
      return { SDKType: 10, SDKAppID: t3.getSDKAppID(), SDKVersion: t3.getVersion(), tinyID: Number(t3.getTinyID()), userID: t3.getUserID(), platform: e3.getPlatform(), instanceID: t3.getInstanceID(), traceID: xe2() };
    }, mi = function(e3) {
      i2(a3, e3);
      var o3 = f2(a3);
      function a3(e4) {
        var t3;
        n2(this, a3), (t3 = o3.call(this, e4))._className = "EventStatModule", t3.TAG = "im-ssolog-event", t3._reportBody = new hi(), t3.MIN_THRESHOLD = 20, t3.MAX_THRESHOLD = 100, t3.WAITING_TIME = 6e4, t3.REPORT_LEVEL = [4, 5, 6], t3.REPORT_SDKAPPID_BLACKLIST = [], t3.REPORT_TINYID_WHITELIST = [], t3._lastReportTime = Date.now();
        var s3 = t3.getInnerEmitterInstance();
        return s3.on(gr, t3._onLoginSuccess, _2(t3)), s3.on(_r, t3._onCloudConfigUpdated, _2(t3)), t3;
      }
      return s2(a3, [{ key: "reportAtOnce", value: function() {
        Ye2.debug("".concat(this._className, ".reportAtOnce")), this._report();
      } }, { key: "_onLoginSuccess", value: function() {
        var e4 = this, t3 = this.getModule(zo), o4 = t3.getItem(this.TAG, false);
        !oo(o4) && gt2(o4.forEach) && (Ye2.log("".concat(this._className, "._onLoginSuccess get ssolog in storage, count:").concat(o4.length)), o4.forEach(function(t4) {
          e4._reportBody.pushIn(t4);
        }), t3.removeItem(this.TAG, false));
      } }, { key: "_onCloudConfigUpdated", value: function() {
        var e4 = this.getCloudConfig("evt_rpt_threshold"), t3 = this.getCloudConfig("evt_rpt_waiting"), o4 = this.getCloudConfig("evt_rpt_level"), n3 = this.getCloudConfig("evt_rpt_sdkappid_bl"), a4 = this.getCloudConfig("evt_rpt_tinyid_wl");
        dt2(e4) || (this.MIN_THRESHOLD = Number(e4)), dt2(t3) || (this.WAITING_TIME = Number(t3)), dt2(o4) || (this.REPORT_LEVEL = o4.split(",").map(function(e5) {
          return Number(e5);
        })), dt2(n3) || (this.REPORT_SDKAPPID_BLACKLIST = n3.split(",").map(function(e5) {
          return Number(e5);
        })), dt2(a4) || (this.REPORT_TINYID_WHITELIST = a4.split(","));
      } }, { key: "pushIn", value: function(e4) {
        e4 instanceof bs2 && (e4.updateTimeStamp(), this._reportBody.pushIn(e4), this._reportBody.getLogsNumInMemory() >= this.MIN_THRESHOLD && this._report());
      } }, { key: "onCheckTimer", value: function() {
        Date.now() < this._lastReportTime + this.WAITING_TIME || this._reportBody.isEmpty() || this._report();
      } }, { key: "_filterLogs", value: function(e4) {
        var t3 = this, o4 = this.getModule($o), n3 = o4.getSDKAppID(), a4 = o4.getTinyID();
        return Yt(this.REPORT_SDKAPPID_BLACKLIST, n3) && !jt(this.REPORT_TINYID_WHITELIST, a4) ? [] : e4.filter(function(e5) {
          return t3.REPORT_LEVEL.includes(e5.level);
        });
      } }, { key: "_report", value: function() {
        var e4 = this;
        if (!this._reportBody.isEmpty()) {
          var o4 = this._reportBody.getLogsInMemory(), n3 = this._filterLogs(o4);
          if (0 !== n3.length) {
            var a4 = { header: fi(this), event: n3 };
            this.request({ protocolName: Ja, requestData: t2({}, a4) }).then(function() {
              e4._lastReportTime = Date.now();
            }).catch(function(t3) {
              Ye2.warn("".concat(e4._className, ".report failed. networkType:").concat(e4.getNetworkType(), " error:"), t3), e4._reportBody.backfill(o4), e4._reportBody.getLogsNumInMemory() > e4.MAX_THRESHOLD && e4._flushAtOnce();
            });
          } else
            this._lastReportTime = Date.now();
        }
      } }, { key: "_flushAtOnce", value: function() {
        var e4 = this.getModule(zo), t3 = e4.getItem(this.TAG, false), o4 = this._reportBody.getLogsInMemory();
        if (oo(t3))
          Ye2.log("".concat(this._className, "._flushAtOnce count:").concat(o4.length)), e4.setItem(this.TAG, o4, true, false);
        else {
          var n3 = o4.concat(t3);
          n3.length > this.MAX_THRESHOLD && (n3 = n3.slice(0, this.MAX_THRESHOLD)), Ye2.log("".concat(this._className, "._flushAtOnce count:").concat(n3.length)), e4.setItem(this.TAG, n3, true, false);
        }
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._lastReportTime = 0, this._report(), this.REPORT_SDKAPPID_BLACKLIST = [], this.REPORT_TINYID_WHITELIST = [];
      } }]), a3;
    }(vn), vi = "none", Mi = "online", yi = [hn.OVER_FREQUENCY_LIMIT, hn.OPEN_SERVICE_OVERLOAD_ERROR], Ii = function() {
      function e3(t3) {
        n2(this, e3), this._moduleManager = t3, this._networkType = "", this._className = "NetMonitorModule", this.MAX_WAIT_TIME = 3e3, this._mpNetworkStatusCallback = null, this._webOnlineCallback = null, this._webOfflineCallback = null;
      }
      return s2(e3, [{ key: "start", value: function() {
        var e4 = this;
        le2 ? (pe2.getNetworkType({ success: function(t3) {
          e4._networkType = t3.networkType, t3.networkType === vi ? Ye2.warn("".concat(e4._className, ".start no network, please check!")) : Ye2.info("".concat(e4._className, ".start networkType:").concat(t3.networkType));
        } }), this._mpNetworkStatusCallback = this._onNetworkStatusChange.bind(this), pe2.onNetworkStatusChange(this._mpNetworkStatusCallback)) : (this._networkType = Mi, this._webOnlineCallback = this._onWebOnline.bind(this), this._webOfflineCallback = this._onWebOffline.bind(this), window && (window.addEventListener("online", this._webOnlineCallback), window.addEventListener("offline", this._webOfflineCallback)));
      } }, { key: "_onWebOnline", value: function() {
        this._onNetworkStatusChange({ isConnected: true, networkType: Mi });
      } }, { key: "_onWebOffline", value: function() {
        this._onNetworkStatusChange({ isConnected: false, networkType: vi });
      } }, { key: "_onNetworkStatusChange", value: function(e4) {
        var t3 = e4.isConnected, o3 = e4.networkType, n3 = false;
        t3 ? (Ye2.info("".concat(this._className, "._onNetworkStatusChange previousNetworkType:").concat(this._networkType, " currentNetworkType:").concat(o3)), this._networkType !== o3 && (n3 = true, this._moduleManager.getModule(nn).reConnect(true))) : this._networkType !== o3 && (n3 = true, Ye2.warn("".concat(this._className, "._onNetworkStatusChange no network, please check!")), this._moduleManager.getModule(nn).offline());
        n3 && (new bs2(ws2.NETWORK_CHANGE).setMessage("isConnected:".concat(t3, " previousNetworkType:").concat(this._networkType, " networkType:").concat(o3)).end(), this._networkType = o3);
      } }, { key: "probe", value: function(e4) {
        var t3 = this;
        return !dt2(e4) && yi.includes(e4.code) ? Promise.resolve([true, this._networkType]) : new Promise(function(e5, o3) {
          le2 ? pe2.getNetworkType({ success: function(o4) {
            t3._networkType = o4.networkType, o4.networkType === vi ? (Ye2.warn("".concat(t3._className, ".probe no network, please check!")), e5([false, o4.networkType])) : (Ye2.info("".concat(t3._className, ".probe networkType:").concat(o4.networkType)), e5([true, o4.networkType]));
          } }) : t3._networkType === vi ? e5([false, vi]) : e5([true, Mi]);
        });
      } }, { key: "getNetworkType", value: function() {
        return this._networkType;
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), le2 ? null !== this._mpNetworkStatusCallback && (pe2.offNetworkStatusChange && (ce2 || se2 ? pe2.offNetworkStatusChange(this._mpNetworkStatusCallback) : pe2.offNetworkStatusChange()), this._mpNetworkStatusCallback = null) : window && (null !== this._webOnlineCallback && (window.removeEventListener("online", this._webOnlineCallback), this._webOnlineCallback = null), null !== this._onWebOffline && (window.removeEventListener("offline", this._webOfflineCallback), this._webOfflineCallback = null));
      } }]), e3;
    }(), Ci = k2(function(e3) {
      var t3 = Object.prototype.hasOwnProperty, o3 = "~";
      function n3() {
      }
      function a3(e4, t4, o4) {
        this.fn = e4, this.context = t4, this.once = o4 || false;
      }
      function s3(e4, t4, n4, s4, r4) {
        if ("function" != typeof n4)
          throw new TypeError("The listener must be a function");
        var i4 = new a3(n4, s4 || e4, r4), c3 = o3 ? o3 + t4 : t4;
        return e4._events[c3] ? e4._events[c3].fn ? e4._events[c3] = [e4._events[c3], i4] : e4._events[c3].push(i4) : (e4._events[c3] = i4, e4._eventsCount++), e4;
      }
      function r3(e4, t4) {
        0 == --e4._eventsCount ? e4._events = new n3() : delete e4._events[t4];
      }
      function i3() {
        this._events = new n3(), this._eventsCount = 0;
      }
      Object.create && (n3.prototype = /* @__PURE__ */ Object.create(null), new n3().__proto__ || (o3 = false)), i3.prototype.eventNames = function() {
        var e4, n4, a4 = [];
        if (0 === this._eventsCount)
          return a4;
        for (n4 in e4 = this._events)
          t3.call(e4, n4) && a4.push(o3 ? n4.slice(1) : n4);
        return Object.getOwnPropertySymbols ? a4.concat(Object.getOwnPropertySymbols(e4)) : a4;
      }, i3.prototype.listeners = function(e4) {
        var t4 = o3 ? o3 + e4 : e4, n4 = this._events[t4];
        if (!n4)
          return [];
        if (n4.fn)
          return [n4.fn];
        for (var a4 = 0, s4 = n4.length, r4 = new Array(s4); a4 < s4; a4++)
          r4[a4] = n4[a4].fn;
        return r4;
      }, i3.prototype.listenerCount = function(e4) {
        var t4 = o3 ? o3 + e4 : e4, n4 = this._events[t4];
        return n4 ? n4.fn ? 1 : n4.length : 0;
      }, i3.prototype.emit = function(e4, t4, n4, a4, s4, r4) {
        var i4 = o3 ? o3 + e4 : e4;
        if (!this._events[i4])
          return false;
        var c3, u3, l3 = this._events[i4], d3 = arguments.length;
        if (l3.fn) {
          switch (l3.once && this.removeListener(e4, l3.fn, void 0, true), d3) {
            case 1:
              return l3.fn.call(l3.context), true;
            case 2:
              return l3.fn.call(l3.context, t4), true;
            case 3:
              return l3.fn.call(l3.context, t4, n4), true;
            case 4:
              return l3.fn.call(l3.context, t4, n4, a4), true;
            case 5:
              return l3.fn.call(l3.context, t4, n4, a4, s4), true;
            case 6:
              return l3.fn.call(l3.context, t4, n4, a4, s4, r4), true;
          }
          for (u3 = 1, c3 = new Array(d3 - 1); u3 < d3; u3++)
            c3[u3 - 1] = arguments[u3];
          l3.fn.apply(l3.context, c3);
        } else {
          var p3, g3 = l3.length;
          for (u3 = 0; u3 < g3; u3++)
            switch (l3[u3].once && this.removeListener(e4, l3[u3].fn, void 0, true), d3) {
              case 1:
                l3[u3].fn.call(l3[u3].context);
                break;
              case 2:
                l3[u3].fn.call(l3[u3].context, t4);
                break;
              case 3:
                l3[u3].fn.call(l3[u3].context, t4, n4);
                break;
              case 4:
                l3[u3].fn.call(l3[u3].context, t4, n4, a4);
                break;
              default:
                if (!c3)
                  for (p3 = 1, c3 = new Array(d3 - 1); p3 < d3; p3++)
                    c3[p3 - 1] = arguments[p3];
                l3[u3].fn.apply(l3[u3].context, c3);
            }
        }
        return true;
      }, i3.prototype.on = function(e4, t4, o4) {
        return s3(this, e4, t4, o4, false);
      }, i3.prototype.once = function(e4, t4, o4) {
        return s3(this, e4, t4, o4, true);
      }, i3.prototype.removeListener = function(e4, t4, n4, a4) {
        var s4 = o3 ? o3 + e4 : e4;
        if (!this._events[s4])
          return this;
        if (!t4)
          return r3(this, s4), this;
        var i4 = this._events[s4];
        if (i4.fn)
          i4.fn !== t4 || a4 && !i4.once || n4 && i4.context !== n4 || r3(this, s4);
        else {
          for (var c3 = 0, u3 = [], l3 = i4.length; c3 < l3; c3++)
            (i4[c3].fn !== t4 || a4 && !i4[c3].once || n4 && i4[c3].context !== n4) && u3.push(i4[c3]);
          u3.length ? this._events[s4] = 1 === u3.length ? u3[0] : u3 : r3(this, s4);
        }
        return this;
      }, i3.prototype.removeAllListeners = function(e4) {
        var t4;
        return e4 ? (t4 = o3 ? o3 + e4 : e4, this._events[t4] && r3(this, t4)) : (this._events = new n3(), this._eventsCount = 0), this;
      }, i3.prototype.off = i3.prototype.removeListener, i3.prototype.addListener = i3.prototype.on, i3.prefixed = o3, i3.EventEmitter = i3, e3.exports = i3;
    }), Ti = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        return n2(this, o3), (a3 = t3.call(this, e4))._className = "BigDataChannelModule", a3.FILETYPE = { SOUND: 2106, FILE: 2107, VIDEO: 2113 }, a3._bdh_download_server = "grouptalk.c2c.qq.com", a3._BDHBizID = 10001, a3._authKey = "", a3._expireTime = 0, a3.getInnerEmitterInstance().on(gr, a3._getAuthKey, _2(a3)), a3;
      }
      return s2(o3, [{ key: "_getAuthKey", value: function() {
        var e4 = this;
        this.isIntl() || this.request({ protocolName: En2 }).then(function(t4) {
          t4.data.authKey && (e4._authKey = t4.data.authKey, e4._expireTime = parseInt(t4.data.expireTime));
        });
      } }, { key: "_isFromOlderVersion", value: function(e4) {
        return !(!e4.content || 2 === e4.content.downloadFlag);
      } }, { key: "parseElements", value: function(e4, t4) {
        if (!lt2(e4) || !t4)
          return [];
        for (var o4 = [], n3 = null, a3 = 0; a3 < e4.length; a3++)
          n3 = e4[a3], this._needParse(n3) ? o4.push(this._parseElement(n3, t4)) : o4.push(e4[a3]);
        return o4;
      } }, { key: "_needParse", value: function(e4) {
        return !e4.cloudCustomData && !(!this._isFromOlderVersion(e4) || e4.type !== D2.MSG_AUDIO && e4.type !== D2.MSG_FILE && e4.type !== D2.MSG_VIDEO);
      } }, { key: "_parseElement", value: function(e4, t4) {
        switch (e4.type) {
          case D2.MSG_AUDIO:
            return this._parseAudioElement(e4, t4);
          case D2.MSG_FILE:
            return this._parseFileElement(e4, t4);
          case D2.MSG_VIDEO:
            return this._parseVideoElement(e4, t4);
        }
      } }, { key: "_parseAudioElement", value: function(e4, t4) {
        return e4.content.url = this._genAudioUrl(e4.content.uuid, t4), e4;
      } }, { key: "_parseFileElement", value: function(e4, t4) {
        return e4.content.url = this._genFileUrl(e4.content.uuid, t4, e4.content.fileName), e4;
      } }, { key: "_parseVideoElement", value: function(e4, t4) {
        return e4.content.url = this._genVideoUrl(e4.content.uuid, t4), e4;
      } }, { key: "_genAudioUrl", value: function(e4, t4) {
        if ("" === this._authKey)
          return Ye2.warn("".concat(this._className, "._genAudioUrl no authKey!")), "";
        var o4 = this.getModule($o).getSDKAppID();
        return "https://".concat(this._bdh_download_server, "/asn.com/stddownload_common_file?authkey=").concat(this._authKey, "&bid=").concat(this._BDHBizID, "&subbid=").concat(o4, "&fileid=").concat(e4, "&filetype=").concat(this.FILETYPE.SOUND, "&openid=").concat(t4, "&ver=0");
      } }, { key: "_genFileUrl", value: function(e4, t4, o4) {
        if ("" === this._authKey)
          return Ye2.warn("".concat(this._className, "._genFileUrl no authKey!")), "";
        o4 || (o4 = "".concat(Math.floor(1e5 * Math.random()), "-").concat(Date.now()));
        var n3 = this.getModule($o).getSDKAppID();
        return "https://".concat(this._bdh_download_server, "/asn.com/stddownload_common_file?authkey=").concat(this._authKey, "&bid=").concat(this._BDHBizID, "&subbid=").concat(n3, "&fileid=").concat(e4, "&filetype=").concat(this.FILETYPE.FILE, "&openid=").concat(t4, "&ver=0&filename=").concat(encodeURIComponent(o4));
      } }, { key: "_genVideoUrl", value: function(e4, t4) {
        if ("" === this._authKey)
          return Ye2.warn("".concat(this._className, "._genVideoUrl no authKey!")), "";
        var o4 = this.getModule($o).getSDKAppID();
        return "https://".concat(this._bdh_download_server, "/asn.com/stddownload_common_file?authkey=").concat(this._authKey, "&bid=").concat(this._BDHBizID, "&subbid=").concat(o4, "&fileid=").concat(e4, "&filetype=").concat(this.FILETYPE.VIDEO, "&openid=").concat(t4, "&ver=0");
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._authKey = "", this.expireTime = 0;
      } }]), o3;
    }(vn), Ei = ["requestSnapshotUrl"], Si = function(e3) {
      i2(a3, e3);
      var o3 = f2(a3);
      function a3(e4) {
        var t3;
        return n2(this, a3), (t3 = o3.call(this, e4))._className = "UploadModule", t3.TIMUploadPlugin = null, t3.timUploadPlugin = null, t3.COSSDK = null, t3._cosUploadMethod = null, t3.expiredTimeLimit = 600, t3.appid = 0, t3.bucketName = "", t3.ciUrl = "", t3.directory = "", t3.downloadUrl = "", t3.uploadUrl = "", t3.region = "ap-shanghai", t3.cos = null, t3.cosOptions = { secretId: "", secretKey: "", sessionToken: "", expiredTime: 0 }, t3.uploadFileType = "", t3.duration = 900, t3.tryCount = 0, t3.getInnerEmitterInstance().on(gr, t3._init, _2(t3)), t3;
      }
      return s2(a3, [{ key: "_init", value: function() {
        var e4 = "".concat(this._className, "._init"), t3 = this.getModule(en);
        if (this.TIMUploadPlugin = t3.getPlugin("tim-upload-plugin"), this.TIMUploadPlugin)
          this._initUploaderMethod();
        else {
          var o4 = le2 ? "cos-wx-sdk" : "cos-js-sdk";
          this.COSSDK = t3.getPlugin(o4), this.COSSDK ? (this._getAuthorizationKey(), Ye2.warn("".concat(e4, " v2.9.2\u8D77\u63A8\u8350\u4F7F\u7528 tim-upload-plugin \u4EE3\u66FF ").concat(o4, "\uFF0C\u4E0A\u4F20\u66F4\u5FEB\u66F4\u5B89\u5168\u3002\u8BF7\u53C2\u8003 https://web.sdk.qcloud.com/im/doc/zh-cn/SDK.html#registerPlugin"))) : Ye2.warn("".concat(e4, " ").concat(this._getPluginUndetectedLog()));
        }
      } }, { key: "_getAuthorizationKey", value: function() {
        var e4 = this, t3 = new bs2(ws2.GET_COS_AUTH_KEY), o4 = Math.ceil(Date.now() / 1e3);
        this.request({ protocolName: ja, requestData: { duration: this.expiredTimeLimit } }).then(function(n3) {
          var a4 = n3.data;
          Ye2.log("".concat(e4._className, "._getAuthorizationKey ok. data:"), a4);
          var s3 = a4.expiredTime - o4;
          t3.setMessage("requestId:".concat(a4.requestId, " requestTime:").concat(o4, " expiredTime:").concat(a4.expiredTime, " diff:").concat(s3, "s")).setNetworkType(e4.getNetworkType()).end(), !le2 && a4.region && (e4.region = a4.region), e4.appid = a4.appid, e4.bucketName = a4.bucketName, e4.ciUrl = a4.ciUrl, e4.directory = a4.directory, e4.downloadUrl = a4.downloadUrl, e4.uploadUrl = a4.uploadUrl, e4.cosOptions = { secretId: a4.secretId, secretKey: a4.secretKey, sessionToken: a4.sessionToken, expiredTime: a4.expiredTime }, Ye2.log("".concat(e4._className, "._getAuthorizationKey ok. region:").concat(e4.region, " bucketName:").concat(e4.bucketName)), e4._initUploaderMethod();
        }).catch(function(o5) {
          e4.probeNetwork().then(function(e5) {
            var n3 = m2(e5, 2), a4 = n3[0], s3 = n3[1];
            t3.setError(o5, a4, s3).end();
          }), Ye2.warn("".concat(e4._className, "._getAuthorizationKey failed. error:"), o5);
        });
      } }, { key: "_getCosPreSigUrl", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, "._getCosPreSigUrl"), n3 = Math.ceil(Date.now() / 1e3), a4 = new bs2(ws2.GET_COS_PRE_SIG_URL);
        return this.request({ protocolName: $a, requestData: { fileType: e4.fileType, fileName: e4.fileName, uploadMethod: e4.uploadMethod, duration: e4.duration } }).then(function(e5) {
          t3.tryCount = 0;
          var s3 = e5.data || {}, r3 = s3.expiredTime - n3;
          return Ye2.log("".concat(o4, " ok. data:"), s3), a4.setMessage("requestId:".concat(s3.requestId, " expiredTime:").concat(s3.expiredTime, " diff:").concat(r3, "s")).setNetworkType(t3.getNetworkType()).end(), s3;
        }).catch(function(n4) {
          return -1 === n4.code && (n4.code = hn.COS_GET_SIG_FAIL), t3.probeNetwork().then(function(e5) {
            var t4 = m2(e5, 2), o5 = t4[0], s3 = t4[1];
            a4.setError(n4, o5, s3).end();
          }), Ye2.warn("".concat(o4, " failed. error:"), n4), t3.tryCount < 1 ? (t3.tryCount++, t3._getCosPreSigUrl(e4)) : (t3.tryCount = 0, lr({ code: hn.COS_GET_SIG_FAIL }));
        });
      } }, { key: "_initUploaderMethod", value: function() {
        var e4 = this;
        if (this.TIMUploadPlugin)
          return this.timUploadPlugin = new this.TIMUploadPlugin(), void (this._cosUploadMethod = function(t3, o4) {
            e4.timUploadPlugin.uploadFile(t3, o4);
          });
        this.appid && (this.cos = le2 ? new this.COSSDK({ ForcePathStyle: true, getAuthorization: this._getAuthorization.bind(this) }) : new this.COSSDK({ getAuthorization: this._getAuthorization.bind(this) }), this._cosUploadMethod = le2 ? function(t3, o4) {
          e4.cos.postObject(t3, o4);
        } : function(t3, o4) {
          e4.cos.uploadFiles(t3, o4);
        });
      } }, { key: "onCheckTimer", value: function(e4) {
        this.COSSDK && (this.TIMUploadPlugin || this.isLoggedIn() && e4 % 60 == 0 && Math.ceil(Date.now() / 1e3) >= this.cosOptions.expiredTime - 120 && this._getAuthorizationKey());
      } }, { key: "_getAuthorization", value: function(e4, t3) {
        t3({ TmpSecretId: this.cosOptions.secretId, TmpSecretKey: this.cosOptions.secretKey, XCosSecurityToken: this.cosOptions.sessionToken, ExpiredTime: this.cosOptions.expiredTime });
      } }, { key: "upload", value: function(e4) {
        if (true === e4.getRelayFlag())
          return Promise.resolve();
        var t3 = this.getModule(un);
        switch (e4.type) {
          case D2.MSG_IMAGE:
            return t3.addTotalCount(As2), this._uploadImage(e4);
          case D2.MSG_FILE:
            return t3.addTotalCount(As2), this._uploadFile(e4);
          case D2.MSG_AUDIO:
            return t3.addTotalCount(As2), this._uploadAudio(e4);
          case D2.MSG_VIDEO:
            return t3.addTotalCount(As2), this._uploadVideo(e4);
          default:
            return Promise.resolve();
        }
      } }, { key: "_uploadImage", value: function(e4) {
        var o4 = this, n3 = this.getModule(qo), a4 = e4.getElements()[0], s3 = n3.getMessageOption(e4.clientSequence);
        return this.doUploadImage({ file: s3.payload.file, to: s3.to, onProgress: function(e5) {
          if (a4.updatePercent(e5), gt2(s3.onProgress))
            try {
              s3.onProgress(e5);
            } catch (t3) {
              return lr({ code: hn.MESSAGE_ONPROGRESS_FUNCTION_ERROR });
            }
        } }).then(function(n4) {
          var s4 = n4.location, r3 = n4.fileType, i3 = n4.fileSize, c3 = n4.width, u3 = n4.height, l3 = o4.isPrivateNetWork() ? s4 : Nt(s4);
          a4.updateImageFormat(r3);
          var d3 = Bt({ originUrl: l3, originWidth: c3, originHeight: u3, min: 198 }), p3 = Bt({ originUrl: l3, originWidth: c3, originHeight: u3, min: 720 });
          return a4.updateImageInfoArray([{ size: i3, url: l3, width: c3, height: u3 }, t2({}, p3), t2({}, d3)]), e4;
        });
      } }, { key: "_uploadFile", value: function(e4) {
        var t3 = this, o4 = this.getModule(qo), n3 = e4.getElements()[0], a4 = o4.getMessageOption(e4.clientSequence);
        return this.doUploadFile({ file: a4.payload.file, to: a4.to, onProgress: function(e5) {
          if (n3.updatePercent(e5), gt2(a4.onProgress))
            try {
              a4.onProgress(e5);
            } catch (t4) {
              return lr({ code: hn.MESSAGE_ONPROGRESS_FUNCTION_ERROR });
            }
        } }).then(function(o5) {
          var a5 = o5.location, s3 = t3.isPrivateNetWork() ? a5 : Nt(a5);
          return n3.updateFileUrl(s3), e4;
        });
      } }, { key: "_uploadAudio", value: function(e4) {
        var t3 = this, o4 = this.getModule(qo), n3 = e4.getElements()[0], a4 = o4.getMessageOption(e4.clientSequence);
        return this.doUploadAudio({ file: a4.payload.file, to: a4.to, onProgress: function(e5) {
          if (n3.updatePercent(e5), gt2(a4.onProgress))
            try {
              a4.onProgress(e5);
            } catch (t4) {
              return lr({ code: hn.MESSAGE_ONPROGRESS_FUNCTION_ERROR });
            }
        } }).then(function(o5) {
          var a5 = o5.location, s3 = t3.isPrivateNetWork() ? a5 : Nt(a5);
          return n3.updateAudioUrl(s3), e4;
        });
      } }, { key: "_uploadVideo", value: function(e4) {
        var t3 = this, o4 = this.getModule(qo), n3 = e4.getElements()[0], a4 = o4.getMessageOption(e4.clientSequence);
        return this.doUploadVideo({ file: a4.payload.file, to: a4.to, onProgress: function(e5) {
          if (n3.updatePercent(e5), gt2(a4.onProgress))
            try {
              a4.onProgress(e5);
            } catch (t4) {
              return lr({ code: hn.MESSAGE_ONPROGRESS_FUNCTION_ERROR });
            }
        } }).then(function(o5) {
          var a5 = o5.location, s3 = o5.snapshotInfo, r3 = t3.isPrivateNetWork() ? a5 : Nt(a5);
          return n3.updateVideoUrl(r3), oo(s3) || n3.updateSnapshotInfo(s3), e4;
        });
      } }, { key: "doUploadImage", value: function(e4) {
        var t3 = this;
        if (!e4.file)
          return lr({ code: hn.MESSAGE_IMAGE_SELECT_FILE_FIRST });
        var o4 = this._checkImageType(e4.file);
        if (true !== o4)
          return o4;
        var n3 = this._checkImageSize(e4.file);
        if (true !== n3)
          return n3;
        var a4 = null;
        return this._setUploadFileType(Mr), this.uploadByCOS(e4).then(function(e5) {
          return a4 = e5, t3.isPrivateNetWork() ? Ft(e5.location) : Ft("https://".concat(e5.location));
        }).then(function(e5) {
          return a4.width = e5.width, a4.height = e5.height, Promise.resolve(a4);
        });
      } }, { key: "_checkImageType", value: function(e4) {
        var t3 = "";
        return t3 = le2 ? e4.url.slice(e4.url.lastIndexOf(".") + 1) : e4.files[0].name.slice(e4.files[0].name.lastIndexOf(".") + 1), mr.indexOf(t3.toLowerCase()) >= 0 || lr({ code: hn.MESSAGE_IMAGE_TYPES_LIMIT });
      } }, { key: "_checkImageSize", value: function(e4) {
        var t3 = 0;
        return 0 === (t3 = le2 ? e4.size : e4.files[0].size) ? lr({ code: hn.MESSAGE_FILE_IS_EMPTY }) : t3 < 20971520 || lr({ code: hn.MESSAGE_IMAGE_SIZE_LIMIT });
      } }, { key: "doUploadFile", value: function(e4) {
        return e4.file ? e4.file.files[0].size > 104857600 ? lr({ code: hn.MESSAGE_FILE_SIZE_LIMIT }) : 0 === e4.file.files[0].size ? lr({ code: hn.MESSAGE_FILE_IS_EMPTY }) : (this._setUploadFileType(Cr), this.uploadByCOS(e4)) : lr({ code: hn.MESSAGE_FILE_SELECT_FILE_FIRST });
      } }, { key: "doUploadVideo", value: function(e4) {
        return e4.file.videoFile.size > 104857600 ? lr({ code: hn.MESSAGE_VIDEO_SIZE_LIMIT }) : 0 === e4.file.videoFile.size ? lr({ code: hn.MESSAGE_FILE_IS_EMPTY }) : -1 === vr.indexOf(e4.file.videoFile.type) ? lr({ code: hn.MESSAGE_VIDEO_TYPES_LIMIT }) : (this._setUploadFileType(yr), le2 ? this.handleVideoUpload({ file: e4.file.videoFile, onProgress: e4.onProgress }) : de2 ? this.handleVideoUpload(e4) : void 0);
      } }, { key: "handleVideoUpload", value: function(e4) {
        var t3 = this;
        return new Promise(function(o4, n3) {
          t3.uploadByCOS(e4).then(function(e5) {
            o4(e5);
          }).catch(function() {
            t3.uploadByCOS(e4).then(function(e5) {
              o4(e5);
            }).catch(function() {
              n3(new rr({ code: hn.MESSAGE_VIDEO_UPLOAD_FAIL }));
            });
          });
        });
      } }, { key: "doUploadAudio", value: function(e4) {
        return e4.file ? e4.file.size > 20971520 ? lr({ code: hn.MESSAGE_AUDIO_SIZE_LIMIT }) : 0 === e4.file.size ? lr({ code: hn.MESSAGE_FILE_IS_EMPTY }) : (this._setUploadFileType(Ir), this.uploadByCOS(e4)) : lr({ code: hn.MESSAGE_AUDIO_UPLOAD_FAIL });
      } }, { key: "uploadByCOS", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, ".uploadByCOS");
        if (!gt2(this._cosUploadMethod))
          return Ye2.warn("".concat(o4, " ").concat(this._getPluginUndetectedLog())), lr({ code: hn.COS_UNDETECTED });
        if (this.timUploadPlugin)
          return this._uploadWithPreSigUrl(e4);
        var n3 = new bs2(ws2.UPLOAD), a4 = Date.now(), s3 = this._getFile(e4);
        return new Promise(function(r3, i3) {
          var c3 = le2 ? t3._createCosOptionsWXMiniApp(e4) : t3._createCosOptionsWeb(e4), u3 = t3;
          t3._cosUploadMethod(c3, function(e5, c4) {
            var l3 = /* @__PURE__ */ Object.create(null);
            if (c4) {
              if (e5 || lt2(c4.files) && c4.files[0].error) {
                var d3 = new rr({ code: hn.MESSAGE_FILE_UPLOAD_FAIL });
                return n3.setError(d3, true, t3.getNetworkType()).end(), Ye2.log("".concat(o4, " failed. error:"), c4.files[0].error), 403 === c4.files[0].error.statusCode && (Ye2.warn("".concat(o4, " failed. cos AccessKeyId was invalid, regain auth key!")), t3._getAuthorizationKey()), void i3(d3);
              }
              l3.fileName = s3.name, l3.fileSize = s3.size, l3.fileType = s3.type.slice(s3.type.indexOf("/") + 1).toLowerCase(), l3.location = le2 ? c4.Location : c4.files[0].data.Location;
              var p3 = Date.now() - a4, g3 = u3._formatFileSize(s3.size), _3 = u3._formatSpeed(1e3 * s3.size / p3), h3 = "size:".concat(g3, " time:").concat(p3, "ms speed:").concat(_3);
              Ye2.log("".concat(o4, " success. name:").concat(s3.name, " ").concat(h3)), r3(l3);
              var f3 = t3.getModule(un);
              return f3.addCost(As2, p3), f3.addFileSize(As2, s3.size), void n3.setNetworkType(t3.getNetworkType()).setMessage(h3).end();
            }
            var m3 = new rr({ code: hn.MESSAGE_FILE_UPLOAD_FAIL });
            n3.setError(m3, true, u3.getNetworkType()).end(), Ye2.warn("".concat(o4, " failed. error:"), e5), 403 === e5.statusCode && (Ye2.warn("".concat(o4, " failed. cos AccessKeyId was invalid, regain auth key!")), t3._getAuthorizationKey()), i3(m3);
          });
        });
      } }, { key: "_uploadWithPreSigUrl", value: function(e4) {
        var t3 = this, o4 = "".concat(this._className, "._uploadWithPreSigUrl"), n3 = this._getFile(e4);
        return this._createCosOptionsPreSigUrl(e4).then(function(e5) {
          return new Promise(function(a4, s3) {
            var r3 = new bs2(ws2.UPLOAD), i3 = e5.requestSnapshotUrl, c3 = void 0 === i3 ? void 0 : i3, u3 = g2(e5, Ei), l3 = Date.now();
            t3._cosUploadMethod(u3, function(e6, i4) {
              var u4 = /* @__PURE__ */ Object.create(null);
              if (e6 || 403 === i4.statusCode)
                return r3.setError(new rr(e6), true, t3.getNetworkType()).end(), Ye2.log("".concat(o4, " failed, error:"), e6), void s3(new rr({ code: hn.MESSAGE_FILE_UPLOAD_FAIL }));
              var d3 = i4.data.location || "";
              t3.isPrivateNetWork() || 0 !== d3.indexOf("https://") && 0 !== d3.indexOf("http://") || (d3 = d3.split("//")[1]), u4.fileName = n3.name, u4.fileSize = n3.size, u4.fileType = n3.type.slice(n3.type.indexOf("/") + 1).toLowerCase(), u4.location = d3;
              var p3 = Date.now() - l3, g3 = t3._formatFileSize(n3.size), _3 = t3._formatSpeed(1e3 * n3.size / p3), h3 = "size:".concat(g3, ",time:").concat(p3, "ms,speed:").concat(_3, " res:").concat(JSON.stringify(i4.data));
              Ye2.log("".concat(o4, " success name:").concat(n3.name, ",").concat(h3)), r3.setNetworkType(t3.getNetworkType()).setMessage(h3).end();
              var f3 = t3.getModule(un);
              if (f3.addCost(As2, p3), f3.addFileSize(As2, n3.size), !oo(c3))
                return t3._getSnapshotInfoByUrl(c3).then(function(e7) {
                  u4.snapshotInfo = e7, a4(u4);
                });
              a4(u4);
            });
          });
        });
      } }, { key: "_getFile", value: function(e4) {
        var t3;
        return lt2(e4.file.files) || (t3 = e4.file.files, "filelist" === ht2(t3)) ? e4.file.files[0] : e4.file;
      } }, { key: "_formatFileSize", value: function(e4) {
        return e4 < 1024 ? e4 + "B" : e4 < 1048576 ? Math.floor(e4 / 1024) + "KB" : Math.floor(e4 / 1048576) + "MB";
      } }, { key: "_formatSpeed", value: function(e4) {
        return e4 <= 1048576 ? Wt(e4 / 1024, 1) + "KB/s" : Wt(e4 / 1048576, 1) + "MB/s";
      } }, { key: "_createCosOptionsWeb", value: function(e4) {
        var t3 = this._getFile(e4), o4 = t3.name, n3 = o4.slice(o4.lastIndexOf(".")), a4 = this._genFileName("".concat(Ct(999999)).concat(n3));
        return { files: [{ Bucket: "".concat(this.bucketName, "-").concat(this.appid), Region: this.region, Key: "".concat(this.directory, "/").concat(a4), Body: t3 }], SliceSize: 1048576, onProgress: function(t4) {
          if ("function" == typeof e4.onProgress)
            try {
              e4.onProgress(t4.percent);
            } catch (o5) {
              Ye2.warn("onProgress callback error:", o5);
            }
        }, onFileFinish: function(e5, t4, o5) {
        } };
      } }, { key: "_createCosOptionsWXMiniApp", value: function(e4) {
        var t3 = this._getFile(e4), o4 = this._genFileName(t3.name), n3 = t3.url;
        return { Bucket: "".concat(this.bucketName, "-").concat(this.appid), Region: this.region, Key: "".concat(this.directory, "/").concat(o4), FilePath: n3, onProgress: function(t4) {
          if (Ye2.log(JSON.stringify(t4)), "function" == typeof e4.onProgress)
            try {
              e4.onProgress(t4.percent);
            } catch (o5) {
              Ye2.warn("onProgress callback error:", o5);
            }
        } };
      } }, { key: "_createCosOptionsPreSigUrl", value: function(e4) {
        var t3 = this, o4 = "", n3 = "", a4 = 0, s3 = this._getFile(e4);
        if (le2)
          o4 = this._genFileName(s3.name), n3 = s3.url, a4 = 1;
        else {
          var r3 = s3.name, i3 = r3.slice(r3.lastIndexOf("."));
          o4 = this._genFileName("".concat(Ct(999999)).concat(i3)), n3 = s3, a4 = 0;
        }
        return this._getCosPreSigUrl({ fileType: this.uploadFileType, fileName: o4, uploadMethod: a4, duration: this.duration }).then(function(a5) {
          var s4 = a5.uploadUrl, r4 = a5.downloadUrl, i4 = a5.requestSnapshotUrl, c3 = void 0 === i4 ? void 0 : i4;
          return { url: s4, fileType: t3.uploadFileType, fileName: o4, resources: n3, downloadUrl: r4, requestSnapshotUrl: c3, onProgress: function(t4) {
            if ("function" == typeof e4.onProgress)
              try {
                e4.onProgress(t4.percent);
              } catch (o5) {
                Ye2.warn("onProgress callback error:", o5), Ye2.error(o5);
              }
          } };
        });
      } }, { key: "_genFileName", value: function(e4) {
        return "".concat(qt(), "-").concat(e4);
      } }, { key: "_setUploadFileType", value: function(e4) {
        this.uploadFileType = e4;
      } }, { key: "_getSnapshotInfoByUrl", value: function(e4) {
        var t3 = this, o4 = new bs2(ws2.GET_SNAPSHOT_INFO);
        return this.request({ protocolName: za, requestData: { platform: this.getPlatform(), coverName: this._genFileName(Ct(99999)), requestSnapshotUrl: e4 } }).then(function(e5) {
          var t4 = (e5.data || {}).snapshotUrl;
          return o4.setMessage("snapshotUrl:".concat(t4)).end(), oo(t4) ? {} : Ft(t4).then(function(e6) {
            return { snapshotUrl: t4, snapshotWidth: e6.width, snapshotHeight: e6.height };
          });
        }).catch(function(e5) {
          return Ye2.warn("".concat(t3._className, "._getSnapshotInfoByUrl failed. error:"), e5), o4.setCode(e5.errorCode).setMessage(e5.errorInfo).end(), {};
        });
      } }, { key: "_getPluginUndetectedLog", value: function() {
        return this.isIntl() ? "No upload plugin is detected. SDK can not send image/audio/video/file messages. See https://web.sdk.qcloud.com/im/doc/en/SDK.html#registerPlugin" : "\u672A\u68C0\u6D4B\u5230\u4E0A\u4F20\u63D2\u4EF6\uFF0CSDK \u5C06\u65E0\u6CD5\u53D1\u9001\u56FE\u7247\u3001\u97F3\u9891\u3001\u89C6\u9891\u3001\u6587\u4EF6\u7B49\u7C7B\u578B\u7684\u6D88\u606F\u3002\u8BF7\u53C2\u8003 https://web.sdk.qcloud.com/im/doc/zh-cn/SDK.html#registerPlugin";
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset"));
      } }]), a3;
    }(vn), Di = ["downloadKey", "pbDownloadKey", "messageList"], Ni = function() {
      function e3(t3) {
        n2(this, e3), this._className = "MergerMessageHandler", this._messageModule = t3;
      }
      return s2(e3, [{ key: "uploadMergerMessage", value: function(e4, t3) {
        var o3 = this;
        Ye2.debug("".concat(this._className, ".uploadMergerMessage message:"), e4, "messageBytes:".concat(t3));
        var n3 = e4.payload.messageList, a3 = n3.length, s3 = new bs2(ws2.UPLOAD_MERGER_MESSAGE);
        return this._messageModule.request({ protocolName: os2, requestData: { messageList: n3 } }).then(function(e5) {
          Ye2.debug("".concat(o3._className, ".uploadMergerMessage ok. response:"), e5.data);
          var n4 = e5.data, r3 = n4.pbDownloadKey, i3 = n4.downloadKey, c3 = { pbDownloadKey: r3, downloadKey: i3, messageNumber: a3 };
          return s3.setNetworkType(o3._messageModule.getNetworkType()).setMessage("".concat(a3, "-").concat(t3, "-").concat(i3)).end(), c3;
        }).catch(function(e5) {
          throw Ye2.warn("".concat(o3._className, ".uploadMergerMessage failed. error:"), e5), o3._messageModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), n4 = o4[0], a4 = o4[1];
            s3.setError(e5, n4, a4).end();
          }), e5;
        });
      } }, { key: "downloadMergerMessage", value: function(e4) {
        var o3 = this;
        Ye2.debug("".concat(this._className, ".downloadMergerMessage message:"), e4);
        var n3 = e4.payload.downloadKey, a3 = new bs2(ws2.DOWNLOAD_MERGER_MESSAGE);
        return a3.setMessage("downloadKey:".concat(n3)), this._messageModule.request({ protocolName: ns2, requestData: { downloadKey: n3 } }).then(function(n4) {
          if (Ye2.debug("".concat(o3._className, ".downloadMergerMessage ok. response:"), n4.data), gt2(e4.clearElement)) {
            var s3 = e4.payload, r3 = (s3.downloadKey, s3.pbDownloadKey, s3.messageList, g2(s3, Di));
            e4.clearElement(), e4.setElement({ type: e4.type, content: t2({ messageList: n4.data.messageList }, r3) });
          } else {
            var i3 = [];
            n4.data.messageList.forEach(function(e5) {
              if (!oo(e5)) {
                var t3 = new Js(e5);
                i3.push(t3);
              }
            }), e4.payload.messageList = i3, e4.payload.downloadKey = "", e4.payload.pbDownloadKey = "";
          }
          return a3.setNetworkType(o3._messageModule.getNetworkType()).end(), e4;
        }).catch(function(e5) {
          throw Ye2.warn("".concat(o3._className, ".downloadMergerMessage failed. key:").concat(n3, " error:"), e5), o3._messageModule.probeNetwork().then(function(t3) {
            var o4 = m2(t3, 2), n4 = o4[0], s3 = o4[1];
            a3.setError(e5, n4, s3).end();
          }), e5;
        });
      } }, { key: "createMergerMessagePack", value: function(e4, t3, o3) {
        return e4.conversationType === D2.CONV_C2C ? this._createC2CMergerMessagePack(e4, t3, o3) : this._createGroupMergerMessagePack(e4, t3, o3);
      } }, { key: "_createC2CMergerMessagePack", value: function(e4, t3, o3) {
        var n3 = null;
        t3 && (t3.offlinePushInfo && (n3 = t3.offlinePushInfo), true === t3.onlineUserOnly && (n3 ? n3.disablePush = true : n3 = { disablePush: true }));
        var a3 = [];
        if (ut2(t3) && ut2(t3.messageControlInfo)) {
          var s3 = t3.messageControlInfo, r3 = s3.excludedFromUnreadCount, i3 = s3.excludedFromLastMessage;
          true === r3 && a3.push("NoUnread"), true === i3 && a3.push("NoLastMsg");
        }
        var c3 = "";
        it2(e4.cloudCustomData) && e4.cloudCustomData.length > 0 && (c3 = e4.cloudCustomData);
        var u3 = o3.pbDownloadKey, l3 = o3.downloadKey, d3 = o3.messageNumber, p3 = e4.payload, g3 = p3.title, _3 = p3.abstractList, h3 = p3.compatibleText, f3 = this._messageModule.getModule(Bo), m3 = f3 && f3.isOnlineMessage(e4, t3) ? 0 : void 0;
        return { protocolName: Sn, tjgID: this._messageModule.generateTjgID(e4), requestData: { fromAccount: this._messageModule.getMyUserID(), toAccount: e4.to, msgBody: [{ msgType: e4.type, msgContent: { pbDownloadKey: u3, downloadKey: l3, title: g3, abstractList: _3, compatibleText: h3, messageNumber: d3 } }], cloudCustomData: c3, clientTime: e4.clientTime, msgSeq: e4.sequence, msgRandom: e4.random, msgLifeTime: m3, offlinePushInfo: n3 ? { pushFlag: true === n3.disablePush ? 1 : 0, title: n3.title || "", desc: n3.description || "", ext: n3.extension || "", apnsInfo: { badgeMode: true === n3.ignoreIOSBadge ? 1 : 0 }, androidInfo: { OPPOChannelID: n3.androidOPPOChannelID || "" } } : void 0, messageControlInfo: 0 !== m3 ? a3 : void 0 } };
      } }, { key: "_createGroupMergerMessagePack", value: function(e4, t3, o3) {
        var n3 = null;
        t3 && t3.offlinePushInfo && (n3 = t3.offlinePushInfo);
        var a3 = [];
        if (ut2(t3) && ut2(t3.messageControlInfo)) {
          var s3 = t3.messageControlInfo, r3 = s3.excludedFromUnreadCount, i3 = s3.excludedFromLastMessage;
          true === r3 && a3.push("NoUnread"), true === i3 && a3.push("NoLastMsg");
        }
        var c3 = "";
        it2(e4.cloudCustomData) && e4.cloudCustomData.length > 0 && (c3 = e4.cloudCustomData);
        var u3 = o3.pbDownloadKey, l3 = o3.downloadKey, d3 = o3.messageNumber, p3 = e4.payload, g3 = p3.title, _3 = p3.abstractList, h3 = p3.compatibleText, f3 = this._messageModule.getModule(Ko), m3 = f3 && f3.isOnlineMessage(e4, t3) ? 1 : 0;
        return { protocolName: Dn2, tjgID: this._messageModule.generateTjgID(e4), requestData: { fromAccount: this._messageModule.getMyUserID(), groupID: e4.to, msgBody: [{ msgType: e4.type, msgContent: { pbDownloadKey: u3, downloadKey: l3, title: g3, abstractList: _3, compatibleText: h3, messageNumber: d3 } }], random: e4.random, priority: e4.priority, clientSequence: e4.clientSequence, groupAtInfo: void 0, cloudCustomData: c3, onlineOnlyFlag: m3, offlinePushInfo: n3 ? { pushFlag: true === n3.disablePush ? 1 : 0, title: n3.title || "", desc: n3.description || "", ext: n3.extension || "", apnsInfo: { badgeMode: true === n3.ignoreIOSBadge ? 1 : 0 }, androidInfo: { OPPOChannelID: n3.androidOPPOChannelID || "" } } : void 0, clientTime: e4.clientTime, needReadReceipt: true !== e4.needReadReceipt || f3.isMessageFromOrToAVChatroom(e4.to) ? 0 : 1, messageControlInfo: 0 === m3 ? a3 : void 0 } };
      } }]), e3;
    }(), Ai = { ERR_SVR_COMM_SENSITIVE_TEXT: 80001, ERR_SVR_COMM_BODY_SIZE_LIMIT: 80002, OPEN_SERVICE_OVERLOAD_ERROR: 60022, ERR_SVR_MSG_PKG_PARSE_FAILED: 20001, ERR_SVR_MSG_INTERNAL_AUTH_FAILED: 20002, ERR_SVR_MSG_INVALID_ID: 20003, ERR_SVR_MSG_PUSH_DENY: 20006, ERR_SVR_MSG_IN_PEER_BLACKLIST: 20007, ERR_SVR_MSG_BOTH_NOT_FRIEND: 20009, ERR_SVR_MSG_NOT_PEER_FRIEND: 20010, ERR_SVR_MSG_NOT_SELF_FRIEND: 20011, ERR_SVR_MSG_SHUTUP_DENY: 20012, ERR_SVR_GROUP_INVALID_PARAMETERS: 10004, ERR_SVR_GROUP_PERMISSION_DENY: 10007, ERR_SVR_GROUP_NOT_FOUND: 10010, ERR_SVR_GROUP_INVALID_GROUPID: 10015, ERR_SVR_GROUP_REJECT_FROM_THIRDPARTY: 10016, ERR_SVR_GROUP_SHUTUP_DENY: 10017, MESSAGE_SEND_FAIL: 2100, OVER_FREQUENCY_LIMIT: 2996 }, ki = [hn.MESSAGE_ONPROGRESS_FUNCTION_ERROR, hn.MESSAGE_IMAGE_SELECT_FILE_FIRST, hn.MESSAGE_IMAGE_TYPES_LIMIT, hn.MESSAGE_FILE_IS_EMPTY, hn.MESSAGE_IMAGE_SIZE_LIMIT, hn.MESSAGE_FILE_SELECT_FILE_FIRST, hn.MESSAGE_FILE_SIZE_LIMIT, hn.MESSAGE_VIDEO_SIZE_LIMIT, hn.MESSAGE_VIDEO_TYPES_LIMIT, hn.MESSAGE_AUDIO_UPLOAD_FAIL, hn.MESSAGE_AUDIO_SIZE_LIMIT, hn.COS_UNDETECTED];
    function Ri(e3) {
      var t3 = false;
      return Object.values(Ai).includes(e3) && (t3 = true), (e3 >= 120001 && e3 <= 13e4 || e3 >= 10100 && e3 <= 10200) && (t3 = true), t3;
    }
    var Li = function(e3) {
      i2(a3, e3);
      var o3 = f2(a3);
      function a3(e4) {
        var t3;
        return n2(this, a3), (t3 = o3.call(this, e4))._className = "MessageModule", t3._messageOptionsMap = /* @__PURE__ */ new Map(), t3._mergerMessageHandler = new Ni(_2(t3)), t3;
      }
      return s2(a3, [{ key: "createTextMessage", value: function(e4) {
        var t3 = this.getMyUserID();
        e4.currentUser = t3, e4.senderTinyID = this.getMyTinyID();
        var o4 = new Zs(e4), n3 = "string" == typeof e4.payload ? e4.payload : e4.payload.text, a4 = new Fs({ text: n3 }), s3 = this._getNickAndAvatarByUserID(t3);
        return o4.setElement(a4), o4.setNickAndAvatar(s3), o4.setNameCard(this._getNameCardByGroupID(o4)), o4;
      } }, { key: "_fileUnsupportedWarning", value: function(e4) {
        this.isIntl() || Ye2.warn("\u5C0F\u7A0B\u5E8F\u73AF\u5883\u4E0B\u8C03\u7528 ".concat(e4, " \u63A5\u53E3\u65F6\uFF0Cpayload.file \u4E0D\u652F\u6301\u4F20\u5165 File \u5BF9\u8C61"));
      } }, { key: "createImageMessage", value: function(e4) {
        var t3 = this.getMyUserID();
        e4.currentUser = t3, e4.senderTinyID = this.getMyTinyID();
        var o4 = new Zs(e4);
        if (le2) {
          var n3 = e4.payload.file;
          if (st2(n3))
            return void this._fileUnsupportedWarning("createImageMessage");
          var a4 = n3.tempFiles[0].path || n3.tempFiles[0].tempFilePath, s3 = { url: a4, name: a4.slice(a4.lastIndexOf("/") + 1), size: n3.tempFiles && n3.tempFiles[0].size || 1, type: a4.slice(a4.lastIndexOf(".") + 1).toLowerCase() };
          e4.payload.file = s3;
        } else if (de2) {
          if (st2(e4.payload.file)) {
            var r3 = e4.payload.file;
            e4.payload.file = { files: [r3] };
          } else if (ut2(e4.payload.file) && "undefined" != typeof index$1) {
            var i3 = e4.payload.file.tempFiles[0];
            e4.payload.file = { files: [i3] };
          }
        }
        var c3 = new qs({ imageFormat: je2.UNKNOWN, uuid: this._generateUUID(), file: e4.payload.file }), u3 = this._getNickAndAvatarByUserID(t3);
        return o4.setElement(c3), o4.setNickAndAvatar(u3), o4.setNameCard(this._getNameCardByGroupID(o4)), this._messageOptionsMap.set(o4.clientSequence, e4), o4;
      } }, { key: "createAudioMessage", value: function(e4) {
        var t3 = e4.payload.file;
        if (le2) {
          var o4 = { url: t3.tempFilePath, name: t3.tempFilePath.slice(t3.tempFilePath.lastIndexOf("/") + 1), size: t3.fileSize, second: parseInt(t3.duration) / 1e3, type: t3.tempFilePath.slice(t3.tempFilePath.lastIndexOf(".") + 1).toLowerCase() };
          e4.payload.file = o4;
        }
        var n3 = this.getMyUserID();
        e4.currentUser = n3, e4.senderTinyID = this.getMyTinyID();
        var a4 = new Zs(e4), s3 = new Vs({ second: Math.floor(t3.duration / 1e3), size: t3.fileSize || t3.size, url: t3.tempFilePath, uuid: this._generateUUID() }), r3 = this._getNickAndAvatarByUserID(n3);
        return a4.setElement(s3), a4.setNickAndAvatar(r3), a4.setNameCard(this._getNameCardByGroupID(a4)), this._messageOptionsMap.set(a4.clientSequence, e4), a4;
      } }, { key: "createVideoMessage", value: function(e4) {
        var t3 = this.getMyUserID();
        e4.currentUser = t3, e4.senderTinyID = this.getMyTinyID(), e4.payload.file.thumbUrl = "https://web.sdk.qcloud.com/im/assets/images/transparent.png", e4.payload.file.thumbSize = 1668;
        var o4 = {};
        if (le2) {
          if (ie2)
            return void Ye2.warn("createVideoMessage \u4E0D\u652F\u6301\u5728\u652F\u4ED8\u5B9D\u5C0F\u7A0B\u5E8F\u73AF\u5883\u4E0B\u4F7F\u7528");
          if (st2(e4.payload.file))
            return void this._fileUnsupportedWarning("createVideoMessage");
          var n3 = e4.payload.file;
          lt2(n3.tempFiles) && (n3 = n3.tempFiles[0]), o4.url = n3.tempFilePath, o4.name = n3.tempFilePath.slice(n3.tempFilePath.lastIndexOf("/") + 1), o4.size = n3.size, o4.second = n3.duration, o4.type = n3.tempFilePath.slice(n3.tempFilePath.lastIndexOf(".") + 1).toLowerCase();
        } else if (de2) {
          if (st2(e4.payload.file)) {
            var a4 = e4.payload.file;
            e4.payload.file.files = [a4];
          } else if (ut2(e4.payload.file) && "undefined" != typeof index$1) {
            var s3 = e4.payload.file.tempFile;
            e4.payload.file.files = [s3];
          }
          var r3 = e4.payload.file;
          o4.url = window.URL.createObjectURL(r3.files[0]), o4.name = r3.files[0].name, o4.size = r3.files[0].size, o4.second = r3.files[0].duration || 0, o4.type = r3.files[0].type.split("/")[1];
        }
        e4.payload.file.videoFile = o4;
        var i3 = new Zs(e4), c3 = new $s({ videoFormat: o4.type, videoSecond: Wt(o4.second, 0), videoSize: o4.size, remoteVideoUrl: "", videoUrl: o4.url, videoUUID: this._generateUUID(), thumbUUID: this._generateUUID(), thumbWidth: e4.payload.file.width || 200, thumbHeight: e4.payload.file.height || 200, thumbUrl: e4.payload.file.thumbUrl, thumbSize: e4.payload.file.thumbSize, thumbFormat: e4.payload.file.thumbUrl.slice(e4.payload.file.thumbUrl.lastIndexOf(".") + 1).toLowerCase() }), u3 = this._getNickAndAvatarByUserID(t3);
        return i3.setElement(c3), i3.setNickAndAvatar(u3), i3.setNameCard(this._getNameCardByGroupID(i3)), this._messageOptionsMap.set(i3.clientSequence, e4), i3;
      } }, { key: "createCustomMessage", value: function(e4) {
        var t3 = this.getMyUserID();
        e4.currentUser = t3, e4.senderTinyID = this.getMyTinyID();
        var o4 = new Zs(e4), n3 = new js({ data: e4.payload.data, description: e4.payload.description, extension: e4.payload.extension }), a4 = this._getNickAndAvatarByUserID(t3);
        return o4.setElement(n3), o4.setNickAndAvatar(a4), o4.setNameCard(this._getNameCardByGroupID(o4)), o4;
      } }, { key: "createFaceMessage", value: function(e4) {
        var t3 = this.getMyUserID();
        e4.currentUser = t3, e4.senderTinyID = this.getMyTinyID();
        var o4 = new Zs(e4), n3 = new xs(e4.payload), a4 = this._getNickAndAvatarByUserID(t3);
        return o4.setElement(n3), o4.setNickAndAvatar(a4), o4.setNameCard(this._getNameCardByGroupID(o4)), o4;
      } }, { key: "createMergerMessage", value: function(e4) {
        var t3 = this.getMyUserID();
        e4.currentUser = t3, e4.senderTinyID = this.getMyTinyID();
        var o4 = this._getNickAndAvatarByUserID(t3), n3 = new Zs(e4), a4 = new Xs(e4.payload);
        return n3.setElement(a4), n3.setNickAndAvatar(o4), n3.setNameCard(this._getNameCardByGroupID(n3)), n3.setRelayFlag(true), n3;
      } }, { key: "createForwardMessage", value: function(e4) {
        var t3 = e4.to, o4 = e4.conversationType, n3 = e4.priority, a4 = e4.payload, s3 = e4.needReadReceipt, r3 = e4.receiverList, i3 = this.getMyUserID(), c3 = this._getNickAndAvatarByUserID(i3);
        if (a4.type === D2.MSG_GRP_TIP)
          return lr({ code: hn.MESSAGE_FORWARD_TYPE_INVALID });
        var u3 = { to: t3, conversationType: o4, conversationID: "".concat(o4).concat(t3), priority: n3, isPlaceMessage: 0, status: ro.UNSEND, currentUser: i3, senderTinyID: this.getMyTinyID(), cloudCustomData: e4.cloudCustomData || a4.cloudCustomData || "", needReadReceipt: s3, receiverList: r3, isSupportExtension: e4.isSupportExtension || false }, l3 = new Zs(u3);
        return l3.setElement(a4.getElements()[0]), l3.setNickAndAvatar(c3), l3.setNameCard(this._getNameCardByGroupID(a4)), l3.setRelayFlag(true), l3;
      } }, { key: "downloadMergerMessage", value: function(e4) {
        return this._mergerMessageHandler.downloadMergerMessage(e4);
      } }, { key: "createFileMessage", value: function(e4) {
        if (le2) {
          var o4, n3 = "createFileMessage \u63A5\u53E3\u4E0D\u53EF\u7528\uFF01";
          if (!ne2 && !ae2 && !ce2)
            return void Ye2.warn("\u5C0F\u7A0B\u5E8F\u76EE\u524D\u4E0D\u652F\u6301\u9009\u62E9\u6587\u4EF6\uFF0C".concat(n3));
          var a4 = pe2.getSystemInfoSync().SDKVersion;
          if (ne2 && Vt(a4, o4 = "2.5.0") < 0)
            return void Ye2.warn("wx.chooseMessageFile \u9700\u8981\u57FA\u7840\u5E93".concat(o4, "\u6216\u66F4\u9AD8\u7248\u672C\uFF0C").concat(n3));
          if (ae2 && Vt(a4, o4 = "1.18.0") < 0)
            return void Ye2.warn("qq.chooseMessageFile \u9700\u8981\u57FA\u7840\u5E93".concat(o4, "\u6216\u66F4\u9AD8\u7248\u672C\uFF0C").concat(n3));
        }
        if (de2 || ce2) {
          if (st2(e4.payload.file)) {
            var s3 = e4.payload.file;
            e4.payload.file = { files: [s3] };
          } else if (ut2(e4.payload.file) && "undefined" != typeof index$1) {
            var r3 = e4.payload.file, i3 = r3.tempFiles, c3 = r3.files, u3 = null;
            lt2(i3) ? u3 = i3[0] : lt2(c3) && (u3 = c3[0]), e4.payload.file = { files: [u3] };
          }
        } else if (ne2 || ae2) {
          var l3 = e4.payload.file.tempFiles, d3 = t2(t2({}, l3[0]), {}, { url: l3[0].path });
          e4.payload.file = { files: [d3] };
        }
        var p3 = this.getMyUserID();
        e4.currentUser = p3, e4.senderTinyID = this.getMyTinyID();
        var g3 = new Zs(e4), _3 = new Ys({ uuid: this._generateUUID(), file: e4.payload.file }), h3 = this._getNickAndAvatarByUserID(p3);
        return g3.setElement(_3), g3.setNickAndAvatar(h3), g3.setNameCard(this._getNameCardByGroupID(g3)), this._messageOptionsMap.set(g3.clientSequence, e4), g3;
      } }, { key: "createLocationMessage", value: function(e4) {
        var t3 = this.getMyUserID();
        e4.currentUser = t3, e4.senderTinyID = this.getMyTinyID();
        var o4 = new Zs(e4), n3 = new zs(e4.payload), a4 = this._getNickAndAvatarByUserID(t3);
        return o4.setElement(n3), o4.setNickAndAvatar(a4), o4.setNameCard(this._getNameCardByGroupID(o4)), o4;
      } }, { key: "_onCannotFindModule", value: function() {
        return lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "sendMessageInstance", value: function(e4, t3) {
        var o4 = this;
        if (false === this.getModule(pn2).filterMessage(e4))
          return this._onSendMessageFailed(e4, new rr({ code: hn.PROFANITY_FOUND }));
        var n3, a4 = null;
        switch (e4.conversationType) {
          case D2.CONV_C2C:
            if (!(a4 = this.getModule(Bo)))
              return this._onCannotFindModule();
            break;
          case D2.CONV_GROUP:
            if (!(a4 = this.getModule(Ko)))
              return this._onCannotFindModule();
            if (Ot2({ groupID: e4.to })) {
              var s3 = a4.getLocalGroupProfile(e4.to);
              if (s3 && s3.isSupportTopic)
                return lr({ code: hn.MESSAGE_SEND_GROUP_WITH_TOPIC_FAIL });
            }
            break;
          default:
            return lr({ code: hn.MESSAGE_SEND_INVALID_CONVERSATION_TYPE });
        }
        var r3 = this.getModule(Zo), i3 = this.getModule(Ko);
        return r3.upload(e4).then(function() {
          o4._getSendMessageSpecifiedKey(e4) === Ns && o4.getModule(un).addSuccessCount(As2);
          return i3.guardForAVChatRoom(e4).then(function() {
            if (!e4.isSendable())
              return lr({ code: hn.MESSAGE_FILE_URL_IS_EMPTY });
            o4._addSendMessageTotalCount(e4), n3 = Date.now();
            var s4 = function(e5) {
              var t4 = "utf-8";
              de2 && document && (t4 = document.charset.toLowerCase());
              var o5, n4, a5 = 0;
              if (n4 = e5.length, "utf-8" === t4 || "utf8" === t4)
                for (var s5 = 0; s5 < n4; s5++)
                  (o5 = e5.codePointAt(s5)) <= 127 ? a5 += 1 : o5 <= 2047 ? a5 += 2 : o5 <= 65535 ? a5 += 3 : (a5 += 4, s5++);
              else if ("utf-16" === t4 || "utf16" === t4)
                for (var r4 = 0; r4 < n4; r4++)
                  (o5 = e5.codePointAt(r4)) <= 65535 ? a5 += 2 : (a5 += 4, r4++);
              else
                a5 = e5.replace(/[^\x00-\xff]/g, "aa").length;
              return a5;
            }(JSON.stringify(e4));
            return e4.type === D2.MSG_MERGER && s4 > 11264 ? o4._mergerMessageHandler.uploadMergerMessage(e4, s4).then(function(n4) {
              var a5 = o4._mergerMessageHandler.createMergerMessagePack(e4, t3, n4);
              return o4.request(a5);
            }) : (o4.getModule(jo).setMessageRandom(e4), e4.conversationType === D2.CONV_C2C || e4.conversationType === D2.CONV_GROUP ? a4.sendMessage(e4, t3) : void 0);
          }).then(function(s4) {
            var r4 = s4.data, i4 = r4.time, c3 = r4.sequence, u3 = r4.readReceiptCode;
            rt2(u3) && 0 !== u3 && (new bs2(ws2.SEND_MESSAGE_WITH_RECEIPT).setMessage("from:".concat(e4.from, " to:").concat(e4.to, " sequence:").concat(c3, " readReceiptCode:").concat(u3)).end(), Ye2.warn("".concat(o4._className, ".sendMessageInstance readReceiptCode:").concat(u3, " message:").concat(sr2[u3])));
            o4._addSendMessageSuccessCount(e4, n3), o4._messageOptionsMap.delete(e4.clientSequence);
            var l3 = o4.getModule(jo);
            e4.status = ro.SUCCESS, e4.time = i4;
            var d3 = false;
            if (e4.conversationType === D2.CONV_GROUP)
              e4.sequence = c3;
            else if (e4.conversationType === D2.CONV_C2C) {
              var p3 = l3.getLatestMessageSentByMe(e4.conversationID);
              if (p3) {
                var g3 = p3.nick, _3 = p3.avatar;
                g3 === e4.nick && _3 === e4.avatar || (d3 = true);
              }
            }
            if (d3 && l3.modifyMessageSentByMe({ conversationID: e4.conversationID, latestNick: e4.nick, latestAvatar: e4.avatar }), a4.isOnlineMessage(e4, t3))
              e4._onlineOnlyFlag = true;
            else {
              l3.appendToMessageList(e4);
              var h3 = e4;
              ut2(t3) && ut2(t3.messageControlInfo) && (true === t3.messageControlInfo.excludedFromLastMessage && (e4._isExcludedFromLastMessage = true, h3 = ""), true === t3.messageControlInfo.excludedFromUnreadCount && (e4._isExcludedFromUnreadCount = true));
              var f3 = e4.conversationType;
              if (Gt(e4.to))
                f3 = D2.CONV_TOPIC, o4.getModule(Yo).onMessageSent({ groupID: $t(e4.to), topicID: e4.to, lastMessage: h3 });
              l3.onMessageSent({ conversationOptionsList: [{ conversationID: e4.conversationID, unreadCount: 0, type: f3, subType: e4.conversationSubType, lastMessage: h3 }] });
            }
            return e4.getRelayFlag() || "TIMImageElem" !== e4.type || Kt(e4.payload.imageInfoArray), er({ message: e4 });
          });
        }).catch(function(t4) {
          return o4._onSendMessageFailed(e4, t4);
        });
      } }, { key: "_onSendMessageFailed", value: function(e4, t3) {
        e4.status = ro.FAIL, this.getModule(jo).deleteMessageRandom(e4), this._addSendMessageFailCountOnUser(e4, t3);
        var o4 = new bs2(ws2.SEND_MESSAGE);
        return o4.setMessage("tjg_id:".concat(this.generateTjgID(e4), " type:").concat(e4.type, " from:").concat(e4.from, " to:").concat(e4.to)), this.probeNetwork().then(function(e5) {
          var n3 = m2(e5, 2), a4 = n3[0], s3 = n3[1];
          o4.setError(t3, a4, s3).end();
        }), Ye2.error("".concat(this._className, "._onSendMessageFailed error:"), t3), lr(new rr({ code: t3 && t3.code ? t3.code : hn.MESSAGE_SEND_FAIL, message: t3 && t3.message ? t3.message : void 0, data: { message: e4 } }));
      } }, { key: "_getSendMessageSpecifiedKey", value: function(e4) {
        if ([D2.MSG_IMAGE, D2.MSG_AUDIO, D2.MSG_VIDEO, D2.MSG_FILE].includes(e4.type))
          return Ns;
        if (e4.conversationType === D2.CONV_C2C)
          return Es2;
        if (e4.conversationType === D2.CONV_GROUP) {
          var t3 = this.getModule(Ko).getLocalGroupProfile(e4.to);
          if (!t3)
            return;
          var o4 = t3.type;
          return Lt(o4) ? Ds : Ss2;
        }
      } }, { key: "_addSendMessageTotalCount", value: function(e4) {
        var t3 = this._getSendMessageSpecifiedKey(e4);
        t3 && this.getModule(un).addTotalCount(t3);
      } }, { key: "_addSendMessageSuccessCount", value: function(e4, t3) {
        var o4 = Math.abs(Date.now() - t3), n3 = this._getSendMessageSpecifiedKey(e4);
        if (n3) {
          var a4 = this.getModule(un);
          a4.addSuccessCount(n3), a4.addCost(n3, o4);
        }
      } }, { key: "_addSendMessageFailCountOnUser", value: function(e4, t3) {
        var o4, n3, a4 = t3.code, s3 = void 0 === a4 ? -1 : a4, r3 = this.getModule(un), i3 = this._getSendMessageSpecifiedKey(e4);
        i3 === Ns && (o4 = s3, n3 = false, ki.includes(o4) && (n3 = true), n3) ? r3.addFailedCountOfUserSide(As2) : Ri(s3) && i3 && r3.addFailedCountOfUserSide(i3);
      } }, { key: "resendMessage", value: function(e4) {
        return e4.isResend = true, e4.status = ro.UNSEND, this.sendMessageInstance(e4);
      } }, { key: "revokeMessage", value: function(e4) {
        var t3 = this, o4 = null;
        if (e4.conversationType === D2.CONV_C2C) {
          if (!(o4 = this.getModule(Bo)))
            return this._onCannotFindModule();
        } else if (e4.conversationType === D2.CONV_GROUP && !(o4 = this.getModule(Ko)))
          return this._onCannotFindModule();
        var n3 = new bs2(ws2.REVOKE_MESSAGE);
        return n3.setMessage("tjg_id:".concat(this.generateTjgID(e4), " type:").concat(e4.type, " from:").concat(e4.from, " to:").concat(e4.to)), o4.revokeMessage(e4).then(function(o5) {
          var a4 = o5.data.recallRetList;
          if (!oo(a4) && 0 !== a4[0].retCode) {
            var s3 = new rr({ code: a4[0].retCode, data: { message: e4 } });
            return n3.setCode(s3.code).setMoreMessage(s3.message).end(), lr(s3);
          }
          return Ye2.info("".concat(t3._className, ".revokeMessage ok. ID:").concat(e4.ID)), e4.isRevoked = true, n3.end(), t3.getModule(jo).onMessageRevoked([e4]), er({ message: e4 });
        }).catch(function(o5) {
          t3.probeNetwork().then(function(e5) {
            var t4 = m2(e5, 2), a5 = t4[0], s3 = t4[1];
            n3.setError(o5, a5, s3).end();
          });
          var a4 = new rr({ code: o5 && o5.code ? o5.code : hn.MESSAGE_REVOKE_FAIL, message: o5 && o5.message ? o5.message : void 0, data: { message: e4 } });
          return Ye2.warn("".concat(t3._className, ".revokeMessage failed. error:"), o5), lr(a4);
        });
      } }, { key: "deleteMessage", value: function(e4) {
        var t3 = this, o4 = null, n3 = e4[0], a4 = n3.conversationID, s3 = "", r3 = [], i3 = [];
        if (n3.conversationType === D2.CONV_C2C)
          o4 = this.getModule(Bo), s3 = a4.replace(D2.CONV_C2C, ""), e4.forEach(function(e5) {
            e5 && e5.status === ro.SUCCESS && e5.conversationID === a4 && (e5._onlineOnlyFlag || r3.push("".concat(e5.sequence, "_").concat(e5.random, "_").concat(e5.time)), i3.push(e5));
          });
        else if (n3.conversationType === D2.CONV_GROUP)
          o4 = this.getModule(Ko), s3 = a4.replace(D2.CONV_GROUP, ""), e4.forEach(function(e5) {
            e5 && e5.status === ro.SUCCESS && e5.conversationID === a4 && (e5._onlineOnlyFlag || r3.push("".concat(e5.sequence)), i3.push(e5));
          });
        else if (n3.conversationType === D2.CONV_SYSTEM)
          return lr({ code: hn.CANNOT_DELETE_GROUP_SYSTEM_NOTICE });
        if (!o4)
          return this._onCannotFindModule();
        if (0 === r3.length)
          return this._onMessageDeleted(i3);
        r3.length > 30 && (r3 = r3.slice(0, 30), i3 = i3.slice(0, 30));
        var c3 = new bs2(ws2.DELETE_MESSAGE);
        return c3.setMessage("to:".concat(s3, " count:").concat(r3.length)), o4.deleteMessage({ to: s3, keyList: r3 }).then(function(e5) {
          return c3.end(), Ye2.info("".concat(t3._className, ".deleteMessage ok")), t3._onMessageDeleted(i3);
        }).catch(function(e5) {
          t3.probeNetwork().then(function(t4) {
            var o6 = m2(t4, 2), n4 = o6[0], a5 = o6[1];
            c3.setError(e5, n4, a5).end();
          }), Ye2.warn("".concat(t3._className, ".deleteMessage failed. error:"), e5);
          var o5 = new rr({ code: e5 && e5.code ? e5.code : hn.MESSAGE_DELETE_FAIL, message: e5 && e5.message ? e5.message : void 0 });
          return lr(o5);
        });
      } }, { key: "_onMessageDeleted", value: function(e4) {
        return this.getModule(jo).onMessageDeleted(e4), ur({ messageList: e4 });
      } }, { key: "translateText", value: function(e4) {
        var o4 = "".concat(this._className, ".translateText"), n3 = e4.sourceTextList, a4 = e4.sourceLanguage, s3 = e4.targetLanguage, r3 = new bs2(ws2.TRANSLATE_MESSAGE);
        return r3.setMessage("sourceLanguage:".concat(a4, " targetLanguage:").concat(s3)), this.request({ protocolName: Is2, requestData: { sourceTextList: n3, source: a4 || "auto", target: s3, from: this.getMyTinyID(), SDKAppID: this.getSDKAppID() } }).then(function(e5) {
          var n4 = e5.data, a5 = n4.error, s4 = n4.requestID, i3 = n4.translatedTextList;
          if (0 === a5.code)
            return r3.end(), Ye2.info("".concat(o4, " ok. requestID:").concat(s4)), er({ translatedTextList: i3 });
          throw t2(t2({}, a5), {}, { requestID: s4 });
        }).catch(function(e5) {
          return r3.setCode(e5.code).setMoreMessage(e5.requestID).end(), Ye2.warn("".concat(o4, " failed. error:"), e5), lr({ code: hn.TRANSLATE_TEXT_FAIL });
        });
      } }, { key: "modifyRemoteMessage", value: function(e4) {
        var t3 = this, o4 = null, n3 = e4.conversationType, a4 = e4.to;
        if (this.getModule(Ko).isMessageFromOrToAVChatroom(a4))
          return lr({ code: hn.MESSAGE_MODIFY_DISABLED_IN_AVCHATROOM, data: { message: e4 } });
        if (false === this.getModule(pn2).filterMessage(e4))
          return lr({ code: hn.PROFANITY_FOUND, data: { message: e4 } });
        n3 === D2.CONV_C2C ? o4 = this.getModule(Bo) : n3 === D2.CONV_GROUP && (o4 = this.getModule(Ko));
        var s3 = new bs2(ws2.MODIFY_MESSAGE);
        return s3.setMessage("to:".concat(a4)), o4.modifyRemoteMessage(e4).then(function(o5) {
          s3.end(), Ye2.info("".concat(t3._className, ".modifyRemoteMessage ok"));
          var n4 = t3._onModifyRemoteMessageResp(e4, o5.data);
          return er({ message: n4 });
        }).catch(function(o5) {
          if (s3.setCode(o5.code).setMoreMessage(o5.message).end(), Ye2.warn("".concat(t3._className, ".modifyRemoteMessage failed. error:"), o5), 20027 === o5.code) {
            var n4 = t3._onModifyRemoteMessageResp(e4, o5.data);
            return lr({ code: hn.MESSAGE_MODIFY_CONFLICT, data: { message: n4 } });
          }
          return lr({ code: o5.code, message: o5.message, data: { message: e4 } });
        });
      } }, { key: "_onModifyRemoteMessageResp", value: function(e4, t3) {
        Ye2.debug("".concat(this._className, "._onModifyRemoteMessageResp options:"), t3);
        var o4 = e4.conversationType, n3 = e4.from, a4 = e4.to, s3 = e4.random, r3 = e4.sequence, i3 = e4.time, c3 = t3.elements, u3 = t3.messageVersion, l3 = t3.cloudCustomData, d3 = void 0 === l3 ? "" : l3;
        return this.getModule(jo).onMessageModified({ conversationType: o4, from: n3, to: a4, time: i3, random: s3, sequence: r3, elements: c3, cloudCustomData: d3, messageVersion: u3 });
      } }, { key: "_generateUUID", value: function() {
        var e4 = this.getModule($o);
        return "".concat(e4.getSDKAppID(), "-").concat(e4.getUserID(), "-").concat(function() {
          for (var e5 = "", t3 = 32; t3 > 0; --t3)
            e5 += Tt2[Math.floor(Math.random() * Et2)];
          return e5;
        }());
      } }, { key: "getMessageOption", value: function(e4) {
        return this._messageOptionsMap.get(e4);
      } }, { key: "_getNickAndAvatarByUserID", value: function(e4) {
        return this.getModule(Vo).getNickAndAvatarByUserID(e4);
      } }, { key: "_getNameCardByGroupID", value: function(e4) {
        if (e4.conversationType === D2.CONV_GROUP) {
          var t3 = this.getModule(Ko);
          if (t3)
            return t3.getMyNameCardByGroupID(e4.to);
        }
        return "";
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._messageOptionsMap.clear();
      } }]), a3;
    }(vn), Oi = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        return n2(this, o3), (a3 = t3.call(this, e4))._className = "MessageExtensionModule", a3.messageExtensionMap = /* @__PURE__ */ new Map(), a3.globalSeqMap = /* @__PURE__ */ new Map(), a3.getMessageExtensionsMap = /* @__PURE__ */ new Map(), a3;
      }
      return s2(o3, [{ key: "onMessageExtensionNotify", value: function(e4) {
        var t4 = this, o4 = e4.dataList, n3 = o4.messageInfo, a3 = o4.operateType, s3 = o4.operateResultList, r3 = o4.tinyID, i3 = o4.globalSequence, c3 = n3.clientTime, u3 = n3.random, l3 = "".concat(r3, "-").concat(c3, "-").concat(u3), d3 = [], p3 = [];
        Ye2.log("".concat(this._className, ".onMessageExtensionNotify messageID:").concat(l3, " operateType:").concat(a3, " globalSequence:").concat(i3)), this._updateGlobalSequence(l3, i3);
        var g3 = false, _3 = false;
        s3.forEach(function(e5) {
          var o5 = e5.extensions, n4 = void 0 === o5 ? [] : o5, s4 = e5.clearSequence;
          if (1 === a3)
            g3 = true, n4.forEach(function(e6) {
              d3.push({ key: e6.key, value: e6.value });
            }), t4._updateLocalExtension(l3, n4);
          else if (2 === a3)
            _3 = true, n4.forEach(function(e6) {
              p3.push(e6.key);
            }), t4._updateLocalExtension(l3, n4);
          else if (3 === a3) {
            if (_3 = true, t4._hasLocalExtension(l3))
              t4._getLocalExtension(l3).forEach(function(e6, t5) {
                e6.seq <= s4 && !oo(e6.value) && p3.push(t5);
              });
            t4._clearLocalExtension(l3, s4);
          }
        }), g3 && this.emitOuterEvent(S2.MESSAGE_EXTENSIONS_UPDATED, { messageID: l3, extensions: d3 }), _3 && this.emitOuterEvent(S2.MESSAGE_EXTENSIONS_DELETED, { messageID: l3, keyList: p3 });
      } }, { key: "setMessageExtensions", value: function(e4, t4) {
        var o4 = this;
        if (!this.canIUse(W2.MSG_EXT))
          return lr({ code: hn.CANNOT_USE_COMMERCIAL_ABILITY });
        var n3 = "".concat(this._className, ".setMessageExtensions"), a3 = e4.ID, s3 = e4.conversationID, r3 = e4.sequence, i3 = e4.time, c3 = v2(t4);
        t4.length > 20 && (c3 = t4.slice(0, 20), Ye2.warn("".concat(n3, ". the length of extensions cannot exceed 20.")));
        var u3 = "conversationID:".concat(s3, " messageID:").concat(a3, " sequence:").concat(r3, " time:").concat(i3, " count:").concat(c3.length), l3 = new bs2(ws2.SET_MESSAGE_EXTENSIONS);
        return l3.setMessage(u3), Ye2.log("".concat(n3, " ").concat(u3)), this._modifyMessageExtensions(e4, c3).then(function(e5) {
          var t5 = e5.resultList, o5 = e5.successCount, a4 = e5.failureCount, s4 = "success count:".concat(o5, " fail count:").concat(a4);
          return l3.setMoreMessage(s4).end(), Ye2.log("".concat(n3, " ok. ").concat(s4)), er({ extensions: t5 });
        }).catch(function(e5) {
          return o4.probeNetwork().then(function(t5) {
            var o5 = m2(t5, 2), n4 = o5[0], a4 = o5[1];
            l3.setError(e5, n4, a4).end();
          }), Ye2.error("".concat(n3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "getMessageExtensions", value: function(e4) {
        var t4 = this;
        if (!this.canIUse(W2.MSG_EXT))
          return lr({ code: hn.CANNOT_USE_COMMERCIAL_ABILITY });
        var o4 = "".concat(this._className, ".getMessageExtensions"), n3 = e4.ID, a3 = e4.conversationID, s3 = e4.sequence, r3 = e4.time, i3 = "conversationID:".concat(a3, " messageID:").concat(n3, " sequence:").concat(s3, " time:").concat(r3), c3 = new bs2(ws2.GET_MESSAGE_EXTENSIONS);
        c3.setMessage(i3), Ye2.log("".concat(o4, " ").concat(i3));
        var u3 = void 0;
        return this.getMessageExtensionsMap.has(n3) && (u3 = this._getGlobalSequence(n3)), this._getMessageExtensions(e4, u3).then(function(e5) {
          return c3.end(), Ye2.log("".concat(o4, " ok. total count:").concat(e5.length)), dt2(u3) && e5.length > 0 && t4.getMessageExtensionsMap.set(n3, 1), er({ extensions: e5 });
        }).catch(function(e5) {
          return t4.probeNetwork().then(function(t5) {
            var o5 = m2(t5, 2), n4 = o5[0], a4 = o5[1];
            c3.setError(e5, n4, a4).end();
          }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "deleteMessageExtensions", value: function(e4, t4) {
        var o4 = this;
        if (!this.canIUse(W2.MSG_EXT))
          return lr({ code: hn.CANNOT_USE_COMMERCIAL_ABILITY });
        var n3 = "".concat(this._className, ".deleteMessageExtensions"), a3 = [], s3 = 3;
        oo(t4) || (s3 = 2, t4.forEach(function(e5) {
          a3.push({ key: e5, value: "", seq: 0 });
        }));
        var r3 = e4.ID, i3 = e4.conversationID, c3 = e4.sequence, u3 = e4.time, l3 = "conversationID:".concat(i3, " messageID:").concat(r3, " sequence:").concat(c3, " time:").concat(u3, " operateType:").concat(s3), d3 = new bs2(ws2.DELETE_MESSAGE_EXTENSIONS);
        return d3.setMessage(l3), Ye2.log("".concat(n3, " ").concat(l3)), this._modifyMessageExtensions(e4, a3, s3).then(function(e5) {
          var t5 = e5.resultList, o5 = e5.successCount, a4 = e5.failureCount, r4 = "";
          return 2 === s3 && (r4 = "success count:".concat(o5, " fail count:").concat(a4)), d3.setMoreMessage("".concat(r4)).end(), Ye2.log("".concat(n3, " ok. ").concat(r4)), er({ extensions: t5 });
        }).catch(function(e5) {
          return o4.probeNetwork().then(function(t5) {
            var o5 = m2(t5, 2), n4 = o5[0], a4 = o5[1];
            d3.setError(e5, n4, a4).end();
          }), Ye2.error("".concat(n3, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "_modifyMessageExtensions", value: function(e4, t4) {
        var o4 = this, n3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1, a3 = e4.conversationType, s3 = void 0;
        3 !== n3 && (s3 = this._getRequestExtensions(e4, t4));
        var r3 = null;
        switch (a3) {
          case D2.CONV_C2C:
            r3 = this.getModule(Bo);
            break;
          case D2.CONV_GROUP:
            r3 = this.getModule(Ko);
            break;
          default:
            return lr({ code: hn.CANNOT_FIND_MODULE });
        }
        return r3.modifyMessageExtensions(e4, s3, n3).then(function(t5) {
          var n4 = t5.data, a4 = n4.extensions, s4 = n4.seq, r4 = [], i3 = 0, c3 = 0, u3 = [];
          return (a4 = oo(a4) ? [] : a4).forEach(function(e5) {
            var t6 = e5.errorCode, o5 = e5.extension, n5 = o5.key, a5 = o5.value, s5 = o5.seq;
            r4.push({ code: t6, key: n5, value: a5 }), 0 === t6 ? i3++ : c3++, u3.push({ key: n5, value: a5, seq: s5 });
          }), o4._updateGlobalSequence(e4.ID, s4), u3.length > 0 && (o4._updateLocalExtension(e4.ID, u3), u3 = null), { resultList: r4, successCount: i3, failureCount: c3 };
        }).catch(function(e5) {
          return lr(e5);
        });
      } }, { key: "_getRequestExtensions", value: function(e4, t4) {
        var o4 = [];
        if (this._hasLocalExtension(e4.ID)) {
          var n3 = this._getLocalExtension(e4.ID);
          return t4.forEach(function(e5) {
            var t5 = e5.key, a3 = e5.value, s3 = 0;
            n3.has(t5) && (s3 = n3.get(t5).seq), o4.push({ key: t5, value: a3, seq: s3 });
          }), o4;
        }
        return t4.forEach(function(e5) {
          var t5 = e5.key, n4 = e5.value;
          o4.push({ key: t5, value: n4, seq: 0 });
        }), o4;
      } }, { key: "_getMessageExtensions", value: function(e4, t4) {
        var o4 = this, n3 = "".concat(this._className, "._getMessageExtensions"), a3 = e4.ID, s3 = null;
        switch (e4.conversationType) {
          case D2.CONV_C2C:
            s3 = this.getModule(Bo);
            break;
          case D2.CONV_GROUP:
            s3 = this.getModule(Ko);
            break;
          default:
            return lr({ code: hn.CANNOT_FIND_MODULE });
        }
        return s3.getMessageExtensions(e4, t4).then(function(t5) {
          var s4 = t5.data, r3 = s4.extensions, i3 = s4.completeFlag, c3 = s4.globalSequence, u3 = s4.clearSequence;
          if (r3 = oo(r3) ? [] : r3, Ye2.log("".concat(n3, " ok. completeFlag:").concat(i3, " globalSequence:").concat(c3, " clearSequence:").concat(u3, " count:").concat(r3.length)), o4._updateLocalExtension(a3, r3), o4._clearLocalExtension(a3, u3), o4._updateGlobalSequence(a3, c3), 1 !== i3) {
            var l3 = r3.slice(-1)[0].seq + 1;
            return o4._getMessageExtensions(e4, l3);
          }
          return o4._getLocalExtensions(a3);
        }).catch(function(e5) {
          return lr(e5);
        });
      } }, { key: "_hasLocalExtension", value: function(e4) {
        return this.messageExtensionMap.has(e4);
      } }, { key: "_getLocalExtension", value: function(e4) {
        return this.messageExtensionMap.get(e4);
      } }, { key: "_updateLocalExtension", value: function(e4, t4) {
        this._hasLocalExtension(e4) || this.messageExtensionMap.set(e4, /* @__PURE__ */ new Map());
        var o4 = this._getLocalExtension(e4);
        t4.forEach(function(e5) {
          var t5 = e5.key, n3 = e5.value, a3 = void 0 === n3 ? "" : n3, s3 = e5.seq;
          o4.set(t5, { value: a3, seq: s3 });
        });
      } }, { key: "_clearLocalExtension", value: function(e4, t4) {
        if (!(t4 <= 0) && this._hasLocalExtension(e4)) {
          var o4 = this._getLocalExtension(e4);
          o4.forEach(function(e5, n3) {
            e5.seq <= t4 && o4.delete(n3);
          });
        }
      } }, { key: "_getLocalExtensions", value: function(e4) {
        var t4 = [];
        this._hasLocalExtension(e4) && this._getLocalExtension(e4).forEach(function(e5, o4) {
          var n3 = e5.value;
          oo(n3) || t4.push({ key: o4, value: n3 });
        });
        return t4;
      } }, { key: "_getGlobalSequence", value: function(e4) {
        return this.globalSeqMap.get(e4);
      } }, { key: "_updateGlobalSequence", value: function(e4, t4) {
        this.globalSeqMap.set(e4, t4);
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this.messageExtensionMap.clear(), this.globalSeqMap.clear(), this.getMessageExtensionsMap.clear();
      } }]), o3;
    }(vn), Gi = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        return n2(this, o3), (a3 = t3.call(this, e4))._className = "ComboMessageModule", a3;
      }
      return s2(o3, [{ key: "sendMessage", value: function(e4) {
        var t4 = this, o4 = this._constructMessageInstance(e4);
        if (null === o4)
          return lr({ code: hn.MESSAGE_SEND_FAIL });
        this._addSendMessageTotalCount(o4);
        var n3 = Date.now();
        return this.getModule(jo).setMessageRandom(o4), this._sendComboMessage(o4, e4).then(function(e5) {
          var a3 = e5.data, s3 = a3.time, r3 = a3.sequence, i3 = a3.readReceiptCode;
          rt2(i3) && 0 !== i3 && (new bs2(ws2.SEND_MESSAGE_WITH_RECEIPT).setMessage("from:".concat(o4.from, " to:").concat(o4.to, " sequence:").concat(r3, " readReceiptCode:").concat(i3)).end(), Ye2.warn("".concat(t4._className, ".sendMessage readReceiptCode:").concat(i3, " message:").concat(sr2[i3])));
          t4._addSendMessageSuccessCount(o4, n3);
          var c3 = t4.getModule(jo);
          o4.status = ro.SUCCESS, o4.time = s3, o4.conversationType === D2.CONV_GROUP && (o4.sequence = r3), c3.appendToMessageList(o4);
          var u3 = o4;
          return true === o4._isExcludedFromLastMessage && (u3 = ""), c3.onMessageSent({ conversationOptionsList: [{ conversationID: o4.conversationID, unreadCount: 0, type: o4.conversationType, subType: o4.conversationSubType, lastMessage: u3 }] }), er({ message: o4 });
        }).catch(function(e5) {
          return t4._onSendMessageFailed(o4, e5);
        });
      } }, { key: "_sendComboMessage", value: function(e4, t4) {
        var o4 = this._moduleManager.getModule(on), n3 = "";
        return e4.conversationType === D2.CONV_C2C && (n3 = "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.SEND_MESSAGE)), e4.conversationType === D2.CONV_GROUP && (n3 = "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.SEND_GROUP_MESSAGE)), o4.sendComboMessage({ servcmd: n3, data: t4 });
      } }, { key: "_constructMessageInstance", value: function(e4) {
        var t4 = null;
        try {
          var o4 = this.getMyUserID(), n3 = {};
          if (n3.senderTinyID = this.getMyTinyID(), n3.currentUser = o4, n3.from = e4.From_Account || o4, e4.GroupId ? (n3.conversationID = "".concat(D2.CONV_GROUP).concat(e4.GroupId), n3.conversationType = D2.CONV_GROUP, n3.to = e4.GroupId) : e4.To_Account && (n3.conversationID = "".concat(D2.CONV_C2C).concat(e4.To_Account), n3.conversationType = D2.CONV_C2C, n3.to = e4.To_Account), n3.time = e4.MsgTimeStamp || 0, n3.random = e4.Random || e4.MsgRandom || 0, n3.priority = e4.MsgPriority, it2(e4.CloudCustomData) && e4.CloudCustomData.length > 0 && (n3.cloudCustomData = e4.CloudCustomData), lt2(e4.SendMsgControl) && (n3.messageControlInfo = {}, e4.SendMsgControl.includes("NoUnread") && (n3.messageControlInfo.excludedFromUnreadCount = 1), e4.SendMsgControl.includes("NoLastMsg") && (n3.messageControlInfo.excludedFromLastMessage = 1)), n3.conversationType === D2.CONV_GROUP && lt2(e4.To_Account) && e4.To_Account.length > 0) {
            var a3 = e4.To_Account;
            e4.To_Account.length > 50 && (a3 = e4.To_Account.slice(0, 50), Ye2.warn("".concat(this._className, "._constructMessageInstance To_Account must be less than or equal to 50."))), n3.receiverList = v2(a3), e4.To_Account = v2(a3);
          }
          1 !== e4.IsNeedReadReceipt && 1 !== e4.NeedReadReceipt || (n3.needReadReceipt = true), 1 === e4.SupportMessageExtension && (n3.isSupportExtension = true), (t4 = new Zs(n3)).status = ro.UNSEND, e4.MsgClientTime = t4.clientTime, t4.conversationType === D2.CONV_C2C && (e4.MsgSeq = t4.sequence);
          for (var s3, r3 = e4.MsgBody.length, i3 = 0; i3 < r3; i3++)
            "TIMTextElem" === (s3 = e4.MsgBody[i3]).MsgType ? t4.setTextElement(s3.MsgContent.Text) : "TIMCustomElem" === s3.MsgType ? t4.setCustomElement({ data: s3.MsgContent.Data || "", description: s3.MsgContent.Desc || "", extension: s3.MsgContent.Ext || "" }) : "TIMFaceElem" === s3.MsgType && t4.setFaceElement({ index: s3.MsgContent.Index, data: s3.MsgContent.Data });
          var c3 = t4.getElements();
          t4.payload = c3[0].content, t4.type = c3[0].type;
        } catch (u3) {
          t4 = null, Ye2.error("".concat(this._className, "._constructMessageInstance failed. error:"), u3);
        }
        return t4;
      } }, { key: "_onSendMessageFailed", value: function(e4, t4) {
        e4.status = ro.FAIL, this.getModule(jo).deleteMessageRandom(e4), this._addSendMessageFailCountOnUser(e4, t4);
        var o4 = new bs2(ws2.SEND_MESSAGE);
        return o4.setMessage("tjg_id:".concat(this.generateTjgID(e4), " type:").concat(e4.type, " from:").concat(e4.from, " to:").concat(e4.to)), this.probeNetwork().then(function(e5) {
          var n3 = m2(e5, 2), a3 = n3[0], s3 = n3[1];
          o4.setError(t4, a3, s3).end();
        }), Ye2.error("".concat(this._className, "._onSendMessageFailed error:"), t4), lr(new rr({ code: t4 && t4.code ? t4.code : hn.MESSAGE_SEND_FAIL, message: t4 && t4.message ? t4.message : void 0, data: { message: e4 } }));
      } }, { key: "_getSendMessageSpecifiedKey", value: function(e4) {
        if (e4.conversationType === D2.CONV_C2C)
          return Es2;
        if (e4.conversationType === D2.CONV_GROUP) {
          var t4 = this.getModule(Ko).getLocalGroupProfile(e4.to);
          if (!t4)
            return;
          var o4 = t4.type;
          return Lt(o4) ? Ds : Ss2;
        }
      } }, { key: "_addSendMessageTotalCount", value: function(e4) {
        var t4 = this._getSendMessageSpecifiedKey(e4);
        t4 && this.getModule(un).addTotalCount(t4);
      } }, { key: "_addSendMessageSuccessCount", value: function(e4, t4) {
        var o4 = Math.abs(Date.now() - t4), n3 = this._getSendMessageSpecifiedKey(e4);
        if (n3) {
          var a3 = this.getModule(un);
          a3.addSuccessCount(n3), a3.addCost(n3, o4);
        }
      } }, { key: "_addSendMessageFailCountOnUser", value: function(e4, t4) {
        var o4 = t4.code, n3 = void 0 === o4 ? -1 : o4, a3 = this.getModule(un), s3 = this._getSendMessageSpecifiedKey(e4);
        Ri(n3) && s3 && a3.addFailedCountOfUserSide(s3);
      } }]), o3;
    }(vn), Pi = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        return n2(this, o3), (a3 = t3.call(this, e4))._className = "PluginModule", a3.plugins = {}, a3;
      }
      return s2(o3, [{ key: "registerPlugin", value: function(e4) {
        var t4 = this;
        Object.keys(e4).forEach(function(o4) {
          t4.plugins[o4] = e4[o4];
        }), new bs2(ws2.REGISTER_PLUGIN).setMessage("".concat(Object.keys(e4))).end();
      } }, { key: "getPlugin", value: function(e4) {
        return this.plugins[e4];
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset"));
      } }]), o3;
    }(vn), Ui = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        return n2(this, o3), (a3 = t3.call(this, e4))._className = "SyncUnreadMessageModule", a3._cookie = "", a3._onlineSyncFlag = false, a3.getInnerEmitterInstance().on(gr, a3._onLoginSuccess, _2(a3)), a3;
      }
      return s2(o3, [{ key: "_onLoginSuccess", value: function(e4) {
        this._startSync({ cookie: this._cookie, syncFlag: 0, isOnlineSync: 0 });
      } }, { key: "_startSync", value: function(e4) {
        var t4 = this, o4 = e4.cookie, n3 = e4.syncFlag, a3 = e4.isOnlineSync;
        Ye2.log("".concat(this._className, "._startSync cookie:").concat(o4, " syncFlag:").concat(n3, " isOnlineSync:").concat(a3)), this.request({ protocolName: Tn2, requestData: { cookie: o4, syncFlag: n3, isOnlineSync: a3 } }).then(function(e5) {
          var o5 = e5.data, n4 = o5.cookie, a4 = o5.syncFlag, s3 = o5.eventArray, r3 = o5.messageList, i3 = o5.C2CRemainingUnreadList, c3 = o5.C2CPairUnreadList;
          if (t4._cookie = n4, oo(n4))
            ;
          else if (0 === a4 || 1 === a4) {
            if (s3)
              t4.getModule(on).onMessage({ head: {}, body: { eventArray: s3, isInstantMessage: t4._onlineSyncFlag, isSyncingEnded: false } });
            t4.getModule(Bo).onNewC2CMessage({ dataList: r3, isInstantMessage: false, C2CRemainingUnreadList: i3, C2CPairUnreadList: c3 }), t4._startSync({ cookie: n4, syncFlag: a4, isOnlineSync: 0 });
          } else if (2 === a4) {
            if (s3)
              t4.getModule(on).onMessage({ head: {}, body: { eventArray: s3, isInstantMessage: t4._onlineSyncFlag, isSyncingEnded: true } });
            t4.getModule(Bo).onNewC2CMessage({ dataList: r3, isInstantMessage: t4._onlineSyncFlag, C2CRemainingUnreadList: i3, C2CPairUnreadList: c3 });
          }
        }).catch(function(e5) {
          Ye2.error("".concat(t4._className, "._startSync failed. error:"), e5);
        });
      } }, { key: "startOnlineSync", value: function() {
        Ye2.log("".concat(this._className, ".startOnlineSync")), this._onlineSyncFlag = true, this._startSync({ cookie: this._cookie, syncFlag: 0, isOnlineSync: 1 });
      } }, { key: "startSyncOnReconnected", value: function() {
        Ye2.log("".concat(this._className, ".startSyncOnReconnected.")), this._onlineSyncFlag = true, this._startSync({ cookie: this._cookie, syncFlag: 0, isOnlineSync: 0 });
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._onlineSyncFlag = false, this._cookie = "";
      } }]), o3;
    }(vn), bi = { request: { toAccount: "To_Account", fromAccount: "From_Account", to: "To_Account", from: "From_Account", groupID: "GroupId", groupAtUserID: "GroupAt_Account", extension: "Ext", data: "Data", description: "Desc", elements: "MsgBody", sizeType: "Type", downloadFlag: "Download_Flag", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", videoUrl: "", imageUrl: "URL", fileUrl: "Url", uuid: "UUID", priority: "MsgPriority", receiverUserID: "To_Account", receiverGroupID: "GroupId", messageSender: "SenderId", messageReceiver: "ReceiverId", nick: "From_AccountNick", avatar: "From_AccountHeadurl", messageNumber: "MsgNum", pbDownloadKey: "PbMsgKey", downloadKey: "JsonMsgKey", applicationType: "PendencyType", userIDList: "To_Account", groupNameList: "GroupName", userID: "To_Account", groupAttributeList: "GroupAttr", mainSequence: "AttrMainSeq", avChatRoomKey: "BytesKey", attributeControl: "AttrControl", sequence: "seq", messageControlInfo: "SendMsgControl", updateSequence: "UpdateSeq", clientTime: "MsgClientTime", sequenceList: "MsgSeqList", topicID: "TopicId", customData: "CustomString", isSupportTopic: "SupportTopic", isWebUniapp: "is_web_uniapp", isSupportExtension: "SupportMessageExtension", messageSequence: "MsgSeq", messageKey: "MsgKey", startSequence: "startSeq" }, response: { MsgPriority: "priority", ThumbUUID: "thumbUUID", VideoUUID: "videoUUID", Download_Flag: "downloadFlag", GroupId: "groupID", Member_Account: "userID", MsgList: "messageList", SyncFlag: "syncFlag", To_Account: "to", From_Account: "from", MsgSeq: "sequence", MsgRandom: "random", MsgTime: "time", MsgTimeStamp: "time", MsgContent: "content", MsgBody: "elements", From_AccountNick: "nick", From_AccountHeadurl: "avatar", GroupWithdrawInfoArray: "revokedInfos", GroupReadInfoArray: "groupMessageReadNotice", LastReadMsgSeq: "lastMessageSeq", WithdrawC2cMsgNotify: "c2cMessageRevokedNotify", C2cWithdrawInfoArray: "revokedInfos", C2cReadedReceipt: "c2cMessageReadReceipt", ReadC2cMsgNotify: "c2cMessageReadNotice", LastReadTime: "peerReadTime", MsgRand: "random", MsgType: "type", MsgShow: "messageShow", NextMsgSeq: "nextMessageSeq", FaceUrl: "avatar", ProfileDataMod: "profileModify", Profile_Account: "userID", ValueBytes: "value", ValueNum: "value", NoticeSeq: "noticeSequence", NotifySeq: "notifySequence", MsgFrom_AccountExtraInfo: "messageFromAccountExtraInformation", Operator_Account: "operatorID", OpType: "operationType", ReportType: "operationType", UserId: "userID", User_Account: "userID", List_Account: "userIDList", MsgOperatorMemberExtraInfo: "operatorInfo", MsgMemberExtraInfo: "memberInfoList", ImageUrl: "avatar", NickName: "nick", MsgGroupNewInfo: "newGroupProfile", MsgAppDefinedData: "groupCustomField", Owner_Account: "ownerID", GroupFaceUrl: "avatar", GroupIntroduction: "introduction", GroupNotification: "notification", GroupApplyJoinOption: "joinOption", MsgKey: "messageKey", GroupInfo: "groupProfile", ShutupTime: "muteTime", Desc: "description", Ext: "extension", GroupAt_Account: "groupAtUserID", MsgNum: "messageNumber", PbMsgKey: "pbDownloadKey", JsonMsgKey: "downloadKey", MsgModifiedFlag: "isModified", PendencyItem: "applicationItem", PendencyType: "applicationType", AddTime: "time", AddSource: "source", AddWording: "wording", ProfileImImage: "avatar", PendencyAdd: "friendApplicationAdded", FrienPencydDel_Account: "friendApplicationDeletedUserIDList", Peer_Account: "userID", GroupAttr: "groupAttributeList", GroupAttrAry: "groupAttributeList", AttrMainSeq: "mainSequence", seq: "sequence", GroupAttrOption: "groupAttributeOption", BytesChangedKeys: "changedKeyList", GroupAttrInfo: "groupAttributeList", GroupAttrSeq: "mainSequence", PushChangedAttrValFlag: "isWithChangedAttributeInfo", SubKeySeq: "sequence", Val: "value", MsgGroupFromCardName: "senderNameCard", MsgGroupFromNickName: "senderNick", C2cNick: "peerNick", C2cImage: "peerAvatar", SendMsgControl: "messageControlInfo", NoLastMsg: "excludedFromLastMessage", NoUnread: "excludedFromUnreadCount", UpdateSeq: "updateSequence", MuteNotifications: "muteFlag", MsgClientTime: "clientTime", TinyId: "tinyID", GroupMsgReceiptList: "readReceiptList", ReadNum: "readCount", UnreadNum: "unreadCount", TopicId: "topicID", MillionGroupFlag: "communityType", SupportTopic: "isSupportTopic", MsgTopicNewInfo: "newTopicInfo", ShutupAll: "muteAllMembers", CustomString: "customData", TopicFaceUrl: "avatar", TopicIntroduction: "introduction", TopicNotification: "notification", TopicIdArray: "topicIDList", MsgVersion: "messageVersion", C2cMsgModNotifys: "c2cMessageModified", GroupMsgModNotifys: "groupMessageModified", ApplyJoinOption: "joinOption", MsgFlag: "messageRemindType", AtInfoList: "groupAtInfoList", AtFlagList: "groupAtType", AtMsgSeq: "sequence", BanDuration: "duration", BanDescription: "reason", NotVisible: "invisible", BytesTag: "tag", BytesValue: "value", RptBytesValue: "value", LatestSeq: "globalSequence", ClearSeq: "clearSequence", SupportMessageExtension: "isSupportExtension", ExtensionList: "extensions", GroupCounter: "counterList", Revoker_Account: "revoker" }, ignoreKeyWord: ["C2C", "ID", "USP"] };
    function wi(e3, t3) {
      if ("string" != typeof e3 && !Array.isArray(e3))
        throw new TypeError("Expected the input to be `string | string[]`");
      t3 = Object.assign({ pascalCase: false }, t3);
      var o3;
      return 0 === (e3 = Array.isArray(e3) ? e3.map(function(e4) {
        return e4.trim();
      }).filter(function(e4) {
        return e4.length;
      }).join("-") : e3.trim()).length ? "" : 1 === e3.length ? t3.pascalCase ? e3.toUpperCase() : e3.toLowerCase() : (e3 !== e3.toLowerCase() && (e3 = Fi(e3)), e3 = e3.replace(/^[_.\- ]+/, "").toLowerCase().replace(/[_.\- ]+(\w|$)/g, function(e4, t4) {
        return t4.toUpperCase();
      }).replace(/\d+(\w|$)/g, function(e4) {
        return e4.toUpperCase();
      }), o3 = e3, t3.pascalCase ? o3.charAt(0).toUpperCase() + o3.slice(1) : o3);
    }
    var Fi = function(e3) {
      for (var t3 = false, o3 = false, n3 = false, a3 = 0; a3 < e3.length; a3++) {
        var s3 = e3[a3];
        t3 && /[a-zA-Z]/.test(s3) && s3.toUpperCase() === s3 ? (e3 = e3.slice(0, a3) + "-" + e3.slice(a3), t3 = false, n3 = o3, o3 = true, a3++) : o3 && n3 && /[a-zA-Z]/.test(s3) && s3.toLowerCase() === s3 ? (e3 = e3.slice(0, a3 - 1) + "-" + e3.slice(a3 - 1), n3 = o3, o3 = false, t3 = true) : (t3 = s3.toLowerCase() === s3 && s3.toUpperCase() !== s3, n3 = o3, o3 = s3.toUpperCase() === s3 && s3.toLowerCase() !== s3);
      }
      return e3;
    };
    function qi(e3, t3) {
      var o3 = 0;
      return function e4(t4, n3) {
        if (++o3 > 100)
          return o3--, t4;
        if (lt2(t4)) {
          var a3 = t4.map(function(t5) {
            return ct2(t5) ? e4(t5, n3) : t5;
          });
          return o3--, a3;
        }
        if (ct2(t4)) {
          var s3 = (r3 = t4, i3 = function(e5, t5) {
            if (!ft2(t5))
              return false;
            if ((a4 = t5) !== wi(a4))
              for (var o4 = 0; o4 < bi.ignoreKeyWord.length && !t5.includes(bi.ignoreKeyWord[o4]); o4++)
                ;
            var a4;
            return dt2(n3[t5]) ? function(e6) {
              return "OPPOChannelID" === e6 ? e6 : e6[0].toUpperCase() + wi(e6).slice(1);
            }(t5) : n3[t5];
          }, c3 = /* @__PURE__ */ Object.create(null), Object.keys(r3).forEach(function(e5) {
            var t5 = i3(r3[e5], e5);
            t5 && (c3[t5] = r3[e5]);
          }), c3);
          return s3 = wt2(s3, function(t5, o4) {
            return lt2(t5) || ct2(t5) ? e4(t5, n3) : t5;
          }), o3--, s3;
        }
        var r3, i3, c3;
      }(e3, t3);
    }
    function xi(e3, t3) {
      if (lt2(e3))
        return e3.map(function(e4) {
          return ct2(e4) ? xi(e4, t3) : e4;
        });
      if (ct2(e3)) {
        var o3 = (n3 = e3, a3 = function(e4, o4) {
          return dt2(t3[o4]) ? wi(o4) : t3[o4];
        }, s3 = {}, Object.keys(n3).forEach(function(e4) {
          s3[a3(n3[e4], e4)] = n3[e4];
        }), s3);
        return o3 = wt2(o3, function(e4) {
          return lt2(e4) || ct2(e4) ? xi(e4, t3) : e4;
        });
      }
      var n3, a3, s3;
    }
    var Vi = String.fromCharCode, Bi = function(e3) {
      var t3 = 0 | e3.charCodeAt(0);
      if (55296 <= t3)
        if (t3 < 56320) {
          var o3 = 0 | e3.charCodeAt(1);
          if (56320 <= o3 && o3 <= 57343) {
            if ((t3 = (t3 << 10) + o3 - 56613888 | 0) > 65535)
              return Vi(240 | t3 >>> 18, 128 | t3 >>> 12 & 63, 128 | t3 >>> 6 & 63, 128 | 63 & t3);
          } else
            t3 = 65533;
        } else
          t3 <= 57343 && (t3 = 65533);
      return t3 <= 2047 ? Vi(192 | t3 >>> 6, 128 | 63 & t3) : Vi(224 | t3 >>> 12, 128 | t3 >>> 6 & 63, 128 | 63 & t3);
    }, Ki = function(e3) {
      for (var t3 = void 0 === e3 ? "" : ("" + e3).replace(/[\x80-\uD7ff\uDC00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]?/g, Bi), o3 = 0 | t3.length, n3 = new Uint8Array(o3), a3 = 0; a3 < o3; a3 = a3 + 1 | 0)
        n3[a3] = 0 | t3.charCodeAt(a3);
      return n3;
    }, Hi = function(e3) {
      for (var t3 = new Uint8Array(e3), o3 = "", n3 = 0, a3 = t3.length; n3 < a3; ) {
        var s3 = t3[n3], r3 = 0, i3 = 0;
        if (s3 <= 127 ? (r3 = 0, i3 = 255 & s3) : s3 <= 223 ? (r3 = 1, i3 = 31 & s3) : s3 <= 239 ? (r3 = 2, i3 = 15 & s3) : s3 <= 244 && (r3 = 3, i3 = 7 & s3), a3 - n3 - r3 > 0)
          for (var c3 = 0; c3 < r3; )
            i3 = i3 << 6 | 63 & (s3 = t3[n3 + c3 + 1]), c3 += 1;
        else
          i3 = 65533, r3 = a3 - n3;
        o3 += String.fromCodePoint(i3), n3 += r3 + 1;
      }
      return o3;
    }, Wi = function() {
      function e3(t3) {
        n2(this, e3), this._handler = t3;
        var o3 = t3.getURL();
        if (this._socket = null, this._workerSocket = null, this._id = Ct(), this._handler.getIsWorkerEnabled()) {
          var a3 = URL.createObjectURL(new Blob([';let _socket = null;onmessage = function(event) {  if (event.data.cmd === "start") {    const url = event.data.url;    _socket = new WebSocket(url);    _socket.binaryType = "arraybuffer";    _socket.onopen = function() {      postMessage({ callback: "onOpen" });    };    _socket.onclose = function(e) {      postMessage({ callback: "onOpen", e: { code: e.code, reason: e.reason } });    };    _socket.onmessage = function(e) {      postMessage({ callback: "onMessage", data: e.data });    };    _socket.onerror = function(e) {      postMessage({ callback: "onError", e: { isTrusted: "true" } });    };  } else if (event.data.cmd === "sendMessage") {    if (_socket !== null) {      _socket.send(event.data.data);    }  } else if (event.data.cmd === "stop") {    if (_socket !== null) {      _socket.close(event.data.code);      _socket = null;    }  }};'], { type: "application/javascript; charset=utf-8" }));
          this._workerSocket = new Worker(a3);
          var s3 = this;
          this._workerSocket.onmessage = function(e4) {
            var t4 = e4.data, o4 = t4.callback, n3 = t4.e;
            "onOpen" === o4 ? s3._onOpen() : "onClose" === o4 ? s3._onClose(n3) : "onError" === o4 ? s3._onError(n3) : "onMessage" === o4 && s3._onMessage(e4.data);
          }, this._workerSocket.postMessage({ cmd: "start", id: this._id, url: o3 });
        } else
          le2 ? ie2 ? (pe2.connectSocket({ url: o3, header: { "content-type": "application/json" } }), pe2.onSocketClose(this._onClose.bind(this)), pe2.onSocketOpen(this._onOpen.bind(this)), pe2.onSocketMessage(this._onMessage.bind(this)), pe2.onSocketError(this._onError.bind(this))) : (this._socket = pe2.connectSocket({ url: o3, header: { "content-type": "application/json" }, complete: function() {
          } }), this._socket.onClose(this._onClose.bind(this)), this._socket.onOpen(this._onOpen.bind(this)), this._socket.onMessage(this._onMessage.bind(this)), this._socket.onError(this._onError.bind(this))) : de2 && (this._socket = new WebSocket(o3), this._socket.binaryType = "arraybuffer", this._socket.onopen = this._onOpen.bind(this), this._socket.onmessage = this._onMessage.bind(this), this._socket.onclose = this._onClose.bind(this), this._socket.onerror = this._onError.bind(this));
        this._canIUseBinaryFrame = t3.canIUseBinaryFrame();
      }
      return s2(e3, [{ key: "getID", value: function() {
        return this._id;
      } }, { key: "_onOpen", value: function() {
        this._handler.onOpen({ id: this._id });
      } }, { key: "_onClose", value: function(e4) {
        this._handler.onClose({ id: this._id, e: e4 });
      } }, { key: "_onMessage", value: function(e4) {
        this._handler.onMessage({ data: this._canIUseBinaryFrame ? Hi(e4.data) : e4.data });
      } }, { key: "_onError", value: function(e4) {
        this._handler.onError({ id: this._id, e: e4 });
      } }, { key: "setIsWorkerEnabled", value: function(e4) {
        this._isWorkerEnabled = true;
      } }, { key: "close", value: function(e4) {
        if (this._workerSocket && (this._workerSocket.postMessage({ cmd: "stop", code: e4 }), this._workerSocket.terminate(), this._workerSocket = null), ie2)
          return pe2.offSocketClose(), pe2.offSocketMessage(), pe2.offSocketOpen(), pe2.offSocketError(), void pe2.closeSocket();
        this._socket && (le2 ? (this._socket.onClose(function() {
        }), this._socket.onOpen(function() {
        }), this._socket.onMessage(function() {
        }), this._socket.onError(function() {
        })) : de2 && (this._socket.onopen = null, this._socket.onmessage = null, this._socket.onclose = null, this._socket.onerror = null), re2 ? this._socket.close({ code: e4 }) : this._socket.close(e4), this._socket = null);
      } }, { key: "send", value: function(e4) {
        if (this._workerSocket)
          this._workerSocket.postMessage({ cmd: "sendMessage", data: this._canIUseBinaryFrame ? Ki(e4.data).buffer : e4.data });
        else {
          if (ie2)
            return void pe2.sendSocketMessage({ data: e4.data, fail: function() {
              e4.fail && e4.requestID && e4.fail(e4.requestID);
            } });
          this._socket && (le2 ? this._socket.send({ data: this._canIUseBinaryFrame ? Ki(e4.data).buffer : e4.data, fail: function() {
            e4.fail && e4.requestID && e4.fail(e4.requestID);
          } }) : de2 && this._socket.send(this._canIUseBinaryFrame ? Ki(e4.data).buffer : e4.data));
        }
      } }]), e3;
    }(), Yi = 4e3, ji = 4001, $i = ["keyMap"], zi = ["keyMap"], Ji = "connected", Xi = "connecting", Qi = "disconnected", Zi = function() {
      function e3(t3) {
        n2(this, e3), this._channelModule = t3, this._className = "SocketHandler", this._promiseMap = /* @__PURE__ */ new Map(), this._readyState = Qi, this._simpleRequestMap = /* @__PURE__ */ new Map(), this.MAX_SIZE = 100, this._startSequence = Ct(), this._startTs = 0, this._reConnectFlag = false, this._nextPingTs = 0, this._reConnectCount = 0, this.MAX_RECONNECT_COUNT = 3, this._socketID = -1, this._random = 0, this._socket = null, this._url = "", this._onOpenTs = 0, this._canIUseBinaryFrame = true, this._isWorkerEnabled = true, this._setWebsocketHost(), this._initConnection();
      }
      return s2(e3, [{ key: "_setWebsocketHost", value: function() {
        var e4 = this._channelModule.getModule($o), t3 = b;
        this._channelModule.isOversea() && (t3 = w), e4.isSingaporeSite() ? t3 = F2 : e4.isKoreaSite() ? t3 = q2 : e4.isGermanySite() ? t3 = x2 : e4.isIndiaSite() ? t3 = V2 : e4.isJapanSite() ? t3 = B2 : e4.isUSASite() && (t3 = K2), H2.HOST.setCurrent(t3);
      } }, { key: "_initConnection", value: function() {
        dt2(H2.HOST.CURRENT.BACKUP) || "" === this._url ? this._url = H2.HOST.CURRENT.DEFAULT : this._url === H2.HOST.CURRENT.DEFAULT ? this._url = H2.HOST.CURRENT.BACKUP : this._url === H2.HOST.CURRENT.BACKUP && (this._url = H2.HOST.CURRENT.DEFAULT);
        var e4 = this._channelModule.getModule($o).getProxyServer();
        oo(e4) || (this._url = e4), this._connect(), this._nextPingTs = 0;
      } }, { key: "onCheckTimer", value: function(e4) {
        e4 % 1 == 0 && this._checkPromiseMap();
      } }, { key: "_checkPromiseMap", value: function() {
        var e4 = this;
        0 !== this._promiseMap.size && this._promiseMap.forEach(function(t3, o3) {
          var n3 = t3.reject, a3 = t3.timestamp, s3 = 15e3;
          -1 !== o3.indexOf(Mn2) && (s3 = 9e4), Date.now() - a3 >= s3 && (Ye2.log("".concat(e4._className, "._checkPromiseMap request timeout, delete requestID:").concat(o3)), e4._promiseMap.delete(o3), n3(new rr({ code: hn.NETWORK_TIMEOUT })), e4._channelModule.onRequestTimeout(o3));
        });
      } }, { key: "onOpen", value: function(e4) {
        if ("" !== this._readyState) {
          this._onOpenTs = Date.now();
          var t3 = e4.id;
          this._socketID = t3;
          var o3 = Date.now() - this._startTs;
          Ye2.log("".concat(this._className, "._onOpen cost ").concat(o3, " ms. socketID:").concat(t3)), new bs2(ws2.WS_ON_OPEN).setMessage(o3).setCostTime(o3).setMoreMessage("socketID:".concat(t3)).end(), e4.id === this._socketID && (this._readyState = Ji, this._reConnectCount = 0, this._resend(), true === this._reConnectFlag && (this._channelModule.onReconnected(), this._reConnectFlag = false), this._channelModule.onOpen());
        }
      } }, { key: "onClose", value: function(e4) {
        var t3 = new bs2(ws2.WS_ON_CLOSE), o3 = e4.id, n3 = e4.e, a3 = "sourceSocketID:".concat(o3, " currentSocketID:").concat(this._socketID, " code:").concat(n3.code, " reason:").concat(n3.reason), s3 = 0;
        0 !== this._onOpenTs && (s3 = Date.now() - this._onOpenTs), t3.setMessage(s3).setCostTime(s3).setMoreMessage(a3).setCode(n3.code).end(), Ye2.log("".concat(this._className, "._onClose ").concat(a3, " onlineTime:").concat(s3)), o3 === this._socketID && (this._readyState = Qi, s3 < 1e3 ? this._channelModule.onReconnectFailed() : this._channelModule.onClose());
      } }, { key: "onError", value: function(e4) {
        var t3 = e4.id, o3 = e4.e, n3 = "sourceSocketID:".concat(t3, " currentSocketID:").concat(this._socketID);
        new bs2(ws2.WS_ON_ERROR).setMessage(o3.errMsg || yt2(o3)).setMoreMessage(n3).setLevel("error").end(), Ye2.warn("".concat(this._className, "._onError"), o3, n3), t3 === this._socketID && (this._readyState = "", this._channelModule.onError());
      } }, { key: "onMessage", value: function(e4) {
        var t3;
        try {
          t3 = JSON.parse(e4.data);
        } catch (u3) {
          new bs2(ws2.JSON_PARSE_ERROR).setMessage(e4.data).end();
        }
        if (t3 && t3.head) {
          var o3 = this._getRequestIDFromHead(t3.head), n3 = t3.body;
          if (!o3.startsWith(H2.NAME.TUIROOM_SVR)) {
            var a3 = Ht(t3.head);
            n3 = xi(t3.body, this._getResponseKeyMap(a3));
          }
          if (Ye2.debug("".concat(this._className, ".onMessage ret:").concat(JSON.stringify(n3), " requestID:").concat(o3, " has:").concat(this._promiseMap.has(o3))), this._setNextPingTs(), this._promiseMap.has(o3)) {
            var s3 = this._promiseMap.get(o3), r3 = s3.resolve, i3 = s3.reject, c3 = s3.timestamp;
            return this._promiseMap.delete(o3), this._calcRTT(c3), void (n3.errorCode && 0 !== n3.errorCode ? (this._channelModule.onErrorCodeNotZero(n3), i3(new rr({ code: n3.errorCode, message: n3.errorInfo || "", data: o3.includes(qn2) || o3.includes(Aa) ? { elements: n3.elements, messageVersion: n3.messageVersion, cloudCustomData: n3.cloudCustomData } : void 0 }))) : r3(er(n3)));
          }
          this._channelModule.onMessage({ head: t3.head, body: n3 });
        }
      } }, { key: "_calcRTT", value: function(e4) {
        var t3 = Date.now() - e4;
        this._channelModule.getModule(un).addRTT(t3);
      } }, { key: "_connect", value: function() {
        this._startTs = Date.now(), this._onOpenTs = 0, this._socket = new Wi(this), this._socketID = this._socket.getID(), this._readyState = Xi, Ye2.log("".concat(this._className, "._connect isWorkerEnabled:").concat(this.getIsWorkerEnabled(), " socketID:").concat(this._socketID, " url:").concat(this.getURL())), new bs2(ws2.WS_CONNECT).setMessage("socketID:".concat(this._socketID, " url:").concat(this.getURL())).end();
      } }, { key: "getURL", value: function() {
        this._channelModule.isDevMode() && (this._canIUseBinaryFrame = false);
        var e4 = xt();
        (ie2 || ne2 && "windows" === e4 || ce2) && (this._canIUseBinaryFrame = false);
        var t3 = -1;
        "ios" === e4 ? t3 = ye2 || -1 : "android" === e4 && (t3 = Ce2 || -1);
        var o3 = this._channelModule.getModule($o), n3 = this._channelModule.getPlatform(), a3 = o3.getSDKAppID(), s3 = o3.getInstanceID();
        return this._canIUseBinaryFrame ? "".concat(this._url, "/binfo?sdkappid=").concat(a3, "&instanceid=").concat(s3, "&random=").concat(this._getRandom(), "&platform=").concat(n3, "&host=").concat(e4, "&version=").concat(t3) : "".concat(this._url, "/info?sdkappid=").concat(a3, "&instanceid=").concat(s3, "&random=").concat(this._getRandom(), "&platform=").concat(n3, "&host=").concat(e4, "&version=").concat(t3);
      } }, { key: "_closeConnection", value: function(e4) {
        Ye2.log("".concat(this._className, "._closeConnection socketID:").concat(this._socketID)), this._socket && (this._socket.close(e4), this._socketID = -1, this._socket = null, this._readyState = Qi);
      } }, { key: "_resend", value: function() {
        var e4 = this;
        if (Ye2.log("".concat(this._className, "._resend reConnectFlag:").concat(this._reConnectFlag), "promiseMap.size:".concat(this._promiseMap.size, " simpleRequestMap.size:").concat(this._simpleRequestMap.size)), this._promiseMap.size > 0 && this._promiseMap.forEach(function(t4, o4) {
          var n4 = t4.uplinkData, a4 = t4.resolve, s4 = t4.reject;
          e4._promiseMap.set(o4, { resolve: a4, reject: s4, timestamp: Date.now(), uplinkData: n4 }), e4._execute(o4, n4);
        }), this._simpleRequestMap.size > 0) {
          var t3, o3 = E2(this._simpleRequestMap);
          try {
            for (o3.s(); !(t3 = o3.n()).done; ) {
              var n3 = m2(t3.value, 2), a3 = n3[0], s3 = n3[1];
              this._execute(a3, s3);
            }
          } catch (r3) {
            o3.e(r3);
          } finally {
            o3.f();
          }
          this._simpleRequestMap.clear();
        }
      } }, { key: "send", value: function(e4) {
        var t3 = this;
        e4.head.seq = this._getSequence(), e4.head.reqtime = Math.floor(Date.now() / 1e3);
        e4.keyMap;
        var o3 = g2(e4, $i), n3 = this._getRequestIDFromHead(e4.head), a3 = JSON.stringify(o3);
        return new Promise(function(e5, s3) {
          (t3._promiseMap.set(n3, { resolve: e5, reject: s3, timestamp: Date.now(), uplinkData: a3 }), Ye2.debug("".concat(t3._className, ".send uplinkData:").concat(JSON.stringify(o3), " requestID:").concat(n3, " readyState:").concat(t3._readyState)), t3._readyState !== Ji) ? t3._reConnect() : (t3._execute(n3, a3), t3._channelModule.getModule(un).addRequestCount());
        });
      } }, { key: "simplySend", value: function(e4) {
        e4.head.seq = this._getSequence(), e4.head.reqtime = Math.floor(Date.now() / 1e3);
        e4.keyMap;
        var t3 = g2(e4, zi), o3 = this._getRequestIDFromHead(e4.head), n3 = JSON.stringify(t3);
        this._readyState !== Ji ? (this._simpleRequestMap.size < this.MAX_SIZE ? this._simpleRequestMap.set(o3, n3) : Ye2.log("".concat(this._className, ".simplySend. simpleRequestMap is full, drop request!")), this._reConnect()) : this._execute(o3, n3);
      } }, { key: "_execute", value: function(e4, t3) {
        this._socket.send({ data: t3, fail: le2 ? this._onSendFail.bind(this) : void 0, requestID: e4 });
      } }, { key: "_onSendFail", value: function(e4) {
        Ye2.log("".concat(this._className, "._onSendFail requestID:").concat(e4));
      } }, { key: "_getSequence", value: function() {
        var e4;
        if (this._startSequence < 2415919103)
          return e4 = this._startSequence, this._startSequence += 1, 2415919103 === this._startSequence && (this._startSequence = Ct()), e4;
      } }, { key: "_getRequestIDFromHead", value: function(e4) {
        return e4.servcmd + e4.seq;
      } }, { key: "_getResponseKeyMap", value: function(e4) {
        var o3 = this._channelModule.getKeyMap(e4);
        return t2(t2({}, bi.response), o3.response);
      } }, { key: "_reConnect", value: function() {
        this._readyState !== Ji && this._readyState !== Xi && this.forcedReconnect();
      } }, { key: "forcedReconnect", value: function() {
        var e4 = this;
        Ye2.log("".concat(this._className, ".forcedReconnect count:").concat(this._reConnectCount, " readyState:").concat(this._readyState)), this._reConnectFlag = true, this._resetRandom(), this._reConnectCount < this.MAX_RECONNECT_COUNT ? (this._reConnectCount += 1, this._closeConnection(ji), this._initConnection()) : (this._reConnectCount = 0, this._channelModule.probeNetwork().then(function(t3) {
          var o3 = m2(t3, 2), n3 = o3[0];
          o3[1];
          n3 ? (Ye2.warn("".concat(e4._className, ".forcedReconnect disconnected from wsserver but network is ok, continue...")), e4._closeConnection(ji), e4._initConnection()) : e4._channelModule.onReconnectFailed();
        }));
      } }, { key: "getReconnectFlag", value: function() {
        return this._reConnectFlag;
      } }, { key: "_setNextPingTs", value: function() {
        this._nextPingTs = Date.now() + 1e4;
      } }, { key: "getNextPingTs", value: function() {
        return this._nextPingTs;
      } }, { key: "isConnected", value: function() {
        return this._readyState === Ji;
      } }, { key: "canIUseBinaryFrame", value: function() {
        return this._canIUseBinaryFrame;
      } }, { key: "setIsWorkerEnabled", value: function(e4) {
        Ye2.log("".concat(this._className, ".setIsWorkerEnabled flag:").concat(e4)), this._isWorkerEnabled = e4;
      } }, { key: "getIsWorkerEnabled", value: function() {
        return this._isWorkerEnabled && Le2;
      } }, { key: "_getRandom", value: function() {
        return 0 === this._random && (this._random = Math.random()), this._random;
      } }, { key: "_resetRandom", value: function() {
        this._random = 0;
      } }, { key: "close", value: function() {
        Ye2.log("".concat(this._className, ".close")), this._closeConnection(Yi), this._promiseMap.clear(), this._startSequence = Ct(), this._readyState = Qi, this._simpleRequestMap.clear(), this._reConnectFlag = false, this._reConnectCount = 0, this._onOpenTs = 0, this._url = "", this._random = 0, this._canIUseBinaryFrame = true, this._isWorkerEnabled = true;
      } }]), e3;
    }(), ec = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        if (n2(this, o3), (a3 = t3.call(this, e4))._className = "ChannelModule", a3._socketHandler = new Zi(_2(a3)), a3._probing = false, a3._isAppShowing = true, a3._previousState = D2.NET_STATE_CONNECTED, le2 && "function" == typeof pe2.onAppShow && "function" == typeof pe2.onAppHide) {
          var s3 = a3._onAppHide.bind(_2(a3)), r3 = a3._onAppShow.bind(_2(a3));
          "function" == typeof pe2.offAppHide && pe2.offAppHide(s3), "function" == typeof pe2.offAppShow && pe2.offAppShow(r3), pe2.onAppHide(s3), pe2.onAppShow(r3);
        }
        return a3._timerForNotLoggedIn = -1, a3._timerForNotLoggedIn = setInterval(a3.onCheckTimer.bind(_2(a3)), 1e3), a3._fatalErrorFlag = false, a3;
      }
      return s2(o3, [{ key: "onCheckTimer", value: function(e4) {
        this._socketHandler && (this.isLoggedIn() ? (this._timerForNotLoggedIn > 0 && (clearInterval(this._timerForNotLoggedIn), this._timerForNotLoggedIn = -1), this._socketHandler.onCheckTimer(e4)) : this._socketHandler.onCheckTimer(1), this._checkNextPing());
      } }, { key: "onErrorCodeNotZero", value: function(e4) {
        this.getModule(on).onErrorCodeNotZero(e4);
      } }, { key: "onMessage", value: function(e4) {
        this.getModule(on).onMessage(e4);
      } }, { key: "send", value: function(e4) {
        return this._socketHandler ? this._previousState !== D2.NET_STATE_CONNECTED && e4.head.servcmd.includes(Ja) ? (this.reConnect(), this._sendLogViaHTTP(e4)) : this._socketHandler.send(e4) : Promise.reject();
      } }, { key: "_sendLogViaHTTP", value: function(e4) {
        var t4 = H2.HOST.CURRENT.STAT;
        return new Promise(function(o4, n3) {
          var a3 = "".concat(t4, "/v4/imopenstat/tim_web_report_v2?sdkappid=").concat(e4.head.sdkappid, "&reqtime=").concat(Date.now()), s3 = JSON.stringify(e4.body), r3 = "application/x-www-form-urlencoded;charset=UTF-8";
          if (le2)
            pe2.request({ url: a3, data: s3, method: "POST", timeout: 3e3, header: { "content-type": r3 }, success: function() {
              o4();
            }, fail: function() {
              n3(new rr({ code: hn.NETWORK_ERROR }));
            } });
          else {
            var i3 = new XMLHttpRequest(), c3 = setTimeout(function() {
              i3.abort(), n3(new rr({ code: hn.NETWORK_TIMEOUT }));
            }, 3e3);
            i3.onreadystatechange = function() {
              4 === i3.readyState && (clearTimeout(c3), 200 === i3.status || 304 === i3.status ? o4() : n3(new rr({ code: hn.NETWORK_ERROR })));
            }, i3.open("POST", a3, true), i3.setRequestHeader("Content-type", r3), i3.send(s3);
          }
        });
      } }, { key: "simplySend", value: function(e4) {
        return this._socketHandler ? this._socketHandler.simplySend(e4) : Promise.reject();
      } }, { key: "onOpen", value: function() {
        this._ping();
      } }, { key: "onClose", value: function() {
        this._socketHandler && (this._socketHandler.getReconnectFlag() && this._emitNetStateChangeEvent(D2.NET_STATE_DISCONNECTED));
        this.reConnect();
      } }, { key: "onError", value: function() {
        le2 && !ce2 && (this.isIntl() || Ye2.error("".concat(this._className, ".onError \u4ECEv2.11.2\u8D77\uFF0CSDK \u652F\u6301\u4E86 WebSocket\uFF0C\u5982\u60A8\u672A\u6DFB\u52A0\u76F8\u5173\u53D7\u4FE1\u57DF\u540D\uFF0C\u8BF7\u5148\u6DFB\u52A0\uFF01(\u5982\u5DF2\u6DFB\u52A0\u8BF7\u5FFD\u7565)\uFF0C\u5347\u7EA7\u6307\u5F15: https://web.sdk.qcloud.com/im/doc/zh-cn/tutorial-02-upgradeguideline.html"))), this._emitNetStateChangeEvent(D2.NET_STATE_DISCONNECTED);
      } }, { key: "getKeyMap", value: function(e4) {
        return this.getModule(on).getKeyMap(e4);
      } }, { key: "_onAppHide", value: function() {
        this._isAppShowing = false;
      } }, { key: "_onAppShow", value: function() {
        this._isAppShowing = true;
      } }, { key: "onRequestTimeout", value: function(e4) {
      } }, { key: "onReconnected", value: function() {
        Ye2.log("".concat(this._className, ".onReconnected")), this.getModule(on).onReconnected(), this._emitNetStateChangeEvent(D2.NET_STATE_CONNECTED);
      } }, { key: "onReconnectFailed", value: function() {
        Ye2.log("".concat(this._className, ".onReconnectFailed")), this._emitNetStateChangeEvent(D2.NET_STATE_DISCONNECTED);
      } }, { key: "setIsWorkerEnabled", value: function(e4) {
        this._socketHandler && this._socketHandler.setIsWorkerEnabled(false);
      } }, { key: "offline", value: function() {
        this._emitNetStateChangeEvent(D2.NET_STATE_DISCONNECTED);
      } }, { key: "reConnect", value: function() {
        var e4 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], t4 = false;
        this._socketHandler && (t4 = this._socketHandler.getReconnectFlag());
        var o4 = "forcedFlag:".concat(e4, " fatalErrorFlag:").concat(this._fatalErrorFlag, " previousState:").concat(this._previousState, " reconnectFlag:").concat(t4);
        if (Ye2.log("".concat(this._className, ".reConnect ").concat(o4)), !this._fatalErrorFlag && this._socketHandler) {
          if (true === e4)
            this._socketHandler.forcedReconnect();
          else {
            if (this._previousState === D2.NET_STATE_CONNECTING && t4)
              return;
            this._socketHandler.forcedReconnect();
          }
          this._emitNetStateChangeEvent(D2.NET_STATE_CONNECTING);
        }
      } }, { key: "_emitNetStateChangeEvent", value: function(e4) {
        this._previousState !== e4 && (Ye2.log("".concat(this._className, "._emitNetStateChangeEvent from ").concat(this._previousState, " to ").concat(e4)), this._previousState = e4, this.emitOuterEvent(S2.NET_STATE_CHANGE, { state: e4 }));
      } }, { key: "_ping", value: function() {
        var e4 = this;
        if (true !== this._probing) {
          this._probing = true;
          var t4 = this.getModule(on).getProtocolData({ protocolName: Xa });
          this.send(t4).then(function() {
            e4._probing = false;
          }).catch(function(t5) {
            if (Ye2.warn("".concat(e4._className, "._ping failed. error:"), t5), e4._probing = false, t5 && 60002 === t5.code)
              return new bs2(ws2.ERROR).setMessage("code:".concat(t5.code, " message:").concat(t5.message)).setNetworkType(e4.getModule(Xo).getNetworkType()).end(), e4._fatalErrorFlag = true, void e4._emitNetStateChangeEvent(D2.NET_STATE_DISCONNECTED);
            e4.probeNetwork().then(function(t6) {
              var o4 = m2(t6, 2), n3 = o4[0], a3 = o4[1];
              Ye2.log("".concat(e4._className, "._ping failed. probe network, isAppShowing:").concat(e4._isAppShowing, " online:").concat(n3, " networkType:").concat(a3)), n3 ? e4.reConnect() : e4._emitNetStateChangeEvent(D2.NET_STATE_DISCONNECTED);
            });
          });
        }
      } }, { key: "_checkNextPing", value: function() {
        this._socketHandler && (this._socketHandler.isConnected() && Date.now() >= this._socketHandler.getNextPingTs() && this._ping());
      } }, { key: "dealloc", value: function() {
        this._socketHandler && (this._socketHandler.close(), this._socketHandler = null), this._timerForNotLoggedIn > -1 && clearInterval(this._timerForNotLoggedIn);
      } }, { key: "onRestApiKickedOut", value: function() {
        this._socketHandler && (this._socketHandler.close(), this.reConnect(true));
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._previousState = D2.NET_STATE_CONNECTED, this._probing = false, this._fatalErrorFlag = false, this._timerForNotLoggedIn = setInterval(this.onCheckTimer.bind(this), 1e3);
      } }]), o3;
    }(vn), tc = ["a2", "tinyid"], oc = ["a2", "tinyid"], nc = function() {
      function e3(t3) {
        n2(this, e3), this._className = "ProtocolHandler", this._sessionModule = t3, this._configMap = /* @__PURE__ */ new Map(), this._fillConfigMap();
      }
      return s2(e3, [{ key: "_fillConfigMap", value: function() {
        this._configMap.clear();
        var e4 = this._sessionModule.genCommonHead(), o3 = this._sessionModule.genCosSpecifiedHead(), n3 = this._sessionModule.genSSOReportHead(), a3 = this._sessionModule.isIntl();
        this._configMap.set(Mn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_STATUS, ".").concat(H2.CMD.LOGIN) }), body: { state: "Online", isWebUniapp: 0, deviceBrand: 0 }, keyMap: { request: { deviceBrand: "InstType" }, response: { InstId: "instanceID", HelloInterval: "helloInterval" } } };
        }(e4)), this._configMap.set(yn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_STATUS, ".").concat(H2.CMD.LOGOUT) }), body: { type: 0 }, keyMap: { request: { type: "wslogout_type" } } };
        }(e4)), this._configMap.set(In, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_STATUS, ".").concat(H2.CMD.HELLO) }), body: { isWebUniapp: 0 }, keyMap: { response: { NewInstInfo: "newInstanceInfo" } } };
        }(e4)), this._configMap.set(Cn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.STAT_SERVICE, ".").concat(H2.CMD.KICK_OTHER) }), body: {} };
        }(e4)), this._configMap.set(ja, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_COS_SIGN, ".").concat(H2.CMD.COS_SIGN) }), body: { cmd: "open_im_cos_svc", subCmd: "get_cos_token", duration: 300, version: 2 }, keyMap: { request: { userSig: "usersig", subCmd: "sub_cmd", cmd: "cmd", duration: "duration", version: "version" }, response: { expired_time: "expiredTime", bucket_name: "bucketName", session_token: "sessionToken", tmp_secret_id: "secretId", tmp_secret_key: "secretKey" } } };
        }(o3)), this._configMap.set($a, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.CUSTOM_UPLOAD, ".").concat(H2.CMD.COS_PRE_SIG) }), body: { fileType: void 0, fileName: void 0, uploadMethod: 0, duration: 900 }, keyMap: { request: { userSig: "usersig", fileType: "file_type", fileName: "file_name", uploadMethod: "upload_method" }, response: { expired_time: "expiredTime", request_id: "requestId", head_url: "headUrl", upload_url: "uploadUrl", download_url: "downloadUrl", ci_url: "ciUrl", snapshot_url: "requestSnapshotUrl" } } };
        }(o3)), this._configMap.set(za, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.CUSTOM_UPLOAD, ".").concat(H2.CMD.VIDEO_COVER) }), body: { version: 1, platform: void 0, coverName: void 0, requestSnapshotUrl: void 0 }, keyMap: { request: { version: "version", platform: "platform", coverName: "cover_name", requestSnapshotUrl: "snapshot_url" }, response: { error_code: "errorCode", error_msg: "errorInfo", download_url: "snapshotUrl" } } };
        }(o3)), this._configMap.set(rs2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_CONFIG_MANAGER, ".").concat(H2.CMD.FETCH_COMMERCIAL_CONFIG) }), body: { SDKAppID: 0 }, keyMap: { request: { SDKAppID: "uint32_sdkappid" }, response: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_purchase_bits: "purchaseBits", uint32_expired_time: "expiredTime" } } };
        }(e4)), this._configMap.set(is2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_CONFIG_MANAGER, ".").concat(H2.CMD.PUSHED_COMMERCIAL_CONFIG) }), body: {}, keyMap: { response: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_purchase_bits: "purchaseBits", uint32_expired_time: "expiredTime" } } };
        }(e4)), this._configMap.set(as2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_CONFIG_MANAGER, ".").concat(H2.CMD.FETCH_CLOUD_CONTROL_CONFIG) }), body: { SDKAppID: 0, version: 0 }, keyMap: { request: { SDKAppID: "uint32_sdkappid", version: "uint64_version" }, response: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_json_config: "cloudControlConfig", uint32_expired_time: "expiredTime", uint32_sdkappid: "SDKAppID", uint64_version: "version" } } };
        }(e4)), this._configMap.set(ss2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_CONFIG_MANAGER, ".").concat(H2.CMD.PUSHED_CLOUD_CONTROL_CONFIG) }), body: {}, keyMap: { response: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_json_config: "cloudControlConfig", uint32_expired_time: "expiredTime", uint32_sdkappid: "SDKAppID", uint64_version: "version" } } };
        }(e4)), this._configMap.set(cs2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OVERLOAD_PUSH, ".").concat(H2.CMD.OVERLOAD_NOTIFY) }), body: {}, keyMap: { response: { OverLoadServCmd: "overloadCommand", DelaySecs: "waitingTime" } } };
        }(e4)), this._configMap.set(Tn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.GET_MESSAGES) }), body: { cookie: "", syncFlag: 0, needAbstract: 1, isOnlineSync: 0 }, keyMap: { request: { fromAccount: "From_Account", toAccount: "To_Account", from: "From_Account", to: "To_Account", time: "MsgTimeStamp", sequence: "MsgSeq", random: "MsgRandom", elements: "MsgBody" }, response: { MsgList: "messageList", SyncFlag: "syncFlag", To_Account: "to", From_Account: "from", ClientSeq: "clientSequence", MsgSeq: "sequence", NoticeSeq: "noticeSequence", NotifySeq: "notifySequence", MsgRandom: "random", MsgTimeStamp: "time", MsgContent: "content", ToGroupId: "to", MsgKey: "messageKey", GroupTips: "groupTips", MsgBody: "elements", MsgType: "type", C2CRemainingUnreadCount: "C2CRemainingUnreadList", C2CPairUnreadCount: "C2CPairUnreadList" } } };
        }(e4)), a3 || (this._configMap.set(En2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.BIG_DATA_HALLWAY_AUTH_KEY) }), body: {} };
        }(e4)), this._configMap.set(ys2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_MSG_AUDIT_MGR, ".").concat(H2.CMD.GET_RPOFANITY_LIST) }), body: { version: 0, deviceID: "", startIndex: void 0 }, keyMap: { request: { version: "uint64_version", deviceID: "str_device_id", startIndex: "uint64_start_index" }, response: { msg_cmd_error_code: "errorInfo", str_err_msg: "errorMessage", uint32_code: "errorCode", msg_scene_ctl_config: "filterConfig", uint64_c2c_custom_msg_flag: "c2c_custom_message", uint64_c2c_text_msg_flag: "c2c_text_message", uint64_group_custom_msg_flag: "group_custom_message", uint64_group_text_msg_flag: "group_text_message", uint64_group_info_flag: "group_profile", uint64_group_member_info_flag: "group_member_profile", uint64_relation_chain_flag: "sns", uint64_user_info_flag: "user_profile", rpt_msg_dirty_word: "lexicon", str_dirty_word: "profanity", str_replaced_content: "replacement", uint64_filter_type: "filterType", uint64_id: "id", uint64_word_type: "profanityType", uint64_complete_flag: "completeFlag", uint64_next_start_index: "nextStartIndex", uint64_version: "version", uint64_expired_time: "expiredTime" } } };
        }(e4))), this._configMap.set(Sn, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.SEND_MESSAGE) }), body: { fromAccount: "", toAccount: "", msgSeq: 0, msgRandom: 0, msgBody: [], cloudCustomData: void 0, nick: "", avatar: "", msgLifeTime: void 0, offlinePushInfo: { pushFlag: 0, title: "", desc: "", ext: "", apnsInfo: { badgeMode: 0, isVoipPush: void 0 }, androidInfo: { OPPOChannelID: "" } }, messageControlInfo: void 0, clientTime: void 0, needReadReceipt: 0, isSupportExtension: 0 }, keyMap: { request: { fromAccount: "From_Account", toAccount: "To_Account", msgTimeStamp: "MsgTimeStamp", msgSeq: "MsgSeq", msgRandom: "MsgRandom", msgBody: "MsgBody", count: "MaxCnt", lastMessageTime: "LastMsgTime", messageKey: "MsgKey", peerAccount: "Peer_Account", data: "Data", description: "Desc", extension: "Ext", type: "MsgType", content: "MsgContent", sizeType: "Type", uuid: "UUID", url: "", imageUrl: "URL", fileUrl: "Url", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", videoUrl: "", downloadFlag: "Download_Flag", nick: "From_AccountNick", avatar: "From_AccountHeadurl", from: "From_Account", time: "MsgTimeStamp", messageRandom: "MsgRandom", messageSequence: "MsgSeq", elements: "MsgBody", clientSequence: "ClientSeq", payload: "MsgContent", messageList: "MsgList", messageNumber: "MsgNum", abstractList: "AbstractList", messageBody: "MsgBody", needReadReceipt: "IsNeedReadReceipt" } } };
        }(e4)), this._configMap.set(Dn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.SEND_GROUP_MESSAGE) }), body: { fromAccount: "", groupID: "", random: 0, clientSequence: 0, priority: "", msgBody: [], cloudCustomData: void 0, onlineOnlyFlag: 0, offlinePushInfo: { pushFlag: 0, title: "", desc: "", ext: "", apnsInfo: { badgeMode: 0, isVoipPush: void 0 }, androidInfo: { OPPOChannelID: "" } }, groupAtInfo: [], messageControlInfo: void 0, clientTime: void 0, needReadReceipt: 0, topicID: void 0, receiverList: void 0, isSupportExtension: 0 }, keyMap: { request: { to: "GroupId", extension: "Ext", data: "Data", description: "Desc", random: "Random", sequence: "ReqMsgSeq", count: "ReqMsgNumber", type: "MsgType", priority: "MsgPriority", content: "MsgContent", elements: "MsgBody", sizeType: "Type", uuid: "UUID", url: "", imageUrl: "URL", fileUrl: "Url", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", videoUrl: "", downloadFlag: "Download_Flag", clientSequence: "ClientSeq", from: "From_Account", time: "MsgTimeStamp", messageRandom: "MsgRandom", messageSequence: "MsgSeq", payload: "MsgContent", messageList: "MsgList", messageNumber: "MsgNum", abstractList: "AbstractList", messageBody: "MsgBody", needReadReceipt: "NeedReadReceipt", receiverList: "To_Account" }, response: { MsgTime: "time", MsgSeq: "sequence" } } };
        }(e4)), this._configMap.set(On2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.REVOKE_C2C_MESSAGE) }), body: { msgInfo: { fromAccount: "", toAccount: "", msgTimeStamp: 0, msgSeq: 0, msgRandom: 0 } }, keyMap: { request: { msgInfo: "MsgInfo", msgTimeStamp: "MsgTimeStamp", msgSeq: "MsgSeq", msgRandom: "MsgRandom" } } };
        }(e4)), this._configMap.set(_a2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.REVOKE_GROUP_MESSAGE) }), body: { groupID: "", msgSeqList: void 0, topicID: "" }, keyMap: { request: { msgSeqList: "MsgSeqList", msgSeq: "MsgSeq" } } };
        }(e4)), this._configMap.set(bn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.GET_C2C_ROAM_MESSAGES) }), body: { peerAccount: "", count: 15, lastMessageTime: 0, messageKey: "", withRecalledMessage: 1, direction: 0 }, keyMap: { request: { messageKey: "MsgKey", peerAccount: "Peer_Account", count: "MaxCnt", lastMessageTime: "LastMsgTime", withRecalledMessage: "WithRecalledMsg", direction: "GetDirection" }, response: { LastMsgTime: "lastMessageTime", IsNeedReadReceipt: "needReadReceipt", IsPeerRead: "readReceiptSentByPeer" } } };
        }(e4)), this._configMap.set(qn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.MODIFY_C2C_MESSAGE) }), body: { from: "", to: "", sequence: 0, random: 0, time: 0, version: 0, elements: void 0, cloudCustomData: void 0 }, keyMap: { request: { sequence: "MsgSeq", random: "MsgRandom", time: "MsgTime", version: "MsgVersion", type: "MsgType", content: "MsgContent" } } };
        }(e4)), this._configMap.set(ma, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.GET_GROUP_ROAM_MESSAGES) }), body: { withRecalledMsg: 1, groupID: "", count: 15, sequence: "", topicID: void 0 }, keyMap: { request: { sequence: "ReqMsgSeq", count: "ReqMsgNumber", withRecalledMessage: "WithRecalledMsg" }, response: { Random: "random", MsgTime: "time", MsgSeq: "sequence", ReqMsgSeq: "sequence", RspMsgList: "messageList", IsPlaceMsg: "isPlaceMessage", IsSystemMsg: "isSystemMessage", ToGroupId: "to", EnumFrom_AccountType: "fromAccountType", EnumTo_AccountType: "toAccountType", GroupCode: "groupCode", MsgPriority: "priority", MsgBody: "elements", MsgType: "type", MsgContent: "content", IsFinished: "complete", Download_Flag: "downloadFlag", ClientSeq: "clientSequence", ThumbUUID: "thumbUUID", VideoUUID: "videoUUID", ToTopicId: "topicID", InvisibleMsgSeq: "invisibleSequenceList" } } };
        }(e4)), this._configMap.set(Gn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.SET_C2C_MESSAGE_READ) }), body: { C2CMsgReaded: void 0 }, keyMap: { request: { lastMessageTime: "LastedMsgTime" } } };
        }(e4)), this._configMap.set(Pn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.SET_C2C_PEER_MUTE_NOTIFICATIONS) }), body: { userIDList: void 0, muteFlag: 0 }, keyMap: { request: { userIDList: "Peer_Account", muteFlag: "Mute_Notifications" } } };
        }(e4)), this._configMap.set(Un2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.GET_C2C_PEER_MUTE_NOTIFICATIONS) }), body: { updateSequence: 0 }, keyMap: { response: { MuteNotificationsList: "muteFlagList" } } };
        }(e4)), this._configMap.set(ha, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.SET_GROUP_MESSAGE_READ) }), body: { groupID: void 0, messageReadSeq: void 0, topicID: void 0 }, keyMap: { request: { messageReadSeq: "MsgReadedSeq" } } };
        }(e4)), this._configMap.set(fa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.SET_ALL_MESSAGE_READ) }), body: { readAllC2CMessage: 0, groupMessageReadInfoList: [] }, keyMap: { request: { readAllC2CMessage: "C2CReadAllMsg", groupMessageReadInfoList: "GroupReadInfo", messageSequence: "MsgSeq" }, response: { C2CReadAllMsg: "readAllC2CMessage", GroupReadInfoArray: "groupMessageReadInfoList" } } };
        }(e4)), this._configMap.set(Fn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.DELETE_C2C_MESSAGE) }), body: { fromAccount: "", to: "", keyList: void 0 }, keyMap: { request: { keyList: "MsgKeyList" } } };
        }(e4)), this._configMap.set(Na, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.DELETE_GROUP_MESSAGE) }), body: { groupID: "", deleter: "", keyList: void 0, topicID: void 0 }, keyMap: { request: { deleter: "Deleter_Account", keyList: "Seqs" } } };
        }(e4)), this._configMap.set(Is2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_TRANSLATE, ".").concat(H2.CMD.TRANSLATE_TEXT) }), body: { sourceTextList: void 0, SDKAppID: 0, from: 0, source: "", target: "" }, keyMap: { request: { sourceTextList: "SourceText", SDKAppID: "SdkAppId", from: "FromAccount" }, response: { TargetText: "translatedTextList", RequestId: "requestID", CmdErrorCode: "error", ErrorCode: "code", ErrorInfo: "message" } } };
        }(e4)), this._configMap.set(Aa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.MODIFY_GROUP_MESSAGE) }), body: { groupID: "", topicID: void 0, sequence: 0, version: 0, elements: void 0, cloudCustomData: void 0 }, keyMap: { request: { sequence: "MsgSeq", version: "MsgVersion", type: "MsgType", content: "MsgContent" } } };
        }(e4)), this._configMap.set(va, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.GET_READ_RECEIPT) }), body: { groupID: "", sequenceList: void 0 }, keyMap: { request: { sequence: "MsgSeq" } } };
        }(e4)), this._configMap.set(ya, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.SEND_C2C_READ_RECEIPT) }), body: { peerAccount: "", messageInfoList: void 0 }, keyMap: { request: { peerAccount: "Peer_Account", messageInfoList: "C2CMsgInfo", fromAccount: "From_Account", toAccount: "To_Account", sequence: "MsgSeq", random: "MsgRandom", time: "MsgTime", clientTime: "MsgClientTime" } } };
        }(e4)), this._configMap.set(Ma, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.SEND_READ_RECEIPT) }), body: { groupID: "", sequenceList: void 0 }, keyMap: { request: { sequenceList: "MsgSeqList", sequence: "MsgSeq" } } };
        }(e4)), this._configMap.set(Ia, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.GET_READ_RECEIPT_DETAIL) }), body: { groupID: "", sequence: void 0, flag: 0, cursor: 0, count: 0 }, keyMap: { request: { sequence: "MsgSeq", count: "Num" }, response: { ReadList: "readUserIDList", Read_Account: "userID", UnreadList: "unreadUserIDList", Unread_Account: "userID", IsFinish: "isCompleted" } } };
        }(e4)), this._configMap.set(xn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM_MSG_EXT, ".").concat(H2.CMD.MODIFY_C2C_MESSAGE_EXTENSIONS) }), body: { from: void 0, to: void 0, messageKey: void 0, operateType: void 0, extensionList: void 0 } };
        }(e4)), this._configMap.set(Vn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM_MSG_EXT, ".").concat(H2.CMD.GET_C2C_MESSAGE_EXTENSIONS) }), body: { from: void 0, to: void 0, messageKey: void 0, startSequence: void 0 } };
        }(e4)), this._configMap.set(Pa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM_MSG_EXT, ".").concat(H2.CMD.MODIFY_GROUP_MESSAGE_EXTENSIONS) }), body: { groupID: void 0, messageSequence: void 0, operateType: void 0, extensionList: void 0 } };
        }(e4)), this._configMap.set(Ua, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM_MSG_EXT, ".").concat(H2.CMD.GET_GROUP_MESSAGE_EXTENSIONS) }), body: { groupID: void 0, messageSequence: void 0, startSequence: void 0 } };
        }(e4)), this._configMap.set(wn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.GET_PEER_READ_TIME) }), body: { userIDList: void 0 }, keyMap: { request: { userIDList: "To_Account" }, response: { ReadTime: "peerReadTimeList" } } };
        }(e4)), this._configMap.set(Kn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.RECENT_CONTACT, ".").concat(H2.CMD.GET_CONVERSATION_LIST) }), body: { fromAccount: void 0, count: 0 }, keyMap: { request: {}, response: { SessionItem: "conversations", ToAccount: "groupID", To_Account: "userID", UnreadMsgCount: "unreadCount", MsgGroupReadedSeq: "messageReadSeq", C2cPeerReadTime: "c2cPeerReadTime" } } };
        }(e4)), this._configMap.set(Bn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.RECENT_CONTACT, ".").concat(H2.CMD.PAGING_GET_CONVERSATION_LIST) }), body: { fromAccount: void 0, timeStamp: void 0, startIndex: void 0, pinnedTimeStamp: void 0, pinnedStartIndex: void 0, orderType: void 0, messageAssistFlag: 4, assistFlag: 15 }, keyMap: { request: { messageAssistFlag: "MsgAssistFlags", assistFlag: "AssistFlags", pinnedTimeStamp: "TopTimeStamp", pinnedStartIndex: "TopStartIndex" }, response: { SessionItem: "conversations", ToAccount: "groupID", To_Account: "userID", UnreadMsgCount: "unreadCount", MsgGroupReadedSeq: "messageReadSeq", C2cPeerReadTime: "c2cPeerReadTime", LastMsgFlags: "lastMessageFlag", TopFlags: "isPinned", TopTimeStamp: "pinnedTimeStamp", TopStartIndex: "pinnedStartIndex", GroupId: "convGroupID" } } };
        }(e4)), this._configMap.set(Hn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.RECENT_CONTACT, ".").concat(H2.CMD.DELETE_CONVERSATION) }), body: { fromAccount: "", toAccount: void 0, type: 1, toGroupID: void 0, clearHistoryMessage: 1 }, keyMap: { request: { toGroupID: "ToGroupid", clearHistoryMessage: "ClearRamble" } } };
        }(e4)), this._configMap.set(Wn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.RECENT_CONTACT, ".").concat(H2.CMD.CLEAR_HISTORY_MESSAGE) }), body: { fromAccount: "", toAccount: void 0, type: 1, toGroupID: void 0 }, keyMap: { request: { toGroupID: "ToGroupid" } } };
        }(e4)), this._configMap.set(Yn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.RECENT_CONTACT, ".").concat(H2.CMD.PIN_CONVERSATION) }), body: { fromAccount: "", operationType: 1, itemList: void 0 }, keyMap: { request: { itemList: "RecentContactItem" } } };
        }(e4)), this._configMap.set(jn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.DELETE_GROUP_AT_TIPS) }), body: { messageListToDelete: void 0 }, keyMap: { request: { messageListToDelete: "DelMsgList", messageSeq: "MsgSeq", messageRandom: "MsgRandom" } } };
        }(e4)), this._configMap.set($n2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.RECENT_CONTACT, ".").concat(H2.CMD.MARK_CONVERSATION) }), body: { fromAccount: "", itemList: void 0 }, keyMap: { request: { itemList: "MarkItem", operationType: "OptType", groupID: "ToGroupId" }, response: { ToGroupId: "groupID", OptType: "operationType" } } };
        }(e4)), this._configMap.set(zn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.RECENT_CONTACT, ".").concat(H2.CMD.MARK_CONVERSATION) }), body: { fromAccount: "", itemList: void 0 }, keyMap: { request: { itemList: "MarkItem", operationType: "OptType", groupID: "ToGroupId" }, response: { ToGroupId: "groupID", OptType: "operationType" } } };
        }(e4)), this._configMap.set(Jn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.RECENT_CONTACT, ".").concat(H2.CMD.CREATE_CONVERSATION_GROUP) }), body: { fromAccount: "", itemList: void 0 }, keyMap: { request: { itemList: "GroupContactItem", groupID: "ToGroupId" }, response: { GroupId: "convGroupID", ToGroupId: "groupID", OptType: "operationType" } } };
        }(e4)), this._configMap.set(Xn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.RECENT_CONTACT, ".").concat(H2.CMD.DELETE_CONVERSATION_GROUP) }), body: { fromAccount: "", groupName: void 0 }, keyMap: { request: {}, response: { GroupId: "convGroupID" } } };
        }(e4)), this._configMap.set(Qn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.RECENT_CONTACT, ".").concat(H2.CMD.UPDATE_CONVERSATION_GROUP) }), body: { fromAccount: "", updateType: void 0, updateGroup: void 0 }, keyMap: { request: { oldName: "OldGroupName", newName: "NewGroupName", groupID: "ToGroupId", operationType: "ContactOptType", groupName: "OldGroupName", updateItem: "ContactUpdateItem" }, response: { ContactOptType: "operationType", ToGroupId: "groupID", GroupId: "convGroupID" } } };
        }(e4)), this._configMap.set(Zn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.RECENT_CONTACT, ".").concat(H2.CMD.UPDATE_CONVERSATION_GROUP) }), body: { fromAccount: "", updateType: void 0, updateGroup: { groupName: void 0, updateGroupType: void 0, updateItem: void 0 } }, keyMap: { request: {}, response: {} } };
        }(e4)), this._configMap.set(ea, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.RECENT_CONTACT, ".").concat(H2.CMD.UPDATE_CONVERSATION_GROUP) }), body: { fromAccount: "", updateType: void 0, updateGroup: void 0 }, keyMap: { request: {}, response: {} } };
        }(e4)), this._configMap.set(ta, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.RECENT_CONTACT, ".").concat(H2.CMD.GET_CONVERSATION_GROUP_LIST) }), body: { fromAccount: "", startTime: void 0, startIndex: void 0 }, keyMap: { request: {}, response: { GroupId: "convGroupID", ToGroupId: "groupID", OptType: "operationType", CustomMark: "customData", ContactGroupId: "convGroupIDList" } } };
        }(e4)), this._configMap.set(Nn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.PROFILE, ".").concat(H2.CMD.PORTRAIT_GET) }), body: { fromAccount: "", userItem: [] }, keyMap: { request: { toAccount: "To_Account", standardSequence: "StandardSequence", customSequence: "CustomSequence" } } };
        }(e4)), this._configMap.set(An2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.PROFILE, ".").concat(H2.CMD.PORTRAIT_SET) }), body: { fromAccount: "", profileItem: [{ tag: $e2.NICK, value: "" }, { tag: $e2.GENDER, value: "" }, { tag: $e2.ALLOWTYPE, value: "" }, { tag: $e2.AVATAR, value: "" }] }, keyMap: { request: { toAccount: "To_Account", standardSequence: "StandardSequence", customSequence: "CustomSequence" } } };
        }(e4)), this._configMap.set(kn, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.FRIEND, ".").concat(H2.CMD.GET_BLACKLIST) }), body: { fromAccount: "", startIndex: 0, maxLimited: 30, lastSequence: 0 }, keyMap: { response: { CurruentSequence: "currentSequence" } } };
        }(e4)), this._configMap.set(Rn2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.FRIEND, ".").concat(H2.CMD.ADD_BLACKLIST) }), body: { fromAccount: "", toAccount: [] } };
        }(e4)), this._configMap.set(Ln2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.FRIEND, ".").concat(H2.CMD.DELETE_BLACKLIST) }), body: { fromAccount: "", toAccount: [] } };
        }(e4)), this._configMap.set(gs2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_STATUS, ".").concat(H2.CMD.SET_SELF_STATUS) }), body: { customStatus: "" }, keyMap: {} };
        }(e4)), this._configMap.set(_s2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_STATUS, ".").concat(H2.CMD.GET_USER_STATUS) }), body: { userIDList: void 0 }, keyMap: { response: { UserStatusList: "successUserList", ErrorList: "failureUserList", To_Account: "userID", Invalid_Account: "invalidUserID", Status: "statusType" } } };
        }(e4)), this._configMap.set(hs2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_STATUS, ".").concat(H2.CMD.SUBSCRIBE_USER_STATUS) }), body: { userIDList: void 0 }, keyMap: { response: { ErrorList: "failureUserList", To_Account: "userID", Invalid_Account: "invalidUserID" } } };
        }(e4)), this._configMap.set(fs2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_STATUS, ".").concat(H2.CMD.UNSUBSCRIBE_USER_STATUS) }), body: { userIDList: void 0, unsubscribeAll: void 0 }, keyMap: { response: { ErrorList: "failureUserList", To_Account: "userID", Invalid_Account: "invalidUserID" } } };
        }(e4)), this._configMap.set(oa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.GET_JOINED_GROUPS) }), body: { memberAccount: "", limit: void 0, offset: void 0, groupType: void 0, responseFilter: { groupBaseInfoFilter: void 0, selfInfoFilter: void 0 }, isSupportTopic: 0 }, keyMap: { request: { memberAccount: "Member_Account" }, response: { GroupIdList: "groups", NoUnreadSeqList: "excludedUnreadSequenceList", MsgSeq: "readedSequence", LastRecallTime: "_lastRevokedTime" } } };
        }(e4)), this._configMap.set(na, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.GET_GROUP_INFO) }), body: { groupIDList: void 0, responseFilter: { groupBaseInfoFilter: ["Type", "Name", "Introduction", "Notification", "FaceUrl", "Owner_Account", "CreateTime", "InfoSeq", "LastInfoTime", "LastMsgTime", "MemberNum", "MaxMemberNum", "ApplyJoinOption", "NextMsgSeq", "ShutUpAllMember"], groupCustomFieldFilter: void 0, memberInfoFilter: void 0, memberCustomFieldFilter: void 0 } }, keyMap: { request: { groupIDList: "GroupIdList", groupCustomField: "AppDefinedData", memberCustomField: "AppMemberDefinedData", groupCustomFieldFilter: "AppDefinedDataFilter_Group", memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember" }, response: { GroupIdList: "groups", AppDefinedData: "groupCustomField", AppMemberDefinedData: "memberCustomField", AppDefinedDataFilter_Group: "groupCustomFieldFilter", AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter", InfoSeq: "infoSequence", MemberList: "members", GroupInfo: "groups", ShutUpUntil: "muteUntil", ShutUpAllMember: "muteAllMembers" } } };
        }(e4)), this._configMap.set(aa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.CREATE_GROUP) }), body: { type: void 0, name: void 0, groupID: void 0, ownerID: void 0, introduction: void 0, notification: void 0, maxMemberNum: void 0, joinOption: void 0, memberList: void 0, groupCustomField: void 0, memberCustomField: void 0, webPushFlag: 1, avatar: "", isSupportTopic: void 0 }, keyMap: { request: { ownerID: "Owner_Account", userID: "Member_Account", avatar: "FaceUrl", maxMemberNum: "MaxMemberCount", joinOption: "ApplyJoinOption", groupCustomField: "AppDefinedData", memberCustomField: "AppMemberDefinedData" }, response: { HugeGroupFlag: "avChatRoomFlag", OverJoinedGroupLimit_Account: "overLimitUserIDList" } } };
        }(e4)), this._configMap.set(sa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.DESTROY_GROUP) }), body: { groupID: void 0 } };
        }(e4)), this._configMap.set(ra, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.MODIFY_GROUP_INFO) }), body: { groupID: void 0, name: void 0, introduction: void 0, notification: void 0, avatar: void 0, joinOption: void 0, groupCustomField: void 0, muteAllMembers: void 0 }, keyMap: { request: { groupCustomField: "AppDefinedData", muteAllMembers: "ShutUpAllMember", joinOption: "ApplyJoinOption", avatar: "FaceUrl" }, response: { AppDefinedData: "groupCustomField", ShutUpAllMember: "muteAllMembers" } } };
        }(e4)), this._configMap.set(ia, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.APPLY_JOIN_GROUP) }), body: { groupID: void 0, applyMessage: void 0, userDefinedField: void 0, webPushFlag: 1, historyMessageFlag: void 0 }, keyMap: { request: { applyMessage: "ApplyMsg", historyMessageFlag: "HugeGroupHistoryMsgFlag" }, response: { HugeGroupFlag: "avChatRoomFlag", AVChatRoomKey: "avChatRoomKey", RspMsgList: "messageList", ToGroupId: "to" } } };
        }(e4)), this._configMap.set(ca, function(e5) {
          e5.a2, e5.tinyid;
          return { head: t2(t2({}, g2(e5, tc)), {}, { servcmd: "".concat(H2.NAME.BIG_GROUP_NO_AUTH, ".").concat(H2.CMD.APPLY_JOIN_GROUP) }), body: { groupID: void 0, applyMessage: void 0, userDefinedField: void 0, webPushFlag: 1 }, keyMap: { request: { applyMessage: "ApplyMsg" }, response: { HugeGroupFlag: "avChatRoomFlag" } } };
        }(e4)), this._configMap.set(ua, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.QUIT_GROUP) }), body: { groupID: void 0 } };
        }(e4)), this._configMap.set(la, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.SEARCH_GROUP_BY_ID) }), body: { groupIDList: void 0, responseFilter: { groupBasePublicInfoFilter: ["Type", "Name", "Introduction", "Notification", "FaceUrl", "CreateTime", "Owner_Account", "LastInfoTime", "LastMsgTime", "NextMsgSeq", "MemberNum", "MaxMemberNum", "ApplyJoinOption"] } }, keyMap: { response: {} } };
        }(e4)), this._configMap.set(da, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.CHANGE_GROUP_OWNER) }), body: { groupID: void 0, newOwnerID: void 0 }, keyMap: { request: { newOwnerID: "NewOwner_Account" } } };
        }(e4)), this._configMap.set(pa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.HANDLE_APPLY_JOIN_GROUP) }), body: { groupID: void 0, applicant: void 0, handleAction: void 0, handleMessage: void 0, authentication: void 0, messageKey: void 0, userDefinedField: void 0 }, keyMap: { request: { applicant: "Applicant_Account", handleAction: "HandleMsg", handleMessage: "ApprovalMsg", messageKey: "MsgKey" } } };
        }(e4)), this._configMap.set(ga, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.HANDLE_GROUP_INVITATION) }), body: { groupID: void 0, inviter: void 0, handleAction: void 0, handleMessage: void 0, authentication: void 0, messageKey: void 0, userDefinedField: void 0 }, keyMap: { request: { inviter: "Inviter_Account", handleAction: "HandleMsg", handleMessage: "ApprovalMsg", messageKey: "MsgKey" } } };
        }(e4)), this._configMap.set(Ca, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.GET_GROUP_APPLICATION) }), body: { startTime: void 0, limit: void 0, handleAccount: void 0 }, keyMap: { request: { handleAccount: "Handle_Account" } } };
        }(e4)), this._configMap.set(Ta, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.DELETE_GROUP_SYSTEM_MESSAGE) }), body: { messageListToDelete: void 0 }, keyMap: { request: { messageListToDelete: "DelMsgList", messageSeq: "MsgSeq", messageRandom: "MsgRandom" } } };
        }(e4)), this._configMap.set(Ea, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.BIG_GROUP_LONG_POLLING, ".").concat(H2.CMD.AVCHATROOM_LONG_POLL) }), body: { USP: 1, startSeq: 1, startBroadcastSeq: void 0, holdTime: 90, key: void 0 }, keyMap: { request: { USP: "USP" }, response: { ToGroupId: "groupID", RspBroadcastMsgList: "broadcastMessageList", IsSystemMsg: "isSystemMessage" } } };
        }(e4)), this._configMap.set(Sa, function(e5) {
          e5.a2, e5.tinyid;
          return { head: t2(t2({}, g2(e5, oc)), {}, { servcmd: "".concat(H2.NAME.BIG_GROUP_LONG_POLLING_NO_AUTH, ".").concat(H2.CMD.AVCHATROOM_LONG_POLL) }), body: { USP: 1, startSeq: 1, holdTime: 90, key: void 0 }, keyMap: { request: { USP: "USP" }, response: { ToGroupId: "groupID" } } };
        }(e4)), this._configMap.set(Da, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.GET_ONLINE_MEMBER_NUM) }), body: { groupID: void 0 } };
        }(e4)), this._configMap.set(ka, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.SET_GROUP_ATTRIBUTES) }), body: { groupID: void 0, groupAttributeList: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] }, keyMap: { request: { key: "key", value: "value" } } };
        }(e4)), this._configMap.set(Ra, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.MODIFY_GROUP_ATTRIBUTES) }), body: { groupID: void 0, groupAttributeList: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] }, keyMap: { request: { key: "key", value: "value" } } };
        }(e4)), this._configMap.set(La, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.DELETE_GROUP_ATTRIBUTES) }), body: { groupID: void 0, groupAttributeList: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] }, keyMap: { request: { key: "key" } } };
        }(e4)), this._configMap.set(Oa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.CLEAR_GROUP_ATTRIBUTES) }), body: { groupID: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] } };
        }(e4)), this._configMap.set(Ga, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP_ATTR, ".").concat(H2.CMD.GET_GROUP_ATTRIBUTES) }), body: { groupID: void 0, avChatRoomKey: void 0, groupType: 1 }, keyMap: { request: { avChatRoomKey: "Key", groupType: "GroupType" } } };
        }(e4)), this._configMap.set(ba, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.GET_GROUP_NOTIFY) }), body: { notifyType: 1, groupID: "", beginTime: 0, endTime: 0, limit: 20 }, keyMap: { request: {}, response: { NextMsgTime: "nextRevokedTime", NotifyMsgList: "notifyList" } } };
        }(e4)), this._configMap.set(wa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.UPDATE_GROUP_COUNTER) }), body: { groupID: void 0, counterList: void 0, avChatRoomKey: void 0, mode: void 0 }, keyMap: { request: { counterList: "GroupCounter" } } };
        }(e4)), this._configMap.set(Fa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.GET_GROUP_COUNTER) }), body: { groupID: void 0, keyList: [], avChatRoomKey: void 0 }, keyMap: { request: { keyList: "GroupCounterKeys" } } };
        }(e4)), this._configMap.set(us2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP_COMMUNITY, ".").concat(H2.CMD.CREATE_TOPIC) }), body: { groupID: void 0, topicName: void 0, avatar: void 0, customData: void 0, topicID: void 0, notification: void 0, introduction: void 0 }, keyMap: { request: { avatar: "FaceUrl" } } };
        }(e4)), this._configMap.set(ls2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP_COMMUNITY, ".").concat(H2.CMD.DELETE_TOPIC) }), body: { groupID: void 0, topicIDList: void 0 }, keyMap: { request: { topicIDList: "TopicIdList" }, response: { DestroyResultItem: "resultList" } } };
        }(e4)), this._configMap.set(ds2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP_COMMUNITY, ".").concat(H2.CMD.UPDATE_TOPIC_PROFILE) }), body: { groupID: void 0, topicID: void 0, avatar: void 0, customData: void 0, notification: void 0, introduction: void 0, muteAllMembers: void 0, topicName: void 0 }, keyMap: { request: { avatar: "FaceUrl", muteAllMembers: "ShutUpAllMember" } } };
        }(e4)), this._configMap.set(ps2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP_COMMUNITY, ".").concat(H2.CMD.GET_TOPIC_LIST) }), body: { groupID: void 0, topicIDList: void 0, MemberInfoFilter: ["NoUnreadSeqList"] }, keyMap: { request: { topicIDList: "TopicIdList" }, response: { TopicAndSelfInfo: "topicInfoList", TopicInfo: "topic", GroupID: "groupID", ShutUpTime: "muteTime", ShutUpAllFlag: "muteAllMembers", LastMsgTime: "lastMessageTime", MsgSeq: "readedSequence", LastMsgSeq: "sequence", NoUnreadSeqList: "excludedUnreadSequenceList" } } };
        }(e4)), this._configMap.set(qa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.GET_GROUP_MEMBER_LIST) }), body: { groupID: void 0, limit: 0, offset: void 0, next: void 0, memberRoleFilter: void 0, memberInfoFilter: ["Role", "NameCard", "ShutUpUntil", "JoinTime"], memberCustomFieldFilter: void 0 }, keyMap: { request: { memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember" }, response: { AppMemberDefinedData: "memberCustomField", AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter", MemberList: "members", ShutUpUntil: "muteUntil" } } };
        }(e4)), this._configMap.set(xa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP_AVCHATROOM, ".").concat(H2.CMD.GET_AVCHATROOM_MEMBER_LIST) }), body: { groupID: void 0, offset: void 0, filter: void 0 }, keyMap: { request: { offset: "Timestamp", filter: "Mark" }, response: { NextTimestamp: "offset" } } };
        }(e4)), this._configMap.set(Va, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.GET_GROUP_MEMBER_INFO) }), body: { groupID: void 0, userIDList: void 0, memberInfoFilter: void 0, memberCustomFieldFilter: void 0 }, keyMap: { request: { userIDList: "Member_List_Account", memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember" }, response: { MemberList: "members", ShutUpUntil: "muteUntil", AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter", AppMemberDefinedData: "memberCustomField" } } };
        }(e4)), this._configMap.set(Ba, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.ADD_GROUP_MEMBER) }), body: { groupID: void 0, silence: void 0, userIDList: void 0 }, keyMap: { request: { userID: "Member_Account", userIDList: "MemberList" }, response: { MemberList: "members" } } };
        }(e4)), this._configMap.set(Ka, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.DELETE_GROUP_MEMBER) }), body: { groupID: void 0, userIDList: void 0, reason: void 0 }, keyMap: { request: { userIDList: "MemberToDel_Account" } } };
        }(e4)), this._configMap.set(Ha, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.BAN_AVCHATROOM_MEMBER) }), body: { groupID: void 0, userIDList: void 0, duration: void 0, reason: "" }, keyMap: { request: { userIDList: "Members_Account", duration: "Duration", reason: "Description" } } };
        }(e4)), this._configMap.set(Wa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP, ".").concat(H2.CMD.MODIFY_GROUP_MEMBER_INFO) }), body: { groupID: void 0, topicID: void 0, userID: void 0, messageRemindType: void 0, nameCard: void 0, role: void 0, memberCustomField: void 0, muteTime: void 0 }, keyMap: { request: { userID: "Member_Account", memberCustomField: "AppMemberDefinedData", muteTime: "ShutUpTime", messageRemindType: "MsgFlag" } } };
        }(e4)), this._configMap.set(Ya, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.GROUP_AVCHATROOM, ".").concat(H2.CMD.MARK_AVCHATROOM_MEMBER_INFO) }), body: { groupID: void 0, operationType: 1, memberList: [] }, keyMap: { request: { operationType: "CommandType", memberList: "MemberList", markType: "Marks", userID: "Member_Account" }, response: { CommandType: "operationType", Marks: "markType", Member_Account: "userID" } } };
        }(e4)), this._configMap.set(Ja, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_STAT, ".").concat(H2.CMD.TIM_WEB_REPORT_V2) }), body: { header: {}, event: [], quality: [] }, keyMap: { request: { SDKType: "sdk_type", SDKVersion: "sdk_version", deviceType: "device_type", platform: "platform", instanceID: "instance_id", traceID: "trace_id", SDKAppID: "sdk_app_id", userID: "user_id", tinyID: "tiny_id", extension: "extension", timestamp: "timestamp", networkType: "network_type", eventType: "event_type", code: "error_code", message: "error_message", moreMessage: "more_message", duplicate: "duplicate", costTime: "cost_time", level: "level", qualityType: "quality_type", reportIndex: "report_index", wholePeriod: "whole_period", totalCount: "total_count", rttCount: "success_count_business", successRateOfRequest: "percent_business", countLessThan1Second: "success_count_business", percentOfCountLessThan1Second: "percent_business", countLessThan3Second: "success_count_platform", percentOfCountLessThan3Second: "percent_platform", successCountOfBusiness: "success_count_business", successRateOfBusiness: "percent_business", successCountOfPlatform: "success_count_platform", successRateOfPlatform: "percent_platform", successCountOfMessageReceived: "success_count_business", successRateOfMessageReceived: "percent_business", avgRTT: "average_value", avgDelay: "average_value", avgValue: "average_value", uiPlatform: "ui_platform" } } };
        }(n3)), this._configMap.set(Xa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.HEARTBEAT, ".").concat(H2.CMD.ALIVE) }), body: {} };
        }(e4)), this._configMap.set(Qa, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_PUSH, ".").concat(H2.CMD.MESSAGE_PUSH) }), body: {}, keyMap: { response: { C2cMsgArray: "C2CMessageArray", GroupMsgArray: "groupMessageArray", GroupTips: "groupTips", C2cNotifyMsgArray: "C2CNotifyMessageArray", C2cMsgInfo: "C2CReadReceiptArray", ClientSeq: "clientSequence", MsgPriority: "priority", NoticeSeq: "noticeSequence", MsgContent: "content", MsgType: "type", MsgBody: "elements", ToGroupId: "to", Desc: "description", Ext: "extension", IsSyncMsg: "isSyncMessage", Flag: "needSync", NeedAck: "needAck", PendencyAdd_Account: "userID", ProfileImNick: "nick", PendencyType: "applicationType", C2CReadAllMsg: "readAllC2CMessage", IsNeedReadReceipt: "needReadReceipt", Status: "statusType", MsgExtensionNotify: "messageExtensionNotify", ExtensionC2cMsgInfo: "messageInfo", ExtensionGroupMsgInfo: "messageInfo", MsgOptType: "operateType", SetKVInfo: "operateResultList", DeleteKVInfo: "operateResultList", ClearKVInfo: "operateResultList", MsgKeyValue: "extensions", ClearMsgSeq: "clearSequence", MsgLastSeq: "globalSequence" } } };
        }(e4)), this._configMap.set(Za, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_PUSH, ".").concat(H2.CMD.MULTI_MESSAGE_PUSH) }), body: {}, keyMap: { response: { GroupMsgArray: "groupMessageArray", GroupTips: "groupTips", ClientSeq: "clientSequence", MsgPriority: "priority", NoticeSeq: "noticeSequence", MsgContent: "content", MsgType: "type", MsgBody: "elements", ToGroupId: "to", Desc: "description", Ext: "extension", IsSyncMsg: "isSyncMessage", Flag: "needSync", NeedAck: "needAck", PendencyType: "applicationType" } } };
        }(e4)), this._configMap.set(es2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.OPEN_IM, ".").concat(H2.CMD.MESSAGE_PUSH_ACK) }), body: { sessionData: void 0 }, keyMap: { request: { sessionData: "SessionData" } } };
        }(e4)), this._configMap.set(ts2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_STATUS, ".").concat(H2.CMD.STATUS_FORCE_OFFLINE) }), body: {}, keyMap: { response: { C2cNotifyMsgArray: "C2CNotifyMessageArray", NoticeSeq: "noticeSequence", KickoutMsgNotify: "kickoutMsgNotify", NewInstInfo: "newInstanceInfo" } } };
        }(e4)), this._configMap.set(ns2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_LONG_MESSAGE, ".").concat(H2.CMD.DOWNLOAD_MERGER_MESSAGE) }), body: { downloadKey: "" }, keyMap: { response: { Data: "data", Desc: "description", Ext: "extension", Download_Flag: "downloadFlag", ThumbUUID: "thumbUUID", VideoUUID: "videoUUID" } } };
        }(e4)), this._configMap.set(os2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_LONG_MESSAGE, ".").concat(H2.CMD.UPLOAD_MERGER_MESSAGE) }), body: { messageList: [] }, keyMap: { request: { fromAccount: "From_Account", toAccount: "To_Account", msgTimeStamp: "MsgTimeStamp", msgSeq: "MsgSeq", msgRandom: "MsgRandom", msgBody: "MsgBody", type: "MsgType", content: "MsgContent", data: "Data", description: "Desc", extension: "Ext", sizeType: "Type", uuid: "UUID", url: "", imageUrl: "URL", fileUrl: "Url", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", videoUrl: "", downloadFlag: "Download_Flag", from: "From_Account", time: "MsgTimeStamp", messageRandom: "MsgRandom", messageSequence: "MsgSeq", elements: "MsgBody", clientSequence: "ClientSeq", payload: "MsgContent", messageList: "MsgList", messageNumber: "MsgNum", abstractList: "AbstractList", messageBody: "MsgBody" } } };
        }(e4)), this._configMap.set(Ms, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_STATUS, ".").concat(H2.CMD.SET_TOKEN) }), body: { tokenID: "", pushMsg: 0, sdkAppID: 0, businessID: "", deviceBrand: "", deviceToken: "", isTpns: 0, isWebUniapp: 0 }, keyMap: { request: { tokenID: "TokenID", pushMsg: "PushMsg", sdkAppID: "EnterVersion", businessID: "BusiID", deviceBrand: "InstType", deviceToken: "VarToken", isTpns: "IsTpns" } } };
        }(e4)), this._configMap.set(vs2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_STATUS, ".").concat(H2.CMD.STAT_FOREGROUND) }), body: { isWebUniapp: 0 } };
        }(e4)), this._configMap.set(ms2, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(H2.NAME.IM_OPEN_STATUS, ".").concat(H2.CMD.STAT_BACKGROUND) }), body: { C2CUnread: 0, GroupUnread: 0, isWebUniapp: 0 }, keyMap: { request: { c2cUnreadCount: "C2cUnread", groupUnreadCount: "GrpUnread" } } };
        }(e4));
      } }, { key: "has", value: function(e4) {
        return this._configMap.has(e4);
      } }, { key: "get", value: function(e4) {
        return this._configMap.get(e4);
      } }, { key: "update", value: function() {
        this._fillConfigMap();
      } }, { key: "getKeyMap", value: function(e4) {
        return this.has(e4) ? this.get(e4).keyMap || {} : (Ye2.warn("".concat(this._className, ".getKeyMap unknown protocolName:").concat(e4)), {});
      } }, { key: "getProtocolData", value: function(e4) {
        var t3 = e4.protocolName, o3 = e4.requestData, n3 = this.get(t3), a3 = null;
        if (o3) {
          var s3 = this._simpleDeepCopy(n3), r3 = this._updateService(o3, s3), i3 = r3.body, c3 = /* @__PURE__ */ Object.create(null);
          for (var u3 in i3)
            if (Object.prototype.hasOwnProperty.call(i3, u3)) {
              if (c3[u3] = i3[u3], void 0 === o3[u3])
                continue;
              c3[u3] = o3[u3];
            }
          r3.body = c3, a3 = this._getUplinkData(r3);
        } else
          a3 = this._getUplinkData(n3);
        return a3;
      } }, { key: "_getUplinkData", value: function(e4) {
        var t3 = this._requestDataCleaner(e4), o3 = Ht(t3.head), n3 = qi(t3.body, this._getRequestKeyMap(o3));
        return t3.body = n3, t3;
      } }, { key: "_updateService", value: function(e4, t3) {
        var o3 = Ht(t3.head);
        if (this._isFromGroupRequest(t3)) {
          var n3 = e4.type, a3 = e4.groupID, s3 = void 0 === a3 ? void 0 : a3, r3 = e4.groupIDList, i3 = void 0 === r3 ? [] : r3;
          dt2(s3) && (s3 = i3[0] || ""), Ot2({ type: n3, groupID: s3 }) && (t3.head.servcmd = "".concat(H2.NAME.GROUP_COMMUNITY, ".").concat(o3));
        }
        return t3;
      } }, { key: "_isFromGroupRequest", value: function(e4) {
        return e4.head.servcmd.includes(H2.NAME.GROUP) || e4.head.servcmd.includes(H2.NAME.GROUP_ATTR);
      } }, { key: "_getRequestKeyMap", value: function(e4) {
        var o3 = this.getKeyMap(e4);
        return t2(t2({}, bi.request), o3.request);
      } }, { key: "_requestDataCleaner", value: function(e4) {
        var t3 = Array.isArray(e4) ? [] : /* @__PURE__ */ Object.create(null);
        for (var n3 in e4)
          Object.prototype.hasOwnProperty.call(e4, n3) && ft2(n3) && null !== e4[n3] && void 0 !== e4[n3] && ("object" !== o2(e4[n3]) ? t3[n3] = e4[n3] : t3[n3] = this._requestDataCleaner.bind(this)(e4[n3]));
        return t3;
      } }, { key: "_simpleDeepCopy", value: function(e4) {
        for (var t3, o3 = Object.keys(e4), n3 = {}, a3 = 0, s3 = o3.length; a3 < s3; a3++)
          t3 = o3[a3], lt2(e4[t3]) ? n3[t3] = Array.from(e4[t3]) : ct2(e4[t3]) ? n3[t3] = this._simpleDeepCopy(e4[t3]) : n3[t3] = e4[t3];
        return n3;
      } }]), e3;
    }(), ac = [es2], sc = function() {
      function e3(t3) {
        n2(this, e3), this._sessionModule = t3, this._className = "DownlinkHandler", this._eventHandlerMap = /* @__PURE__ */ new Map(), this._eventHandlerMap.set("C2CMessageArray", this._c2cMessageArrayHandler.bind(this)), this._eventHandlerMap.set("groupMessageArray", this._groupMessageArrayHandler.bind(this)), this._eventHandlerMap.set("groupTips", this._groupTipsHandler.bind(this)), this._eventHandlerMap.set("C2CNotifyMessageArray", this._C2CNotifyMessageArrayHandler.bind(this)), this._eventHandlerMap.set("C2CReadReceiptArray", this._C2CReadReceiptArrayHandler.bind(this)), this._eventHandlerMap.set("profileModify", this._profileHandler.bind(this)), this._eventHandlerMap.set("friendListMod", this._relationChainHandler.bind(this)), this._eventHandlerMap.set("recentContactMod", this._recentContactHandler.bind(this)), this._eventHandlerMap.set("readAllC2CMessage", this._allMessageReadHandler.bind(this)), this._eventHandlerMap.set("c2cMessageModified", this._c2cMessageModifiedHandler.bind(this)), this._eventHandlerMap.set("groupMessageModified", this._groupMessageModifiedHandler.bind(this)), this._eventHandlerMap.set("userStatusList", this._userStatusListHandler.bind(this)), this._eventHandlerMap.set("messageExtensionNotify", this._messageExtensionNotifyHandler.bind(this)), this._keys = v2(this._eventHandlerMap.keys());
      }
      return s2(e3, [{ key: "_c2cMessageArrayHandler", value: function(e4) {
        var t3 = this._sessionModule.getModule(Bo);
        if (t3) {
          if (e4.dataList.forEach(function(e5) {
            if (1 === e5.isSyncMessage) {
              var t4 = e5.from;
              e5.from = e5.to, e5.to = t4;
            }
          }), 1 === e4.needSync)
            this._sessionModule.getModule(tn).startOnlineSync();
          t3.onNewC2CMessage({ dataList: e4.dataList, isInstantMessage: true });
        }
      } }, { key: "_c2cMessageModifiedHandler", value: function(e4) {
        var t3 = this._sessionModule.getModule(Bo);
        t3 && t3.onC2CMessageModified(e4);
      } }, { key: "_groupMessageArrayHandler", value: function(e4) {
        var t3 = this._sessionModule.getModule(Ko);
        t3 && t3.onNewGroupMessage({ event: e4.event, dataList: e4.dataList, isInstantMessage: true });
      } }, { key: "_groupMessageModifiedHandler", value: function(e4) {
        var t3 = this._sessionModule.getModule(Ko);
        t3 && t3.onGroupMessageModified(e4);
      } }, { key: "_groupTipsHandler", value: function(e4) {
        var t3 = this._sessionModule.getModule(Ko);
        if (t3) {
          var o3 = e4.event, n3 = e4.dataList, a3 = e4.isInstantMessage, s3 = void 0 === a3 || a3, r3 = e4.isSyncingEnded;
          switch (o3) {
            case 4:
            case 6:
              t3.onNewGroupTips({ event: o3, dataList: n3 });
              break;
            case 5:
              for (var i3 = 0; i3 < n3.length; i3++)
                if (lt2(n3[i3].elements.revokedInfos))
                  t3.onGroupMessageRevoked({ dataList: n3 });
                else if (lt2(n3[i3].elements.groupMessageReadNotice))
                  t3.onGroupMessageReadNotice({ dataList: n3 });
                else {
                  if (!lt2(n3[i3].elements.readReceiptList)) {
                    t3.onNewGroupSystemNotice({ dataList: n3, isInstantMessage: s3, isSyncingEnded: r3 });
                    break;
                  }
                  t3.onReadReceiptList({ dataList: n3 });
                }
              break;
            case 12:
              this._sessionModule.getModule(jo).onNewGroupAtTips({ dataList: n3 });
              break;
            default:
              Ye2.log("".concat(this._className, "._groupTipsHandler unknown event:").concat(o3, " dataList:"), n3);
          }
        }
      } }, { key: "_C2CNotifyMessageArrayHandler", value: function(e4) {
        var t3 = this, o3 = e4.dataList;
        if (lt2(o3)) {
          var n3 = this._sessionModule.getModule(Bo);
          o3.forEach(function(e5) {
            if (ut2(e5)) {
              if (e5.hasOwnProperty("kickoutMsgNotify")) {
                var a3 = e5.kickoutMsgNotify, s3 = a3.kickType, r3 = a3.newInstanceInfo, i3 = void 0 === r3 ? {} : r3;
                1 === s3 ? t3._sessionModule.onMultipleAccountKickedOut(i3) : 2 === s3 ? t3._sessionModule.onMultipleDeviceKickedOut(i3) : 3 === s3 && t3._sessionModule.onRestApiKickedOut(i3);
              } else if (e5.hasOwnProperty("c2cMessageRevokedNotify"))
                n3 && n3.onC2CMessageRevoked({ dataList: o3 });
              else if (e5.hasOwnProperty("c2cMessageReadReceipt"))
                n3 && n3.onC2CMessageReadReceipt({ dataList: o3 });
              else if (e5.hasOwnProperty("c2cMessageReadNotice"))
                n3 && n3.onC2CMessageReadNotice({ dataList: o3 });
              else if (e5.hasOwnProperty("muteNotificationsSync")) {
                t3._sessionModule.getModule(jo).onC2CMessageRemindTypeSynced({ dataList: o3 });
              }
            }
          });
        }
      } }, { key: "_C2CReadReceiptArrayHandler", value: function(e4) {
        this._sessionModule.getModule(Bo).onReadReceiptList(e4);
      } }, { key: "_profileHandler", value: function(e4) {
        this._sessionModule.getModule(Vo).onProfileModified({ dataList: e4.dataList });
        var t3 = this._sessionModule.getModule(Ho);
        t3 && t3.onFriendProfileModified({ dataList: e4.dataList });
      } }, { key: "_relationChainHandler", value: function(e4) {
        this._sessionModule.getModule(Vo).onRelationChainModified({ dataList: e4.dataList });
        var t3 = this._sessionModule.getModule(Ho);
        t3 && t3.onRelationChainModified({ dataList: e4.dataList });
      } }, { key: "_recentContactHandler", value: function(e4) {
        var t3 = e4.dataList;
        if (lt2(t3)) {
          var o3 = this._sessionModule.getModule(jo);
          o3 && t3.forEach(function(e5) {
            var t4 = e5.pushType;
            if (1 === t4) {
              var n3 = e5.recentContactDeleteItem;
              o3.onConversationDeleted(n3.recentContactList);
            } else if (2 === t4) {
              var a3 = e5.recentContactTopItem;
              o3.onConversationPinned(a3.recentContactList);
            } else if (3 === t4) {
              var s3 = e5.recentContactTopItem;
              o3.onConversationUnpinned(s3.recentContactList);
            } else if (4 === t4) {
              var r3 = e5.recentContactMarkContact;
              o3.onConversationMarkUpdated(r3.recentContactMarkContactItem);
            } else if (5 === t4) {
              var i3 = e5.recentContactCreateContactGroup;
              o3.onConversationGroupCreated(i3.msgContactGroupContactItem);
            } else if (6 === t4) {
              var c3 = e5.recentContactDelContactGroup;
              o3.onConversationGroupDeleted(c3.msgGroupItem);
            } else if (7 === t4) {
              var u3 = e5.recentContactUpdateContactGroup, l3 = u3.updateType, d3 = u3.msgUpdateGroup, p3 = u3.msgUpdateContact;
              if (1 === l3) {
                var g3 = d3.updateGroupType;
                1 === g3 ? o3.onConversationGroupNameUpdated(d3) : 2 === g3 && o3.onConversationInGroupUpdated(d3);
              } else
                2 === l3 && o3.onConversationAddedToOrDeletedFromGroup(p3);
            }
          });
        }
      } }, { key: "_allMessageReadHandler", value: function(e4) {
        var t3 = e4.dataList, o3 = this._sessionModule.getModule(jo);
        o3 && o3.onPushedAllMessageRead(t3);
      } }, { key: "_userStatusListHandler", value: function(e4) {
        this._sessionModule.getModule(Vo).onUserStatusUpdated(e4);
      } }, { key: "_messageExtensionNotifyHandler", value: function(e4) {
        this._sessionModule.getModule(xo).onMessageExtensionNotify(e4);
      } }, { key: "onMessage", value: function(e4) {
        var t3 = this, o3 = e4.body;
        if (this._filterMessageFromIMOpenPush(e4)) {
          var n3 = o3.eventArray, a3 = o3.isInstantMessage, s3 = o3.isSyncingEnded, r3 = o3.needSync;
          if (lt2(n3))
            for (var i3 = null, c3 = null, u3 = 0, l3 = 0, d3 = n3.length; l3 < d3; l3++) {
              u3 = (i3 = n3[l3]).event;
              var p3 = Object.keys(i3).find(function(e5) {
                return -1 !== t3._keys.indexOf(e5);
              });
              p3 ? (c3 = 14 === u3 ? { readAllC2CMessage: i3[p3], groupMessageReadInfoList: i3.groupMessageReadNotice || [] } : 16 === u3 ? { userID: i3.userID, readReceiptList: i3[p3] } : i3[p3], this._eventHandlerMap.get(p3)({ event: u3, dataList: c3, isInstantMessage: a3, isSyncingEnded: s3, needSync: r3 })) : Ye2.log("".concat(this._className, ".onMessage unknown eventItem:").concat(i3));
            }
        }
      } }, { key: "_filterMessageFromIMOpenPush", value: function(e4) {
        var t3 = e4.head, o3 = e4.body, n3 = t3.servcmd, a3 = false;
        if (dt2(n3) || (a3 = n3.includes(H2.NAME.IM_CONFIG_MANAGER) || n3.includes(H2.NAME.OVERLOAD_PUSH) || n3.includes(H2.NAME.STAT_SERVICE)), !a3)
          return true;
        if (n3.includes(H2.CMD.PUSHED_CLOUD_CONTROL_CONFIG))
          this._sessionModule.getModule(sn).onPushedCloudControlConfig(o3);
        else if (n3.includes(H2.CMD.PUSHED_COMMERCIAL_CONFIG)) {
          this._sessionModule.getModule(ln).onPushedConfig(o3);
        } else if (n3.includes(H2.CMD.OVERLOAD_NOTIFY))
          this._sessionModule.onPushedServerOverload(o3);
        else if (n3.includes(H2.CMD.KICK_OTHER)) {
          var s3 = Date.now();
          this._sessionModule.reLoginOnKickOther();
          var r3 = new bs2(ws2.KICK_OTHER), i3 = this._sessionModule.getModule(Fo).getLastWsHelloTs(), c3 = s3 - i3;
          r3.setMessage("last wshello time:".concat(i3, " diff:").concat(c3, "ms")).setNetworkType(this._sessionModule.getNetworkType()).end();
        }
        return false;
      } }]), e3;
    }(), rc = [{ cmd: H2.CMD.GET_GROUP_INFO, interval: 1, count: 20 }, { cmd: H2.CMD.GET_AVCHATROOM_MEMBER_LIST, interval: 3, count: 1 }, { cmd: H2.CMD.GET_GROUP_APPLICATION, interval: 1, count: 1 }, { cmd: H2.CMD.GET_TOPIC_LIST, interval: 1, count: 10 }, { cmd: H2.CMD.SET_GROUP_ATTRIBUTES, interval: 5, count: 10 }, { cmd: H2.CMD.MODIFY_GROUP_ATTRIBUTES, interval: 5, count: 10 }, { cmd: H2.CMD.DELETE_GROUP_ATTRIBUTES, interval: 5, count: 10 }, { cmd: H2.CMD.CLEAR_GROUP_ATTRIBUTES, interval: 5, count: 10 }, { cmd: H2.CMD.GET_GROUP_ATTRIBUTES, interval: 5, count: 20 }, { cmd: H2.CMD.SET_ALL_MESSAGE_READ, interval: 1, count: 1 }, { cmd: H2.CMD.GET_USER_STATUS, interval: 5, count: 20 }, { cmd: H2.CMD.SUBSCRIBE_USER_STATUS, interval: 5, count: 20 }, { cmd: H2.CMD.UNSUBSCRIBE_USER_STATUS, interval: 5, count: 20 }], ic = function(e3) {
      i2(a3, e3);
      var o3 = f2(a3);
      function a3(e4) {
        var t3;
        return n2(this, a3), (t3 = o3.call(this, e4))._className = "SessionModule", t3._platform = t3.getPlatform(), t3._protocolHandler = new nc(_2(t3)), t3._messageDispatcher = new sc(_2(t3)), t3._commandFrequencyLimitMap = /* @__PURE__ */ new Map(), t3._commandRequestInfoMap = /* @__PURE__ */ new Map(), t3._serverOverloadInfoMap = /* @__PURE__ */ new Map(), t3._init(), t3.getInnerEmitterInstance().on(_r, t3._onCloudConfigUpdated, _2(t3)), t3;
      }
      return s2(a3, [{ key: "_init", value: function() {
        this._updateCommandFrequencyLimitMap(rc);
      } }, { key: "_onCloudConfigUpdated", value: function() {
        var e4 = this.getCloudConfig("cmd_frequency_limit");
        dt2(e4) || (e4 = JSON.parse(e4), this._updateCommandFrequencyLimitMap(e4));
      } }, { key: "_updateCommandFrequencyLimitMap", value: function(e4) {
        var t3 = this;
        e4.forEach(function(e5) {
          t3._commandFrequencyLimitMap.set(e5.cmd, { interval: e5.interval, count: e5.count });
        });
      } }, { key: "updateProtocolConfig", value: function() {
        this._protocolHandler.update();
      } }, { key: "request", value: function(e4) {
        Ye2.debug("".concat(this._className, ".request options:"), e4);
        var t3 = e4.protocolName, o4 = e4.tjgID;
        if (!this._protocolHandler.has(t3))
          return Ye2.warn("".concat(this._className, ".request unknown protocol:").concat(t3)), lr({ code: hn.CANNOT_FIND_PROTOCOL });
        var n3 = this.getProtocolData(e4), a4 = n3.head.servcmd;
        if (this._isFrequencyOverLimit(a4))
          return lr({ code: hn.OVER_FREQUENCY_LIMIT });
        if (this._isServerOverload(a4))
          return lr({ code: hn.OPEN_SERVICE_OVERLOAD_ERROR });
        oo(o4) || (n3.head.tjgID = o4);
        var s3 = this.getModule(nn);
        return ac.includes(t3) ? s3.simplySend(n3) : s3.send(n3);
      } }, { key: "getKeyMap", value: function(e4) {
        return this._protocolHandler.getKeyMap(e4);
      } }, { key: "genCommonHead", value: function() {
        var e4 = this.getModule($o);
        return { ver: "v4", platform: this._platform, websdkappid: U2, websdkversion: P2, a2: e4.getA2Key() || void 0, tinyid: e4.getTinyID() || void 0, status_instid: e4.getStatusInstanceID(), sdkappid: e4.getSDKAppID(), contenttype: e4.getContentType(), reqtime: 0, identifier: e4.getA2Key() ? void 0 : e4.getUserID(), usersig: e4.getA2Key() ? void 0 : e4.getUserSig(), sdkability: 192371, tjgID: "" };
      } }, { key: "genCosSpecifiedHead", value: function() {
        var e4 = this.getModule($o);
        return { ver: "v4", platform: this._platform, websdkappid: U2, websdkversion: P2, sdkappid: e4.getSDKAppID(), contenttype: e4.getContentType(), reqtime: 0, identifier: e4.getUserID(), usersig: e4.getUserSig(), status_instid: e4.getStatusInstanceID(), sdkability: 192371 };
      } }, { key: "genSSOReportHead", value: function() {
        var e4 = this.getModule($o);
        return { ver: "v4", platform: this._platform, websdkappid: U2, websdkversion: P2, sdkappid: e4.getSDKAppID(), contenttype: "", reqtime: 0, identifier: "", usersig: "", status_instid: e4.getStatusInstanceID(), sdkability: 192371 };
      } }, { key: "getProtocolData", value: function(e4) {
        return this._protocolHandler.getProtocolData(e4);
      } }, { key: "trans", value: function(e4) {
        var o4 = e4.servcmd, n3 = e4.data, a4 = { head: t2(t2({}, this.genCommonHead()), {}, { servcmd: o4 }), body: n3 };
        return this.getModule(nn).send(a4);
      } }, { key: "sendComboMessage", value: function(e4) {
        var o4 = e4.servcmd, n3 = e4.data, a4 = { head: t2(t2({}, this.genCommonHead()), {}, { servcmd: o4 }), body: n3 };
        return this.getModule(nn).send(a4);
      } }, { key: "onErrorCodeNotZero", value: function(e4) {
        var t3 = e4.errorCode;
        if (t3 === hn.HELLO_ANSWER_KICKED_OUT) {
          var o4 = e4.kickType, n3 = e4.newInstanceInfo, a4 = void 0 === n3 ? {} : n3;
          1 === o4 ? this.onMultipleAccountKickedOut(a4) : 2 === o4 ? this.onMultipleDeviceKickedOut(a4) : 3 === o4 && this.onRestApiKickedOut(a4);
        }
        t3 !== hn.MESSAGE_A2KEY_EXPIRED && t3 !== hn.ACCOUNT_A2KEY_EXPIRED || (this._onUserSigExpired(), this.getModule(nn).reConnect());
      } }, { key: "onMessage", value: function(e4) {
        var t3 = e4.body, o4 = t3.needAck, n3 = void 0 === o4 ? 0 : o4, a4 = t3.sessionData;
        1 === n3 && this._sendACK(a4), this._messageDispatcher.onMessage(e4);
      } }, { key: "onReconnected", value: function() {
        this._reLoginOnReconnected();
      } }, { key: "reLoginOnKickOther", value: function() {
        Ye2.log("".concat(this._className, ".reLoginOnKickOther")), this._reLogin();
      } }, { key: "_reLoginOnReconnected", value: function() {
        Ye2.log("".concat(this._className, "._reLoginOnReconnected")), this._reLogin();
      } }, { key: "_reLogin", value: function() {
        var e4 = this;
        if (this.isLoggedIn()) {
          var t3 = 0, o4 = this.getModule(dn);
          o4.canIUseOfflinePush() && (t3 = o4.getUniAppPlatform()), this.request({ protocolName: Mn2, requestData: { isWebUniapp: t3 } }).then(function(t4) {
            var o5 = t4.data.instanceID;
            e4.getModule($o).setStatusInstanceID(o5), Ye2.log("".concat(e4._className, "._reLogin ok. start to sync unread messages")), e4.getModule(jo).syncConversationList().then(function() {
              e4.getModule(cn).start();
            }), e4.getModule(Ko).updateLocalMainSequenceOnReconnected();
            var n3 = e4.getModule(Yo);
            n3.resetGetTopicTime(), n3.getTopicListOnReconnected();
          });
        }
      } }, { key: "onMultipleAccountKickedOut", value: function(e4) {
        this.getModule(Fo).onMultipleAccountKickedOut(e4);
      } }, { key: "onMultipleDeviceKickedOut", value: function(e4) {
        this.getModule(Fo).onMultipleDeviceKickedOut(e4);
      } }, { key: "_onUserSigExpired", value: function() {
        this.getModule(Fo).onUserSigExpired();
      } }, { key: "onRestApiKickedOut", value: function(e4) {
        this.getModule(Fo).onRestApiKickedOut(e4);
      } }, { key: "_sendACK", value: function(e4) {
        this.request({ protocolName: es2, requestData: { sessionData: e4 } });
      } }, { key: "_isFrequencyOverLimit", value: function(e4) {
        var t3 = e4.split(".")[1];
        if (!this._commandFrequencyLimitMap.has(t3))
          return false;
        if (!this._commandRequestInfoMap.has(t3))
          return this._commandRequestInfoMap.set(t3, { startTime: Date.now(), requestCount: 1 }), false;
        var o4 = this._commandFrequencyLimitMap.get(t3), n3 = o4.count, a4 = o4.interval, s3 = this._commandRequestInfoMap.get(t3), r3 = s3.startTime, i3 = s3.requestCount;
        if (Date.now() - r3 > 1e3 * a4)
          return this._commandRequestInfoMap.set(t3, { startTime: Date.now(), requestCount: 1 }), false;
        i3 += 1, this._commandRequestInfoMap.set(t3, { startTime: r3, requestCount: i3 });
        var c3 = false;
        return i3 > n3 && (c3 = true), c3;
      } }, { key: "_isServerOverload", value: function(e4) {
        if (!this._serverOverloadInfoMap.has(e4))
          return false;
        var t3 = this._serverOverloadInfoMap.get(e4), o4 = t3.overloadTime, n3 = t3.waitingTime, a4 = false;
        return Date.now() - o4 <= 1e3 * n3 ? a4 = true : (this._serverOverloadInfoMap.delete(e4), a4 = false), a4;
      } }, { key: "onPushedServerOverload", value: function(e4) {
        var t3 = e4.overloadCommand, o4 = e4.waitingTime;
        this._serverOverloadInfoMap.set(t3, { overloadTime: Date.now(), waitingTime: o4 }), Ye2.warn("".concat(this._className, ".onPushedServerOverload waitingTime:").concat(o4, "s"));
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._updateCommandFrequencyLimitMap(rc), this._commandRequestInfoMap.clear(), this._serverOverloadInfoMap.clear();
      } }]), a3;
    }(vn), cc = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        return n2(this, o3), (a3 = t3.call(this, e4))._className = "MessageLossDetectionModule", a3._maybeLostSequencesMap = /* @__PURE__ */ new Map(), a3._firstRoundRet = [], a3;
      }
      return s2(o3, [{ key: "onMessageMaybeLost", value: function(e4, t4, o4) {
        this._maybeLostSequencesMap.has(e4) || this._maybeLostSequencesMap.set(e4, []);
        for (var n3 = this._maybeLostSequencesMap.get(e4), a3 = 0; a3 < o4; a3++)
          -1 === n3.indexOf(t4 + a3) && n3.push(t4 + a3);
      } }, { key: "detectFirstRound", value: function(e4, t4) {
        var o4 = this._maybeLostSequencesMap.get(e4);
        if (!oo(o4) && !oo(t4)) {
          var n3 = o4.filter(function(e5) {
            return -1 === t4.indexOf(e5);
          });
          0 === n3.length ? Ye2.info("".concat(this._className, ".detectFirstRound no message loss. conversationID:").concat(e4)) : this._firstRoundRet = this._firstRoundRet.concat(n3), o4.length = 0;
        }
      } }, { key: "detectSecondRound", value: function(e4, t4) {
        if (!oo(this._firstRoundRet) && !oo(t4)) {
          var o4 = this._firstRoundRet.filter(function(e5) {
            return -1 === t4.indexOf(e5);
          });
          this._firstRoundRet.length = 0;
          var n3, a3 = o4.length;
          if (0 !== a3)
            a3 <= 5 ? n3 = e4 + "-" + o4.join("-") : (o4.sort(function(e5, t5) {
              return e5 - t5;
            }), n3 = e4 + " start:" + o4[0] + " end:" + o4[a3 - 1] + " count:" + a3), new bs2(ws2.MESSAGE_LOSS).setMessage(n3).setNetworkType(this.getNetworkType()).setLevel("warning").end(), Ye2.info("".concat(this._className, ".detectSecondRound message loss detected. conversationID:").concat(e4, " lostSequences:").concat(o4));
        }
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._maybeLostSequencesMap.clear(), this._firstRoundRet.length = 0;
      } }]), o3;
    }(vn), uc = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        return n2(this, o3), (a3 = t3.call(this, e4))._className = "CloudControlModule", a3._cloudConfig = /* @__PURE__ */ new Map(), a3._expiredTime = 0, a3._version = 0, a3._isFetching = false, a3;
      }
      return s2(o3, [{ key: "getCloudConfig", value: function(e4) {
        return dt2(e4) ? this._cloudConfig : this._cloudConfig.has(e4) ? this._cloudConfig.get(e4) : void 0;
      } }, { key: "_canFetchConfig", value: function() {
        return this.isLoggedIn() && !this._isFetching && Date.now() >= this._expiredTime;
      } }, { key: "fetchConfig", value: function() {
        var e4 = this, t4 = this._canFetchConfig();
        if (Ye2.log("".concat(this._className, ".fetchConfig canFetchConfig:").concat(t4)), t4) {
          var o4 = new bs2(ws2.FETCH_CLOUD_CONTROL_CONFIG), n3 = this.getModule($o).getSDKAppID();
          this._isFetching = true, this.request({ protocolName: as2, requestData: { SDKAppID: n3, version: this._version } }).then(function(t5) {
            e4._isFetching = false, o4.setMessage("version:".concat(e4._version, " newVersion:").concat(t5.data.version, " config:").concat(t5.data.cloudControlConfig)).setNetworkType(e4.getNetworkType()).end(), Ye2.log("".concat(e4._className, ".fetchConfig ok")), e4._parseCloudControlConfig(t5.data);
          }).catch(function(t5) {
            e4._isFetching = false, e4.probeNetwork().then(function(e5) {
              var n4 = m2(e5, 2), a3 = n4[0], s3 = n4[1];
              o4.setError(t5, a3, s3).end();
            }), Ye2.log("".concat(e4._className, ".fetchConfig failed. error:"), t5), e4._setExpiredTimeOnResponseError(12e4);
          });
        }
      } }, { key: "onPushedCloudControlConfig", value: function(e4) {
        Ye2.log("".concat(this._className, ".onPushedCloudControlConfig")), new bs2(ws2.PUSHED_CLOUD_CONTROL_CONFIG).setNetworkType(this.getNetworkType()).setMessage("newVersion:".concat(e4.version, " config:").concat(e4.cloudControlConfig)).end(), this._parseCloudControlConfig(e4);
      } }, { key: "onCheckTimer", value: function(e4) {
        this._canFetchConfig() && this.fetchConfig();
      } }, { key: "_parseCloudControlConfig", value: function(e4) {
        var t4 = this, o4 = "".concat(this._className, "._parseCloudControlConfig"), n3 = e4.errorCode, a3 = e4.errorMessage, s3 = e4.cloudControlConfig, r3 = e4.version, i3 = e4.expiredTime;
        if (0 === n3) {
          if (this._version !== r3) {
            var c3 = null;
            try {
              c3 = JSON.parse(s3);
            } catch (u3) {
              this.isPrivateNetWork() || Ye2.error("".concat(o4, " JSON parse error. cloudControlConfig:"), s3);
            }
            c3 && (this._cloudConfig.clear(), Object.keys(c3).forEach(function(e5) {
              t4._cloudConfig.set(e5, c3[e5]);
            }), this._version = r3, this.emitInnerEvent(_r));
          }
          this._expiredTime = Date.now() + 1e3 * i3;
        } else
          dt2(n3) ? (Ye2.log("".concat(o4, " failed. Invalid message format:"), e4), this._setExpiredTimeOnResponseError(36e5)) : (Ye2.error("".concat(o4, " errorCode:").concat(n3, " errorMessage:").concat(a3)), this._setExpiredTimeOnResponseError(12e4));
      } }, { key: "_setExpiredTimeOnResponseError", value: function(e4) {
        this._expiredTime = Date.now() + e4;
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._cloudConfig.clear(), this._expiredTime = 0, this._version = 0, this._isFetching = false;
      } }]), o3;
    }(vn), lc = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        return n2(this, o3), (a3 = t3.call(this, e4))._className = "RecoverMessageModule", a3.PULL_LIMIT_COUNT = 15, a3;
      }
      return s2(o3, [{ key: "start", value: function() {
        this._recoverGroupChat(), this._recoverC2CChat();
      } }, { key: "_recoverGroupChat", value: function() {
        var e4, t4, o4 = this, n3 = this._getLocalConversationList().filter(function(e5) {
          return e5.type === D2.CONV_GROUP && e5.groupProfile.type !== D2.GRP_AVCHATROOM;
        }), a3 = this.getModule(jo), s3 = 0, r3 = 0, i3 = 0;
        n3.forEach(function(n4) {
          var c3 = n4.conversationID, u3 = n4.lastMessage;
          t4 = c3.replace(D2.CONV_GROUP, ""), e4 = a3.getLocalLastMessage(c3), u3 && 0 !== u3.lastSequence && e4 ? (r3 = u3.lastSequence, s3 = e4.sequence, i3 = r3 - s3, s3 > 0 && i3 >= 1 && i3 < 300 ? o4._recoverGroupMessage({ groupID: t4, localLastMessageSequence: s3, remoteLastMessageSequence: r3 }) : o4._getGroupNotify(t4)) : o4._getGroupNotify(t4);
        });
      } }, { key: "_recoverC2CChat", value: function() {
        var e4, t4 = this, o4 = this._getLocalConversationList().filter(function(e5) {
          return e5.type === D2.CONV_C2C;
        }), n3 = this.getModule(jo), a3 = 0, s3 = 0, r3 = 0, i3 = [Promise.resolve()];
        o4.forEach(function(o5) {
          var c3 = o5.conversationID, u3 = o5.lastMessage;
          e4 = n3.getLocalLastMessage(c3), u3 && 0 !== u3.lastTime && e4 && (s3 = u3.lastTime, a3 = e4.time, r3 = s3 - a3, a3 > 0 && r3 >= 1 && r3 <= 600 && i3.push(t4._recoverC2CMessage({ conversationID: c3, localLastMessageTime: a3, remoteLastMessageTime: s3 })));
        }), Promise.all(i3).then(function() {
          Ye2.log("".concat(t4._className, "._recoverC2CChat all promise fulfilled, start to sync unread messages")), t4.getModule(tn).startSyncOnReconnected();
        });
      } }, { key: "_getLocalConversationList", value: function() {
        return this.getModule(jo).getLocalConversationList();
      } }, { key: "_recoverGroupMessage", value: function(e4) {
        var t4 = this, o4 = "".concat(this._className, "._recoverGroupMessage");
        Ye2.log("".concat(o4, " options:"), e4);
        var n3 = e4.groupID, a3 = e4.localLastMessageSequence, s3 = e4.remoteLastMessageSequence;
        this._getGroupRomaingMessage({ groupID: n3, sequence: a3 }).then(function(e5) {
          var a4 = e5.data, r3 = a4.complete, i3 = a4.messageList;
          if (!dt2(i3)) {
            var c3 = i3[0].sequence;
            Ye2.log("".concat(o4, " pkgLastMessageSequence:").concat(c3, " complete:").concat(r3)), c3 < s3 && 2 !== r3 && t4._recoverGroupMessage({ groupID: n3, localLastMessageSequence: c3, remoteLastMessageSequence: s3 }), new bs2(ws2.RECOVER_MESSAGE).setNetworkType(t4.getNetworkType()).setMessage("groupID:".concat(n3, " complete:").concat(r3, " messageList length:").concat(i3.length)).end(), t4.getModule(Ko).onNewGroupMessage({ dataList: i3, isInstantMessage: false, updateUnreadCount: false }), t4._getGroupNotify(n3);
          }
        });
      } }, { key: "_getGroupNotify", value: function(e4) {
        this.getModule(Ko).getGroupNotify(e4);
      } }, { key: "_getGroupRomaingMessage", value: function(e4) {
        var t4 = e4.groupID, o4 = e4.sequence;
        return this.request({ protocolName: ma, requestData: { groupID: t4, count: this.PULL_LIMIT_COUNT, sequence: o4 + this.PULL_LIMIT_COUNT - 1 } });
      } }, { key: "_recoverC2CMessage", value: function(e4) {
        var t4 = this, o4 = "".concat(this._className, "._recoverC2CMessage");
        Ye2.log("".concat(this._className, "._recoverC2CMessage options:"), e4);
        var n3 = e4.conversationID, a3 = e4.localLastMessageTime, s3 = e4.remoteLastMessageTime;
        return this._getC2CRoamingMessage({ conversationID: n3, time: a3 }).then(function(e5) {
          var a4 = e5.data, r3 = a4.complete, i3 = a4.messageList;
          if (!dt2(i3)) {
            new bs2(ws2.RECOVER_MESSAGE).setNetworkType(t4.getNetworkType()).setMessage("".concat(n3, " complete:").concat(r3, " messageList length:").concat(c3)).end(), t4.getModule(Bo).onNewC2CMessage({ dataList: i3, isInstantMessage: true });
            var c3 = i3.length, u3 = i3[c3 - 1].time;
            if (Ye2.log("".concat(o4, " pkgLastMessageTime:").concat(u3, " complete:").concat(r3)), u3 < s3 && 1 !== r3)
              return t4._recoverC2CMessage({ conversationID: n3, localLastMessageTime: u3, remoteLastMessageTime: s3 });
          }
        });
      } }, { key: "_getC2CRoamingMessage", value: function(e4) {
        var t4 = e4.conversationID, o4 = e4.time;
        return this.request({ protocolName: bn2, requestData: { peerAccount: t4.replace(D2.CONV_C2C, ""), count: this.PULL_LIMIT_COUNT + 1, lastMessageTime: o4, direction: 1 } });
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset"));
      } }]), o3;
    }(vn), dc = function() {
      function e3() {
        n2(this, e3), this._className = "AvgE2EDelay", this._e2eDelayArray = [];
      }
      return s2(e3, [{ key: "addMessageDelay", value: function(e4) {
        var t3 = Be2() - e4;
        t3 >= 0 && this._e2eDelayArray.push(t3);
      } }, { key: "_calcAvg", value: function(e4, t3) {
        if (0 === t3)
          return 0;
        var o3 = 0;
        return e4.forEach(function(e5) {
          o3 += e5;
        }), Wt(o3 / t3, 1);
      } }, { key: "_calcCountWithLimit", value: function(e4) {
        var t3 = e4.e2eDelayArray, o3 = e4.min, n3 = e4.max;
        return t3.filter(function(e5) {
          return o3 <= e5 && e5 < n3;
        }).length;
      } }, { key: "_calcPercent", value: function(e4, t3) {
        var o3 = Wt(e4 / t3 * 100, 2);
        return o3 > 100 && (o3 = 100), o3;
      } }, { key: "_checkE2EDelayException", value: function(e4, t3) {
        var o3 = e4.filter(function(e5) {
          return e5 > t3;
        });
        if (o3.length > 0) {
          var n3 = o3.length, a3 = Math.min.apply(Math, v2(o3)), s3 = Math.max.apply(Math, v2(o3)), r3 = this._calcAvg(o3, n3), i3 = Wt(n3 / e4.length * 100, 2);
          if (i3 > 50)
            new bs2(ws2.MESSAGE_E2E_DELAY_EXCEPTION).setMessage("message e2e delay exception. count:".concat(n3, " min:").concat(a3, " max:").concat(s3, " avg:").concat(r3, " percent:").concat(i3)).setLevel("warning").end();
        }
      } }, { key: "getStatResult", value: function() {
        var e4 = this._e2eDelayArray.length;
        if (0 === e4)
          return null;
        var t3 = v2(this._e2eDelayArray), o3 = this._calcCountWithLimit({ e2eDelayArray: t3, min: 0, max: 1 }), n3 = this._calcCountWithLimit({ e2eDelayArray: t3, min: 1, max: 3 }), a3 = this._calcPercent(o3, e4), s3 = this._calcPercent(n3, e4), r3 = this._calcAvg(t3, e4);
        return this._checkE2EDelayException(t3, 3), t3.length = 0, this.reset(), { totalCount: e4, countLessThan1Second: o3, percentOfCountLessThan1Second: a3, countLessThan3Second: n3, percentOfCountLessThan3Second: s3, avgDelay: r3 };
      } }, { key: "reset", value: function() {
        this._e2eDelayArray.length = 0;
      } }]), e3;
    }(), pc = function() {
      function e3() {
        n2(this, e3), this._className = "AvgRTT", this._requestCount = 0, this._rttArray = [];
      }
      return s2(e3, [{ key: "addRequestCount", value: function() {
        this._requestCount += 1;
      } }, { key: "addRTT", value: function(e4) {
        this._rttArray.push(e4);
      } }, { key: "_calcTotalCount", value: function() {
        return this._requestCount;
      } }, { key: "_calcRTTCount", value: function(e4) {
        return e4.length;
      } }, { key: "_calcSuccessRateOfRequest", value: function(e4, t3) {
        if (0 === t3)
          return 0;
        var o3 = Wt(e4 / t3 * 100, 2);
        return o3 > 100 && (o3 = 100), o3;
      } }, { key: "_calcAvg", value: function(e4, t3) {
        if (0 === t3)
          return 0;
        var o3 = 0;
        return e4.forEach(function(e5) {
          o3 += e5;
        }), parseInt(o3 / t3);
      } }, { key: "_calcMax", value: function() {
        return Math.max.apply(Math, v2(this._rttArray));
      } }, { key: "_calcMin", value: function() {
        return Math.min.apply(Math, v2(this._rttArray));
      } }, { key: "getStatResult", value: function() {
        var e4 = this._calcTotalCount(), t3 = v2(this._rttArray);
        if (0 === e4)
          return null;
        var o3 = this._calcRTTCount(t3), n3 = this._calcSuccessRateOfRequest(o3, e4), a3 = this._calcAvg(t3, o3);
        return Ye2.log("".concat(this._className, ".getStatResult max:").concat(this._calcMax(), " min:").concat(this._calcMin(), " avg:").concat(a3)), this.reset(), { totalCount: e4, rttCount: o3, successRateOfRequest: n3, avgRTT: a3 };
      } }, { key: "reset", value: function() {
        this._requestCount = 0, this._rttArray.length = 0;
      } }]), e3;
    }(), gc = function() {
      function e3() {
        n2(this, e3), this._map = /* @__PURE__ */ new Map();
      }
      return s2(e3, [{ key: "initMap", value: function(e4) {
        var t3 = this;
        e4.forEach(function(e5) {
          t3._map.set(e5, { totalCount: 0, successCount: 0, failedCountOfUserSide: 0, costArray: [], fileSizeArray: [] });
        });
      } }, { key: "addTotalCount", value: function(e4) {
        return !(dt2(e4) || !this._map.has(e4)) && (this._map.get(e4).totalCount += 1, true);
      } }, { key: "addSuccessCount", value: function(e4) {
        return !(dt2(e4) || !this._map.has(e4)) && (this._map.get(e4).successCount += 1, true);
      } }, { key: "addFailedCountOfUserSide", value: function(e4) {
        return !(dt2(e4) || !this._map.has(e4)) && (this._map.get(e4).failedCountOfUserSide += 1, true);
      } }, { key: "addCost", value: function(e4, t3) {
        return !(dt2(e4) || !this._map.has(e4)) && (this._map.get(e4).costArray.push(t3), true);
      } }, { key: "addFileSize", value: function(e4, t3) {
        return !(dt2(e4) || !this._map.has(e4)) && (this._map.get(e4).fileSizeArray.push(t3), true);
      } }, { key: "_calcSuccessRateOfBusiness", value: function(e4) {
        if (dt2(e4) || !this._map.has(e4))
          return -1;
        var t3 = this._map.get(e4), o3 = Wt(t3.successCount / t3.totalCount * 100, 2);
        return o3 > 100 && (o3 = 100), o3;
      } }, { key: "_calcSuccessRateOfPlatform", value: function(e4) {
        if (dt2(e4) || !this._map.has(e4))
          return -1;
        var t3 = this._map.get(e4), o3 = this._calcSuccessCountOfPlatform(e4) / t3.totalCount * 100;
        return (o3 = Wt(o3, 2)) > 100 && (o3 = 100), o3;
      } }, { key: "_calcTotalCount", value: function(e4) {
        return dt2(e4) || !this._map.has(e4) ? -1 : this._map.get(e4).totalCount;
      } }, { key: "_calcSuccessCountOfBusiness", value: function(e4) {
        return dt2(e4) || !this._map.has(e4) ? -1 : this._map.get(e4).successCount;
      } }, { key: "_calcSuccessCountOfPlatform", value: function(e4) {
        if (dt2(e4) || !this._map.has(e4))
          return -1;
        var t3 = this._map.get(e4);
        return t3.successCount + t3.failedCountOfUserSide;
      } }, { key: "_calcAvg", value: function(e4) {
        return dt2(e4) || !this._map.has(e4) ? -1 : e4 === As2 ? this._calcAvgSpeed(e4) : this._calcAvgCost(e4);
      } }, { key: "_calcAvgCost", value: function(e4) {
        var t3 = this._map.get(e4).costArray.length;
        if (0 === t3)
          return 0;
        var o3 = 0;
        return this._map.get(e4).costArray.forEach(function(e5) {
          o3 += e5;
        }), parseInt(o3 / t3);
      } }, { key: "_calcAvgSpeed", value: function(e4) {
        var t3 = 0, o3 = 0;
        return this._map.get(e4).costArray.forEach(function(e5) {
          t3 += e5;
        }), this._map.get(e4).fileSizeArray.forEach(function(e5) {
          o3 += e5;
        }), parseInt(1e3 * o3 / t3);
      } }, { key: "getStatResult", value: function(e4) {
        var t3 = this._calcTotalCount(e4);
        if (0 === t3)
          return null;
        var o3 = this._calcSuccessCountOfBusiness(e4), n3 = this._calcSuccessRateOfBusiness(e4), a3 = this._calcSuccessCountOfPlatform(e4), s3 = this._calcSuccessRateOfPlatform(e4), r3 = this._calcAvg(e4);
        return this.reset(e4), { totalCount: t3, successCountOfBusiness: o3, successRateOfBusiness: n3, successCountOfPlatform: a3, successRateOfPlatform: s3, avgValue: r3 };
      } }, { key: "reset", value: function(e4) {
        dt2(e4) ? this._map.clear() : this._map.set(e4, { totalCount: 0, successCount: 0, failedCountOfUserSide: 0, costArray: [], fileSizeArray: [] });
      } }]), e3;
    }(), _c = function() {
      function e3() {
        n2(this, e3), this._lastMap = /* @__PURE__ */ new Map(), this._currentMap = /* @__PURE__ */ new Map();
      }
      return s2(e3, [{ key: "initMap", value: function(e4) {
        var t3 = this;
        e4.forEach(function(e5) {
          t3._lastMap.set(e5, /* @__PURE__ */ new Map()), t3._currentMap.set(e5, /* @__PURE__ */ new Map());
        });
      } }, { key: "addMessageSequence", value: function(e4) {
        var t3 = e4.key, o3 = e4.message;
        if (dt2(t3) || !this._lastMap.has(t3) || !this._currentMap.has(t3))
          return false;
        var n3 = o3.conversationID, a3 = o3.sequence, s3 = n3.replace(D2.CONV_GROUP, "");
        if (0 === this._lastMap.get(t3).size)
          this._addCurrentMap(e4);
        else if (this._lastMap.get(t3).has(s3)) {
          var r3 = this._lastMap.get(t3).get(s3), i3 = r3.length - 1;
          a3 > r3[0] && a3 < r3[i3] ? (r3.push(a3), r3.sort(), this._lastMap.get(t3).set(s3, r3)) : this._addCurrentMap(e4);
        } else
          this._addCurrentMap(e4);
        return true;
      } }, { key: "_addCurrentMap", value: function(e4) {
        var t3 = e4.key, o3 = e4.message, n3 = o3.conversationID, a3 = o3.sequence, s3 = n3.replace(D2.CONV_GROUP, "");
        this._currentMap.get(t3).has(s3) || this._currentMap.get(t3).set(s3, []), this._currentMap.get(t3).get(s3).push(a3);
      } }, { key: "_copyData", value: function(e4) {
        if (!dt2(e4)) {
          this._lastMap.set(e4, /* @__PURE__ */ new Map());
          var t3, o3 = this._lastMap.get(e4), n3 = E2(this._currentMap.get(e4));
          try {
            for (n3.s(); !(t3 = n3.n()).done; ) {
              var a3 = m2(t3.value, 2), s3 = a3[0], r3 = a3[1];
              o3.set(s3, r3);
            }
          } catch (i3) {
            n3.e(i3);
          } finally {
            n3.f();
          }
          o3 = null, this._currentMap.set(e4, /* @__PURE__ */ new Map());
        }
      } }, { key: "getStatResult", value: function(e4) {
        if (dt2(this._currentMap.get(e4)) || dt2(this._lastMap.get(e4)))
          return null;
        if (0 === this._lastMap.get(e4).size)
          return this._copyData(e4), null;
        var t3 = 0, o3 = 0;
        if (this._lastMap.get(e4).forEach(function(e5, n4) {
          var a3 = v2(e5.values()), s3 = a3.length, r3 = a3[s3 - 1] - a3[0] + 1;
          t3 += r3, o3 += s3;
        }), 0 === t3)
          return null;
        var n3 = Wt(o3 / t3 * 100, 2);
        return n3 > 100 && (n3 = 100), this._copyData(e4), { totalCount: t3, successCountOfMessageReceived: o3, successRateOfMessageReceived: n3 };
      } }, { key: "reset", value: function() {
        this._currentMap.clear(), this._lastMap.clear();
      } }]), e3;
    }(), hc = function(e3) {
      i2(a3, e3);
      var o3 = f2(a3);
      function a3(e4) {
        var t3;
        n2(this, a3), (t3 = o3.call(this, e4))._className = "QualityStatModule", t3.TAG = "im-ssolog-quality-stat", t3.reportIndex = 0, t3.wholePeriod = false, t3._qualityItems = [Cs2, Ts2, Es2, Ss2, Ds, Ns, As2, ks2, Rs, Ls], t3._messageSentItems = [Es2, Ss2, Ds, Ns, As2], t3._messageReceivedItems = [ks2, Rs, Ls], t3.REPORT_INTERVAL = 120, t3.REPORT_SDKAPPID_BLACKLIST = [], t3.REPORT_TINYID_WHITELIST = [], t3._statInfoArr = [], t3._avgRTT = new pc(), t3._avgE2EDelay = new dc(), t3._rateMessageSent = new gc(), t3._rateMessageReceived = new _c();
        var s3 = t3.getInnerEmitterInstance();
        return s3.on(gr, t3._onLoginSuccess, _2(t3)), s3.on(_r, t3._onCloudConfigUpdated, _2(t3)), t3;
      }
      return s2(a3, [{ key: "_onLoginSuccess", value: function() {
        var e4 = this;
        this._rateMessageSent.initMap(this._messageSentItems), this._rateMessageReceived.initMap(this._messageReceivedItems);
        var t3 = this.getModule(zo), o4 = t3.getItem(this.TAG, false);
        !oo(o4) && gt2(o4.forEach) && (Ye2.log("".concat(this._className, "._onLoginSuccess get quality stat logs from local storage, count:").concat(o4.length)), o4.forEach(function(t4) {
          e4._statInfoArr.push(t4);
        }), t3.removeItem(this.TAG, false));
      } }, { key: "_onCloudConfigUpdated", value: function() {
        var e4 = this.getCloudConfig("q_rpt_interval"), t3 = this.getCloudConfig("q_rpt_sdkappid_bl"), o4 = this.getCloudConfig("q_rpt_tinyid_wl");
        dt2(e4) || (this.REPORT_INTERVAL = Number(e4)), dt2(t3) || (this.REPORT_SDKAPPID_BLACKLIST = t3.split(",").map(function(e5) {
          return Number(e5);
        })), dt2(o4) || (this.REPORT_TINYID_WHITELIST = o4.split(","));
      } }, { key: "onCheckTimer", value: function(e4) {
        this.isLoggedIn() && e4 % this.REPORT_INTERVAL == 0 && (this.wholePeriod = true, this._report());
      } }, { key: "addRequestCount", value: function() {
        this._avgRTT.addRequestCount();
      } }, { key: "addRTT", value: function(e4) {
        this._avgRTT.addRTT(e4);
      } }, { key: "addMessageDelay", value: function(e4) {
        this._avgE2EDelay.addMessageDelay(e4);
      } }, { key: "addTotalCount", value: function(e4) {
        this._rateMessageSent.addTotalCount(e4) || Ye2.warn("".concat(this._className, ".addTotalCount invalid key:"), e4);
      } }, { key: "addSuccessCount", value: function(e4) {
        this._rateMessageSent.addSuccessCount(e4) || Ye2.warn("".concat(this._className, ".addSuccessCount invalid key:"), e4);
      } }, { key: "addFailedCountOfUserSide", value: function(e4) {
        this._rateMessageSent.addFailedCountOfUserSide(e4) || Ye2.warn("".concat(this._className, ".addFailedCountOfUserSide invalid key:"), e4);
      } }, { key: "addCost", value: function(e4, t3) {
        this._rateMessageSent.addCost(e4, t3) || Ye2.warn("".concat(this._className, ".addCost invalid key or cost:"), e4, t3);
      } }, { key: "addFileSize", value: function(e4, t3) {
        this._rateMessageSent.addFileSize(e4, t3) || Ye2.warn("".concat(this._className, ".addFileSize invalid key or size:"), e4, t3);
      } }, { key: "addMessageSequence", value: function(e4) {
        this._rateMessageReceived.addMessageSequence(e4) || Ye2.warn("".concat(this._className, ".addMessageSequence invalid key:"), e4.key);
      } }, { key: "_getQualityItem", value: function(e4) {
        var o4 = {}, n3 = Ps2[this.getNetworkType()];
        dt2(n3) && (n3 = 8);
        var a4 = { qualityType: Os[e4], timestamp: xe2(), networkType: n3, extension: "" };
        switch (e4) {
          case Cs2:
            o4 = this._avgRTT.getStatResult();
            break;
          case Ts2:
            o4 = this._avgE2EDelay.getStatResult();
            break;
          case Es2:
          case Ss2:
          case Ds:
          case Ns:
          case As2:
            o4 = this._rateMessageSent.getStatResult(e4);
            break;
          case ks2:
          case Rs:
          case Ls:
            o4 = this._rateMessageReceived.getStatResult(e4);
        }
        return null === o4 ? null : t2(t2({}, a4), o4);
      } }, { key: "_report", value: function(e4) {
        var t3 = this, o4 = [], n3 = null;
        dt2(e4) ? this._qualityItems.forEach(function(e5) {
          null !== (n3 = t3._getQualityItem(e5)) && (n3.reportIndex = t3.reportIndex, n3.wholePeriod = t3.wholePeriod, o4.push(n3));
        }) : null !== (n3 = this._getQualityItem(e4)) && (n3.reportIndex = this.reportIndex, n3.wholePeriod = this.wholePeriod, o4.push(n3)), Ye2.debug("".concat(this._className, "._report"), o4), this._statInfoArr.length > 0 && (o4 = o4.concat(this._statInfoArr), this._statInfoArr = []);
        var a4 = this.getModule($o), s3 = a4.getSDKAppID(), r3 = a4.getTinyID();
        Yt(this.REPORT_SDKAPPID_BLACKLIST, s3) && !jt(this.REPORT_TINYID_WHITELIST, r3) && (o4 = []), o4.length > 0 && this._doReport(o4);
      } }, { key: "_doReport", value: function(e4) {
        var o4 = this, n3 = { header: fi(this), quality: e4 };
        this.request({ protocolName: Ja, requestData: t2({}, n3) }).then(function() {
          o4.reportIndex++, o4.wholePeriod = false;
        }).catch(function(t3) {
          Ye2.warn("".concat(o4._className, "._doReport, online:").concat(o4.getNetworkType(), " error:"), t3), o4._statInfoArr = o4._statInfoArr.concat(e4), o4._flushAtOnce();
        });
      } }, { key: "_flushAtOnce", value: function() {
        var e4 = this.getModule(zo), t3 = e4.getItem(this.TAG, false), o4 = this._statInfoArr;
        if (oo(t3))
          Ye2.log("".concat(this._className, "._flushAtOnce count:").concat(o4.length)), e4.setItem(this.TAG, o4, true, false);
        else {
          var n3 = o4.concat(t3);
          n3.length > 10 && (n3 = n3.slice(0, 10)), Ye2.log("".concat(this.className, "._flushAtOnce count:").concat(n3.length)), e4.setItem(this.TAG, n3, true, false);
        }
        this._statInfoArr = [];
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._report(), this.reportIndex = 0, this.wholePeriod = false, this.REPORT_SDKAPPID_BLACKLIST = [], this.REPORT_TINYID_WHITELIST = [], this._avgRTT.reset(), this._avgE2EDelay.reset(), this._rateMessageSent.reset(), this._rateMessageReceived.reset();
      } }]), a3;
    }(vn), fc = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        return n2(this, o3), (a3 = t3.call(this, e4))._className = "WorkerTimerModule", a3._isWorkerEnabled = true, a3._workerTimer = null, a3._init(), a3.getInnerEmitterInstance().on(_r, a3._onCloudConfigUpdated, _2(a3)), a3;
      }
      return s2(o3, [{ key: "isWorkerEnabled", value: function() {
        return this._isWorkerEnabled && Le2;
      } }, { key: "startWorkerTimer", value: function() {
        Ye2.log("".concat(this._className, ".startWorkerTimer")), this._workerTimer && this._workerTimer.postMessage("start");
      } }, { key: "stopWorkerTimer", value: function() {
        Ye2.log("".concat(this._className, ".stopWorkerTimer")), this._workerTimer && this._workerTimer.postMessage("stop");
      } }, { key: "_init", value: function() {
        if (Le2) {
          var e4 = URL.createObjectURL(new Blob(['let interval = -1;onmessage = function(event) {  if (event.data === "start") {    if (interval > 0) {      clearInterval(interval);    }    interval = setInterval(() => {      postMessage("");    }, 1000)  } else if (event.data === "stop") {    clearInterval(interval);    interval = -1;  }};'], { type: "application/javascript; charset=utf-8" }));
          this._workerTimer = new Worker(e4);
          var t4 = this;
          this._workerTimer.onmessage = function() {
            t4._moduleManager.onCheckTimer();
          };
        }
      } }, { key: "_onCloudConfigUpdated", value: function() {
        var e4 = this.getCloudConfig("enable_worker");
        Ye2.log("".concat(this._className, "._onCloudConfigUpdated enableWorker:").concat(e4)), dt2(e4) || "1" === e4 ? !this._isWorkerEnabled && Le2 && (this._isWorkerEnabled = true, this.startWorkerTimer(), this._moduleManager.onWorkerTimerEnabled()) : this._isWorkerEnabled && Le2 && (this._isWorkerEnabled = false, this.stopWorkerTimer(), this._moduleManager.onWorkerTimerDisabled());
      } }, { key: "terminate", value: function() {
        Ye2.log("".concat(this._className, ".terminate")), this._workerTimer && (this._workerTimer.terminate(), this._workerTimer = null);
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset"));
      } }]), o3;
    }(vn), mc = function() {
      function e3() {
        n2(this, e3), this._className = "PurchasedFeatureHandler", this._purchasedFeatureMap = /* @__PURE__ */ new Map();
      }
      return s2(e3, [{ key: "isValidPurchaseBits", value: function(e4) {
        return e4 && "string" == typeof e4 && e4.length >= 1 && e4.length <= 64 && /[01]{1,64}/.test(e4);
      } }, { key: "parsePurchaseBits", value: function(e4) {
        var t3 = "".concat(this._className, ".parsePurchaseBits");
        if (this.isValidPurchaseBits(e4)) {
          this._purchasedFeatureMap.clear();
          for (var o3 = null, n3 = e4.length - 1, a3 = 0; n3 >= 0; n3--, a3++)
            o3 = a3 < 32 ? new L2(0, Math.pow(2, a3)).toString() : new L2(Math.pow(2, a3 - 32), 0).toString(), "1" === e4[n3] ? this._purchasedFeatureMap.set(o3, true) : this._purchasedFeatureMap.set(o3, false);
        } else
          Ye2.warn("".concat(t3, " invalid purchase bits:").concat(e4));
      } }, { key: "hasPurchasedFeature", value: function(e4) {
        return !!this._purchasedFeatureMap.get(e4);
      } }, { key: "isFeatureEnabled", value: function(e4) {
        for (var t3 = parseInt(e4).toString(2), o3 = void 0, n3 = true, a3 = t3.length - 1, s3 = 0; a3 >= 0; a3--, s3++)
          if ("1" === t3.charAt(a3) && (o3 = s3 < 32 ? new L2(0, Math.pow(2, s3)).toString() : new L2(Math.pow(2, s3 - 32), 0).toString(), !this._purchasedFeatureMap.get(o3))) {
            n3 = false;
            break;
          }
        return Ye2.log("".concat(this._className, ".isFeatureEnabled decimalNumber:").concat(e4, " binaryString:").concat(t3, " ret:").concat(n3)), ur({ enabled: n3 });
      } }, { key: "clear", value: function() {
        this._purchasedFeatureMap.clear();
      } }]), e3;
    }(), vc = function() {
      function e3(t3) {
        n2(this, e3), this._moduleManager = t3, this._className = "CommercialConfigModule", this._expiredTime = 0, this._isFetching = false, this._purchasedFeatureHandler = new mc();
      }
      return s2(e3, [{ key: "_canFetch", value: function() {
        return this._getModule($o).isLoggedIn() ? !this._isFetching && Date.now() >= this._expiredTime : (this._expiredTime = Date.now() + 2e3, false);
      } }, { key: "onCheckTimer", value: function(e4) {
        this._canFetch() && this.fetchConfig();
      } }, { key: "fetchConfig", value: function() {
        var e4 = this, t3 = this._canFetch(), o3 = "".concat(this._className, ".fetchConfig");
        if (Ye2.log("".concat(o3, " canFetch:").concat(t3)), t3) {
          var n3 = this._getModule(Xo), a3 = new bs2(ws2.FETCH_COMMERCIAL_CONFIG);
          a3.setNetworkType(n3.getNetworkType());
          var s3 = this._getModule($o).getSDKAppID(), r3 = this._getModule(on);
          this._isFetching = true, r3.request({ protocolName: rs2, requestData: { SDKAppID: s3 } }).then(function(t4) {
            a3.setMessage("purchaseBits:".concat(t4.data.purchaseBits)).end(), Ye2.log("".concat(o3, " ok.")), e4._parseConfig(t4.data), e4._isFetching = false;
          }).catch(function(t4) {
            n3.probe().then(function(e5) {
              var o4 = m2(e5, 2), n4 = o4[0], s4 = o4[1];
              a3.setError(t4, n4, s4).end();
            }), e4._isFetching = false;
          });
        }
      } }, { key: "onPushedConfig", value: function(e4) {
        var t3 = "".concat(this._className, ".onPushedConfig");
        Ye2.log("".concat(t3)), new bs2(ws2.PUSHED_COMMERCIAL_CONFIG).setNetworkType(this._getModule(Xo).getNetworkType()).setMessage("purchaseBits:".concat(e4.purchaseBits)).end(), this._parseConfig(e4);
      } }, { key: "_parseConfig", value: function(e4) {
        var t3 = "".concat(this._className, "._parseConfig"), o3 = e4.errorCode, n3 = e4.errorMessage, a3 = e4.purchaseBits, s3 = e4.expiredTime;
        0 === o3 ? (this._purchasedFeatureHandler.parsePurchaseBits(a3), this._expiredTime = Date.now() + 1e3 * s3) : dt2(o3) ? (Ye2.log("".concat(t3, " failed. Invalid message format:"), e4), this._setExpiredTimeOnResponseError(36e5)) : (Ye2.error("".concat(t3, " errorCode:").concat(o3, " errorMessage:").concat(n3)), this._setExpiredTimeOnResponseError(12e4));
      } }, { key: "_setExpiredTimeOnResponseError", value: function(e4) {
        this._expiredTime = Date.now() + e4;
      } }, { key: "canIUse", value: function(e4) {
        return this._purchasedFeatureHandler.hasPurchasedFeature(e4);
      } }, { key: "isFeatureEnabled", value: function(e4) {
        return this._purchasedFeatureHandler.isFeatureEnabled(e4);
      } }, { key: "_getModule", value: function(e4) {
        return this._moduleManager.getModule(e4);
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._expiredTime = 0, this._isFetching = false, this._purchasedFeatureHandler.clear();
      } }]), e3;
    }(), Mc = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        return n2(this, o3), (a3 = t3.call(this, e4))._moduleManager = e4, a3._className = "OfflinePushModule", a3._offlinePushPlugin = void 0, a3._androidPushConfig = { huaweiPushBussinessId: "", xiaomiPushBussinessId: "", xiaomiPushAppId: "", xiaomiPushAppKey: "", meizuPushBussinessId: "", meizuPushAppId: "", meizuPushAppKey: "", vivoPushBussinessId: "", fcmPushBussinessId: "", oppoPushBussinessId: "", oppoPushAppKey: "", oppoPushAppSecret: "" }, a3._deviceToken = "", a3._businessID = 0, a3._iosBusinessID = 0, a3._c2cUnreadCount = 0, a3._groupUnreadCount = 0, a3._isWebUniapp = 0, a3;
      }
      return s2(o3, [{ key: "registerPlugin", value: function(e4) {
        if (ce2) {
          this._offlinePushPlugin = e4["tim-offline-push-plugin"];
          var t4 = e4.offlinePushConfig || {}, o4 = t4.huaweiBusinessID, n3 = t4.xiaomiBusinessID, a3 = t4.xiaomiAppID, s3 = t4.xiaomiAppKey, r3 = t4.meizuBusinessID, i3 = t4.meizuAppID, c3 = t4.meizuAppKey, u3 = t4.vivoBusinessID, l3 = t4.oppoBusinessID, d3 = t4.oppoAppKey, p3 = t4.oppoAppSecret, g3 = t4.iosBusinessID;
          this._androidPushConfig.huaweiPushBussinessId = o4, this._androidPushConfig.xiaomiPushBussinessId = n3, this._androidPushConfig.xiaomiPushAppId = a3, this._androidPushConfig.xiaomiPushAppKey = s3, this._androidPushConfig.meizuPushBussinessId = r3, this._androidPushConfig.meizuPushAppId = i3, this._androidPushConfig.meizuPushAppKey = c3, this._androidPushConfig.vivoPushBussinessId = u3, this._androidPushConfig.oppoPushBussinessId = l3, this._androidPushConfig.oppoPushAppKey = d3, this._androidPushConfig.oppoPushAppSecret = p3, new bs2(ws2.REGISTER_PLUGIN).setMessage("tim-offline-push-plugin").setMoreMessage("isExist:".concat(!dt2(this._offlinePushPlugin))).end(true), Ye2.log("".concat(this._className, ".registerPlugin ok. offlinePushConfig:").concat(JSON.stringify(e4.offlinePushConfig))), this._iosBusinessID = g3, this._setAppShowListener();
        } else
          this.isIntl() || Ye2.warn("\uFF01\uFF01\uFF01\u79BB\u7EBF\u63A8\u9001\u63D2\u4EF6\u4EC5\u652F\u6301\u5728 uni-app \u6253\u5305\u7684 native app \u73AF\u5883\u4F7F\u7528");
      } }, { key: "init", value: function() {
        this._isWebUniapp = this.getUniAppPlatform(), this._getDeviceToken();
      } }, { key: "_getDeviceToken", value: function() {
        var e4 = this, t4 = "".concat(this._className, "._getDeviceToken");
        if (gt2(this._offlinePushPlugin.getDeviceToken)) {
          var o4 = "androidPushConfig:".concat(JSON.stringify(this._androidPushConfig), ", iosBusinessID:").concat(this._iosBusinessID);
          Ye2.log("".concat(t4, " start. ").concat(o4)), new bs2(ws2.GET_DEVICE_TOKEN).setMessage("".concat(o4)).end(true), this._offlinePushPlugin.getDeviceToken(this._androidPushConfig, function(n3) {
            var a3 = new bs2(ws2.GET_DEVICE_TOKEN_RES), s3 = n3.code, r3 = n3.msg;
            if (0 === s3) {
              var i3 = n3.data, c3 = i3.deviceToken, u3 = i3.deviceBrand, l3 = i3.deviceType, d3 = i3.bussinessId;
              e4._deviceToken = c3, e4._businessID = d3 || e4._iosBusinessID, o4 = "deviceToken:".concat(c3, ", deviceBrand:").concat(u3 || l3, ", businessID:").concat(e4._businessID), Ye2.log("".concat(t4, " ok. ").concat(o4)), a3.setMessage(o4).end(true), e4._setToken();
            } else
              a3.setMessage("code:".concat(s3, ", msg:").concat(r3)).end(true), Ye2.error("".concat(t4, " failed. error:"), n3);
          });
        } else
          Ye2.error("".concat(t4, " getDeviceToken is not a function"));
      } }, { key: "canIUseOfflinePush", value: function() {
        return ce2 && !dt2(this._offlinePushPlugin);
      } }, { key: "_setAppShowListener", value: function() {
        var e4 = this, t4 = "".concat(this._className, "._setAppShowListener");
        dt2(this._offlinePushPlugin) ? Ye2.error("".concat(t4, " offlinePushPlugin is undefined")) : gt2(this._offlinePushPlugin.setAppShowListener) ? (new bs2(ws2.SET_APP_SHOW_LISTENER).end(true), Ye2.log("".concat(t4, " start")), this._offlinePushPlugin.setAppShowListener(function(o4) {
          var n3 = (o4 || {}).appShow;
          new bs2(ws2.SET_APP_SHOW_LISTENER_RES).setMessage("appShow:".concat(n3)).end(true), Ye2.log("".concat(t4, " ok. appShow:").concat(n3)), e4._moduleManager.isReady() && (0 === n3 ? (e4._getConvUnreadCount(), e4._onBackground()) : 1 === n3 && e4._onForeground());
        })) : Ye2.error("".concat(t4, " setAppShowListener is not a function"));
      } }, { key: "getDeviceBrand", value: function() {
        if (!dt2(this._offlinePushPlugin) && gt2(this._offlinePushPlugin.getDeviceType)) {
          var e4 = (this._offlinePushPlugin.getDeviceType() || {}).deviceType;
          return Ye2.log("".concat(this._className, ".getDeviceBrand ok. deviceType:").concat(e4)), e4;
        }
      } }, { key: "_setToken", value: function() {
        var e4, t4 = this, o4 = "".concat(this._className, "._setToken"), n3 = this.getModule($o), a3 = 1, s3 = "", r3 = "";
        oo(this._deviceToken) && (a3 = 0);
        var i3 = this.getUniAppPlatform(), c3 = this.getDeviceBrand();
        i3 === G2.IOS || i3 === G2.IPAD || i3 === G2.MAC ? r3 = this._deviceToken : i3 === G2.ANDROID && (s3 = this._deviceToken);
        var u3 = new bs2(ws2.OFFLINE_PUSH_SET_TOKEN);
        return e4 = "deviceToken:".concat(r3 || s3, ", businessID:").concat(this._businessID, ", ") + "deviceBrand:".concat(c3, ", isWebUniapp:").concat(this._isWebUniapp, ", pushMsg:").concat(a3, ", platform:").concat(i3), u3.setMessage("".concat(e4)), Ye2.log("".concat(o4, " ").concat(e4)), this.request({ protocolName: Ms, requestData: { tokenID: s3, pushMsg: a3, sdkAppID: n3.getSDKAppID(), businessID: parseInt(this._businessID), deviceBrand: c3, deviceToken: r3, isWebUniapp: this._isWebUniapp } }).then(function(e5) {
          return u3.end(), Ye2.log("".concat(o4, " ok")), e5;
        }).catch(function(e5) {
          return t4.probeNetwork().then(function(t5) {
            var o5 = m2(t5, 2), n4 = o5[0], a4 = o5[1];
            u3.setError(e5, n4, a4).end();
          }), Ye2.error("".concat(o4, " failed. error:"), e5), lr(e5);
        });
      } }, { key: "_getConvUnreadCount", value: function() {
        var e4 = this;
        this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this.getModule(jo).getLocalConversationList().forEach(function(t4) {
          t4.type === D2.CONV_C2C && (e4._c2cUnreadCount += t4.unreadCount), t4.type === D2.CONV_GROUP && (e4._groupUnreadCount += t4.unreadCount);
        });
      } }, { key: "_onBackground", value: function() {
        var e4 = this, t4 = "".concat(this._className, "._onBackground"), o4 = new bs2(ws2.ON_BACKGROUND);
        this.request({ protocolName: ms2, requestData: { c2cUnreadCount: this._c2cUnreadCount, groupUnreadCount: this._groupUnreadCount, isWebUniapp: this._isWebUniapp } }).then(function(n3) {
          return o4.setMessage("c2cUnreadCount: ".concat(e4._c2cUnreadCount, ", groupUnreadCount: ").concat(e4._groupUnreadCount)).end(), Ye2.log("".concat(t4, " ok")), n3;
        }).catch(function(n3) {
          e4.probeNetwork().then(function(e5) {
            var t5 = m2(e5, 2), a3 = t5[0], s3 = t5[1];
            o4.setError(n3, a3, s3).end();
          }), Ye2.error("".concat(t4, " failed. error:"), n3);
        });
      } }, { key: "_onForeground", value: function() {
        var e4 = this, t4 = "".concat(this._className, "._onForeground"), o4 = new bs2(ws2.ON_FOREGROUND);
        this.request({ protocolName: vs2, requestData: { isWebUniapp: this._isWebUniapp } }).then(function(e5) {
          return o4.end(), Ye2.log("".concat(t4, " ok")), e5;
        }).catch(function(n3) {
          e4.probeNetwork().then(function(e5) {
            var t5 = m2(e5, 2), a3 = t5[0], s3 = t5[1];
            o4.setError(n3, a3, s3).end();
          }), Ye2.error("".concat(t4, " failed. error:"), n3);
        });
      } }, { key: "getUniAppPlatform", value: function() {
        var e4 = index$1.getSystemInfoSync().platform, t4 = this.getDeviceBrand();
        return "ios" === e4 ? G2.IOS : "android" === e4 ? G2.ANDROID : 1002 === t4 ? G2.IPAD : 1001 === t4 ? G2.MAC : void 0;
      } }, { key: "reset", value: function() {
        this._deviceToken = "", this._businessID = 0, this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this._isWebUniapp = 0, Ye2.log("".concat(this._className, ".reset"));
      } }]), o3;
    }(vn), yc = function(e3) {
      i2(o3, e3);
      var t3 = f2(o3);
      function o3(e4) {
        var a3;
        return n2(this, o3), (a3 = t3.call(this, e4))._className = "ProfanityFilterModule", a3._plugin = null, a3._filterConfigMap = /* @__PURE__ */ new Map(), a3._startIndex = 0, a3._version = 0, a3._canIUseLexicon = false, a3._isFetching = false, a3._expiredTime = 0, a3;
      }
      return s2(o3, [{ key: "init", value: function() {
        var e4 = this.getModule(en).getPlugin("tim-profanity-filter-plugin");
        e4 ? (this._plugin = new e4({ logger: Ye2, isArray: lt2, isMap: at2, isDevMode: this.isDevMode() }), this._getLexicon()) : Ye2.warn("TIMProfanityFilterPlugin not found! See https://www.npmjs.com/package/tim-profanity-filter-plugin ");
      } }, { key: "onCheckTimer", value: function() {
        this._plugin && this._canIUseLexicon && this.isLoggedIn() && !this._isFetching && Date.now() >= this._expiredTime && this._getLexicon();
      } }, { key: "filterMessage", value: function(e4) {
        var t4 = true;
        if (!this._plugin || !this._canIUseLexicon)
          return t4;
        var o4, n3 = e4.type, a3 = e4.conversationType;
        if (n3 !== D2.MSG_TEXT && n3 !== D2.MSG_CUSTOM)
          return t4;
        if (Ye2.log("".concat(this._className, ".filterMessage")), n3 === D2.MSG_TEXT) {
          if (a3 === D2.CONV_C2C ? o4 = Y2 : a3 === D2.CONV_GROUP && (o4 = $2), !this._isConfigOn(o4))
            return t4;
          var s3 = this._plugin.filter(e4.payload.text), r3 = s3.type, i3 = s3.modifiedText;
          1 === r3 ? t4 = false : 2 === r3 && (e4.payload.text = i3);
        } else if (n3 === D2.MSG_CUSTOM) {
          if (a3 === D2.CONV_C2C ? o4 = j2 : a3 === D2.CONV_GROUP && (o4 = z2), !this._isConfigOn(o4))
            return t4;
          var c3 = this._plugin.filter(e4.payload.data), u3 = this._plugin.filter(e4.payload.description), l3 = this._plugin.filter(e4.payload.extension);
          1 === c3.type || 1 === u3.type || 1 === l3.type ? t4 = false : (2 === c3.type && (e4.payload.data = c3.modifiedText), 2 === u3.type && (e4.payload.description = u3.modifiedText), 2 === l3.type && (e4.payload.extension = l3.modifiedText));
        }
        return Ye2.log("".concat(this._className, ".filterMessage done. isAllowedToSend:").concat(t4)), t4;
      } }, { key: "filterText", value: function(e4, t4) {
        var o4 = { isAllowedToSend: true, modifiedText: e4 };
        if (!this._plugin || !this._canIUseLexicon)
          return o4;
        if (!this._isConfigOn(t4))
          return o4;
        Ye2.log("".concat(this._className, ".filterText"));
        var n3 = this._plugin.filter(e4), a3 = n3.type, s3 = n3.modifiedText;
        return 1 === a3 ? o4.isAllowedToSend = false : 2 === a3 && (o4.modifiedText = s3), Ye2.log("".concat(this._className, ".filterText done. ret:"), o4), o4;
      } }, { key: "_getLexicon", value: function() {
        var e4 = this, t4 = new bs2(ws2.PROFANITY_FILTER), o4 = "".concat(this._className, "._getLexicon");
        this._isFetching = true, this.request({ protocolName: ys2, requestData: { startIndex: this._startIndex, version: this._version } }).then(function(n3) {
          var a3 = n3.data, s3 = a3.errorInfo, r3 = a3.filterConfig, i3 = a3.lexicon, c3 = a3.strToken, u3 = a3.completeFlag, l3 = a3.nextStartIndex, d3 = a3.version, p3 = a3.expiredTime, g3 = s3.errorCode, _3 = s3.errorMessage;
          return 0 !== g3 ? (e4._isFetching = false, Ye2.warn("".concat(o4, " failed. error:"), s3), void t4.setCode(g3).setMessage(_3).end()) : (e4._onFilterConfig(r3), e4._getToken(c3), 1 === u3 ? (Ye2.log("".concat(e4._className, "._getLexicon done. version:").concat(d3, " expiredTime:").concat(p3)), e4._version = d3, e4._canIUseLexicon = true, e4._isFetching = false, e4._expiredTime = Date.now() + 1e3 * p3, void e4._plugin.onLexiconCompleted(i3)) : (e4._startIndex = l3, e4._plugin.onLexiconSliced(i3), void e4._getLexicon()));
        }).catch(function(n3) {
          e4.probeNetwork().then(function(e5) {
            var o5 = m2(e5, 2), a3 = o5[0], s3 = o5[1];
            t4.setError(n3, a3, s3).end();
          }), e4._isFetching = false, Ye2.log("".concat(o4, " failed. error:"), n3);
        });
      } }, { key: "_onFilterConfig", value: function(e4) {
        var t4 = this;
        oo(e4) || (this._filterConfigMap.clear(), Object.keys(e4).forEach(function(o4) {
          t4._filterConfigMap.set(o4, e4[o4]);
        }), Ye2.log("".concat(this._className, "._onFilterConfig. keys:").concat(Array.from(this._filterConfigMap.keys()), " values:").concat(Array.from(this._filterConfigMap.values()))));
      } }, { key: "_isConfigOn", value: function(e4) {
        return 1 === this._filterConfigMap.get(e4);
      } }, { key: "_getToken", value: function(e4) {
        if (it2(e4)) {
          var t4 = e4.length, o4 = "";
          if (t4 % 2 == 0)
            for (var n3 = 0; n3 <= t4 - 1; n3 += 2)
              o4 += e4[n3 + 1], o4 += e4[n3];
          else {
            for (var a3 = 0; a3 < t4 - 1; a3 += 2)
              o4 += e4[a3 + 1], o4 += e4[a3];
            o4 += e4[t4 - 1];
          }
          this._plugin.onToken(o4);
        }
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), this._plugin && (this._plugin.reset(), this._plugin = null), this._filterConfigMap.clear(), this._startIndex = 0, this._version = 0, this._canIUseLexicon = false, this._isFetching = false, this._expiredTime = 0;
      } }]), o3;
    }(vn), Ic = function() {
      function e3(t3) {
        n2(this, e3), this._moduleManager = t3, this._className = "TransCmdModule";
      }
      return s2(e3, [{ key: "sendTRTCCustomData", value: function(e4) {
        return this._trans(t2({ serv: H2.NAME.TUIROOM_SVR }, e4));
      } }, { key: "_trans", value: function(e4) {
        Ye2.log("".concat(this._className, "._trans. options:").concat(JSON.stringify(e4)));
        var t3 = e4.serv, o3 = e4.data;
        return this._moduleManager.getModule(on).trans({ servcmd: "".concat(t3, ".*"), data: it2(o3) ? JSON.parse(o3) : o3 });
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset"));
      } }]), e3;
    }(), Cc = function() {
      function e3(t3) {
        n2(this, e3);
        var o3 = new bs2(ws2.SDK_CONSTRUCT);
        this._className = "ModuleManager", this._isReady = false, this._reason = hn.USER_NOT_LOGGED_IN, this._startLoginTs = 0, this._moduleMap = /* @__PURE__ */ new Map(), this._innerEmitter = null, this._outerEmitter = null, this._checkCount = 0, this._checkTimer = -1, this._moduleMap.set($o, new di(this, t3)), this._moduleMap.set(ln, new vc(this)), this._moduleMap.set(sn, new uc(this)), this._moduleMap.set(rn, new fc(this)), this._moduleMap.set(un, new hc(this)), this._moduleMap.set(nn, new ec(this)), this._moduleMap.set(on, new ic(this)), this._moduleMap.set(Fo, new pi(this)), this._moduleMap.set(qo, new Li(this)), this._moduleMap.set(xo, new Oi(this)), this._moduleMap.set(_n, new Gi(this)), this._moduleMap.set(Vo, new li(this)), this._moduleMap.set(Bo, new dr(this)), this._moduleMap.set(jo, new Or(this)), this._moduleMap.set(Ko, new Qr(this)), this._moduleMap.set(Wo, new ei(this)), this._moduleMap.set(Yo, new ai(this)), this._moduleMap.set(zo, new _i(this)), this._moduleMap.set(Jo, new mi(this)), this._moduleMap.set(Xo, new Ii(this)), this._moduleMap.set(Qo, new Ti(this)), this._moduleMap.set(Zo, new Si(this)), this._moduleMap.set(en, new Pi(this)), this._moduleMap.set(tn, new Ui(this)), this._moduleMap.set(an, new cc(this)), this._moduleMap.set(cn, new lc(this)), this._moduleMap.set(dn, new Mc(this)), this._moduleMap.set(pn2, new yc(this)), this._moduleMap.set(gn, new Ic(this)), this._eventThrottleMap = /* @__PURE__ */ new Map();
        var a3 = t3.instanceID, s3 = t3.oversea, r3 = t3.SDKAppID, i3 = "instanceID:".concat(a3, " SDKAppID:").concat(r3, " host:").concat(xt(), " oversea:").concat(s3, " inBrowser:").concat(de2, " inMiniApp:").concat(le2) + " workerAvailable:".concat(Le2, " UserAgent:").concat(_e2);
        bs2.bindEventStatModule(this._moduleMap.get(Jo)), o3.setMessage("".concat(i3, " ").concat(function() {
          var e4 = "";
          if (le2)
            try {
              var t4 = pe2.getSystemInfoSync(), o4 = t4.model, n3 = t4.version, a4 = t4.system, s4 = t4.platform, r4 = t4.SDKVersion;
              e4 = "model:".concat(o4, " version:").concat(n3, " system:").concat(a4, " platform:").concat(s4, " SDKVersion:").concat(r4);
            } catch (i4) {
              e4 = "";
            }
          return e4;
        }())).end(), Ye2.info("SDK ".concat(i3)), rr.prototype._isIntl = this._moduleMap.get($o).isIntl(), this._readyList = void 0, this._ssoLogForReady = null, this._initReadyList();
      }
      return s2(e3, [{ key: "_startTimer", value: function() {
        var e4 = this._moduleMap.get(rn), t3 = e4.isWorkerEnabled();
        Ye2.log("".concat(this._className, ".startTimer isWorkerEnabled:").concat(t3, " seed:").concat(this._checkTimer)), t3 ? e4.startWorkerTimer() : this._startMainThreadTimer();
      } }, { key: "_startMainThreadTimer", value: function() {
        Ye2.log("".concat(this._className, "._startMainThreadTimer")), this._checkTimer < 0 && (this._checkTimer = setInterval(this.onCheckTimer.bind(this), 1e3));
      } }, { key: "stopTimer", value: function() {
        var e4 = this._moduleMap.get(rn), t3 = e4.isWorkerEnabled();
        Ye2.log("".concat(this._className, ".stopTimer isWorkerEnabled:").concat(t3, " seed:").concat(this._checkTimer)), t3 ? e4.stopWorkerTimer() : this._stopMainThreadTimer();
      } }, { key: "_stopMainThreadTimer", value: function() {
        Ye2.log("".concat(this._className, "._stopMainThreadTimer")), this._checkTimer > 0 && (clearInterval(this._checkTimer), this._checkTimer = -1, this._checkCount = 0);
      } }, { key: "_stopMainThreadSocket", value: function() {
        Ye2.log("".concat(this._className, "._stopMainThreadSocket"));
        var e4 = this._moduleMap.get(nn);
        e4.setIsWorkerEnabled(true), e4.reConnect();
      } }, { key: "_startMainThreadSocket", value: function() {
        Ye2.log("".concat(this._className, "._startMainThreadSocket"));
        var e4 = this._moduleMap.get(nn);
        e4.setIsWorkerEnabled(false), e4.reConnect();
      } }, { key: "onWorkerTimerEnabled", value: function() {
        Ye2.log("".concat(this._className, ".onWorkerTimerEnabled, disable main thread timer and socket")), this._stopMainThreadTimer(), this._stopMainThreadSocket();
      } }, { key: "onWorkerTimerDisabled", value: function() {
        Ye2.log("".concat(this._className, ".onWorkerTimerDisabled, enable main thread timer and socket")), this._startMainThreadTimer(), this._startMainThreadSocket();
      } }, { key: "onCheckTimer", value: function() {
        this._checkCount += 1;
        var e4, t3 = E2(this._moduleMap);
        try {
          for (t3.s(); !(e4 = t3.n()).done; ) {
            var o3 = m2(e4.value, 2)[1];
            o3.onCheckTimer && o3.onCheckTimer(this._checkCount);
          }
        } catch (n3) {
          t3.e(n3);
        } finally {
          t3.f();
        }
      } }, { key: "_initReadyList", value: function() {
        var e4 = this;
        this._readyList = [this._moduleMap.get(Fo), this._moduleMap.get(jo)], this._readyList.forEach(function(t3) {
          t3.ready(function() {
            return e4._onModuleReady();
          });
        });
      } }, { key: "_onModuleReady", value: function() {
        var e4 = true;
        if (this._readyList.forEach(function(t4) {
          t4.isReady() || (e4 = false);
        }), e4 && !this._isReady) {
          this._isReady = true, this._outerEmitter.emit(S2.SDK_READY);
          var t3 = Date.now() - this._startLoginTs;
          Ye2.warn("SDK is ready. cost ".concat(t3, " ms")), this._startLoginTs = Date.now();
          var o3 = this._moduleMap.get(Xo).getNetworkType(), n3 = this._ssoLogForReady.getStartTs() + qe2;
          this._ssoLogForReady.setNetworkType(o3).setMessage(t3).start(n3).end();
        }
      } }, { key: "login", value: function() {
        0 === this._startLoginTs && (Ve2(), this._startLoginTs = Date.now(), this._startTimer(), this._moduleMap.get(Xo).start(), this._ssoLogForReady = new bs2(ws2.SDK_READY), this._reason = hn.LOGGING_IN);
      } }, { key: "onLoginFailed", value: function() {
        this._startLoginTs = 0;
      } }, { key: "getOuterEmitterInstance", value: function() {
        return null === this._outerEmitter && (this._outerEmitter = new Ci(), cr(this._outerEmitter), this._outerEmitter._emit = this._outerEmitter.emit, this._outerEmitter.emit = function(e4, t3) {
          var o3 = this;
          if (e4 === S2.CONVERSATION_LIST_UPDATED || e4 === S2.FRIEND_LIST_UPDATED || e4 === S2.GROUP_LIST_UPDATED || e4 === S2.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED)
            if (this._eventThrottleMap.has(e4)) {
              var n3 = Date.now(), a3 = this._eventThrottleMap.get(e4);
              n3 - a3.last < 1e3 ? (a3.timeoutID && clearTimeout(a3.timeoutID), a3.timeoutID = setTimeout(function() {
                a3.last = n3, o3._outerEmitter._emit.apply(o3._outerEmitter, [e4, { name: e4, data: o3._getEventData(e4) }]);
              }, 500)) : (a3.last = n3, this._outerEmitter._emit.apply(this._outerEmitter, [e4, { name: e4, data: this._getEventData(e4) }]));
            } else
              this._eventThrottleMap.set(e4, { last: Date.now(), timeoutID: -1 }), this._outerEmitter._emit.apply(this._outerEmitter, [e4, { name: e4, data: this._getEventData(e4) }]);
          else
            this._outerEmitter._emit.apply(this._outerEmitter, [e4, { name: e4, data: arguments[1] }]);
        }.bind(this)), this._outerEmitter;
      } }, { key: "_getEventData", value: function(e4) {
        return e4 === S2.CONVERSATION_LIST_UPDATED ? this._moduleMap.get(jo).getLocalConversationList() : e4 === S2.FRIEND_LIST_UPDATED ? this._moduleMap.get(Ho).getLocalFriendList(false) : e4 === S2.GROUP_LIST_UPDATED ? this._moduleMap.get(Ko).getLocalGroupList() : e4 === S2.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED ? this._moduleMap.get(jo).getTotalUnreadMessageCount() : void 0;
      } }, { key: "getInnerEmitterInstance", value: function() {
        return null === this._innerEmitter && (this._innerEmitter = new Ci(), this._innerEmitter._emit = this._innerEmitter.emit, this._innerEmitter.emit = function(e4, t3) {
          var o3;
          ut2(arguments[1]) && arguments[1].data ? (Ye2.warn("inner eventData has data property, please check!"), o3 = [e4, { name: arguments[0], data: arguments[1].data }]) : o3 = [e4, { name: arguments[0], data: arguments[1] }], this._innerEmitter._emit.apply(this._innerEmitter, o3);
        }.bind(this)), this._innerEmitter;
      } }, { key: "hasModule", value: function(e4) {
        return this._moduleMap.has(e4);
      } }, { key: "getModule", value: function(e4) {
        return this._moduleMap.get(e4);
      } }, { key: "isReady", value: function() {
        return this._isReady;
      } }, { key: "isIntl", value: function() {
        return this.getModule($o).isIntl();
      } }, { key: "getNotReadyReason", value: function() {
        return this._reason;
      } }, { key: "setNotReadyReason", value: function(e4) {
        this._reason = e4;
      } }, { key: "onError", value: function(e4) {
        var t3 = "code:".concat(e4.code, " message:").concat(e4.message);
        Ye2.warn("Oops! ".concat(t3)), new bs2(ws2.ERROR).setMessage(t3).setNetworkType(this.getModule(Xo).getNetworkType()).setLevel("error").end(), this.getOuterEmitterInstance().emit(S2.ERROR, e4);
      } }, { key: "reset", value: function() {
        Ye2.log("".concat(this._className, ".reset")), Ve2();
        var e4, t3 = E2(this._moduleMap);
        try {
          for (t3.s(); !(e4 = t3.n()).done; ) {
            var o3 = m2(e4.value, 2)[1];
            o3.reset && o3.reset();
          }
        } catch (r3) {
          t3.e(r3);
        } finally {
          t3.f();
        }
        this._startLoginTs = 0, this._initReadyList(), this._isReady = false, this.stopTimer(), this._outerEmitter.emit(S2.SDK_NOT_READY);
        var n3, a3 = E2(this._eventThrottleMap);
        try {
          for (a3.s(); !(n3 = a3.n()).done; ) {
            var s3 = m2(n3.value, 2)[1];
            s3.timeoutID && clearTimeout(s3.timeoutID);
          }
        } catch (r3) {
          a3.e(r3);
        } finally {
          a3.f();
        }
        this._eventThrottleMap.clear();
      } }]), e3;
    }(), Tc = function() {
      function e3(t3) {
        n2(this, e3), this._isIntl = t3, this._funcMap = /* @__PURE__ */ new Map();
      }
      return s2(e3, [{ key: "defense", value: function(e4, t3) {
        var o3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
        if ("string" != typeof e4)
          return null;
        if (0 === e4.length)
          return null;
        if ("function" != typeof t3)
          return null;
        if (this._funcMap.has(e4) && this._funcMap.get(e4).has(t3))
          return this._funcMap.get(e4).get(t3);
        this._funcMap.has(e4) || this._funcMap.set(e4, /* @__PURE__ */ new Map());
        var n3 = null;
        return this._funcMap.get(e4).has(t3) ? n3 = this._funcMap.get(e4).get(t3) : (n3 = this._pack(e4, t3, o3), this._funcMap.get(e4).set(t3, n3)), n3;
      } }, { key: "defenseOnce", value: function(e4, t3) {
        var o3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
        return "function" != typeof t3 ? null : this._pack(e4, t3, o3);
      } }, { key: "find", value: function(e4, t3) {
        return "string" != typeof e4 || 0 === e4.length || "function" != typeof t3 ? null : this._funcMap.has(e4) && this._funcMap.get(e4).has(t3) ? this._funcMap.get(e4).get(t3) : (Ye2.warn("Callback function for event ".concat(e4, " cannot be found")), null);
      } }, { key: "delete", value: function(e4, t3) {
        return "function" == typeof t3 && (!!this._funcMap.has(e4) && (!!this._funcMap.get(e4).has(t3) && (this._funcMap.get(e4).delete(t3), 0 === this._funcMap.get(e4).size && this._funcMap.delete(e4), true)));
      } }, { key: "_pack", value: function(e4, t3, o3) {
        var n3 = this;
        return function() {
          try {
            t3.apply(o3, Array.from(arguments));
          } catch (i3) {
            var a3 = Object.values(S2).indexOf(e4);
            if (-1 !== a3) {
              var s3 = Object.keys(S2)[a3];
              n3._isIntl ? Ye2.warn("There is a logic error with the corresponding callback function for event TIM.EVENT.".concat(s3), "error: ".concat(i3)) : Ye2.warn("\u63A5\u5165\u4FA7\u4E8B\u4EF6 TIM.EVENT.".concat(s3, " \u5BF9\u5E94\u7684\u56DE\u8C03\u51FD\u6570\u903B\u8F91\u5B58\u5728\u95EE\u9898\uFF01"), "error: ".concat(i3));
            }
            var r3 = new bs2(ws2.CALLBACK_FUNCTION_ERROR);
            r3.setMessage("eventName:".concat(e4)).setMoreMessage(i3.message).end();
          }
        };
      } }]), e3;
    }(), Ec = function() {
      function e3(t3) {
        n2(this, e3);
        var o3 = { SDKAppID: t3.SDKAppID, unlimitedAVChatRoom: t3.unlimitedAVChatRoom || false, scene: t3.scene || "", oversea: t3.oversea || false, instanceID: qt(), devMode: t3.devMode || false, proxyServer: t3.proxyServer || void 0 };
        this._moduleManager = new Cc(o3), this._safetyCallbackFactory = new Tc(this.isIntl());
      }
      return s2(e3, [{ key: "onError", value: function(e4) {
        this._moduleManager.onError(e4);
      } }, { key: "login", value: function(e4) {
        return this._moduleManager.login(), this._moduleManager.getModule(Fo).login(e4);
      } }, { key: "logout", value: function() {
        var e4 = this;
        return this._moduleManager.getModule(Fo).logout().then(function(t3) {
          return e4._moduleManager.reset(), t3;
        });
      } }, { key: "isReady", value: function() {
        return this._moduleManager.isReady();
      } }, { key: "isIntl", value: function() {
        return this._moduleManager.isIntl();
      } }, { key: "getNotReadyReason", value: function() {
        return this._moduleManager.getNotReadyReason();
      } }, { key: "destroy", value: function() {
        var e4 = this;
        return this.logout().finally(function() {
          e4._moduleManager.stopTimer(), e4._moduleManager.getModule(rn).terminate(), e4._moduleManager.getModule(nn).dealloc();
          var t3 = e4._moduleManager.getOuterEmitterInstance(), o3 = e4._moduleManager.getModule($o);
          t3.emit(S2.SDK_DESTROY, { SDKAppID: o3.getSDKAppID() });
        });
      } }, { key: "on", value: function(e4, t3, o3) {
        e4 === S2.GROUP_SYSTEM_NOTICE_RECEIVED && Ye2.warn("\uFF01\uFF01\uFF01TIM.EVENT.GROUP_SYSTEM_NOTICE_RECEIVED v2.6.0\u8D77\u5F03\u7528\uFF0C\u4E3A\u4E86\u66F4\u597D\u7684\u4F53\u9A8C\uFF0C\u8BF7\u5728 TIM.EVENT.MESSAGE_RECEIVED \u4E8B\u4EF6\u56DE\u8C03\u5185\u63A5\u6536\u5904\u7406\u7FA4\u7CFB\u7EDF\u901A\u77E5\uFF0C\u8BE6\u7EC6\u8BF7\u53C2\u8003\uFF1Ahttps://web.sdk.qcloud.com/im/doc/zh-cn/Message.html#.GroupSystemNoticePayload"), Ye2.debug("on", "eventName:".concat(e4)), this._moduleManager.getOuterEmitterInstance().on(e4, this._safetyCallbackFactory.defense(e4, t3, o3), o3);
      } }, { key: "once", value: function(e4, t3, o3) {
        Ye2.debug("once", "eventName:".concat(e4)), this._moduleManager.getOuterEmitterInstance().once(e4, this._safetyCallbackFactory.defenseOnce(e4, t3, o3), o3 || this);
      } }, { key: "off", value: function(e4, t3, o3, n3) {
        Ye2.debug("off", "eventName:".concat(e4));
        var a3 = this._safetyCallbackFactory.find(e4, t3);
        null !== a3 && (this._moduleManager.getOuterEmitterInstance().off(e4, a3, o3, n3), this._safetyCallbackFactory.delete(e4, t3));
      } }, { key: "registerPlugin", value: function(e4) {
        dt2(e4["tim-offline-push-plugin"]) ? this._moduleManager.getModule(en).registerPlugin(e4) : this._moduleManager.getModule(dn).registerPlugin(e4);
      } }, { key: "setLogLevel", value: function(e4) {
        if (e4 <= 0) {
          if (console.log(["", " ________  ______  __       __  __       __  ________  _______", "|        \\|      \\|  \\     /  \\|  \\  _  |  \\|        \\|       \\", " \\$$$$$$$$ \\$$$$$$| $$\\   /  $$| $$ / \\ | $$| $$$$$$$$| $$$$$$$\\", "   | $$     | $$  | $$$\\ /  $$$| $$/  $\\| $$| $$__    | $$__/ $$", "   | $$     | $$  | $$$$\\  $$$$| $$  $$$\\ $$| $$  \\   | $$    $$", "   | $$     | $$  | $$\\$$ $$ $$| $$ $$\\$$\\$$| $$$$$   | $$$$$$$\\", "   | $$    _| $$_ | $$ \\$$$| $$| $$$$  \\$$$$| $$_____ | $$__/ $$", "   | $$   |   $$ \\| $$  \\$ | $$| $$$    \\$$$| $$     \\| $$    $$", "    \\$$    \\$$$$$$ \\$$      \\$$ \\$$      \\$$ \\$$$$$$$$ \\$$$$$$$", "", ""].join("\n")), this._printDocLink(), !this.isIntl()) {
            console.log(["", "\u53C2\u8003\u4EE5\u4E0B\u6587\u6863\uFF0C\u4F1A\u66F4\u5FEB\u89E3\u51B3\u95EE\u9898\u54E6\uFF01(#^.^#)\n", "IM \u667A\u80FD\u5BA2\u670D\uFF1Ahttps://cloud.tencent.com/act/event/smarty-service?from=im-doc\n", "WebSocket \u5347\u7EA7\u6307\u5F15\uFF1Ahttps://web.sdk.qcloud.com/im/doc/zh-cn/tutorial-02-upgradeguideline.html\n", "SDK \u66F4\u65B0\u65E5\u5FD7: https://cloud.tencent.com/document/product/269/38492\n", "\u5E38\u89C1\u95EE\u9898: https://web.sdk.qcloud.com/im/doc/zh-cn/tutorial-01-faq.html\n", "\u5982\u679C\u60A8\u9700\u8981\u5728\u751F\u4EA7\u73AF\u5883\u5173\u95ED\u4E0A\u9762\u7684\u65E5\u5FD7\uFF0C\u8BF7 tim.setLogLevel(1)\n"].join("\n"));
          }
        }
        Ye2.setLevel(e4);
      } }, { key: "_printDocLink", value: function() {
        var e4 = "https://web.sdk.qcloud.com/im/doc/".concat(this.isIntl() ? "en" : "zh-cn", "/SDK.html");
        Zt() ? console.log("%c ".concat("IM SDK API ->", " %c"), "background:#ff9d00; padding:1px; border-radius:3px; color: #fff", "background:transparent", e4) : console.log("IM SDK API ->", e4);
      } }, { key: "createTextMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).createTextMessage(e4);
      } }, { key: "createTextAtMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).createTextMessage(e4);
      } }, { key: "createImageMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).createImageMessage(e4);
      } }, { key: "createAudioMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).createAudioMessage(e4);
      } }, { key: "createVideoMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).createVideoMessage(e4);
      } }, { key: "createCustomMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).createCustomMessage(e4);
      } }, { key: "createFaceMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).createFaceMessage(e4);
      } }, { key: "createFileMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).createFileMessage(e4);
      } }, { key: "createLocationMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).createLocationMessage(e4);
      } }, { key: "createMergerMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).createMergerMessage(e4);
      } }, { key: "downloadMergerMessage", value: function(e4) {
        return e4.type !== D2.MSG_MERGER ? lr({ code: hn.MESSAGE_MERGER_TYPE_INVALID }) : oo(e4.payload.downloadKey) ? lr({ code: hn.MESSAGE_MERGER_KEY_INVALID }) : this._moduleManager.getModule(qo).downloadMergerMessage(e4).catch(function(e5) {
          return lr({ code: hn.MESSAGE_MERGER_DOWNLOAD_FAIL });
        });
      } }, { key: "createForwardMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).createForwardMessage(e4);
      } }, { key: "sendMessage", value: function(e4, t3) {
        return e4 instanceof Zs ? this._moduleManager.getModule(qo).sendMessageInstance(e4, t3) : lr({ code: hn.MESSAGE_SEND_NEED_MESSAGE_INSTANCE });
      } }, { key: "callExperimentalAPI", value: function(e4, t3) {
        return "sendComboMessage" === e4 ? this._moduleManager.getModule(_n).sendMessage(t3) : "handleGroupInvitation" === e4 ? this._moduleManager.getModule(Ko).handleGroupInvitation(t3) : "isCommercialAbilityEnabled" === e4 ? this._moduleManager.getModule(ln).isFeatureEnabled(t3) : "isIntl" === e4 ? this.isIntl() : "sendTRTCCustomData" === e4 ? this._moduleManager.getModule(gn).sendTRTCCustomData(t3) : lr({ code: hn.INVALID_OPERATION });
      } }, { key: "revokeMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).revokeMessage(e4);
      } }, { key: "resendMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).resendMessage(e4);
      } }, { key: "deleteMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).deleteMessage(e4);
      } }, { key: "translateText", value: function(e4) {
        return this._moduleManager.getModule(qo).translateText(e4);
      } }, { key: "setMessageExtensions", value: function(e4, t3) {
        return this._moduleManager.getModule(xo).setMessageExtensions(e4, t3);
      } }, { key: "getMessageExtensions", value: function(e4) {
        return this._moduleManager.getModule(xo).getMessageExtensions(e4);
      } }, { key: "deleteMessageExtensions", value: function(e4, t3) {
        return this._moduleManager.getModule(xo).deleteMessageExtensions(e4, t3);
      } }, { key: "modifyMessage", value: function(e4) {
        return this._moduleManager.getModule(qo).modifyRemoteMessage(e4);
      } }, { key: "getMessageList", value: function(e4) {
        return this._moduleManager.getModule(jo).getMessageList(e4);
      } }, { key: "getMessageListHopping", value: function(e4) {
        return this._moduleManager.getModule(jo).getMessageListHopping(e4);
      } }, { key: "sendMessageReadReceipt", value: function(e4) {
        return this._moduleManager.getModule(jo).sendReadReceipt(e4);
      } }, { key: "getMessageReadReceiptList", value: function(e4) {
        return this._moduleManager.getModule(jo).getReadReceiptList(e4);
      } }, { key: "getGroupMessageReadMemberList", value: function(e4) {
        return this._moduleManager.getModule(Ko).getReadReceiptDetail(e4);
      } }, { key: "findMessage", value: function(e4) {
        return this._moduleManager.getModule(jo).findMessage(e4);
      } }, { key: "setMessageRead", value: function(e4) {
        return this._moduleManager.getModule(jo).setMessageRead(e4);
      } }, { key: "getConversationList", value: function(e4) {
        return this._moduleManager.getModule(jo).getConversationList(e4);
      } }, { key: "getConversationProfile", value: function(e4) {
        return this._moduleManager.getModule(jo).getConversationProfile(e4);
      } }, { key: "deleteConversation", value: function(e4) {
        return this._moduleManager.getModule(jo).deleteConversation(e4);
      } }, { key: "clearHistoryMessage", value: function(e4) {
        return this._moduleManager.getModule(jo).clearHistoryMessage(e4);
      } }, { key: "pinConversation", value: function(e4) {
        return this._moduleManager.getModule(jo).pinConversation(e4);
      } }, { key: "setAllMessageRead", value: function(e4) {
        return this._moduleManager.getModule(jo).setAllMessageRead(e4);
      } }, { key: "setMessageRemindType", value: function(e4) {
        return this._moduleManager.getModule(jo).setMessageRemindType(e4);
      } }, { key: "getTotalUnreadMessageCount", value: function() {
        return this._moduleManager.getModule(jo).getTotalUnreadMessageCount();
      } }, { key: "setConversationCustomData", value: function(e4) {
        return this._moduleManager.getModule(jo).setConversationCustomData(e4);
      } }, { key: "markConversation", value: function(e4) {
        return this._moduleManager.getModule(jo).markConversation(e4);
      } }, { key: "getConversationGroupList", value: function() {
        return this._moduleManager.getModule(jo).getConversationGroupList();
      } }, { key: "createConversationGroup", value: function(e4) {
        return this._moduleManager.getModule(jo).createConversationGroup(e4);
      } }, { key: "deleteConversationGroup", value: function(e4) {
        return this._moduleManager.getModule(jo).deleteConversationGroup(e4);
      } }, { key: "renameConversationGroup", value: function(e4) {
        return this._moduleManager.getModule(jo).renameConversationGroup(e4);
      } }, { key: "addConversationsToGroup", value: function(e4) {
        return this._moduleManager.getModule(jo).addConversationsToGroup(e4);
      } }, { key: "deleteConversationsFromGroup", value: function(e4) {
        return this._moduleManager.getModule(jo).deleteConversationsFromGroup(e4);
      } }, { key: "getMyProfile", value: function() {
        return this._moduleManager.getModule(Vo).getMyProfile();
      } }, { key: "getUserProfile", value: function(e4) {
        return this._moduleManager.getModule(Vo).getUserProfile(e4);
      } }, { key: "updateMyProfile", value: function(e4) {
        return this._moduleManager.getModule(Vo).updateMyProfile(e4);
      } }, { key: "getBlacklist", value: function() {
        return this._moduleManager.getModule(Vo).getLocalBlacklist();
      } }, { key: "addToBlacklist", value: function(e4) {
        return this._moduleManager.getModule(Vo).addBlacklist(e4);
      } }, { key: "removeFromBlacklist", value: function(e4) {
        return this._moduleManager.getModule(Vo).deleteBlacklist(e4);
      } }, { key: "setSelfStatus", value: function(e4) {
        return this._moduleManager.getModule(Vo).setSelfStatus(e4);
      } }, { key: "getUserStatus", value: function(e4) {
        return this._moduleManager.getModule(Vo).getUserStatus(e4);
      } }, { key: "subscribeUserStatus", value: function(e4) {
        return this._moduleManager.getModule(Vo).subscribeUserStatus(e4);
      } }, { key: "unsubscribeUserStatus", value: function(e4) {
        return this._moduleManager.getModule(Vo).unsubscribeUserStatus(e4);
      } }, { key: "getFriendList", value: function() {
        var e4 = this._moduleManager.getModule(Ho);
        return e4 ? e4.getLocalFriendList() : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "addFriend", value: function(e4) {
        var t3 = this._moduleManager.getModule(Ho);
        return t3 ? t3.addFriend(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "deleteFriend", value: function(e4) {
        var t3 = this._moduleManager.getModule(Ho);
        return t3 ? t3.deleteFriend(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "checkFriend", value: function(e4) {
        var t3 = this._moduleManager.getModule(Ho);
        return t3 ? t3.checkFriend(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "getFriendProfile", value: function(e4) {
        var t3 = this._moduleManager.getModule(Ho);
        return t3 ? t3.getFriendProfile(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "updateFriend", value: function(e4) {
        var t3 = this._moduleManager.getModule(Ho);
        return t3 ? t3.updateFriend(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "getFriendApplicationList", value: function() {
        var e4 = this._moduleManager.getModule(Ho);
        return e4 ? e4.getLocalFriendApplicationList() : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "acceptFriendApplication", value: function(e4) {
        var t3 = this._moduleManager.getModule(Ho);
        return t3 ? t3.acceptFriendApplication(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "refuseFriendApplication", value: function(e4) {
        var t3 = this._moduleManager.getModule(Ho);
        return t3 ? t3.refuseFriendApplication(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "deleteFriendApplication", value: function(e4) {
        var t3 = this._moduleManager.getModule(Ho);
        return t3 ? t3.deleteFriendApplication(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "setFriendApplicationRead", value: function() {
        var e4 = this._moduleManager.getModule(Ho);
        return e4 ? e4.setFriendApplicationRead() : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "getFriendGroupList", value: function() {
        var e4 = this._moduleManager.getModule(Ho);
        return e4 ? e4.getLocalFriendGroupList() : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "createFriendGroup", value: function(e4) {
        var t3 = this._moduleManager.getModule(Ho);
        return t3 ? t3.createFriendGroup(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "deleteFriendGroup", value: function(e4) {
        var t3 = this._moduleManager.getModule(Ho);
        return t3 ? t3.deleteFriendGroup(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "addToFriendGroup", value: function(e4) {
        var t3 = this._moduleManager.getModule(Ho);
        return t3 ? t3.addToFriendGroup(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "removeFromFriendGroup", value: function(e4) {
        var t3 = this._moduleManager.getModule(Ho);
        return t3 ? t3.removeFromFriendGroup(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "renameFriendGroup", value: function(e4) {
        var t3 = this._moduleManager.getModule(Ho);
        return t3 ? t3.renameFriendGroup(e4) : lr({ code: hn.CANNOT_FIND_MODULE });
      } }, { key: "getGroupList", value: function(e4) {
        return this._moduleManager.getModule(Ko).getGroupList(e4);
      } }, { key: "getGroupProfile", value: function(e4) {
        return this._moduleManager.getModule(Ko).getGroupProfile(e4);
      } }, { key: "createGroup", value: function(e4) {
        return this._moduleManager.getModule(Ko).createGroup(e4);
      } }, { key: "dismissGroup", value: function(e4) {
        return this._moduleManager.getModule(Ko).dismissGroup(e4);
      } }, { key: "updateGroupProfile", value: function(e4) {
        return this._moduleManager.getModule(Ko).updateGroupProfile(e4);
      } }, { key: "joinGroup", value: function(e4) {
        return this._moduleManager.getModule(Ko).joinGroup(e4);
      } }, { key: "quitGroup", value: function(e4) {
        return this._moduleManager.getModule(Ko).quitGroup(e4);
      } }, { key: "searchGroupByID", value: function(e4) {
        return this._moduleManager.getModule(Ko).searchGroupByID(e4);
      } }, { key: "getGroupOnlineMemberCount", value: function(e4) {
        return this._moduleManager.getModule(Ko).getGroupOnlineMemberCount(e4);
      } }, { key: "changeGroupOwner", value: function(e4) {
        return this._moduleManager.getModule(Ko).changeGroupOwner(e4);
      } }, { key: "getGroupApplicationList", value: function() {
        return this._moduleManager.getModule(Ko).getGroupApplicationList();
      } }, { key: "handleGroupApplication", value: function(e4) {
        return this._moduleManager.getModule(Ko).handleGroupApplication(e4);
      } }, { key: "initGroupAttributes", value: function(e4) {
        return this._moduleManager.getModule(Ko).initGroupAttributes(e4);
      } }, { key: "setGroupAttributes", value: function(e4) {
        return this._moduleManager.getModule(Ko).setGroupAttributes(e4);
      } }, { key: "deleteGroupAttributes", value: function(e4) {
        return this._moduleManager.getModule(Ko).deleteGroupAttributes(e4);
      } }, { key: "getGroupAttributes", value: function(e4) {
        return this._moduleManager.getModule(Ko).getGroupAttributes(e4);
      } }, { key: "setGroupCounters", value: function(e4) {
        return this._moduleManager.getModule(Ko).setGroupCounters(e4);
      } }, { key: "increaseGroupCounter", value: function(e4) {
        return this._moduleManager.getModule(Ko).increaseGroupCounter(e4);
      } }, { key: "decreaseGroupCounter", value: function(e4) {
        return this._moduleManager.getModule(Ko).decreaseGroupCounter(e4);
      } }, { key: "getGroupCounters", value: function(e4) {
        return this._moduleManager.getModule(Ko).getGroupCounters(e4);
      } }, { key: "getGroupMemberList", value: function(e4) {
        return this._moduleManager.getModule(Wo).getGroupMemberList(e4);
      } }, { key: "getGroupMemberProfile", value: function(e4) {
        return this._moduleManager.getModule(Wo).getGroupMemberProfile(e4);
      } }, { key: "addGroupMember", value: function(e4) {
        return this._moduleManager.getModule(Wo).addGroupMember(e4);
      } }, { key: "deleteGroupMember", value: function(e4) {
        return this._moduleManager.getModule(Wo).deleteGroupMember(e4);
      } }, { key: "setGroupMemberMuteTime", value: function(e4) {
        return this._moduleManager.getModule(Wo).setGroupMemberMuteTime(e4);
      } }, { key: "setGroupMemberRole", value: function(e4) {
        return this._moduleManager.getModule(Wo).setGroupMemberRole(e4);
      } }, { key: "setGroupMemberNameCard", value: function(e4) {
        return this._moduleManager.getModule(Wo).setGroupMemberNameCard(e4);
      } }, { key: "setGroupMemberCustomField", value: function(e4) {
        return this._moduleManager.getModule(Wo).setGroupMemberCustomField(e4);
      } }, { key: "markGroupMemberList", value: function(e4) {
        return this._moduleManager.getModule(Wo).markGroupMemberList(e4);
      } }, { key: "getJoinedCommunityList", value: function() {
        return this._moduleManager.getModule(Yo).getJoinedCommunityList();
      } }, { key: "createTopicInCommunity", value: function(e4) {
        return this._moduleManager.getModule(Yo).createTopicInCommunity(e4);
      } }, { key: "deleteTopicFromCommunity", value: function(e4) {
        return this._moduleManager.getModule(Yo).deleteTopicFromCommunity(e4);
      } }, { key: "updateTopicProfile", value: function(e4) {
        return this._moduleManager.getModule(Yo).updateTopicProfile(e4);
      } }, { key: "getTopicList", value: function(e4) {
        return this._moduleManager.getModule(Yo).getTopicList(e4);
      } }]), e3;
    }(), Sc = { login: "login", logout: "logout", destroy: "destroy", on: "on", off: "off", ready: "ready", setLogLevel: "setLogLevel", joinGroup: "joinGroup", quitGroup: "quitGroup", registerPlugin: "registerPlugin", getGroupOnlineMemberCount: "getGroupOnlineMemberCount" };
    function Dc(e3, t3) {
      if (e3.isReady() || void 0 !== Sc[t3])
        return true;
      var o3 = e3.getNotReadyReason(), n3 = e3.isIntl(), a3 = "";
      Object.getOwnPropertyNames(hn).forEach(function(e4) {
        hn[e4] === o3 && (a3 = n3 ? mn[o3] : fn2[o3]);
      });
      var s3 = { code: o3, message: "".concat(a3, " | ").concat(t3, " | ").concat(n3 ? mn[hn.SDK_IS_NOT_READY] : fn2[hn.SDK_IS_NOT_READY]) };
      return e3.onError(s3), s3;
    }
    var Nc = {}, Ac = {};
    return Ac.create = function(e3) {
      var o3 = 0, n3 = e3.SDKAppID, a3 = Qt(n3);
      if (rt2(n3))
        o3 = n3;
      else if (a3 ? Ye2.warn("TIM.create The type of the SDKAppID must be Number!") : Ye2.warn("TIM.create SDKAppID \u7684\u7C7B\u578B\u5E94\u8BE5\u4E3A Number\uFF0C\u8BF7\u4FEE\u6539\uFF01"), o3 = parseInt(n3), isNaN(n3))
        return a3 ? Ye2.error("TIM.create failed. Parse the SDKAppID failed, please check the arguments") : Ye2.error("TIM.create failed. \u89E3\u6790 SDKAppID \u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u4F20\u53C2\uFF01"), null;
      if (o3 && Nc[o3])
        return Nc[o3];
      Ye2.log("TIM.create");
      var s3 = new Ec(t2(t2({}, e3), {}, { SDKAppID: o3 }));
      s3.on(S2.SDK_DESTROY, function(e4) {
        Nc[e4.data.SDKAppID] = null, delete Nc[e4.data.SDKAppID];
      });
      var r3 = function(e4) {
        var t3 = /* @__PURE__ */ Object.create(null);
        return Object.keys(wo).forEach(function(o4) {
          if (e4[o4]) {
            var n4 = wo[o4], a4 = new N2();
            t3[n4] = function() {
              var t4 = Array.from(arguments);
              return a4.use(function(t5, n5) {
                var a5 = Dc(e4, o4);
                return true === a5 ? n5() : lr(a5);
              }).use(function(e5, t5) {
                if (true === no(e5, bo[o4], n4))
                  return t5();
              }).use(function(t5, n5) {
                return e4[o4].apply(e4, t5);
              }), a4.run(t4);
            };
          }
        }), t3;
      }(s3);
      return Nc[o3] = r3, bo.setIsIntl(a3), Ye2.log("TIM.create ok"), r3;
    }, Ac.TYPES = D2, Ac.EVENT = S2, Ac.VERSION = "2.26.1", Ye2.log("TIM.VERSION:".concat(Ac.VERSION)), Ac;
  });
})(timWx);
const TIM$1 = timWx.exports;
var timUploadPlugin = { exports: {} };
(function(module2, exports2) {
  var factory;
  factory = function() {
    function e2(e3, t3) {
      var n3 = Object.keys(e3);
      if (Object.getOwnPropertySymbols) {
        var o3 = Object.getOwnPropertySymbols(e3);
        t3 && (o3 = o3.filter(function(t4) {
          return Object.getOwnPropertyDescriptor(e3, t4).enumerable;
        })), n3.push.apply(n3, o3);
      }
      return n3;
    }
    function t2(t3) {
      for (var n3 = 1; n3 < arguments.length; n3++) {
        var o3 = null != arguments[n3] ? arguments[n3] : {};
        n3 % 2 ? e2(Object(o3), true).forEach(function(e3) {
          s2(t3, e3, o3[e3]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(o3)) : e2(Object(o3)).forEach(function(e3) {
          Object.defineProperty(t3, e3, Object.getOwnPropertyDescriptor(o3, e3));
        });
      }
      return t3;
    }
    function n2(e3) {
      return (n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    function o2(e3, t3) {
      if (!(e3 instanceof t3))
        throw new TypeError("Cannot call a class as a function");
    }
    function r2(e3, t3) {
      for (var n3 = 0; n3 < t3.length; n3++) {
        var o3 = t3[n3];
        o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
      }
    }
    function a2(e3, t3, n3) {
      return t3 && r2(e3.prototype, t3), n3 && r2(e3, n3), Object.defineProperty(e3, "prototype", { writable: false }), e3;
    }
    function s2(e3, t3, n3) {
      return t3 in e3 ? Object.defineProperty(e3, t3, { value: n3, enumerable: true, configurable: true, writable: true }) : e3[t3] = n3, e3;
    }
    function i2(e3, t3) {
      if (null == e3)
        return {};
      var n3, o3, r3 = function(e4, t4) {
        if (null == e4)
          return {};
        var n4, o4, r4 = {}, a4 = Object.keys(e4);
        for (o4 = 0; o4 < a4.length; o4++)
          n4 = a4[o4], t4.indexOf(n4) >= 0 || (r4[n4] = e4[n4]);
        return r4;
      }(e3, t3);
      if (Object.getOwnPropertySymbols) {
        var a3 = Object.getOwnPropertySymbols(e3);
        for (o3 = 0; o3 < a3.length; o3++)
          n3 = a3[o3], t3.indexOf(n3) >= 0 || Object.prototype.propertyIsEnumerable.call(e3, n3) && (r3[n3] = e3[n3]);
      }
      return r3;
    }
    var f2 = "undefined" != typeof wx$1 && "function" == typeof wx$1.getSystemInfoSync && Boolean(wx$1.getSystemInfoSync().fontSizeSetting), u2 = "undefined" != typeof qq && "function" == typeof qq.getSystemInfoSync && Boolean(qq.getSystemInfoSync().fontSizeSetting), l2 = "undefined" != typeof tt && "function" == typeof tt.getSystemInfoSync && Boolean(tt.getSystemInfoSync().fontSizeSetting), c2 = "undefined" != typeof swan && "function" == typeof swan.getSystemInfoSync && Boolean(swan.getSystemInfoSync().fontSizeSetting), y2 = "undefined" != typeof my && "function" == typeof my.getSystemInfoSync && Boolean(my.getSystemInfoSync().fontSizeSetting), d2 = "undefined" != typeof index$1 && "undefined" == typeof window, p2 = f2 || u2 || l2 || c2 || y2 || d2, g2 = u2 ? qq : l2 ? tt : c2 ? swan : y2 ? my : f2 ? wx$1 : d2 ? index$1 : {}, h2 = function(e3) {
      if ("object" !== n2(e3) || null === e3)
        return false;
      var t3 = Object.getPrototypeOf(e3);
      if (null === t3)
        return true;
      for (var o3 = t3; null !== Object.getPrototypeOf(o3); )
        o3 = Object.getPrototypeOf(o3);
      return t3 === o3;
    };
    function m2(e3) {
      if (null == e3)
        return true;
      if ("boolean" == typeof e3)
        return false;
      if ("number" == typeof e3)
        return 0 === e3;
      if ("string" == typeof e3)
        return 0 === e3.length;
      if ("function" == typeof e3)
        return 0 === e3.length;
      if (Array.isArray(e3))
        return 0 === e3.length;
      if (e3 instanceof Error)
        return "" === e3.message;
      if (h2(e3)) {
        for (var t3 in e3)
          if (Object.prototype.hasOwnProperty.call(e3, t3))
            return false;
        return true;
      }
      return false;
    }
    var b = function() {
      function e3() {
        o2(this, e3);
      }
      return a2(e3, [{ key: "request", value: function(e4, t3) {
        var n3 = this, o3 = e4.downloadUrl || "", r3 = (e4.method || "PUT").toUpperCase(), a3 = e4.url;
        if (e4.qs) {
          var s3 = function(e5) {
            var t4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "&", n4 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "=";
            return m2(e5) ? "" : h2(e5) ? Object.keys(e5).map(function(o4) {
              var r4 = encodeURIComponent(o4) + n4;
              return Array.isArray(e5[o4]) ? e5[o4].map(function(e6) {
                return r4 + encodeURIComponent(e6);
              }).join(t4) : r4 + encodeURIComponent(e5[o4]);
            }).filter(Boolean).join(t4) : void 0;
          }(e4.qs);
          s3 && (a3 += "".concat(-1 === a3.indexOf("?") ? "?" : "&").concat(s3));
        }
        var i3 = new XMLHttpRequest();
        i3.open(r3, a3, true), i3.responseType = e4.dataType || "text";
        var f3 = e4.headers || {};
        if (!m2(f3))
          for (var u3 in f3)
            f3.hasOwnProperty(u3) && "content-length" !== u3.toLowerCase() && "user-agent" !== u3.toLowerCase() && "origin" !== u3.toLowerCase() && "host" !== u3.toLowerCase() && i3.setRequestHeader(u3, f3[u3]);
        return i3.onload = function() {
          if (200 === i3.status)
            t3(null, n3._xhrRes(i3, n3._xhrBody(i3, o3)));
          else {
            var e5 = { code: i3.status, message: JSON.stringify(i3.responseText) };
            t3(e5, n3._xhrRes(i3, n3._xhrBody(i3)));
          }
        }, i3.onerror = function(e5) {
          var o4 = n3._xhrBody(i3), r4 = { code: i3.status, message: JSON.stringify(i3.responseText) };
          o4 || i3.statusText || 0 !== i3.status || (e5.message = "CORS blocked or network error"), t3(r4, n3._xhrRes(i3, o4)), r4 = null;
        }, e4.onProgress && i3.upload && (i3.upload.onprogress = function(t4) {
          var n4 = t4.total, o4 = t4.loaded, r4 = Math.floor(100 * o4 / n4);
          e4.onProgress({ total: n4, loaded: o4, percent: (r4 >= 100 ? 100 : r4) / 100 });
        }), i3.send(e4.resources), i3;
      } }, { key: "_xhrRes", value: function(e4, t3) {
        var n3 = {};
        return e4.getAllResponseHeaders().trim().split("\n").forEach(function(e5) {
          if (e5) {
            var t4 = e5.indexOf(":"), o3 = e5.substr(0, t4).trim().toLowerCase(), r3 = e5.substr(t4 + 1).trim();
            n3[o3] = r3;
          }
        }), { statusCode: e4.status, statusMessage: e4.statusText, headers: n3, data: t3 };
      } }, { key: "_xhrBody", value: function(e4, t3) {
        return 200 === e4.status && t3 ? { location: t3 } : { response: e4.responseText };
      } }]), e3;
    }(), v2 = ["unknown", "image", "video", "audio", "log"], O2 = ["name"], S2 = function() {
      function e3() {
        o2(this, e3);
      }
      return a2(e3, [{ key: "request", value: function(e4, n3) {
        var o3 = this, r3 = e4.resources, a3 = void 0 === r3 ? "" : r3, s3 = e4.headers, f3 = void 0 === s3 ? {} : s3, u3 = e4.url, l3 = e4.downloadUrl, c3 = void 0 === l3 ? "" : l3, d3 = null, p3 = "", h3 = c3.match(/^(https?:\/\/[^/]+\/)([^/]*\/?)(.*)$/), m3 = { url: u3, header: f3, name: "file", filePath: a3, formData: { key: p3 = (p3 = decodeURIComponent(h3[3])).indexOf("?") > -1 ? p3.split("?")[0] : p3, success_action_status: 200, "Content-Type": "" }, timeout: e4.timeout || 3e5 };
        if (y2) {
          var b2 = m3;
          b2.name, m3 = t2(t2({}, i2(b2, O2)), {}, { fileName: "file", fileType: v2[e4.fileType] });
        }
        return (d3 = g2.uploadFile(t2(t2({}, m3), {}, { success: function(e5) {
          o3._handleResponse({ response: e5, downloadUrl: c3, callback: n3 });
        }, fail: function(e5) {
          o3._handleResponse({ response: e5, downloadUrl: c3, callback: n3 });
        } }))).onProgressUpdate(function(t3) {
          e4.onProgress && e4.onProgress({ total: t3.totalBytesExpectedToSend, loaded: t3.totalBytesSent, percent: Math.floor(t3.progress) / 100 });
        }), d3;
      } }, { key: "_handleResponse", value: function(e4) {
        var n3 = e4.downloadUrl, o3 = e4.response, r3 = e4.callback, a3 = o3.header, s3 = {};
        if (a3)
          for (var i3 in a3)
            a3.hasOwnProperty(i3) && (s3[i3.toLowerCase()] = a3[i3]);
        var f3 = +o3.statusCode;
        200 === f3 ? r3(null, { statusCode: f3, headers: s3, data: t2(t2({}, o3.data), {}, { location: n3 }) }) : r3({ code: f3, message: JSON.stringify(o3.data) }, { statusCode: f3, headers: s3, data: void 0 });
      } }]), e3;
    }();
    return function() {
      function e3() {
        o2(this, e3), console.log("TIMUploadPlugin.VERSION: ".concat("1.0.6")), this.retry = 1, this.tryCount = 0, this.systemClockOffset = 0, this.httpRequest = p2 ? new S2() : new b();
      }
      return a2(e3, [{ key: "uploadFile", value: function(e4, t3) {
        var n3 = this;
        return this.httpRequest.request(e4, function(o3, r3) {
          o3 && n3.tryCount < n3.retry && n3.allowRetry(o3) ? (n3.tryCount++, n3.uploadFile(e4, t3)) : (n3.tryCount = 0, t3(o3, r3));
        });
      } }, { key: "allowRetry", value: function(e4) {
        var t3 = false, n3 = false;
        if (e4) {
          var o3 = e4.headers && (e4.headers.date || e4.headers.Date) || e4.error && e4.error.ServerTime;
          try {
            var r3 = e4.error && e4.error.Code, a3 = e4.error && e4.error.Message;
            ("RequestTimeTooSkewed" === r3 || "AccessDenied" === r3 && "Request has expired" === a3) && (n3 = true);
          } catch (f3) {
          }
          if (n3 && o3) {
            var s3 = Date.now(), i3 = Date.parse(o3);
            Math.abs(s3 + this.systemClockOffset - i3) >= 3e4 && (this.systemClockOffset = i3 - s3, t3 = true);
          } else
            5 === Math.floor(e4.statusCode / 100) && (t3 = true);
        }
        return t3;
      } }]), e3;
    }();
  }, module2.exports = factory();
})(timUploadPlugin);
const TIMUploadPlugin = timUploadPlugin.exports;
/*!
 * vuex v4.1.0
 * (c) 2022 Evan You
 * @license MIT
 */
var storeKey = "store";
function useStore(key) {
  if (key === void 0)
    key = null;
  return inject(key !== null ? key : storeKey);
}
function find(list, f2) {
  return list.filter(f2)[0];
}
function deepCopy(obj, cache) {
  if (cache === void 0)
    cache = [];
  if (obj === null || typeof obj !== "object") {
    return obj;
  }
  var hit = find(cache, function(c2) {
    return c2.original === obj;
  });
  if (hit) {
    return hit.copy;
  }
  var copy = Array.isArray(obj) ? [] : {};
  cache.push({
    original: obj,
    copy
  });
  Object.keys(obj).forEach(function(key) {
    copy[key] = deepCopy(obj[key], cache);
  });
  return copy;
}
function forEachValue(obj, fn2) {
  Object.keys(obj).forEach(function(key) {
    return fn2(obj[key], key);
  });
}
function isObject(obj) {
  return obj !== null && typeof obj === "object";
}
function isPromise(val) {
  return val && typeof val.then === "function";
}
function assert(condition, msg) {
  if (!condition) {
    throw new Error("[vuex] " + msg);
  }
}
function partial(fn2, arg) {
  return function() {
    return fn2(arg);
  };
}
function genericSubscribe(fn2, subs, options) {
  if (subs.indexOf(fn2) < 0) {
    options && options.prepend ? subs.unshift(fn2) : subs.push(fn2);
  }
  return function() {
    var i2 = subs.indexOf(fn2);
    if (i2 > -1) {
      subs.splice(i2, 1);
    }
  };
}
function resetStore(store, hot) {
  store._actions = /* @__PURE__ */ Object.create(null);
  store._mutations = /* @__PURE__ */ Object.create(null);
  store._wrappedGetters = /* @__PURE__ */ Object.create(null);
  store._modulesNamespaceMap = /* @__PURE__ */ Object.create(null);
  var state = store.state;
  installModule(store, state, [], store._modules.root, true);
  resetStoreState(store, state, hot);
}
function resetStoreState(store, state, hot) {
  var oldState = store._state;
  var oldScope = store._scope;
  store.getters = {};
  store._makeLocalGettersCache = /* @__PURE__ */ Object.create(null);
  var wrappedGetters = store._wrappedGetters;
  var computedObj = {};
  var computedCache = {};
  var scope = effectScope(true);
  scope.run(function() {
    forEachValue(wrappedGetters, function(fn2, key) {
      computedObj[key] = partial(fn2, store);
      computedCache[key] = computed$1(function() {
        return computedObj[key]();
      });
      Object.defineProperty(store.getters, key, {
        get: function() {
          return computedCache[key].value;
        },
        enumerable: true
      });
    });
  });
  store._state = reactive({
    data: state
  });
  store._scope = scope;
  if (store.strict) {
    enableStrictMode(store);
  }
  if (oldState) {
    if (hot) {
      store._withCommit(function() {
        oldState.data = null;
      });
    }
  }
  if (oldScope) {
    oldScope.stop();
  }
}
function installModule(store, rootState, path, module2, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);
  if (module2.namespaced) {
    if (store._modulesNamespaceMap[namespace] && true) {
      console.error("[vuex] duplicate namespace " + namespace + " for the namespaced module " + path.join("/"));
    }
    store._modulesNamespaceMap[namespace] = module2;
  }
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function() {
      {
        if (moduleName in parentState) {
          console.warn(
            '[vuex] state field "' + moduleName + '" was overridden by a module with the same name at "' + path.join(".") + '"'
          );
        }
      }
      parentState[moduleName] = module2.state;
    });
  }
  var local = module2.context = makeLocalContext(store, namespace, path);
  module2.forEachMutation(function(mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });
  module2.forEachAction(function(action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });
  module2.forEachGetter(function(getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });
  module2.forEachChild(function(child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}
function makeLocalContext(store, namespace, path) {
  var noNamespace = namespace === "";
  var local = {
    dispatch: noNamespace ? store.dispatch : function(_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;
      if (!options || !options.root) {
        type = namespace + type;
        if (!store._actions[type]) {
          console.error("[vuex] unknown local action type: " + args.type + ", global type: " + type);
          return;
        }
      }
      return store.dispatch(type, payload);
    },
    commit: noNamespace ? store.commit : function(_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;
      if (!options || !options.root) {
        type = namespace + type;
        if (!store._mutations[type]) {
          console.error("[vuex] unknown local mutation type: " + args.type + ", global type: " + type);
          return;
        }
      }
      store.commit(type, payload, options);
    }
  };
  Object.defineProperties(local, {
    getters: {
      get: noNamespace ? function() {
        return store.getters;
      } : function() {
        return makeLocalGetters(store, namespace);
      }
    },
    state: {
      get: function() {
        return getNestedState(store.state, path);
      }
    }
  });
  return local;
}
function makeLocalGetters(store, namespace) {
  if (!store._makeLocalGettersCache[namespace]) {
    var gettersProxy = {};
    var splitPos = namespace.length;
    Object.keys(store.getters).forEach(function(type) {
      if (type.slice(0, splitPos) !== namespace) {
        return;
      }
      var localType = type.slice(splitPos);
      Object.defineProperty(gettersProxy, localType, {
        get: function() {
          return store.getters[type];
        },
        enumerable: true
      });
    });
    store._makeLocalGettersCache[namespace] = gettersProxy;
  }
  return store._makeLocalGettersCache[namespace];
}
function registerMutation(store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler(payload) {
    handler.call(store, local.state, payload);
  });
}
function registerAction(store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler(payload) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function(err) {
        store._devtoolHook.emit("vuex:error", err);
        throw err;
      });
    } else {
      return res;
    }
  });
}
function registerGetter(store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    {
      console.error("[vuex] duplicate getter key: " + type);
    }
    return;
  }
  store._wrappedGetters[type] = function wrappedGetter(store2) {
    return rawGetter(
      local.state,
      local.getters,
      store2.state,
      store2.getters
    );
  };
}
function enableStrictMode(store) {
  watch(function() {
    return store._state.data;
  }, function() {
    {
      assert(store._committing, "do not mutate vuex store state outside mutation handlers.");
    }
  }, { deep: true, flush: "sync" });
}
function getNestedState(state, path) {
  return path.reduce(function(state2, key) {
    return state2[key];
  }, state);
}
function unifyObjectStyle(type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }
  {
    assert(typeof type === "string", "expects string as the type, but found " + typeof type + ".");
  }
  return { type, payload, options };
}
var Module = function Module2(rawModule, runtime) {
  this.runtime = runtime;
  this._children = /* @__PURE__ */ Object.create(null);
  this._rawModule = rawModule;
  var rawState = rawModule.state;
  this.state = (typeof rawState === "function" ? rawState() : rawState) || {};
};
var prototypeAccessors$1 = { namespaced: { configurable: true } };
prototypeAccessors$1.namespaced.get = function() {
  return !!this._rawModule.namespaced;
};
Module.prototype.addChild = function addChild(key, module2) {
  this._children[key] = module2;
};
Module.prototype.removeChild = function removeChild(key) {
  delete this._children[key];
};
Module.prototype.getChild = function getChild(key) {
  return this._children[key];
};
Module.prototype.hasChild = function hasChild(key) {
  return key in this._children;
};
Module.prototype.update = function update(rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};
Module.prototype.forEachChild = function forEachChild(fn2) {
  forEachValue(this._children, fn2);
};
Module.prototype.forEachGetter = function forEachGetter(fn2) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn2);
  }
};
Module.prototype.forEachAction = function forEachAction(fn2) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn2);
  }
};
Module.prototype.forEachMutation = function forEachMutation(fn2) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn2);
  }
};
Object.defineProperties(Module.prototype, prototypeAccessors$1);
var ModuleCollection = function ModuleCollection2(rawRootModule) {
  this.register([], rawRootModule, false);
};
ModuleCollection.prototype.get = function get2(path) {
  return path.reduce(function(module2, key) {
    return module2.getChild(key);
  }, this.root);
};
ModuleCollection.prototype.getNamespace = function getNamespace(path) {
  var module2 = this.root;
  return path.reduce(function(namespace, key) {
    module2 = module2.getChild(key);
    return namespace + (module2.namespaced ? key + "/" : "");
  }, "");
};
ModuleCollection.prototype.update = function update$1(rawRootModule) {
  update2([], this.root, rawRootModule);
};
ModuleCollection.prototype.register = function register(path, rawModule, runtime) {
  var this$1$1 = this;
  if (runtime === void 0)
    runtime = true;
  {
    assertRawModule(path, rawModule);
  }
  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function(rawChildModule, key) {
      this$1$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};
ModuleCollection.prototype.unregister = function unregister(path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  var child = parent.getChild(key);
  if (!child) {
    {
      console.warn(
        "[vuex] trying to unregister module '" + key + "', which is not registered"
      );
    }
    return;
  }
  if (!child.runtime) {
    return;
  }
  parent.removeChild(key);
};
ModuleCollection.prototype.isRegistered = function isRegistered(path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  if (parent) {
    return parent.hasChild(key);
  }
  return false;
};
function update2(path, targetModule, newModule) {
  {
    assertRawModule(path, newModule);
  }
  targetModule.update(newModule);
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        {
          console.warn(
            "[vuex] trying to add a new module '" + key + "' on hot reloading, manual reload is needed"
          );
        }
        return;
      }
      update2(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}
var functionAssert = {
  assert: function(value) {
    return typeof value === "function";
  },
  expected: "function"
};
var objectAssert = {
  assert: function(value) {
    return typeof value === "function" || typeof value === "object" && typeof value.handler === "function";
  },
  expected: 'function or object with "handler" function'
};
var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};
function assertRawModule(path, rawModule) {
  Object.keys(assertTypes).forEach(function(key) {
    if (!rawModule[key]) {
      return;
    }
    var assertOptions = assertTypes[key];
    forEachValue(rawModule[key], function(value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}
function makeAssertionMessage(path, key, type, value, expected) {
  var buf = key + " should be " + expected + ' but "' + key + "." + type + '"';
  if (path.length > 0) {
    buf += ' in module "' + path.join(".") + '"';
  }
  buf += " is " + JSON.stringify(value) + ".";
  return buf;
}
function createStore(options) {
  return new Store(options);
}
var Store = function Store2(options) {
  var this$1$1 = this;
  if (options === void 0)
    options = {};
  {
    assert(typeof Promise !== "undefined", "vuex requires a Promise polyfill in this browser.");
    assert(this instanceof Store2, "store must be called with the new operator.");
  }
  var plugins = options.plugins;
  if (plugins === void 0)
    plugins = [];
  var strict = options.strict;
  if (strict === void 0)
    strict = false;
  var devtools2 = options.devtools;
  this._committing = false;
  this._actions = /* @__PURE__ */ Object.create(null);
  this._actionSubscribers = [];
  this._mutations = /* @__PURE__ */ Object.create(null);
  this._wrappedGetters = /* @__PURE__ */ Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = /* @__PURE__ */ Object.create(null);
  this._subscribers = [];
  this._makeLocalGettersCache = /* @__PURE__ */ Object.create(null);
  this._scope = null;
  this._devtools = devtools2;
  var store = this;
  var ref2 = this;
  var dispatch2 = ref2.dispatch;
  var commit2 = ref2.commit;
  this.dispatch = function boundDispatch(type, payload) {
    return dispatch2.call(store, type, payload);
  };
  this.commit = function boundCommit(type, payload, options2) {
    return commit2.call(store, type, payload, options2);
  };
  this.strict = strict;
  var state = this._modules.root.state;
  installModule(this, state, [], this._modules.root);
  resetStoreState(this, state);
  plugins.forEach(function(plugin2) {
    return plugin2(this$1$1);
  });
};
var prototypeAccessors = { state: { configurable: true } };
Store.prototype.install = function install(app, injectKey) {
  app.provide(injectKey || storeKey, this);
  app.config.globalProperties.$store = this;
  this._devtools !== void 0 ? this._devtools : true;
};
prototypeAccessors.state.get = function() {
  return this._state.data;
};
prototypeAccessors.state.set = function(v2) {
  {
    assert(false, "use store.replaceState() to explicit replace store state.");
  }
};
Store.prototype.commit = function commit(_type, _payload, _options) {
  var this$1$1 = this;
  var ref2 = unifyObjectStyle(_type, _payload, _options);
  var type = ref2.type;
  var payload = ref2.payload;
  var options = ref2.options;
  var mutation = { type, payload };
  var entry = this._mutations[type];
  if (!entry) {
    {
      console.error("[vuex] unknown mutation type: " + type);
    }
    return;
  }
  this._withCommit(function() {
    entry.forEach(function commitIterator(handler) {
      handler(payload);
    });
  });
  this._subscribers.slice().forEach(function(sub) {
    return sub(mutation, this$1$1.state);
  });
  if (options && options.silent) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. Use the filter functionality in the vue-devtools"
    );
  }
};
Store.prototype.dispatch = function dispatch(_type, _payload) {
  var this$1$1 = this;
  var ref2 = unifyObjectStyle(_type, _payload);
  var type = ref2.type;
  var payload = ref2.payload;
  var action = { type, payload };
  var entry = this._actions[type];
  if (!entry) {
    {
      console.error("[vuex] unknown action type: " + type);
    }
    return;
  }
  try {
    this._actionSubscribers.slice().filter(function(sub) {
      return sub.before;
    }).forEach(function(sub) {
      return sub.before(action, this$1$1.state);
    });
  } catch (e2) {
    {
      console.warn("[vuex] error in before action subscribers: ");
      console.error(e2);
    }
  }
  var result = entry.length > 1 ? Promise.all(entry.map(function(handler) {
    return handler(payload);
  })) : entry[0](payload);
  return new Promise(function(resolve2, reject) {
    result.then(function(res) {
      try {
        this$1$1._actionSubscribers.filter(function(sub) {
          return sub.after;
        }).forEach(function(sub) {
          return sub.after(action, this$1$1.state);
        });
      } catch (e2) {
        {
          console.warn("[vuex] error in after action subscribers: ");
          console.error(e2);
        }
      }
      resolve2(res);
    }, function(error) {
      try {
        this$1$1._actionSubscribers.filter(function(sub) {
          return sub.error;
        }).forEach(function(sub) {
          return sub.error(action, this$1$1.state, error);
        });
      } catch (e2) {
        {
          console.warn("[vuex] error in error action subscribers: ");
          console.error(e2);
        }
      }
      reject(error);
    });
  });
};
Store.prototype.subscribe = function subscribe(fn2, options) {
  return genericSubscribe(fn2, this._subscribers, options);
};
Store.prototype.subscribeAction = function subscribeAction(fn2, options) {
  var subs = typeof fn2 === "function" ? { before: fn2 } : fn2;
  return genericSubscribe(subs, this._actionSubscribers, options);
};
Store.prototype.watch = function watch$1(getter, cb, options) {
  var this$1$1 = this;
  {
    assert(typeof getter === "function", "store.watch only accepts a function.");
  }
  return watch(function() {
    return getter(this$1$1.state, this$1$1.getters);
  }, cb, Object.assign({}, options));
};
Store.prototype.replaceState = function replaceState(state) {
  var this$1$1 = this;
  this._withCommit(function() {
    this$1$1._state.data = state;
  });
};
Store.prototype.registerModule = function registerModule(path, rawModule, options) {
  if (options === void 0)
    options = {};
  if (typeof path === "string") {
    path = [path];
  }
  {
    assert(Array.isArray(path), "module path must be a string or an Array.");
    assert(path.length > 0, "cannot register the root module by using registerModule.");
  }
  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  resetStoreState(this, this.state);
};
Store.prototype.unregisterModule = function unregisterModule(path) {
  var this$1$1 = this;
  if (typeof path === "string") {
    path = [path];
  }
  {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }
  this._modules.unregister(path);
  this._withCommit(function() {
    var parentState = getNestedState(this$1$1.state, path.slice(0, -1));
    delete parentState[path[path.length - 1]];
  });
  resetStore(this);
};
Store.prototype.hasModule = function hasModule(path) {
  if (typeof path === "string") {
    path = [path];
  }
  {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }
  return this._modules.isRegistered(path);
};
Store.prototype.hotUpdate = function hotUpdate(newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};
Store.prototype._withCommit = function _withCommit(fn2) {
  var committing = this._committing;
  this._committing = true;
  fn2();
  this._committing = committing;
};
Object.defineProperties(Store.prototype, prototypeAccessors);
var mapState = normalizeNamespace(function(namespace, states) {
  var res = {};
  if (!isValidMap(states)) {
    console.error("[vuex] mapState: mapper parameter must be either an Array or an Object");
  }
  normalizeMap(states).forEach(function(ref2) {
    var key = ref2.key;
    var val = ref2.val;
    res[key] = function mappedState() {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module2 = getModuleByNamespace(this.$store, "mapState", namespace);
        if (!module2) {
          return;
        }
        state = module2.context.state;
        getters = module2.context.getters;
      }
      return typeof val === "function" ? val.call(this, state, getters) : state[val];
    };
    res[key].vuex = true;
  });
  return res;
});
var mapMutations = normalizeNamespace(function(namespace, mutations) {
  var res = {};
  if (!isValidMap(mutations)) {
    console.error("[vuex] mapMutations: mapper parameter must be either an Array or an Object");
  }
  normalizeMap(mutations).forEach(function(ref2) {
    var key = ref2.key;
    var val = ref2.val;
    res[key] = function mappedMutation() {
      var args = [], len = arguments.length;
      while (len--)
        args[len] = arguments[len];
      var commit2 = this.$store.commit;
      if (namespace) {
        var module2 = getModuleByNamespace(this.$store, "mapMutations", namespace);
        if (!module2) {
          return;
        }
        commit2 = module2.context.commit;
      }
      return typeof val === "function" ? val.apply(this, [commit2].concat(args)) : commit2.apply(this.$store, [val].concat(args));
    };
  });
  return res;
});
var mapGetters = normalizeNamespace(function(namespace, getters) {
  var res = {};
  if (!isValidMap(getters)) {
    console.error("[vuex] mapGetters: mapper parameter must be either an Array or an Object");
  }
  normalizeMap(getters).forEach(function(ref2) {
    var key = ref2.key;
    var val = ref2.val;
    val = namespace + val;
    res[key] = function mappedGetter() {
      if (namespace && !getModuleByNamespace(this.$store, "mapGetters", namespace)) {
        return;
      }
      if (!(val in this.$store.getters)) {
        console.error("[vuex] unknown getter: " + val);
        return;
      }
      return this.$store.getters[val];
    };
    res[key].vuex = true;
  });
  return res;
});
var mapActions = normalizeNamespace(function(namespace, actions) {
  var res = {};
  if (!isValidMap(actions)) {
    console.error("[vuex] mapActions: mapper parameter must be either an Array or an Object");
  }
  normalizeMap(actions).forEach(function(ref2) {
    var key = ref2.key;
    var val = ref2.val;
    res[key] = function mappedAction() {
      var args = [], len = arguments.length;
      while (len--)
        args[len] = arguments[len];
      var dispatch2 = this.$store.dispatch;
      if (namespace) {
        var module2 = getModuleByNamespace(this.$store, "mapActions", namespace);
        if (!module2) {
          return;
        }
        dispatch2 = module2.context.dispatch;
      }
      return typeof val === "function" ? val.apply(this, [dispatch2].concat(args)) : dispatch2.apply(this.$store, [val].concat(args));
    };
  });
  return res;
});
var createNamespacedHelpers = function(namespace) {
  return {
    mapState: mapState.bind(null, namespace),
    mapGetters: mapGetters.bind(null, namespace),
    mapMutations: mapMutations.bind(null, namespace),
    mapActions: mapActions.bind(null, namespace)
  };
};
function normalizeMap(map) {
  if (!isValidMap(map)) {
    return [];
  }
  return Array.isArray(map) ? map.map(function(key) {
    return { key, val: key };
  }) : Object.keys(map).map(function(key) {
    return { key, val: map[key] };
  });
}
function isValidMap(map) {
  return Array.isArray(map) || isObject(map);
}
function normalizeNamespace(fn2) {
  return function(namespace, map) {
    if (typeof namespace !== "string") {
      map = namespace;
      namespace = "";
    } else if (namespace.charAt(namespace.length - 1) !== "/") {
      namespace += "/";
    }
    return fn2(namespace, map);
  };
}
function getModuleByNamespace(store, helper, namespace) {
  var module2 = store._modulesNamespaceMap[namespace];
  if (!module2) {
    console.error("[vuex] module namespace not found in " + helper + "(): " + namespace);
  }
  return module2;
}
function createLogger(ref2) {
  if (ref2 === void 0)
    ref2 = {};
  var collapsed = ref2.collapsed;
  if (collapsed === void 0)
    collapsed = true;
  var filter = ref2.filter;
  if (filter === void 0)
    filter = function(mutation, stateBefore, stateAfter) {
      return true;
    };
  var transformer = ref2.transformer;
  if (transformer === void 0)
    transformer = function(state) {
      return state;
    };
  var mutationTransformer = ref2.mutationTransformer;
  if (mutationTransformer === void 0)
    mutationTransformer = function(mut) {
      return mut;
    };
  var actionFilter = ref2.actionFilter;
  if (actionFilter === void 0)
    actionFilter = function(action, state) {
      return true;
    };
  var actionTransformer = ref2.actionTransformer;
  if (actionTransformer === void 0)
    actionTransformer = function(act) {
      return act;
    };
  var logMutations = ref2.logMutations;
  if (logMutations === void 0)
    logMutations = true;
  var logActions = ref2.logActions;
  if (logActions === void 0)
    logActions = true;
  var logger = ref2.logger;
  if (logger === void 0)
    logger = console;
  return function(store) {
    var prevState = deepCopy(store.state);
    if (typeof logger === "undefined") {
      return;
    }
    if (logMutations) {
      store.subscribe(function(mutation, state) {
        var nextState = deepCopy(state);
        if (filter(mutation, prevState, nextState)) {
          var formattedTime = getFormattedTime();
          var formattedMutation = mutationTransformer(mutation);
          var message = "mutation " + mutation.type + formattedTime;
          startMessage(logger, message, collapsed);
          logger.log("%c prev state", "color: #9E9E9E; font-weight: bold", transformer(prevState));
          logger.log("%c mutation", "color: #03A9F4; font-weight: bold", formattedMutation);
          logger.log("%c next state", "color: #4CAF50; font-weight: bold", transformer(nextState));
          endMessage(logger);
        }
        prevState = nextState;
      });
    }
    if (logActions) {
      store.subscribeAction(function(action, state) {
        if (actionFilter(action, state)) {
          var formattedTime = getFormattedTime();
          var formattedAction = actionTransformer(action);
          var message = "action " + action.type + formattedTime;
          startMessage(logger, message, collapsed);
          logger.log("%c action", "color: #03A9F4; font-weight: bold", formattedAction);
          endMessage(logger);
        }
      });
    }
  };
}
function startMessage(logger, message, collapsed) {
  var startMessage2 = collapsed ? logger.groupCollapsed : logger.group;
  try {
    startMessage2.call(logger, message);
  } catch (e2) {
    logger.log(message);
  }
}
function endMessage(logger) {
  try {
    logger.groupEnd();
  } catch (e2) {
    logger.log("\u2014\u2014 log end \u2014\u2014");
  }
}
function getFormattedTime() {
  var time = new Date();
  return " @ " + pad(time.getHours(), 2) + ":" + pad(time.getMinutes(), 2) + ":" + pad(time.getSeconds(), 2) + "." + pad(time.getMilliseconds(), 3);
}
function repeat(str, times) {
  return new Array(times + 1).join(str);
}
function pad(num, maxLength) {
  return repeat("0", maxLength - num.toString().length) + num;
}
var index = {
  version: "4.1.0",
  Store,
  storeKey,
  createStore,
  useStore,
  mapState,
  mapMutations,
  mapGetters,
  mapActions,
  createNamespacedHelpers,
  createLogger
};
var aegis_min = { exports: {} };
(function(module2, exports2) {
  !function(e2, t2) {
    module2.exports = t2();
  }(commonjsGlobal, function() {
    var j2 = function(e3, t3) {
      return (j2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
        e4.__proto__ = t4;
      } || function(e4, t4) {
        for (var n3 in t4)
          Object.prototype.hasOwnProperty.call(t4, n3) && (e4[n3] = t4[n3]);
      })(e3, t3);
    };
    function e2(e3, t3) {
      function n3() {
        this.constructor = e3;
      }
      j2(e3, t3), e3.prototype = null === t3 ? Object.create(t3) : (n3.prototype = t3.prototype, new n3());
    }
    var f2 = function() {
      return (f2 = Object.assign || function(e3) {
        for (var t3, n3 = 1, i3 = arguments.length; n3 < i3; n3++)
          for (var o3 in t3 = arguments[n3])
            Object.prototype.hasOwnProperty.call(t3, o3) && (e3[o3] = t3[o3]);
        return e3;
      }).apply(this, arguments);
    };
    function H2(i3, o3) {
      var r3, a3, s3, l3 = { label: 0, sent: function() {
        if (1 & s3[0])
          throw s3[1];
        return s3[1];
      }, trys: [], ops: [] }, e3 = { next: t3(0), throw: t3(1), return: t3(2) };
      return "function" == typeof Symbol && (e3[Symbol.iterator] = function() {
        return this;
      }), e3;
      function t3(n3) {
        return function(e4) {
          var t4 = [n3, e4];
          if (r3)
            throw new TypeError("Generator is already executing.");
          for (; l3; )
            try {
              if (r3 = 1, a3 && (s3 = 2 & t4[0] ? a3.return : t4[0] ? a3.throw || ((s3 = a3.return) && s3.call(a3), 0) : a3.next) && !(s3 = s3.call(a3, t4[1])).done)
                return s3;
              switch (a3 = 0, (t4 = s3 ? [2 & t4[0], s3.value] : t4)[0]) {
                case 0:
                case 1:
                  s3 = t4;
                  break;
                case 4:
                  return l3.label++, { value: t4[1], done: false };
                case 5:
                  l3.label++, a3 = t4[1], t4 = [0];
                  continue;
                case 7:
                  t4 = l3.ops.pop(), l3.trys.pop();
                  continue;
                default:
                  if (!((s3 = 0 < (s3 = l3.trys).length && s3[s3.length - 1]) || 6 !== t4[0] && 2 !== t4[0])) {
                    l3 = 0;
                    continue;
                  }
                  if (3 === t4[0] && (!s3 || t4[1] > s3[0] && t4[1] < s3[3]))
                    l3.label = t4[1];
                  else if (6 === t4[0] && l3.label < s3[1])
                    l3.label = s3[1], s3 = t4;
                  else {
                    if (!(s3 && l3.label < s3[2])) {
                      s3[2] && l3.ops.pop(), l3.trys.pop();
                      continue;
                    }
                    l3.label = s3[2], l3.ops.push(t4);
                  }
              }
              t4 = o3.call(i3, l3);
            } catch (e5) {
              t4 = [6, e5], a3 = 0;
            } finally {
              r3 = s3 = 0;
            }
          if (5 & t4[0])
            throw t4[1];
          return { value: t4[0] ? t4[1] : void 0, done: true };
        };
      }
    }
    function a2() {
      for (var e3 = 0, t3 = 0, n3 = arguments.length; t3 < n3; t3++)
        e3 += arguments[t3].length;
      for (var i3 = Array(e3), o3 = 0, t3 = 0; t3 < n3; t3++)
        for (var r3 = arguments[t3], a3 = 0, s3 = r3.length; a3 < s3; a3++, o3++)
          i3[o3] = r3[a3];
      return i3;
    }
    Object.assign || Object.defineProperty(Object, "assign", { enumerable: false, configurable: true, writable: true, value: function(e3) {
      if (null == e3)
        throw new TypeError("Cannot convert first argument to object");
      for (var t3 = Object(e3), n3 = 1; n3 < arguments.length; n3++)
        if (null != (i3 = arguments[n3]))
          for (var i3 = Object(i3), o3 = Object.keys(Object(i3)), r3 = 0, a3 = o3.length; r3 < a3; r3++) {
            var s3 = o3[r3], l3 = Object.getOwnPropertyDescriptor(i3, s3);
            null != l3 && l3.enumerable && (t3[s3] = i3[s3]);
          }
      return t3;
    } });
    var I2 = ["ext1", "ext2", "ext3", "level", "trace", "tag", "seq", "code"], D2 = (t2.prototype.indexOf = function(e3, t3) {
      for (var n3 = 0; n3 < e3.length; n3++)
        if (e3[n3].callback === t3)
          return n3;
      return -1;
    }, t2.prototype.on = function(e3, t3, n3) {
      var i3;
      if (void 0 === n3 && (n3 = 0), this)
        return (i3 = this.eventsList[e3]) || (this.eventsList[e3] = [], i3 = this.eventsList[e3]), -1 === this.indexOf(i3, t3) && i3.push({ name: e3, type: n3 || 0, callback: t3 }), this;
    }, t2.prototype.one = function(e3, t3) {
      this.on(e3, t3, 1);
    }, t2.prototype.remove = function(e3, t3) {
      if (this) {
        var n3 = this.eventsList[e3];
        if (n3) {
          if (t3)
            return n3.length && (t3 = this.indexOf(n3, t3), n3.splice(t3, 1)), this;
          try {
            delete this.eventsList[e3];
          } catch (e4) {
          }
        }
        return null;
      }
    }, t2.prototype.clear = function() {
      this.eventsList = {};
    }, t2), F2 = function(e3) {
      if (!e3 || 0 === e3.length)
        return "{}";
      e3 = Array.isArray(e3) ? e3 : [e3];
      var t3 = Object.keys(e3[0]), n3 = {}, i3 = (t3.forEach(function(t4) {
        n3[t4] = e3.map(function(e4) {
          return e4[t4];
        });
      }), n3.count = e3.length, n3);
      if ("string" == typeof i3)
        return i3;
      try {
        return JSON.stringify(i3, ee2()) || "undefined";
      } catch (i4) {
        return "error happen when aegis stringify: \n " + i4.message + " \n " + i4.stack;
      }
    };
    function t2() {
      var a3 = this;
      this.emit = function(e3, t3) {
        if (a3) {
          var n3;
          if (null != (i3 = a3.eventsList[e3]) && i3.length)
            for (var i3 = i3.slice(), o3 = 0; o3 < i3.length; o3++) {
              n3 = i3[o3];
              try {
                var r3 = n3.callback.apply(a3, [t3]);
                if (1 === n3.type && a3.remove(e3, n3.callback), false === r3)
                  break;
              } catch (e4) {
                throw e4;
              }
            }
          return a3;
        }
      }, this.eventsList = {};
    }
    function p2(e3, t3) {
      return "string" == typeof e3 ? e3.split("?")[t3 ? 1 : 0] || "" : e3;
    }
    function M2(e3) {
      return "string" == typeof e3 && e3.startsWith("//") ? "https:" === (null === location || void 0 === location ? void 0 : location.protocol) : /^https/.test(e3);
    }
    function d2(e3, t3, n3) {
      var i3, o3;
      try {
        if ("function" == typeof (null == t3 ? void 0 : t3.retCodeHandler))
          return { code: void 0 === (r3 = (o3 = t3.retCodeHandler(e3, null == n3 ? void 0 : n3.url, null == n3 ? void 0 : n3.ctx, null == n3 ? void 0 : n3.payload) || {}).code) ? "unknown" : r3, isErr: o3.isErr };
        "string" == typeof e3 && (e3 = JSON.parse(e3)), "function" == typeof (null == (i3 = null == t3 ? void 0 : t3.ret) ? void 0 : i3.join) && (Z2 = [].concat(t3.ret.map(function(e4) {
          return e4.toLowerCase();
        })));
        var r3, a3 = Object.getOwnPropertyNames(e3).filter(function(e4) {
          return -1 !== Z2.indexOf(e4.toLowerCase());
        });
        return a3.length ? { code: "" + (r3 = e3[a3[0]]), isErr: 0 !== r3 && "0" !== r3 } : { code: "unknown", isErr: false };
      } catch (e4) {
        return { code: "unknown", isErr: false };
      }
    }
    function h2(e3, t3, n3) {
      try {
        var i3 = "function" == typeof t3 ? t3(e3, null == n3 ? void 0 : n3.url) || "" : e3;
        return te2(i3).slice(0, 102400);
      } catch (e4) {
        return "";
      }
    }
    function y2(n3, i3) {
      var o3, r3 = [], a3 = n3.config;
      return n3.lifeCycle.on("destroy", function() {
        r3.length = 0;
      }), function(e3, t3) {
        Array.isArray(e3) ? r3 = r3.concat(e3) : r3.push(e3), i3 && r3.length >= i3 || n3.sendNow && 0 < r3.length ? (r3 = oe2(r3), t3(r3.splice(0, r3.length)), o3 && clearTimeout(o3)) : (o3 && clearTimeout(o3), o3 = setTimeout(function() {
          o3 = null, 0 < (r3 = oe2(r3)).length && t3(r3.splice(0, r3.length));
        }, a3.delay));
      };
    }
    function B2(e3, t3) {
      return Array.isArray(e3) ? t3(e3.map(function(e4) {
        return t4 = f2(f2({}, e4), { msg: "string" == typeof e4.msg ? e4.msg : [].concat(e4.msg).map(R2).join(" ") }), I2.forEach(function(e5) {
          t4[e5] || delete t4[e5];
        }), t4;
        var t4;
      })) : t3([f2(f2({}, e3), { msg: "string" == typeof e3.msg ? e3.msg : R2(e3.msg) })]);
    }
    function J2(l3, u3) {
      return function(e3, t3) {
        var n3, i3, o3, r3 = Array.isArray(e3), a3 = r3 ? e3 : [e3], s3 = (l3.lifeCycle.emit("beforeRequest", e3), l3.config.beforeRequest);
        (a3 = "function" == typeof s3 ? a3.map(function(t4) {
          try {
            var e4 = s3({ logs: t4, logType: u3 });
            return (null == e4 ? void 0 : e4.logType) === u3 && null != e4 && e4.logs ? e4.logs : false !== e4 && t4;
          } catch (e5) {
            return t4;
          }
        }).filter(function(e4) {
          return false !== e4;
        }) : a3).length && (n3 = a3, e3 = I2, !Array.isArray(n3) || n3.length <= 1 || (i3 = [], o3 = [], !(o3 = "string" == typeof e3 ? [e3] : e3) || o3.length <= 0 || (o3.forEach(function(t4) {
          n3.forEach(function(e4) {
            null != e4 && e4[t4] && i3.push(t4);
          });
        }), 0 < i3.length && (n3 = n3.map(function(e4) {
          var t4 = {};
          return i3.forEach(function(e5) {
            t4[e5] = "";
          }), f2(f2({}, t4), e4);
        })))), a3 = n3, t3(r3 ? a3 : a3[0]));
      };
    }
    function V2(o3) {
      return function(e3, t3) {
        o3.lifeCycle.emit("modifyRequest", e3);
        var n3 = o3.config.modifyRequest;
        if ("function" == typeof n3)
          try {
            var i3 = n3(e3);
            "object" == typeof i3 && "url" in i3 && (e3 = i3);
          } catch (e4) {
            console.error(e4);
          }
        t3(e3);
      };
    }
    function W2(i3) {
      return function(e3, t3) {
        null != (n3 = i3.lifeCycle) && n3.emit("afterRequest", e3);
        var n3 = (i3.config || {}).afterRequest;
        "function" == typeof n3 && false === n3(e3) || t3(e3);
      };
    }
    function v2(n3) {
      if (n3 && n3.reduce && n3.length)
        return 1 === n3.length ? function(e3, t3) {
          n3[0](e3, t3 || le2);
        } : n3.reduce(function(n4, i3) {
          return function(e3, t3) {
            return void 0 === t3 && (t3 = le2), n4(e3, function(e4) {
              return null == i3 ? void 0 : i3(e4, t3);
            });
          };
        });
      throw new TypeError("createPipeline need at least one function param");
    }
    function s2(t3, n3) {
      Object.getOwnPropertyNames(t3).forEach(function(e3) {
        "function" == typeof t3[e3] && "constructor" !== e3 && (n3 ? n3[e3] = "sendPipeline" === e3 ? function() {
          return function() {
          };
        } : function() {
        } : t3[e3] = function() {
        });
      });
    }
    function i2(e3) {
      try {
        var t3, n3, i3, o3 = "";
        return o3 = e3.pageUrl || (n3 = (t3 = getCurrentPages())[t3.length - 1] || {}, r3 = n3.options, i3 = Object.keys(r3).length ? "?" + Object.keys(r3).map(function(e4) {
          return e4 + "=" + r3[e4];
        }).join("&") : "", n3.route ? n3.route + i3 : ""), (o3 = "function" == typeof e3.urlHandler ? e3.urlHandler() : o3).slice(0, 2048);
      } catch (e4) {
        return "";
      }
      var r3;
    }
    function G2(e3, t3) {
      if ("string" == typeof e3 && "string" == typeof t3) {
        if (e3 === t3)
          return 1;
        for (var n3 = e3.split("."), i3 = t3.split("."), o3 = Math.max(n3.length, i3.length), r3 = 0; r3 < o3; r3++) {
          var a3 = ~~n3[r3], s3 = ~~i3[r3];
          if (a3 < s3)
            return;
          if (s3 < a3)
            return 1;
        }
      }
    }
    function K2(e3, t3) {
      var n3 = this;
      this.taskQueue = [], this.count = 1, this.maxCount = 2, this.addTask = function(e4) {
        n3.taskQueue.push(e4);
      }, this.fireTask = function() {
        var e4 = n3.taskQueue.length;
        n3.count > n3.maxCount || 0 === e4 || (n3.count = n3.count + 1, (e4 = n3.taskQueue.shift()) && n3.sendRequest(e4.options, null == e4 ? void 0 : e4.success, null == e4 ? void 0 : e4.fail));
      }, this.complete = function() {
        1 < n3.count && (n3.count = n3.count - 1), n3.fireTask();
      }, t3 && (this.maxCount = t3), this.sendRequest = e3;
    }
    function l2(e3) {
      return ue2 = ue2 || w.getSystemInfoSync().SDKVersion, G2(ue2, "1.1.1") && w.canIUse ? w.canIUse(e3) : !!w[e3];
    }
    function u2(e3) {
      for (var t3, n3 = { unknown: /unknown|none/i, wifi: /wifi/i, net2g: /2g/i, net3g: /3g/i, net4g: /4g/i, net5g: /5g/i, net6g: /6g/i }, i3 = m2.unknown, o3 = 0; o3 < Object.keys(n3).length; o3++) {
        var r3 = Object.keys(n3)[o3];
        if (null != (t3 = n3[r3]) && t3.test(e3)) {
          i3 = m2[r3];
          break;
        }
      }
      return i3;
    }
    function c2(e3) {
      var t3 = e3.apiName, n3 = S2[t3];
      n3 ? n3.hackCloudReq.addCallback(e3) : (n3 = P2.cloud[t3], S2[t3] = { hackCloudReq: new ge2(e3), originApi: n3 }), S2[t3];
    }
    function $2(e3) {
      var t3 = e3.apiName, n3 = T2[t3];
      n3 ? n3.hackReq.addCallback(e3) : (n3 = wx$1[t3], T2[t3] = { hackReq: new ye2(e3), originApi: n3 }), T2[t3];
    }
    var b, g2, m2, O2, E2, X2, z2, Q2, Y2, Z2 = ["ret", "retcode", "code", "errcode"], ee2 = function() {
      var n3 = /* @__PURE__ */ new WeakSet();
      return function(e3, t3) {
        if (t3 instanceof Error)
          return "Error.message: " + t3.message + " \n  Error.stack: " + t3.stack;
        if ("object" == typeof t3 && null !== t3) {
          if (n3.has(t3))
            return "[Circular " + (e3 || "root") + "]";
          n3.add(t3);
        }
        return t3;
      };
    }, R2 = function(e3) {
      if ("string" == typeof e3)
        return e3;
      try {
        return e3 instanceof Error ? (JSON.stringify(e3, ee2(), 4) || "undefined").replace(/"/gim, "") : JSON.stringify(e3, ee2(), 4) || "undefined";
      } catch (e4) {
        return "error happen when aegis stringify: \n " + e4.message + " \n " + e4.stack;
      }
    }, te2 = function(n3, i3) {
      void 0 === i3 && (i3 = 3);
      var o3, r3, a3, s3 = "";
      return Array.isArray(n3) ? (s3 += "[", o3 = n3.length, n3.forEach(function(e3, t3) {
        s3 = (s3 += "object" == typeof e3 && 1 < i3 ? te2(e3, i3 - 1) : ie2(e3)) + (t3 === o3 - 1 ? "" : ",");
      }), s3 += "]") : n3 instanceof Object ? (s3 = "{", r3 = Object.keys(n3), a3 = r3.length, r3.forEach(function(e3, t3) {
        "object" == typeof n3[e3] && 1 < i3 ? s3 += '"' + e3 + '":' + te2(n3[e3], i3 - 1) : s3 += ne2(e3, n3[e3]), s3 += t3 === a3 - 1 || t3 < a3 - 1 && void 0 === n3[r3[t3 + 1]] ? "" : ",";
      }), s3 += "}") : s3 += n3, s3;
    }, ne2 = function(e3, t3) {
      var n3 = typeof t3, i3 = "";
      return "string" == n3 || "object" == n3 ? i3 += '"' + e3 + '":"' + t3 + '"' : "function" == typeof t3 ? i3 += '"' + e3 + '":"function ' + t3.name + '"' : "symbol" == typeof t3 ? i3 += '"' + e3 + '":"symbol"' : "number" != typeof t3 && "boolean" != n3 || (i3 += '"' + e3 + '": ' + t3), i3;
    }, ie2 = function(e3) {
      var t3 = typeof e3;
      return "" + ("undefined" == t3 || "symbol" == t3 || "function" == t3 ? "null" : "string" == t3 || "object" == t3 ? '"' + e3 + '"' : e3);
    }, oe2 = ((n2 = b = b || {}).INFO_ALL = "-1", n2.API_RESPONSE = "1", n2.INFO = "2", n2.ERROR = "4", n2.PROMISE_ERROR = "8", n2.AJAX_ERROR = "16", n2.SCRIPT_ERROR = "32", n2.IMAGE_ERROR = "64", n2.CSS_ERROR = "128", n2.CONSOLE_ERROR = "256", n2.MEDIA_ERROR = "512", n2.RET_ERROR = "1024", n2.REPORT = "2048", n2.PV = "4096", n2.EVENT = "8192", n2.PAGE_NOT_FOUND_ERROR = "16384", n2.WEBSOCKET_ERROR = "32768", n2.BRIDGE_ERROR = "65536", (n2 = g2 = g2 || {})[n2.android = 1] = "android", n2[n2.ios = 2] = "ios", n2[n2.windows = 3] = "windows", n2[n2.macos = 4] = "macos", n2[n2.linux = 5] = "linux", n2[n2.devtools = 6] = "devtools", n2[n2.other = 100] = "other", (n2 = m2 = m2 || {})[n2.unknown = 100] = "unknown", n2[n2.wifi = 1] = "wifi", n2[n2.net2g = 2] = "net2g", n2[n2.net3g = 3] = "net3g", n2[n2.net4g = 4] = "net4g", n2[n2.net5g = 5] = "net5g", n2[n2.net6g = 6] = "net6g", (n2 = O2 = O2 || {}).LOG = "log", n2.SPEED = "speed", n2.PERFORMANCE = "performance", n2.OFFLINE = "offline", n2.WHITE_LIST = "whiteList", n2.VITALS = "vitals", n2.PV = "pv", n2.CUSTOM_PV = "customPV", n2.EVENT = "event", n2.CUSTOM = "custom", n2.SDK_ERROR = "sdkError", n2.SET_DATA = "setData", n2.LOAD_PACKAGE = "loadPackage", (n2 = E2 = E2 || {}).production = "production", n2.development = "development", n2.gray = "gray", n2.pre = "pre", n2.daily = "daily", n2.local = "local", n2.test = "test", n2.others = "others", function(e3) {
      return e3.filter(function(n3, i3) {
        return "static" !== n3.type || !e3.find(function(e4, t3) {
          return n3.url === e4.url && 200 === n3.status && i3 < t3;
        });
      });
    }), re2 = function(e3) {
      e3.level === b.INFO_ALL && (e3.level = b.INFO);
    }, ae2 = function(e3) {
      return (Array.isArray(e3) ? e3 : [e3]).map(function(n3) {
        return Object.getOwnPropertyNames(n3).reduce(function(e4, t3) {
          return "ctx" !== t3 && (e4[t3] = n3[t3]), e4;
        }, { level: b.INFO, msg: "" });
      });
    }, se2 = function(i3) {
      return function(e3) {
        return i3.sendPipeline([function(e4, n3) {
          return n3({ url: i3.config.url || "", data: F2(ae2(e4)), method: "post", contentType: "application/json", type: O2.LOG, log: e4, requestConfig: { timeout: 5e3 }, success: function() {
            var t3 = i3.config.onReport;
            "function" == typeof t3 && e4.forEach(function(e5) {
              t3(e5);
            }), "function" == typeof n3 && n3([]);
          } });
        }], O2.LOG)(e3);
      };
    }, le2 = function() {
    }, n2 = (Object.defineProperty(A2.prototype, "__version__", { get: function() {
      return console.warn("__version__ has discard, please use version"), "1.36.5";
    }, enumerable: false, configurable: true }), Object.defineProperty(A2.prototype, "LogType", { get: function() {
      return console.warn("LogType has discard, please use logType"), b;
    }, enumerable: false, configurable: true }), A2.prototype.init = function(e3) {
      this.setConfig(e3);
      for (var t3 = 0; t3 < A2.installedPlugins.length; t3++)
        try {
          A2.installedPlugins[t3].patch(this);
        } catch (e4) {
          this.sendSDKError(e4);
        }
      this.lifeCycle.emit("onInited");
    }, A2.prototype.setConfig = function(e3) {
      Object.assign(this.config, e3);
      var e3 = this.config, t3 = e3.id, n3 = e3.uin, i3 = e3.version, o3 = e3.ext1, r3 = e3.ext2, a3 = e3.ext3, s3 = e3.aid, l3 = e3.env, u3 = void 0 === l3 ? "production" : l3, l3 = e3.pageUrl, e3 = this.bean.id !== t3 || this.bean.uin !== n3 || this.bean.aid !== s3;
      return this.bean.id = t3 || "", this.bean.uin = n3 || "", this.bean.version = i3 || "1.36.5", this.bean.aid = s3 || "", this.bean.env = function() {
        switch (u3) {
          case E2.production:
          case E2.development:
          case E2.gray:
          case E2.pre:
          case E2.daily:
          case E2.local:
          case E2.test:
          case E2.others:
            return 1;
          default:
            return;
        }
      }() ? u3 : E2.others, l3 && this.extendBean("from", encodeURIComponent(l3.slice(0, 2048))), o3 && this.extendBean("ext1", encodeURIComponent(o3)), r3 && this.extendBean("ext2", encodeURIComponent(r3)), a3 && this.extendBean("ext3", encodeURIComponent(a3)), e3 && this.lifeCycle.emit("onConfigChange", this.config), this.config;
    }, A2.use = function(e3) {
      -1 === A2.installedPlugins.indexOf(e3) && e3.aegisPlugin && A2.installedPlugins.push(e3);
    }, A2.unuse = function(e3) {
      e3 = A2.installedPlugins.indexOf(e3);
      -1 !== e3 && A2.installedPlugins.splice(e3, 1);
    }, A2.prototype.info = function() {
      for (var e3 = [], t3 = 0; t3 < arguments.length; t3++)
        e3[t3] = arguments[t3];
      var n3 = { level: b.INFO, msg: e3 };
      1 === e3.length && e3[0].msg && Object.assign(n3, f2({}, e3[0]), { level: b.INFO }), this.normalLogPipeline(n3);
    }, A2.prototype.infoAll = function() {
      for (var e3 = [], t3 = 0; t3 < arguments.length; t3++)
        e3[t3] = arguments[t3];
      var n3 = { level: b.INFO_ALL, msg: e3 };
      1 === e3.length && e3[0].msg && Object.assign(n3, f2({}, e3[0]), { level: b.INFO_ALL }), this.normalLogPipeline(n3);
    }, A2.prototype.report = function() {
      for (var e3 = [], t3 = 0; t3 < arguments.length; t3++)
        e3[t3] = arguments[t3];
      var n3 = { level: b.REPORT, msg: e3 };
      1 === e3.length && e3[0].msg && Object.assign(n3, f2({}, e3[0])), this.normalLogPipeline(n3);
    }, A2.prototype.error = function() {
      for (var e3 = [], t3 = 0; t3 < arguments.length; t3++)
        e3[t3] = arguments[t3];
      var n3 = { level: b.ERROR, msg: e3 };
      1 === e3.length && e3[0].msg && Object.assign(n3, f2({}, e3[0]), { level: b.ERROR }), this.normalLogPipeline(n3);
    }, A2.prototype.speedLogPipeline = function(e3) {
      throw new Error('You need to override "speedLogPipeline" method');
    }, A2.prototype.reportPv = function(n3) {
      var i3, o3 = this;
      n3 && (console.warn("reportPv is deprecated, please use reportEvent"), i3 = "" + Object.getOwnPropertyNames(this.bean).filter(function(e3) {
        return "id" !== e3;
      }).map(function(e3) {
        return e3 + "=" + o3.bean[e3];
      }).join("&"), this.sendPipeline([function(e3, t3) {
        t3({ url: o3.config.url + "/" + n3 + "?" + i3, addBean: false, type: O2.CUSTOM_PV });
      }], O2.CUSTOM_PV)(null));
    }, A2.prototype.reportEvent = function(e3) {
      e3 && ((e3 = "string" == typeof e3 ? { name: e3, ext1: this.config.ext1 || "", ext2: this.config.ext2 || "", ext3: this.config.ext3 || "" } : e3).name ? this.eventPipeline(e3) : console.warn("reportEvent params error"));
    }, A2.prototype.reportTime = function(e3, t3) {
      if ("object" == typeof e3)
        return this.reportT(e3);
      "string" == typeof e3 ? "number" == typeof t3 ? t3 < 0 || 6e4 < t3 ? console.warn("reportTime: duration must between 0 and 60000") : this.submitCustomTime(e3, t3) : console.warn("reportTime: second param must be number") : console.warn("reportTime: first param must be a string");
    }, A2.prototype.reportT = function(e3) {
      var t3 = e3.name, n3 = e3.duration, i3 = e3.ext1, i3 = void 0 === i3 ? "" : i3, o3 = e3.ext2, o3 = void 0 === o3 ? "" : o3, r3 = e3.ext3, r3 = void 0 === r3 ? "" : r3, e3 = e3.from;
      if ("string" == typeof t3 && "number" == typeof n3 && "string" == typeof i3 && "string" == typeof o3 && "string" == typeof r3) {
        if (!(n3 < 0 || 6e4 < n3))
          return this.submitCustomTime(t3, n3, i3, o3, r3, void 0 === e3 ? "" : e3);
        console.warn("reportTime: duration must between 0 and 60000");
      } else
        console.warn("reportTime: params error");
    }, A2.prototype.time = function(e3) {
      "string" == typeof e3 ? this.timeMap[e3] ? console.warn("Timer " + e3 + " already exists") : this.timeMap[e3] = Date.now() : console.warn("time: first param must be a string");
    }, A2.prototype.timeEnd = function(e3) {
      "string" == typeof e3 ? this.timeMap[e3] ? (this.submitCustomTime(e3, Date.now() - this.timeMap[e3]), delete this.timeMap[e3]) : console.warn("Timer " + e3 + " does not exist") : console.warn("timeEnd: first param must be a string");
    }, A2.prototype.submitCustomTime = function(e3, t3, n3, i3, o3, r3) {
      this.customTimePipeline({ name: e3, duration: t3, ext1: n3 || this.config.ext1, ext2: i3 || this.config.ext2, ext3: o3 || this.config.ext3, from: r3 || void 0 });
    }, A2.prototype.extendBean = function(e3, t3) {
      this.bean[e3] = t3;
    }, A2.prototype.sendPipeline = function(e3, t3) {
      var n3, r3 = this;
      return v2(a2([function(e4, t4) {
        if ("number" != typeof n3.config.random && (console.warn("random must in [0, 1], default is 1."), n3.config.random = 1), !n3.isHidden || !n3.isGetSample)
          if (n3.isGetSample)
            n3.isHidden || t4(e4);
          else {
            if (n3.isGetSample = true, Math.random() < n3.config.random)
              return n3.isHidden = false, t4(e4);
            n3.isHidden = true;
          }
      }, J2(n3 = this, t3)], e3, [V2(this), function(i3, o3) {
        r3.request(i3, function() {
          for (var e4, t4 = [], n4 = 0; n4 < arguments.length; n4++)
            t4[n4] = arguments[n4];
          r3.failRequestCount = 0, o3({ isErr: false, result: t4, logType: null == i3 ? void 0 : i3.type, logs: null == i3 ? void 0 : i3.log }), null != (e4 = null == i3 ? void 0 : i3.success) && e4.call.apply(e4, a2([i3], t4));
        }, function() {
          for (var e4, t4 = [], n4 = 0; n4 < arguments.length; n4++)
            t4[n4] = arguments[n4];
          10 <= ++r3.failRequestCount && r3.destroy(), -1 < ("" + t4[0]).indexOf("403 forbidden") && r3.destroy(), o3({ isErr: true, result: t4, logType: null == i3 ? void 0 : i3.type, logs: null == i3 ? void 0 : i3.log }), null != (e4 = null == i3 ? void 0 : i3.fail) && e4.call.apply(e4, a2([i3], t4));
        });
      }, W2(this)]));
    }, A2.prototype.send = function(e3, o3, r3) {
      var t3 = this;
      return v2([V2(this), function(n3, i3) {
        t3.request(n3, function() {
          for (var e4 = [], t4 = 0; t4 < arguments.length; t4++)
            e4[t4] = arguments[t4];
          i3({ isErr: false, result: e4, logType: n3.type, logs: n3.log }), null != o3 && o3.apply(void 0, e4);
        }, function() {
          for (var e4 = [], t4 = 0; t4 < arguments.length; t4++)
            e4[t4] = arguments[t4];
          i3({ isErr: true, result: e4, logType: n3.type, logs: n3.log }), null != r3 && r3.apply(void 0, e4);
        });
      }, W2(this)])(e3);
    }, A2.prototype.ready = function(e3, t3, n3) {
      throw new Error('You need to override "ready" method');
    }, A2.prototype.request = function(e3, t3, n3) {
      throw new Error('You need to override "request" method');
    }, A2.prototype.sendSDKError = function(e3) {
      var n3 = this;
      this.sendPipeline([function(e4, t3) {
        t3({ url: n3.config.url + "?id=1085&msg[0]=" + encodeURIComponent(R2(e4)) + "&level[0]=2&from=" + n3.config.id + "&count=1&version=" + n3.config.id + "(1.36.5)", addBean: false, method: "get", type: O2.SDK_ERROR, log: e4 });
      }], O2.SDK_ERROR)(e3);
    }, A2.prototype.destroy = function(e3) {
      void 0 === e3 && (e3 = false);
      var t3, n3, i3 = A2.instances.indexOf(this);
      -1 !== i3 && A2.instances.splice(i3, 1);
      for (var o3 = A2.installedPlugins.length - 1; 0 <= o3; o3--)
        try {
          A2.installedPlugins[o3].unpatch(this);
        } catch (e4) {
          this.sendSDKError(e4);
        }
      if (this.lifeCycle.emit("destroy"), this.lifeCycle.clear(), e3)
        t3 = this, n3 = Object.getOwnPropertyDescriptors(t3), Object.keys(n3).forEach(function(e4) {
          n3[e4].writable && (t3[e4] = null);
        }), Object.setPrototypeOf(this, null);
      else {
        for (var r3 = this; r3.constructor !== Object && s2(r3, this), r3 = Object.getPrototypeOf(r3); )
          ;
        0 === A2.instances.length && (i3 = Object.getPrototypeOf(this).constructor, s2(i3), s2(A2));
      }
    }, A2.version = "1.36.5", A2.instances = [], A2.logType = b, A2.environment = E2, A2.installedPlugins = [], A2), o2 = (L2.prototype.patch = function(e3) {
      this.canUse(e3) && this.exist(e3) && (this.instances.push(e3), this.triggerInit(e3), this.triggerOnNewAegis(e3));
    }, L2.prototype.unpatch = function(e3) {
      var t3 = this.instances.indexOf(e3);
      -1 !== t3 && (this.instances.splice(t3, 1), 0 === this.instances.length && this.uninstall(e3));
    }, L2.prototype.countInstance = function() {
      return this.instances.length;
    }, L2.prototype.uninstall = function(e3) {
      var t3;
      null != (t3 = null == (t3 = this.option) ? void 0 : t3.destroy) && t3.apply(this, [e3]);
    }, L2.prototype.walk = function(n3) {
      var i3 = this;
      this.instances.forEach(function(e3) {
        var t3 = i3.canUse(e3);
        t3 && n3(e3, t3);
      });
    }, L2.prototype.canUse = function(e3) {
      e3 = this.getConfig(e3);
      return !(!e3 || "object" != typeof e3) || !!e3;
    }, L2.prototype.getConfig = function(e3) {
      return null == (e3 = e3.config) ? void 0 : e3[this.name];
    }, L2.prototype.exist = function(e3) {
      return -1 === this.instances.indexOf(e3);
    }, L2.prototype.triggerInit = function(e3) {
      var t3;
      this.inited || (this.inited = true, null != (t3 = null == (t3 = this.option) ? void 0 : t3.init) && t3.call(this.option, this.getConfig(e3)));
    }, L2.prototype.triggerOnNewAegis = function(e3) {
      var t3;
      null != (t3 = null == (t3 = this.option) ? void 0 : t3.onNewAegis) && t3.call(this.option, e3, this.getConfig(e3));
    }, L2), w = wx$1 || qq, ue2 = "", ce2 = new o2({ name: "offlineLog", onNewAegis: function(o3) {
      if (w.getFileSystemManager)
        try {
          var e3 = o3.config, t3 = e3.id, r3 = void 0 === t3 ? "" : t3, n3 = e3.uin, a3 = void 0 === n3 ? 0 : n3, i3 = e3.offlineUrl, s3 = void 0 === i3 ? "" : i3, l3 = e3.offlineLogLimit, u3 = new fe2({ limit: l3 });
          o3.lifeCycle.on("beforeWrite", function(e4) {
            u3.save2Offline(e4 = void 0 === e4 ? [] : e4, o3.config);
          }), u3.ready(function(t4) {
            var e4 = (o3.bean || {}).aid, i4 = void 0 === e4 ? "" : e4;
            !t4 && r3 && (a3 || i4) && o3.send({ url: s3 + "/offlineAuto", type: O2.OFFLINE, log: O2.OFFLINE }, function(e5) {
              var n4 = (null == e5 ? void 0 : e5.data).secretKey;
              n4 && !t4 && u3.getLogs({ id: r3, uin: a3 }, function(e6, t5) {
                e6 ? console.error(e6) : o3.send({ url: s3 + "/offlineLog", data: { logs: t5, secretKey: n4, id: r3, uin: a3, aid: i4 }, method: "post", type: O2.OFFLINE, log: t5 }, function() {
                  u3.clearLogs();
                });
              });
            });
          });
        } catch (o4) {
          console.error(o4);
        }
      else
        console.warn("[aegis-mp-sdk]unsupport getFileSystemManager offline log not work!");
    } }), fe2 = (Oe2.prototype.getLogs = function(e3, t3) {
      var n3 = this.fileSystem, i3 = this.filePath;
      n3.readFile({ filePath: i3, encoding: "utf8", fail: function(e4) {
        console.error(e4);
      }, success: function(e4) {
        e4 = e4.data, e4 = (void 0 === e4 ? "" : e4).toString().split("\n").filter(function(e5) {
          return e5;
        }).map(function(e5) {
          return JSON.parse(e5);
        });
        t3(null, e4);
      } });
    }, Oe2.prototype.checkLimit = function(o3, r3) {
      void 0 === r3 && (r3 = function() {
      });
      var a3 = this.fileSystem, s3 = this.filePath, l3 = this.limitSize;
      a3.readFile({ filePath: s3, encoding: "utf8", success: function(e3) {
        e3 = e3.data, e3 = void 0 === e3 ? "" : e3;
        if ((e3 = e3.toString() + o3).length > l3) {
          for (var t3 = e3.split("\n"), n3 = "", i3 = t3.length - 1; 0 <= i3 && !(t3[i3] && (n3 = t3[i3] + "\n" + n3).length > l3); i3--)
            ;
          a3.writeFile({ filePath: s3, data: n3, success: r3 });
        } else
          a3.appendFile({ data: o3, filePath: s3, encoding: "utf8", success: r3, fail: function(e4) {
            console.error(e4);
          } });
      } });
    }, Oe2), pe2 = new o2({ name: "device", onNewAegis: function(t3) {
      return e3 = this, l3 = function() {
        return H2(this, function(e4) {
          return this.setSystemInfo(t3), this.refreshNetwork(t3), this.setNetworkChange(t3), [2];
        });
      }, new (s3 = (s3 = a3 = void 0) || Promise)(function(n3, t4) {
        function i3(e4) {
          try {
            r3(l3.next(e4));
          } catch (e5) {
            t4(e5);
          }
        }
        function o3(e4) {
          try {
            r3(l3.throw(e4));
          } catch (e5) {
            t4(e5);
          }
        }
        function r3(e4) {
          var t5;
          e4.done ? n3(e4.value) : ((t5 = e4.value) instanceof s3 ? t5 : new s3(function(e5) {
            e5(t5);
          })).then(i3, o3);
        }
        r3((l3 = l3.apply(e3, a3 || [])).next());
      });
      var e3, a3, s3, l3;
    }, setSystemInfo: function(a3) {
      var s3 = this;
      try {
        l2("getSystemInfo") && w.getSystemInfo({ success: function(e3) {
          var t3 = e3.platform, n3 = e3.model, i3 = e3.windowHeight, o3 = e3.windowWidth, r3 = e3.screenWidth, r3 = void 0 === r3 ? 0 : r3, e3 = e3.screenHeight, e3 = void 0 === e3 ? 0 : e3;
          a3.extendBean("platform", s3.getPlatFormType(t3)), a3.extendBean("model", n3), a3.extendBean("vp", Math.round(o3) + " * " + Math.round(i3)), a3.extendBean("sr", Math.round(r3) + " * " + Math.round(e3));
        } });
      } catch (a4) {
      }
    }, getPlatFormType: function(e3) {
      for (var t3, n3 = { android: /android/i, ios: /ios/i, windows: /windows/i, macos: /mac/i, devtools: /devtools/i }, i3 = g2.other, o3 = 0; o3 < Object.keys(n3).length; o3++) {
        var r3 = Object.keys(n3)[o3];
        if (null != (t3 = n3[r3]) && t3.test(e3)) {
          i3 = g2[r3];
          break;
        }
      }
      return i3;
    }, setNetworkChange: function(t3) {
      l2("onNetworkStatusChange") && w.onNetworkStatusChange(function(e3) {
        e3 = u2(e3.networkType);
        t3.extendBean("netType", e3);
      });
    }, setNetworkType: function(t3) {
      l2("getNetworkType") && w.getNetworkType({ success: function(e3) {
        e3 = u2(e3.networkType);
        t3.extendBean("netType", e3);
      } });
    }, refreshNetwork: function(e3) {
      var t3 = this;
      this.timer && clearTimeout(this.timer), this.setNetworkType(e3), this.timer = setTimeout(function() {
        t3.refreshNetwork(e3);
      }, 1e4);
    } }), de2 = w.request, n2 = (e2(N2, Q2 = n2), Object.defineProperty(N2.prototype, "getBean", { get: function() {
      var t3 = this;
      return this.bean ? Object.getOwnPropertyNames(this.bean).map(function(e3) {
        return e3 + "=" + t3.bean[e3];
      }).join("&") + "&from=" + encodeURIComponent(i2(this.config)) : "from=" + encodeURIComponent(i2(this.config));
    }, enumerable: false, configurable: true }), N2.prototype.initOfflineLog = function() {
      N2.use(ce2);
    }, N2.prototype.initRequestSchedule = function() {
      this.requestSchedule = new K2(this.sendRequest);
    }, N2.prototype.uploadLogs = function(e3, t3) {
      this.lifeCycle.emit("uploadLogs", e3 = void 0 === e3 ? {} : e3, t3 = void 0 === t3 ? {} : t3);
    }, N2.prototype.reportPv = function(e3) {
      var t3, n3 = this;
      e3 && (t3 = Object.getOwnPropertyNames(this.bean).filter(function(e4) {
        return "id" !== e4;
      }).map(function(e4) {
        return e4 + "=" + n3.bean[e4];
      }).join("&") + "&from=" + encodeURIComponent(i2(this.config)), this.send({ url: this.config.url + "/" + e3 + "?" + t3, addBean: false, type: O2.CUSTOM_PV, log: O2.CUSTOM_PV }, function() {
      }, function() {
      }));
    }, N2.sessionID = "session-" + Date.now(), N2.asyncPluginIndex = 0, N2), he2 = new o2({ name: "aid", onNewAegis: function(t3) {
      this.initAid(function(e3) {
        t3.bean.aid = e3, t3.config.aid = e3;
      });
    }, initAid: function(t3) {
      w.getStorage({ key: "AEGIS_ID", success: function(e3) {
        t3(e3.data);
      }, fail: function() {
        var e3 = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(e4) {
          var t4 = 16 * Math.random() | 0;
          return ("x" === e4 ? t4 : 3 & t4 | 8).toString(16);
        });
        w.setStorage({ key: "AEGIS_ID", data: e3, success: function() {
          t3(e3);
        } });
      } });
    } }), r2 = (C2.prototype.addCallback = function(e3) {
      e3 && this.callbacks.push(e3);
    }, C2.prototype.prefixHandler = function(e3) {
      return f2(f2({}, e3), { aegisRequestStartTime: +new Date() });
    }, C2.prototype.successHandler = function(n3, i3) {
      var e3;
      this.callbacks.forEach(function(e4) {
        var t3;
        try {
          null != (t3 = e4.success) && t3.call(e4, n3, i3);
        } catch (e5) {
        }
      }), null != (e3 = i3.success) && e3.call(i3, n3, i3);
    }, C2.prototype.failHandler = function(n3, i3) {
      var e3;
      this.callbacks.forEach(function(e4) {
        var t3;
        try {
          null != (t3 = e4.fail) && t3.call(e4, n3, i3);
        } catch (e5) {
        }
      }), null != (e3 = i3.fail) && e3.call(i3, n3, i3);
    }, C2.prototype.completeHandler = function(n3, i3) {
      var e3;
      this.callbacks.forEach(function(e4) {
        var t3;
        try {
          null != (t3 = e4.complete) && t3.call(e4, n3, i3);
        } catch (e5) {
        }
      }), null != (e3 = i3.complete) && e3.call(i3, n3, i3);
    }, C2.prototype.override = function() {
      try {
        this.defineApiProperty();
      } catch (e3) {
        console.warn("cannot override `" + this.apiName + "`, error is: " + e3);
      } finally {
        this.isOverride = true;
      }
    }, C2), P2 = wx$1 || qq, S2 = {}, ge2 = (e2(x2, z2 = r2), x2.prototype.defineApiProperty = function() {
      var e3 = this;
      P2.cloud && P2.cloud[this.apiName] && Object.defineProperty(P2.cloud, this.apiName, { get: function() {
        return e3.hackHandler.bind(e3);
      } });
    }, x2.prototype.hackHandler = function(e3) {
      var i3 = this, o3 = this.prefixHandler(e3);
      return new Promise(function(t3, n3) {
        var e4 = null == (e4 = S2[i3.apiName]) ? void 0 : e4.originApi;
        null != e4 && e4(f2(f2({}, o3), { success: function(e5) {
          i3.successHandler(e5, o3), t3(e5);
        }, fail: function(e5) {
          i3.failHandler(e5, o3), n3(e5);
        }, complete: function(e5) {
          i3.completeHandler(e5, o3);
        } }));
      });
    }, x2), me2 = wx$1 || qq, T2 = {}, ye2 = (e2(k2, X2 = r2), k2.prototype.defineApiProperty = function() {
      var e3 = this;
      Object.defineProperty(me2, this.apiName, { get: function() {
        return e3.hackHandler.bind(e3);
      } });
    }, k2.prototype.hackHandler = function(e3) {
      var t3 = this, n3 = this.prefixHandler(e3), e3 = null == (e3 = T2[this.apiName]) ? void 0 : e3.originApi;
      return null == e3 ? void 0 : e3(f2(f2({}, n3), { success: function(e4) {
        t3.successHandler(e4, n3);
      }, fail: function(e4) {
        t3.failHandler(e4, n3);
      }, complete: function(e4) {
        t3.completeHandler(e4, n3);
      } }));
    }, k2), ve2 = wx$1 || qq, be2 = ve2.request;
    function k2() {
      return null !== X2 && X2.apply(this, arguments) || this;
    }
    function x2() {
      return null !== z2 && z2.apply(this, arguments) || this;
    }
    function C2(e3) {
      this.callbacks = [], this.isOverride = false;
      var t3 = e3.apiName;
      this.apiName = t3, this.isOverride || this.override(), this.callbacks.push(e3);
    }
    function N2(e3) {
      var i3, o3, r3, c3 = Q2.call(this, e3) || this;
      c3.originRequest = de2, c3.speedLogPipeline = v2([(o3 = c3.config, r3 = {}, function(e4, t3) {
        var n3, i4;
        o3.speedSample ? (i4 = "object" == typeof o3.repeat ? o3.repeat : { repeat: o3.repeat }, n3 = +i4.speed || +i4.repeat || 5, Array.isArray(e4) ? (i4 = e4.filter(function(e5) {
          var t4 = !r3[e5.url] || r3[e5.url] < n3;
          return r3[e5.url] = 1 + ~~r3[e5.url], t4;
        })).length && t3(i4) : (!r3[e4.url] || r3[e4.url] < n3) && (r3[e4.url] = 1 + ~~r3[e4.url], t3(e4))) : t3(e4);
      }), y2(c3), function(t3, n3) {
        l2("getNetworkType") ? w.getNetworkType({ success: function(e4) {
          e4 = u2(e4.networkType);
          i3.extendBean("netType", e4), n3(t3);
        } }) : n3(t3);
      }, function(e4, t3) {
        c3.lifeCycle.emit("beforeReportSpeed", e4);
        var n3 = c3.config.beforeReportSpeed;
        if ((e4 = "function" == typeof n3 ? e4.filter(function(e5) {
          return false !== n3(e5);
        }) : e4).length)
          return t3(e4);
      }, J2(i3 = c3, O2.SPEED), function(e4) {
        var t3, n3, i4, o4;
        c3.send({ url: "" + c3.config.speedUrl, method: "post", data: (e4 = e4, t3 = c3.bean, i4 = { fetch: [], static: [], bridge: [] }, o4 = {}, Array.isArray(e4) ? e4.forEach(function(e5) {
          var t4;
          null != (t4 = i4[e5.type]) && t4.push(e5);
        }) : null != (n3 = i4[e4.type]) && n3.push(e4), o4.payload = JSON.stringify(f2({ duration: i4 }, t3)), o4) });
      }]), c3.request = function(e4, t3, n3) {
        e4.url && c3.bean.id && (!/^\w{8}-\w{4}-\w{4}-\w{4}-\w{12}$/.test(String(c3.bean.aid)) || l2("getNetworkType") && void 0 === c3.bean.netType ? c3.requestSchedule.addTask({ options: e4, success: t3, fail: n3 }) : (c3.requestSchedule.addTask({ options: e4, success: t3, fail: n3 }), c3.requestSchedule.fireTask()));
      }, c3.sendRequest = function(e4, t3, n3) {
        var i4, o4, r4, a3 = e4.url, s3 = (c3.config.whiteListUrl === a3 && (i4 = t3, t3 = function(e5) {
          null != i4 && i4(JSON.stringify(e5.data));
        }), e4.method), s3 = void 0 === s3 ? "get" : s3, l3 = (false !== e4.addBean && (a3 = a3 + (-1 === (null == a3 ? void 0 : a3.indexOf("?")) ? "?" : "&") + c3.getBean), e4), u3 = c3.config.onBeforeRequest;
        return (l3 = u3 ? u3(e4, c3) : l3) && l3.url ? (u3 = c3.config.enableHttp2 || false, "get" === s3 ? (s3 = a3, o4 = l3.data, a3 = "string" != typeof s3 ? "" : "object" == typeof o4 && o4 ? (r4 = Object.getOwnPropertyNames(o4).map(function(e5) {
          var t4 = o4[e5];
          return e5 + "=" + ("string" == typeof t4 ? encodeURIComponent(t4) : encodeURIComponent(JSON.stringify(t4)));
        }).join("&").replace(/eval/gi, "evaI"), s3 + (-1 === s3.indexOf("?") ? "?" : "&") + r4) : s3, c3.originRequest(f2({ url: a3, enableHttp2: u3, success: t3, fail: n3, complete: c3.requestSchedule.complete }, e4.requestConfig))) : ("string" == typeof l3.data && (l3.data = l3.data.replace(/eval/gi, "evaI")), c3.originRequest(f2({ url: a3, enableHttp2: u3, header: l3.contentType ? { "content-type": l3.contentType } : void 0, method: "POST", data: l3.data, success: t3, fail: n3, complete: c3.requestSchedule.complete }, e4.requestConfig))), true) : (r4 = "", l3 && l3.url || (r4 = "Sending request blocked. Please handle the parameters reasonably, options.url is necessary", console.log(r4)), null != n3 && n3(r4), c3.requestSchedule.complete(), false);
      };
      try {
        e3.offlineLog && c3.initOfflineLog(), c3.initRequestSchedule(), c3.init(e3), c3.extendBean("sessionId", N2.sessionID), c3.extendBean("referer", (l2("getLaunchOptionsSync") ? w.getLaunchOptionsSync() : { scene: "" }).scene || "");
      } catch (e4) {
        console.warn(e4), console.log("%cThe above error occurred in the process of initializing Aegis, which will affect your normal use of Aegis.\nIt is recommended that you contact us for feedback and thank you for your support.", "color: red"), c3.sendSDKError(e4);
      }
      return c3;
    }
    function Oe2(e3) {
      var o3, r3, a3 = this, e3 = void 0 === e3 ? {} : e3, t3 = e3.path, t3 = void 0 === t3 ? "/.aegis.offline.log" : t3, e3 = e3.limit, e3 = void 0 === e3 ? 2e4 : e3;
      this.offlineBuffer = [], this.insertLog = (o3 = null, r3 = [], function(e4) {
        r3 = r3.concat(e4), o3 = o3 || setTimeout(function() {
          o3 = null;
          var e5, t4 = a3.fileSystem, n3 = a3.filePath, i3 = r3.map(function(e6) {
            return JSON.stringify(e6);
          }).join("\n") + "\n";
          i3 && (e5 = function(e6) {
            e6 ? a3.checkLimit(i3, function() {
              r3 = [];
            }) : t4.writeFile({ data: i3, filePath: n3, encoding: "utf8", fail: function(e7) {
              console.error(e7);
            }, success: function() {
              r3 = [];
            } });
          }, t4.access({ path: n3, success: function() {
            e5(true);
          }, fail: function() {
            e5();
          } }));
        }, 2e3);
      }), this.ready = function(e4) {
        a3.fileSystem ? setTimeout(function() {
          e4(null);
        }, 0) : (e4(new Error("getFileSystemManager file")), a3.offlineLog = false);
      }, this.clearLogs = function() {
        var e4 = a3.fileSystem, t4 = a3.filePath;
        e4.writeFile({ filePath: t4, data: "", fail: function() {
          e4.unlinkSync(t4);
        } });
      }, this.save2Offline = function(e4, t4) {
        e4 = (e4 = Array.isArray(e4) ? e4 : [e4]).map(function(e5) {
          return "string" == typeof e5 && (e5 = { msg: e5 }), function() {
            for (var e6 = [], t5 = 0; t5 < arguments.length; t5++)
              e6[t5] = arguments[t5];
            if (0 === e6.length)
              throw new TypeError("Cannot convert undefined or null to object");
            for (var n3 = Object(e6[0]), i3 = 1; i3 < e6.length; i3++) {
              var o4 = e6[i3];
              if (null !== o4)
                for (var r4 in o4)
                  Object.prototype.hasOwnProperty.call(o4, r4) && (n3[r4] = o4[r4]);
            }
            return n3;
          }({ id: t4.id, uin: t4.uin, time: +Date.now(), version: t4.version, from: i2(t4) }, e5);
        });
        a3.fileSystem ? a3.insertLog(e4) : (a3.fileSystem || a3.offlineBuffer.length || a3.ready(function(e5) {
          e5 ? console.error(e5) : a3.offlineBuffer.length && (a3.addLogs(a3.offlineBuffer), a3.offlineBuffer = []);
        }), a3.offlineBuffer = a3.offlineBuffer.concat(e4));
      }, this.addLogs = function(e4) {
        a3.fileSystem && a3.insertLog(e4);
      }, this.filePath = w.env.USER_DATA_PATH + t3, this.fileSystem = w.getFileSystemManager(), this.limitSize = e3;
    }
    function L2(e3) {
      this.aegisPlugin = true, this.name = "", this.instances = [], this.inited = false, e3.$walk = this.walk.bind(this), e3.$getConfig = this.getConfig.bind(this), this.option = e3, this.name = e3.name;
    }
    function A2(e3) {
      var n3, t3, i3, o3, a3, r3, s3, l3, u3, c3, f3, p3, d3, h3, g3, m3 = this;
      this.isGetSample = false, this.isHidden = false, this.config = { version: 0, delay: 1e3, onError: true, repeat: 5, random: 1, aid: true, device: true, pagePerformance: true, webVitals: true, speedSample: true, onClose: true, reportLoadPackageSpeed: true, hostUrl: "https://aegis.qq.com", env: "production", url: "", offlineUrl: "", whiteListUrl: "", pvUrl: "", speedUrl: "", customTimeUrl: "", performanceUrl: "", webVitalsUrl: "", eventUrl: "", setDataReportUrl: "", reportImmediately: true }, this.isWhiteList = false, this.lifeCycle = new D2(), this.bean = {}, this.originFireUrl = "", this.normalLogPipeline = v2([y2(this, 5), B2, function(e4, t4) {
        var i4 = n3.config;
        t4(e4 = e4.map(function(e5) {
          var t5, n4 = i4.maxLength || 102400;
          try {
            if (!e5.msg || e5.msg.length <= n4)
              return e5;
            e5.msg = null == (t5 = e5.msg) ? void 0 : t5.substring(0, n4);
          } catch (t6) {
            e5.msg = R2(e5.msg).substring(0, i4.maxLength);
          }
          return e5;
        }));
      }, (h3 = (n3 = this).config, g3 = {}, function(e4, t4) {
        var n4 = "number" == typeof h3.repeat ? h3.repeat : 5;
        if (0 === n4)
          return t4(e4);
        t4(e4.filter(function(e5) {
          return e5.level !== b.ERROR && e5.level !== b.PROMISE_ERROR && e5.level !== b.AJAX_ERROR && e5.level !== b.SCRIPT_ERROR && e5.level !== b.IMAGE_ERROR && e5.level !== b.CSS_ERROR && e5.level !== b.MEDIA_ERROR || (g3[e5.msg] = g3[e5.msg] || 0, g3[e5.msg] += 1, !(g3[e5.msg] > n4));
        }));
      }), (p3 = this.lifeCycle.emit, d3 = this.config, function(e4, t4) {
        var n4, i4 = d3.logCreated;
        return "function" == typeof i4 ? (n4 = e4.filter(function(e5) {
          return false !== i4(e5);
        }), p3("beforeWrite", n4), t4(n4)) : (p3("beforeWrite", e4), t4(e4));
      }), (f3 = this, setTimeout(function() {
        var e4 = f3.config.pvUrl, n4 = void 0 === e4 ? "" : e4, e4 = "undefined" == typeof location || null === location || void 0 === location ? void 0 : location.pathname;
        n4 && e4 !== f3.originFireUrl && (f3.sendPipeline([function(e5, t4) {
          t4({ url: n4, type: O2.PV });
        }], O2.PV)(null), e4 && location && (f3.originFireUrl = e4));
      }, 100), function(e4, t4) {
        t4(e4);
      }), (u3 = l3 = s3 = false, c3 = [], (a3 = this).lifeCycle.on("onConfigChange", function() {
        r3 && clearTimeout(r3), r3 = setTimeout(function() {
          var e4, n4;
          !u3 && a3.config && (u3 = true, e4 = a3.config.whiteListUrl, (n4 = void 0 === e4 ? "" : e4) && a3.sendPipeline([function(e5, t4) {
            t4({ url: n4, type: O2.WHITE_LIST, success: function(e6) {
              l3 = true;
              try {
                var t5 = e6.data || JSON.parse(e6), n5 = t5.retcode, i4 = t5.result, o4 = void 0 === i4 ? {} : i4, r4 = (0 === n5 && (s3 = o4.is_in_white_list, a3.isWhiteList = s3, 0 <= o4.rate && o4.rate <= 1 && (a3.config.random = o4.rate, a3.isGetSample = false)), a3.isWhiteList && c3.length ? se2(a3)(c3.splice(0), function() {
                }) : !a3.isWhiteList && c3.length && (c3.length = 0), a3.config.onWhitelist);
                "function" == typeof r4 && r4(s3);
              } catch (e7) {
              }
            }, fail: function() {
              l3 = true;
            } });
          }], O2.WHITE_LIST)(null), u3 = false);
        }, a3.config.uin ? 50 : 500);
      }), a3.lifeCycle.on("destroy", function() {
        c3.length = 0;
      }), function(e4, t4) {
        var n4;
        s3 || null != (n4 = null == (n4 = a3.config) ? void 0 : n4.api) && n4.reportRequest ? t4(e4.concat(c3.splice(0)).map(function(e5) {
          return re2(e5), e5;
        })) : (n4 = e4.filter(function(e5) {
          return e5.level !== b.INFO && e5.level !== b.API_RESPONSE ? (re2(e5), true) : (l3 || (c3.push(e5), 200 <= c3.length && (c3.length = 200)), false);
        })).length && t4(n4);
      }), function(e4, t4) {
        try {
          var n4 = JSON.parse(JSON.stringify(e4)), i4 = (m3.lifeCycle.emit("beforeReport", n4), m3.config.beforeReport);
          (e4 = "function" == typeof i4 ? e4.filter(function(e5) {
            return false !== i4(e5);
          }) : e4).length && t4(e4);
        } catch (e5) {
        }
      }, se2(this)]), this.eventPipeline = v2([y2(this, 10), (o3 = this, function(e4) {
        o3.sendPipeline([function(e5, t4) {
          var n4 = e5.map(function(e6) {
            return { name: e6.name, ext1: e6.ext1 || o3.config.ext1 || "", ext2: e6.ext2 || o3.config.ext2 || "", ext3: e6.ext3 || o3.config.ext3 || "" };
          });
          t4({ url: o3.config.eventUrl + "?payload=" + encodeURIComponent(JSON.stringify(n4)), type: O2.EVENT, log: e5 });
        }], O2.EVENT)(e4);
      })]), this.timeMap = {}, this.failRequestCount = 0, this.customTimePipeline = v2([y2(this, 10), (i3 = this, function(e4) {
        return i3.sendPipeline([function(e5, t4) {
          t4({ url: i3.config.customTimeUrl + "?payload=" + encodeURIComponent(JSON.stringify({ custom: e5 })), type: O2.CUSTOM, log: e5 });
        }], O2.CUSTOM)(e4);
      })]), this.config = (t3 = this.config, void 0 === (e3 = e3.hostUrl) && (e3 = "https://aegis.qq.com"), t3.url = t3.url || e3 + "/collect", t3.offlineUrl = t3.offlineUrl || e3 + "/offline", t3.whiteListUrl = t3.whiteListUrl || e3 + "/collect/whitelist", t3.pvUrl = t3.pvUrl || e3 + "/collect/pv", t3.eventUrl = t3.eventUrl || e3 + "/collect/events", t3.speedUrl = t3.speedUrl || e3 + "/speed", t3.customTimeUrl = t3.customTimeUrl || e3 + "/speed/custom", t3.performanceUrl = t3.performanceUrl || e3 + "/speed/performance", t3.webVitalsUrl = t3.webVitalsUrl || e3 + "/speed/webvitals", t3.setDataReportUrl = t3.SetDataReportUrl || e3 + "/speed/miniProgramData", t3), A2.instances.push(this);
    }
    function Ee2() {
      return null !== Y2 && Y2.apply(this, arguments) || this;
    }
    e2(Ee2, Y2 = r2), Ee2.prototype.defineApiProperty = function() {
      var e3 = this;
      Object.defineProperty(ve2, "request", { get: function() {
        return e3.hackHandler.bind(e3);
      } });
    };
    function q2(i3, e3, o3) {
      return null != e3 && e3.length && "object" == typeof i3 ? e3.reduce(function(e4, t3) {
        var n3 = i3[t3];
        return n3 ? e4 + ("" === e4 ? "\n" : "\n\n") + o3 + " header " + t3 + ": " + n3 : e4;
      }, "") : "";
    }
    var U2, Re2, we2 = new o2({ name: "reportApiSpeed", override: !(Ee2.prototype.hackHandler = function(e3) {
      var t3 = this, n3 = this.prefixHandler(e3);
      return be2(f2(f2({}, n3), { success: function(e4) {
        t3.successHandler(e4, n3);
      }, fail: function(e4) {
        t3.failHandler(e4, n3);
      }, complete: function(e4) {
        t3.completeHandler(e4, n3);
      } }));
    }), onNewAegis: function(e3) {
      this.override || (this.override = true, this.hackRequest(e3.config), this.overrideCallFunction(e3.config), this.overrideCallContainer(e3.config));
    }, hackRequest: function(u3) {
      var c3 = this;
      $2({ apiName: "request", success: function(e3, t3) {
        var n3, i3, o3, r3, a3, s3, l3;
        u3.hostUrl && -1 < t3.url.indexOf(u3.hostUrl) || (n3 = { method: t3.method || "get", url: p2(t3.url), duration: Date.now() - t3.aegisRequestStartTime, status: e3.statusCode || 0, nextHopProtocol: "", isHttps: M2(t3.url), type: "fetch" }, r3 = null == (r3 = u3.api) ? void 0 : r3.apiDetail, i3 = (o3 = d2(e3.data, u3.api, { url: t3.url, ctx: e3, payload: t3.data }) || {}).code, o3 = o3.isErr, l3 = r3 ? h2(t3.data, null == (l3 = u3.api) ? void 0 : l3.reqParamHandler, { url: t3.url }) : "", r3 = r3 ? h2(e3.data, null == (r3 = u3.api) ? void 0 : r3.resBodyHandler, { url: t3.url }) : "", a3 = (null == (a3 = u3.api) ? void 0 : a3.reqHeaders) || [], a3 = q2(null == t3 ? void 0 : t3.header, a3, "req"), s3 = (null == (s3 = u3.api) ? void 0 : s3.resHeaders) || [], s3 = q2(null == e3 ? void 0 : e3.header, s3, "res"), l3 = "req url: " + n3.url + " \n                        \nres status: " + (e3.statusCode || 0) + " \n                        \nres duration: " + n3.duration + "ms \n                        \nreq method: " + n3.method + " \n                        \nreq param: " + l3 + "  \n                        \nres retcode: " + i3 + " \n                        \nres data: " + r3 + "\n                        " + a3 + "\n                        " + s3, c3.publishNormalLog({ msg: l3, level: b.API_RESPONSE, ctx: e3 }), n3.ret = i3, n3.isErr = +o3, n3.payload = t3.data, c3.publishSpeedLog(n3), o3 && c3.publishNormalLog({ msg: l3, level: b.RET_ERROR, ctx: e3 }));
      }, fail: function(e3, t3) {
        u3.hostUrl && -1 < t3.url.indexOf(u3.hostUrl) || (t3 = { method: t3.method || "get", url: p2(t3.url), duration: Date.now() - t3.aegisRequestStartTime, status: 0, nextHopProtocol: "", isHttps: M2(t3.url), type: "fetch" }, c3.publishSpeedLog(t3));
      } });
    }, overrideCallFunction: function(n3) {
      var i3 = this;
      c2({ apiName: "callFunction", success: function(e3, t3) {
        i3.cloudSuccessCallback(n3, t3, e3, "callFunction");
      }, fail: function(e3, t3) {
        t3 = { method: "call", url: "wx.cloud.callFunction." + t3.name, duration: Date.now() - t3.aegisRequestStartTime, status: 0, nextHopProtocol: "", type: "fetch", errMsg: e3.errMsg, isHttps: true };
        i3.publishSpeedLog(t3);
      } });
    }, overrideCallContainer: function(n3) {
      var i3 = this;
      c2({ apiName: "callContainer", success: function(e3, t3) {
        i3.cloudSuccessCallback(n3, t3, e3, "callContainer");
      }, fail: function(e3, t3) {
        t3 = { method: "call", url: "wx.cloud.callContainer." + t3.path, duration: Date.now() - t3.aegisRequestStartTime, status: 0, nextHopProtocol: "", type: "fetch", errMsg: e3.errMsg, isHttps: true };
        i3.publishSpeedLog(t3);
      } });
    }, cloudSuccessCallback: function(e3, n3, t3, i3) {
      var o3 = "callFunction" === i3 ? n3.name : n3.path, r3 = "callFunction" === i3 ? t3.result : t3.data, o3 = { method: "call", url: "wx.cloud." + i3 + "." + o3, duration: Date.now() - n3.aegisRequestStartTime, status: 200, nextHopProtocol: "", type: "fetch", isHttps: true }, a3 = ["apiName", "aegisRequestStartTime", "config", "success", "fail", "complete"], s3 = Object.keys(n3).reduce(function(e4, t4) {
        return a3.includes(t4) || (e4[t4] = n3[t4]), e4;
      }, {}), i3 = "callFunction" === i3 ? (null == (i3 = t3.data) ? void 0 : i3.code) || 0 : t3.statusCode, l3 = d2(r3, e3.api, { url: o3.url, ctx: t3, payload: s3 }) || {}, u3 = l3.code, l3 = l3.isErr, l3 = void 0 !== l3 && l3, u3 = (o3.ret = u3, o3.isErr = +l3, o3.payload = s3, null == (u3 = e3.api) ? void 0 : u3.apiDetail), s3 = u3 ? h2(s3, null == (s3 = e3.api) ? void 0 : s3.reqParamHandler, { url: o3.url }) : "", r3 = u3 ? h2(r3, null == (u3 = e3.api) ? void 0 : u3.resBodyHandler, { url: o3.url }) : "", u3 = (null == (u3 = e3.api) ? void 0 : u3.reqHeaders) || [], u3 = q2(null == n3 ? void 0 : n3.header, u3, "req"), e3 = (null == (e3 = e3.api) ? void 0 : e3.resHeaders) || [], e3 = q2(null == t3 ? void 0 : t3.header, e3, "res"), i3 = "req url: " + o3.url + "\n                    \nres status: " + i3 + "\n                    \nres duration: " + o3.duration + "ms \n                    \nreq type: " + o3.type + "\n                    \nreq params: " + s3 + "\n                    \nres retcode: " + o3.ret + "\n                    \nres data: " + r3 + "\n                    " + u3 + "\n                    " + e3;
      this.publishNormalLog({ msg: i3, level: b.API_RESPONSE, ctx: t3 }), this.publishSpeedLog(o3), l3 && this.publishNormalLog({ msg: i3, level: b.RET_ERROR, ctx: t3 });
    }, publishSpeedLog: function(t3) {
      this.$walk(function(e3) {
        e3.speedLogPipeline(t3);
      });
    }, publishNormalLog: function(t3) {
      this.$walk(function(e3) {
        e3.normalLogPipeline(t3);
      });
    } }), Pe2 = wx$1 || qq, Se2 = Pe2.connectSocket, Te2 = (Le2.prototype.addConfig = function(e3) {
      var t3 = e3.send, e3 = e3.onError;
      t3 && this.sends.push(t3), e3 && this.onErrors.push(e3);
    }, Le2.prototype.toHack = function(t3) {
      var o3 = this, n3 = (this.onErrors.forEach(function(e3) {
        t3.onError(e3);
      }), t3.send);
      return Object.defineProperty(t3, "send", { get: function() {
        return function(i3) {
          return new Promise(function(e3) {
            n3.call(t3, f2(f2({}, i3), { fail: function(n4) {
              o3.sends.forEach(function(e4) {
                var t4;
                null != (t4 = e4.fail) && t4.call(e4, n4, i3);
              }), e3(n4);
            } }));
          });
        };
      } }), t3;
    }, Le2), ke2 = (e2(_2, Re2 = r2), _2.prototype.addTaskConf = function(e3) {
      this.taskHack.addConfig(e3);
    }, _2.prototype.defineApiProperty = function() {
      var e3 = this;
      Object.defineProperty(Pe2, "connectSocket", { get: function() {
        return e3.hackHandler.bind(e3);
      } });
    }, _2.prototype.hackHandler = function(e3) {
      var t3 = this, n3 = this.prefixHandler(e3), e3 = Se2(f2(f2({}, n3), { success: function(e4) {
        t3.successHandler(e4, n3);
      }, fail: function(e4) {
        t3.failHandler(e4, n3);
      }, complete: function(e4) {
        t3.completeHandler(e4, n3);
      } }));
      return this.taskHack.toHack(e3), e3;
    }, _2), r2 = new o2({ name: "onError", onNewAegis: function(e3) {
      var t3 = w.getSystemInfoSync().SDKVersion;
      this.listenError(), this.hackNetWork(e3), this.hackCloud(e3), e3.config.websocketHack && G2(t3, "1.7.0") && this.hackWsConnect();
    }, listenError: function() {
      var t3 = this;
      "function" == typeof w.onError && w.onError(function(e3) {
        e3 && t3.publishErrorLog({ msg: e3, level: b.ERROR });
      }), l2("onUnhandledRejection") && w.onUnhandledRejection(function(e3) {
        e3 = e3.reason;
        !e3 || -1 < JSON.stringify(e3).indexOf("request:fail") || t3.publishErrorLog({ msg: e3, level: b.PROMISE_ERROR });
      }), l2("onPageNotFound") && w.onPageNotFound(function(e3) {
        e3 && t3.publishErrorLog({ msg: e3, level: b.PAGE_NOT_FOUND_ERROR });
      });
    }, publishErrorLog: function(t3) {
      this.$walk(function(e3) {
        e3.normalLogPipeline(t3);
      });
    }, hackNetWork: function(e3) {
      for (var n3 = this, i3 = e3.config, t3 = 0, o3 = [{ apiName: "request", complete: function(e4, t4) {
        return n3.requestCompleteError(e4, t4, i3);
      } }, { apiName: "uploadFile", complete: function(e4, t4) {
        return n3.uploadFileCompleteError(e4, t4, i3);
      } }, { apiName: "downloadFile", complete: function(e4, t4) {
        return n3.downloadFileCompleteError(e4, t4, i3);
      } }]; t3 < o3.length; t3++) {
        var r3 = o3[t3], a3 = r3.apiName, r3 = r3.complete;
        $2({ apiName: a3, complete: r3 });
      }
    }, requestCompleteError: function(e3, t3, n3) {
      var i3, o3 = e3.errMsg, r3 = e3.statusCode;
      n3.hostUrl && -1 < (null == (i3 = t3.url) ? void 0 : i3.indexOf(n3.hostUrl)) || (i3 = this.getErrorType({ errMsg: o3, statusCode: r3 })) && this.publishNetWorkError({ apiName: "request", opts: t3, res: e3, config: n3, type: i3 });
    }, downloadFileCompleteError: function(e3, t3, n3) {
      var i3, o3 = e3.errMsg, r3 = e3.statusCode, a3 = e3.filePath, e3 = e3.tempFilePath, s3 = this.getErrorType({ errMsg: o3, statusCode: r3 });
      s3 && (n3 = null != (i3 = n3.api) && i3.apiDetail ? h2(t3.data, null == (i3 = n3.api) ? void 0 : i3.reqParamHandler, { url: t3.url }) : "", this.publishErrorLog({ msg: "AJAX_ERROR: downloadFile " + s3 + "\n                  \nreq url: " + t3.url + "\n                  \nres status: " + (r3 || 0) + "\n                  \nres duration: " + (Date.now() - t3.aegisRequestStartTime) + "ms\n                  \nres filePath: " + a3 + "\n                  \nres tempFilePath: " + e3 + "\n                  \nreq method: " + (t3.method || "get") + "\n                  \nreq param: " + n3 + "\n                  \nerrMsg: " + o3.slice(0, 1e3), level: b.AJAX_ERROR }));
    }, uploadFileCompleteError: function(e3, t3, n3) {
      var i3 = e3.errMsg, o3 = e3.statusCode, i3 = this.getErrorType({ errMsg: i3, statusCode: o3 });
      i3 && this.publishNetWorkError({ apiName: "uploadFile", opts: t3, res: e3, config: n3, type: i3 });
    }, hackCloud: function(e3) {
      for (var n3 = this, i3 = e3.config, t3 = 0, o3 = [{ apiName: "callFunction", complete: function(e4, t4) {
        return n3.callFunctionCompleteError(e4, t4, i3);
      } }, { apiName: "callContainer", complete: function(e4, t4) {
        return n3.callContainerCompleteError(e4, t4, i3);
      } }]; t3 < o3.length; t3++) {
        var r3 = o3[t3], a3 = r3.apiName, r3 = r3.complete;
        c2({ apiName: a3, complete: r3 });
      }
    }, callFunctionCompleteError: function(e3, t3, n3) {
      var i3, o3;
      (-1 < e3.errMsg.indexOf("fail") || -1 < e3.errMsg.indexOf("timeout")) && (o3 = (i3 = null == (i3 = n3.api) ? void 0 : i3.apiDetail) ? h2(t3.data, null == (o3 = n3.api) ? void 0 : o3.reqParamHandler, { url: null == t3 ? void 0 : t3.url }) : "", n3 = i3 ? h2(e3, null == (i3 = n3.api) ? void 0 : i3.resBodyHandler, { url: null == t3 ? void 0 : t3.url }) : "", this.publishErrorLog({ msg: "AJAX_ERROR: cloud.callFunction:fail\n                    \nreq url: cloud.callFunction." + t3.name + "\n                    \nres status: 0\n                    \nres duration: " + (Date.now() - t3.aegisRequestStartTime) + "ms\n                    \nres data: " + n3 + "\n                    \nreq method: POST\n                    \nreq param: " + o3 + "\n                    \nerrMsg: " + e3.errMsg.slice(0, 1e3), level: b.AJAX_ERROR }));
    }, callContainerCompleteError: function(e3, t3, n3) {
      var i3, o3, r3, a3 = e3.errMsg, s3 = e3.statusCode;
      (400 <= s3 || -1 < a3.indexOf("fail") || -1 < a3.indexOf("timeout")) && (i3 = (o3 = null == (o3 = n3.api) ? void 0 : o3.apiDetail) ? h2(t3.data, null == (i3 = n3.api) ? void 0 : i3.reqParamHandler, { url: null == t3 ? void 0 : t3.url }) : "", o3 = o3 ? h2(e3, null == (o3 = n3.api) ? void 0 : o3.resBodyHandler, { url: null == t3 ? void 0 : t3.url }) : "", r3 = (null == (r3 = n3.api) ? void 0 : r3.reqHeaders) || [], r3 = q2(null == t3 ? void 0 : t3.header, r3, "req"), n3 = (null == (n3 = n3.api) ? void 0 : n3.resHeaders) || [], e3 = q2(null == e3 ? void 0 : e3.header, n3, "res"), this.publishErrorLog({ msg: "AJAX_ERROR: cloud.callContainer:fail\n                    \nreq url: " + t3.path + "\n                    \nres status: " + (s3 || 0) + "\n                    \nres duration: " + (Date.now() - t3.aegisRequestStartTime) + "ms\n                    \nreq method: " + (t3.method || "POST") + "\n                    \nreq param: " + i3 + "\n                    \nres data: " + o3 + "\n                    \nerrMsg: " + a3.slice(0, 1e3) + "\n                    " + r3 + "\n                    " + e3, level: b.AJAX_ERROR }));
    }, publishNetWorkError: function(e3) {
      var t3 = e3.apiName, n3 = e3.opts, i3 = e3.res, o3 = e3.config, e3 = e3.type, r3 = i3.errMsg, a3 = i3.statusCode, s3 = i3.data, l3 = "wx.cloud.callFunction." + n3.url, u3 = d2(s3, o3.api, { url: l3, ctx: i3, payload: n3.data }).code, c3 = null == (c3 = o3.api) ? void 0 : c3.apiDetail, f3 = c3 ? h2(n3.data, null == (f3 = o3.api) ? void 0 : f3.reqParamHandler, { url: l3 }) : "", s3 = c3 ? h2(s3, null == (c3 = o3.api) ? void 0 : c3.resBodyHandler, { url: l3 }) : "", l3 = (null == (c3 = o3.api) ? void 0 : c3.reqHeaders) || [], c3 = q2(null == n3 ? void 0 : n3.header, l3, "req"), o3 = (null == (l3 = o3.api) ? void 0 : l3.resHeaders) || [], l3 = q2(null == i3 ? void 0 : i3.header, o3, "res");
      this.publishErrorLog({ msg: "AJAX_ERROR: " + t3 + " " + e3 + "\n                  \nreq url: " + n3.url + "\n                  \nres status: " + (a3 || 0) + "\n                  \nres duration: " + (Date.now() - n3.aegisRequestStartTime) + "ms\n                  \nreq method: " + (n3.method || "get") + "\n                  \nreq param: " + f3 + "\n                  \nres retcode: " + u3 + "\n                  \nres data: " + s3 + "\n                  \nerrMsg: " + r3.slice(0, 1e3) + "\n                  " + c3 + "\n                  " + l3, level: b.AJAX_ERROR });
    }, getErrorType: function(e3) {
      var t3 = e3.errMsg, e3 = e3.statusCode, n3 = "", i3 = t3;
      return ["timeout", "time out", "ERR_CONNECTION_TIMED_OUT", "ERR_TIMED_OUT", "\u8D85\u65F6"].some(function(e4) {
        return String(i3 || "").includes(e4);
      }) ? n3 = "timeout" : 400 <= e3 ? n3 = "error" : (-1 < t3.indexOf("fail") || !e3 || e3 < 0) && (n3 = "failed"), n3;
    }, hackWsConnect: function() {
      var e3, t3, n3 = this;
      $2({ apiName: "sendSocketMessage", fail: function(e4) {
        n3.publishSocketError(e4);
      } }), e3 = (t3 = { connectCallback: { fail: function(e4) {
        n3.publishSocketError(e4);
      } }, taskOpt: { onError: function(e4) {
        n3.publishSocketError(e4);
      }, send: { fail: function(e4) {
        n3.publishSocketError(e4);
      } } } }).connectCallback, t3 = t3.taskOpt, U2 ? U2.addCallback(e3) : U2 = new ke2(e3), t3 && U2.addTaskConf(t3);
    }, publishSocketError: function(e3) {
      e3 && this.publishErrorLog({ msg: e3.errMsg, level: b.WEBSOCKET_ERROR });
    } }), xe2 = new o2({ name: "reportAssetSpeed", isStart: false, onNewAegis: function(e3) {
      this.isStart || (this.isStart = true, this.start(e3));
    }, start: function() {
      var t3 = this;
      w.getPerformance && w.getPerformance().createObserver(function(e3) {
        e3 = e3.getEntries();
        null != e3 && e3.forEach(function(e4) {
          "number" != typeof e4.duration || e4.duration <= 0 || t3.publishAssetLog(e4);
        });
      }).observe({ entryTypes: ["resource"] });
    }, generateLog: function(e3) {
      return { url: "" + p2(e3.uri), method: "get", duration: Math.round(100 * e3.duration) / 100, status: 200, type: "static", isHttps: true, urlQuery: "", nextHopProtocol: "", domainLookup: 0, connectTime: 0 };
    }, publishAssetLog: function(t3) {
      var n3 = this;
      this.$walk(function(e3) {
        e3.speedLogPipeline(n3.generateLog(t3));
      });
    } }), Ce2 = ["onLaunch", "onHide", "onError", "onLoad", "onReady", "onShow", "onUnload"], Ne2 = new o2({ name: "pagePerformance", pageNavigationStartTime: {}, onNewAegis: function(e3) {
      try {
        l2("getPerformance") && this.reportPerformance(e3), this.setPagePV(e3), this.reportSetDataTiming(e3);
      } catch (e4) {
      }
    }, reportPerformance: function(u3) {
      var c3 = this, e3 = w.getPerformance(), e3 = null == e3 ? void 0 : e3.createObserver(function(e4) {
        var t3 = {}, n3 = null == (n3 = e4.getEntriesByName("appLaunch")) ? void 0 : n3[0], i3 = null == (i3 = e4.getEntriesByName("firstRender")) ? void 0 : i3[0], o3 = null == (o3 = e4.getEntriesByName("evaluateScript")) ? void 0 : o3[0], r3 = null == (r3 = e4.getEntriesByName("route")) ? void 0 : r3[0], a3 = null == (a3 = null == (a3 = e4.getEntriesByName("firstPaint")) ? void 0 : a3[0]) ? void 0 : a3.startTime, s3 = null == (s3 = (null == (s3 = e4.getEntriesByName("firstPaint")) ? void 0 : s3[0]) || (null == (s3 = e4.getEntriesByName("route")) ? void 0 : s3[0]) || (null == (s3 = e4.getEntriesByName("appLaunch")) ? void 0 : s3[0])) ? void 0 : s3.pageId, l3 = null == (e4 = (null == (l3 = e4.getEntriesByName("route")) ? void 0 : l3[0]) || (null == (l3 = e4.getEntriesByName("appLaunch")) ? void 0 : l3[0])) ? void 0 : e4.startTime;
        s3 && (c3.pageNavigationStartTime[s3] = null, l3 && (c3.pageNavigationStartTime[s3] = l3)), n3 && (t3.appLaunch = n3.duration), i3 && (t3.firstScreenTiming = i3.duration), o3 && (t3.scriptEvaluateTiming = o3.duration), r3 && (t3.pageRouteTiming = r3.duration), a3 && l3 ? t3.firstPaintTiming = Math.max(a3 - l3, 0) : a3 && c3.pageNavigationStartTime[s3] && (t3.firstPaintTiming = Math.max(a3 - c3.pageNavigationStartTime[s3], 0)), c3.publish(t3, u3);
      });
      null != e3 && e3.observe({ entryTypes: ["navigation", "render", "script"] });
    }, publish: function(t3, n3) {
      var e3, i3, o3, r3 = [], a3 = n3.config, s3 = -1 === (null == (e3 = n3.config.performanceUrl) ? void 0 : e3.indexOf("?")) ? "?" : "&";
      for (i3 in t3)
        r3.push(i3 + "=" + t3[i3]);
      "function" == typeof a3.urlHandler ? (o3 = a3.urlHandler() || window.location.href, this.$walk(function(e4) {
        e4.send({ url: n3.config.performanceUrl + s3 + r3.join("&") + "&from=" + encodeURIComponent(o3), beanFilter: ["from"], type: O2.PERFORMANCE, log: t3 });
      })) : this.$walk(function(e4) {
        e4.send({ url: n3.config.performanceUrl + s3 + r3.join("&"), type: O2.PERFORMANCE, log: t3 });
      });
    }, setPagePV: function(e3) {
      var t3 = this;
      w.onAppRoute && w.onAppRoute(function(e4) {
        "appLaunch" !== e4.openType && (t3.$walk(function(e5) {
          e5.send({ url: "" + e5.config.pvUrl, type: O2.PV });
        }), t3.reportPageLoaded(e4));
      });
    }, reportPageLoaded: function(e3) {
      e3 = "infoType: behaviorBacktracking\ndataType: pageLoadAndRoute\npageLoadedPath: " + e3.path + "\nopenType: " + e3.openType;
      this.publishNormalLog({ msg: e3, level: b.INFO });
    }, publishNormalLog: function(t3) {
      this.$walk(function(e3) {
        e3.normalLogPipeline(t3);
      });
    }, reportSetDataTiming: function(t3) {
      var e3, o3, r3, a3, n3, s3, l3, u3, c3, f3 = this, i3 = t3.config.setDataReportConfig, i3 = void 0 === i3 ? {} : i3;
      true !== i3.disabled && (e3 = i3.timeThreshold, o3 = false !== i3.withDataPaths, r3 = e3 && 0 < +e3 ? +e3 : 30, a3 = v2([y2(t3, 10), function(e4) {
        e4 = e4.map(function(e5) {
          return { type: O2.SET_DATA, component: e5.from, duration: e5.duration, fields: e5.dataPaths && e5.dataPaths.length ? e5.dataPaths.sort().join(";") : void 0, size: e5.size };
        });
        t3.send({ url: t3.config.setDataReportUrl + "?payload=" + encodeURIComponent(JSON.stringify({ miniProgramData: e4 })), type: O2.SET_DATA, log: e4 });
      }]), n3 = Page, s3 = Component, l3 = function(r4, e4) {
        var a4 = 0;
        return null != r4 && r4.data ? (e4.forEach(function(e5) {
          for (var t4 = r4.data[e5[0]], n4 = 1, i4 = e5.length; n4 < i4; n4++)
            t4[e5[n4]] && (t4 = t4[e5[n4]]);
          var o4 = "";
          try {
            o4 = JSON.stringify(t4);
          } catch (e6) {
            o4 = "";
          }
          a4 += 2 * (void 0 === o4 ? "" : o4).replace(/[\u4e00-\u9fa5]/g, "aa").length;
        }), a4 = Math.min(a4, 10485760)) : a4;
      }, u3 = function(e4, t4) {
        var n4 = t4.updateStartTimestamp, i4 = t4.updateEndTimestamp, t4 = t4.dataPaths, t4 = void 0 === t4 ? [] : t4, i4 = i4 - n4;
        isNaN(i4) || i4 < r3 || (n4 = { from: e4.is, duration: i4 }, o3 && 0 < t4.length && Object.assign(n4, { dataPaths: t4.slice(0, 30), size: l3(e4, t4) }), a3(n4));
      }, c3 = function(i4) {
        var e4 = "infoType: behaviorBacktracking\ndataType: tapEvent" + Object.keys(i4[0]).reduce(function(e5, t4) {
          var n4 = "";
          try {
            n4 = t4 + ": " + JSON.stringify(i4[0][t4]);
          } catch (e6) {
            n4 = "";
          }
          return e5 + "\n" + n4;
        }, "");
        f3.publishNormalLog({ msg: e4, level: b.INFO });
      }, Page = function(t4) {
        var e4 = t4.onReady;
        return t4.onReady = function() {
          var t5 = this;
          return "function" == typeof this.setUpdatePerformanceListener && this.setUpdatePerformanceListener({ withDataPaths: o3 }, function(e5) {
            u3(t5, e5);
          }), null == e4 ? void 0 : e4.call(this);
        }, Object.keys(t4).forEach(function(e5) {
          var n4;
          "function" != typeof t4[e5] || Ce2.includes(e5) || (n4 = t4[e5], t4[e5] = function() {
            for (var e6 = [], t5 = 0; t5 < arguments.length; t5++)
              e6[t5] = arguments[t5];
            return null != e6 && e6[0] && "tap" === e6[0].type && c3(e6), null == n4 ? void 0 : n4.apply(this, e6);
          });
        }), n3(t4);
      }, Component = function(e4) {
        e4.lifetimes && e4.lifetimes.attached ? (n4 = e4.lifetimes.attached, e4.lifetimes.attached = function() {
          var t5 = this;
          return "function" == typeof this.setUpdatePerformanceListener && this.setUpdatePerformanceListener({ withDataPaths: o3 }, function(e5) {
            u3(t5, e5);
          }), null == n4 ? void 0 : n4.call(this);
        }) : (i4 = e4.attached, e4.attached = function() {
          var t5 = this;
          return "function" == typeof this.setUpdatePerformanceListener && this.setUpdatePerformanceListener({ withDataPaths: o3 }, function(e5) {
            u3(t5, e5);
          }), null == i4 ? void 0 : i4.call(this);
        });
        var n4, i4, t4 = e4.methods;
        return t4 && "[object Object]" === Object.prototype.toString.call(t4) && Object.keys(t4).forEach(function(e5) {
          var n5;
          "function" == typeof t4[e5] && (n5 = t4[e5], t4[e5] = function() {
            for (var e6 = [], t5 = 0; t5 < arguments.length; t5++)
              e6[t5] = arguments[t5];
            return null != e6 && e6[0] && "tap" === e6[0].type && c3(e6), null == n5 ? void 0 : n5.apply(this, e6);
          });
        }), s3(e4);
      });
    } }), o2 = new o2({ name: "reportLoadPackageSpeed", isLoaded: false, onNewAegis: function(e3) {
      this.isLoaded || (this.isLoaded = true, this.start(e3));
    }, start: function() {
      var t3 = this;
      w.getPerformance && w.getPerformance().createObserver(function(e3) {
        e3 = e3.getEntries();
        null != e3 && e3.forEach(function(e4) {
          "number" != typeof e4.duration || e4.duration <= 0 || t3.publishPackageLog(e4);
        });
      }).observe({ entryTypes: ["loadPackage"] });
    }, generateLog: function(e3) {
      return [{ type: O2.LOAD_PACKAGE, packageName: e3.packageName, size: Math.round(100 * e3.packageSize) / 100, duration: Math.round(100 * e3.duration) / 100 }];
    }, publishPackageLog: function(n3) {
      var i3 = this;
      this.$walk(function(e3) {
        var t3 = i3.generateLog(n3);
        e3.send({ url: e3.config.setDataReportUrl + "?payload=" + encodeURIComponent(JSON.stringify({ miniProgramData: t3 })), type: O2.LOAD_PACKAGE, log: t3 });
      });
    } });
    function _2(e3) {
      e3 = Re2.call(this, e3) || this;
      return e3.taskHack = new Te2(), e3;
    }
    function Le2() {
      this.onErrors = [], this.sends = [];
    }
    return n2.use(r2), n2.use(we2), n2.use(he2), n2.use(xe2), n2.use(Ne2), n2.use(o2), n2.use(pe2), n2;
  });
})(aegis_min);
const Aegis = aegis_min.exports;
var timJs = { exports: {} };
(function(module2, exports2) {
  !function(e2, t2) {
    module2.exports = t2();
  }(commonjsGlobal, function() {
    function e2(e3, t3) {
      var n3 = Object.keys(e3);
      if (Object.getOwnPropertySymbols) {
        var o3 = Object.getOwnPropertySymbols(e3);
        t3 && (o3 = o3.filter(function(t4) {
          return Object.getOwnPropertyDescriptor(e3, t4).enumerable;
        })), n3.push.apply(n3, o3);
      }
      return n3;
    }
    function t2(t3) {
      for (var n3 = 1; n3 < arguments.length; n3++) {
        var o3 = null != arguments[n3] ? arguments[n3] : {};
        n3 % 2 ? e2(Object(o3), true).forEach(function(e3) {
          s2(t3, e3, o3[e3]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(o3)) : e2(Object(o3)).forEach(function(e3) {
          Object.defineProperty(t3, e3, Object.getOwnPropertyDescriptor(o3, e3));
        });
      }
      return t3;
    }
    function n2(e3) {
      return (n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    function o2(e3, t3) {
      if (!(e3 instanceof t3))
        throw new TypeError("Cannot call a class as a function");
    }
    function r2(e3, t3) {
      for (var n3 = 0; n3 < t3.length; n3++) {
        var o3 = t3[n3];
        o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
      }
    }
    function a2(e3, t3, n3) {
      return t3 && r2(e3.prototype, t3), n3 && r2(e3, n3), Object.defineProperty(e3, "prototype", { writable: false }), e3;
    }
    function s2(e3, t3, n3) {
      return t3 in e3 ? Object.defineProperty(e3, t3, { value: n3, enumerable: true, configurable: true, writable: true }) : e3[t3] = n3, e3;
    }
    function i2(e3, t3) {
      if ("function" != typeof t3 && null !== t3)
        throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), Object.defineProperty(e3, "prototype", { writable: false }), t3 && c2(e3, t3);
    }
    function u2(e3) {
      return (u2 = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
        return e4.__proto__ || Object.getPrototypeOf(e4);
      })(e3);
    }
    function c2(e3, t3) {
      return (c2 = Object.setPrototypeOf || function(e4, t4) {
        return e4.__proto__ = t4, e4;
      })(e3, t3);
    }
    function l2() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e3) {
        return false;
      }
    }
    function d2(e3, t3, n3) {
      return (d2 = l2() ? Reflect.construct : function(e4, t4, n4) {
        var o3 = [null];
        o3.push.apply(o3, t4);
        var r3 = new (Function.bind.apply(e4, o3))();
        return n4 && c2(r3, n4.prototype), r3;
      }).apply(null, arguments);
    }
    function p2(e3) {
      var t3 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
      return (p2 = function(e4) {
        if (null === e4 || (n3 = e4, -1 === Function.toString.call(n3).indexOf("[native code]")))
          return e4;
        var n3;
        if ("function" != typeof e4)
          throw new TypeError("Super expression must either be null or a function");
        if (void 0 !== t3) {
          if (t3.has(e4))
            return t3.get(e4);
          t3.set(e4, o3);
        }
        function o3() {
          return d2(e4, arguments, u2(this).constructor);
        }
        return o3.prototype = Object.create(e4.prototype, { constructor: { value: o3, enumerable: false, writable: true, configurable: true } }), c2(o3, e4);
      })(e3);
    }
    function g2(e3, t3) {
      if (null == e3)
        return {};
      var n3, o3, r3 = function(e4, t4) {
        if (null == e4)
          return {};
        var n4, o4, r4 = {}, a4 = Object.keys(e4);
        for (o4 = 0; o4 < a4.length; o4++)
          n4 = a4[o4], t4.indexOf(n4) >= 0 || (r4[n4] = e4[n4]);
        return r4;
      }(e3, t3);
      if (Object.getOwnPropertySymbols) {
        var a3 = Object.getOwnPropertySymbols(e3);
        for (o3 = 0; o3 < a3.length; o3++)
          n3 = a3[o3], t3.indexOf(n3) >= 0 || Object.prototype.propertyIsEnumerable.call(e3, n3) && (r3[n3] = e3[n3]);
      }
      return r3;
    }
    function h2(e3) {
      if (void 0 === e3)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    }
    function f2(e3, t3) {
      if (t3 && ("object" == typeof t3 || "function" == typeof t3))
        return t3;
      if (void 0 !== t3)
        throw new TypeError("Derived constructors may only return object or undefined");
      return h2(e3);
    }
    function _2(e3) {
      var t3 = l2();
      return function() {
        var n3, o3 = u2(e3);
        if (t3) {
          var r3 = u2(this).constructor;
          n3 = Reflect.construct(o3, arguments, r3);
        } else
          n3 = o3.apply(this, arguments);
        return f2(this, n3);
      };
    }
    function m2(e3, t3) {
      return M2(e3) || function(e4, t4) {
        var n3 = null == e4 ? null : "undefined" != typeof Symbol && e4[Symbol.iterator] || e4["@@iterator"];
        if (null == n3)
          return;
        var o3, r3, a3 = [], s3 = true, i3 = false;
        try {
          for (n3 = n3.call(e4); !(s3 = (o3 = n3.next()).done) && (a3.push(o3.value), !t4 || a3.length !== t4); s3 = true)
            ;
        } catch (u3) {
          i3 = true, r3 = u3;
        } finally {
          try {
            s3 || null == n3.return || n3.return();
          } finally {
            if (i3)
              throw r3;
          }
        }
        return a3;
      }(e3, t3) || I2(e3, t3) || C2();
    }
    function v2(e3) {
      return function(e4) {
        if (Array.isArray(e4))
          return T2(e4);
      }(e3) || y2(e3) || I2(e3) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function M2(e3) {
      if (Array.isArray(e3))
        return e3;
    }
    function y2(e3) {
      if ("undefined" != typeof Symbol && null != e3[Symbol.iterator] || null != e3["@@iterator"])
        return Array.from(e3);
    }
    function I2(e3, t3) {
      if (e3) {
        if ("string" == typeof e3)
          return T2(e3, t3);
        var n3 = Object.prototype.toString.call(e3).slice(8, -1);
        return "Object" === n3 && e3.constructor && (n3 = e3.constructor.name), "Map" === n3 || "Set" === n3 ? Array.from(e3) : "Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? T2(e3, t3) : void 0;
      }
    }
    function T2(e3, t3) {
      (null == t3 || t3 > e3.length) && (t3 = e3.length);
      for (var n3 = 0, o3 = new Array(t3); n3 < t3; n3++)
        o3[n3] = e3[n3];
      return o3;
    }
    function C2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function E2(e3, t3) {
      var n3 = "undefined" != typeof Symbol && e3[Symbol.iterator] || e3["@@iterator"];
      if (!n3) {
        if (Array.isArray(e3) || (n3 = I2(e3)) || t3 && e3 && "number" == typeof e3.length) {
          n3 && (e3 = n3);
          var o3 = 0, r3 = function() {
          };
          return { s: r3, n: function() {
            return o3 >= e3.length ? { done: true } : { done: false, value: e3[o3++] };
          }, e: function(e4) {
            throw e4;
          }, f: r3 };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var a3, s3 = true, i3 = false;
      return { s: function() {
        n3 = n3.call(e3);
      }, n: function() {
        var e4 = n3.next();
        return s3 = e4.done, e4;
      }, e: function(e4) {
        i3 = true, a3 = e4;
      }, f: function() {
        try {
          s3 || null == n3.return || n3.return();
        } finally {
          if (i3)
            throw a3;
        }
      } };
    }
    var S2 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof commonjsGlobal ? commonjsGlobal : "undefined" != typeof self ? self : {};
    function D2(e3, t3) {
      return e3(t3 = { exports: {} }, t3.exports), t3.exports;
    }
    var N2, A2, k2 = function(e3) {
      return e3 && e3.Math == Math && e3;
    }, R2 = k2("object" == typeof globalThis && globalThis) || k2("object" == typeof window && window) || k2("object" == typeof self && self) || k2("object" == typeof S2 && S2) || function() {
      return this;
    }() || Function("return this")(), O2 = function(e3) {
      try {
        return !!e3();
      } catch (t3) {
        return true;
      }
    }, L2 = !O2(function() {
      return 7 != Object.defineProperty({}, 1, { get: function() {
        return 7;
      } })[1];
    }), G2 = !O2(function() {
      var e3 = function() {
      }.bind();
      return "function" != typeof e3 || e3.hasOwnProperty("prototype");
    }), P2 = Function.prototype.call, U2 = G2 ? P2.bind(P2) : function() {
      return P2.apply(P2, arguments);
    }, b = {}.propertyIsEnumerable, w = Object.getOwnPropertyDescriptor, F2 = { f: w && !b.call({ 1: 2 }, 1) ? function(e3) {
      var t3 = w(this, e3);
      return !!t3 && t3.enumerable;
    } : b }, q2 = function(e3, t3) {
      return { enumerable: !(1 & e3), configurable: !(2 & e3), writable: !(4 & e3), value: t3 };
    }, x2 = Function.prototype, V2 = x2.bind, B2 = x2.call, K2 = G2 && V2.bind(B2, B2), H2 = G2 ? function(e3) {
      return e3 && K2(e3);
    } : function(e3) {
      return e3 && function() {
        return B2.apply(e3, arguments);
      };
    }, j2 = H2({}.toString), W2 = H2("".slice), Y2 = function(e3) {
      return W2(j2(e3), 8, -1);
    }, $2 = R2.Object, z2 = H2("".split), J2 = O2(function() {
      return !$2("z").propertyIsEnumerable(0);
    }) ? function(e3) {
      return "String" == Y2(e3) ? z2(e3, "") : $2(e3);
    } : $2, X2 = R2.TypeError, Q2 = function(e3) {
      if (null == e3)
        throw X2("Can't call method on " + e3);
      return e3;
    }, Z2 = function(e3) {
      return J2(Q2(e3));
    }, ee2 = function(e3) {
      return "function" == typeof e3;
    }, te2 = function(e3) {
      return "object" == typeof e3 ? null !== e3 : ee2(e3);
    }, ne2 = function(e3) {
      return ee2(e3) ? e3 : void 0;
    }, oe2 = function(e3, t3) {
      return arguments.length < 2 ? ne2(R2[e3]) : R2[e3] && R2[e3][t3];
    }, re2 = H2({}.isPrototypeOf), ae2 = oe2("navigator", "userAgent") || "", se2 = R2.process, ie2 = R2.Deno, ue2 = se2 && se2.versions || ie2 && ie2.version, ce2 = ue2 && ue2.v8;
    ce2 && (A2 = (N2 = ce2.split("."))[0] > 0 && N2[0] < 4 ? 1 : +(N2[0] + N2[1])), !A2 && ae2 && (!(N2 = ae2.match(/Edge\/(\d+)/)) || N2[1] >= 74) && (N2 = ae2.match(/Chrome\/(\d+)/)) && (A2 = +N2[1]);
    var le2 = A2, de2 = !!Object.getOwnPropertySymbols && !O2(function() {
      var e3 = Symbol();
      return !String(e3) || !(Object(e3) instanceof Symbol) || !Symbol.sham && le2 && le2 < 41;
    }), pe2 = de2 && !Symbol.sham && "symbol" == typeof Symbol.iterator, ge2 = R2.Object, he2 = pe2 ? function(e3) {
      return "symbol" == typeof e3;
    } : function(e3) {
      var t3 = oe2("Symbol");
      return ee2(t3) && re2(t3.prototype, ge2(e3));
    }, fe2 = R2.String, _e2 = function(e3) {
      try {
        return fe2(e3);
      } catch (t3) {
        return "Object";
      }
    }, me2 = R2.TypeError, ve2 = function(e3) {
      if (ee2(e3))
        return e3;
      throw me2(_e2(e3) + " is not a function");
    }, Me2 = function(e3, t3) {
      var n3 = e3[t3];
      return null == n3 ? void 0 : ve2(n3);
    }, ye2 = R2.TypeError, Ie2 = Object.defineProperty, Te2 = function(e3, t3) {
      try {
        Ie2(R2, e3, { value: t3, configurable: true, writable: true });
      } catch (n3) {
        R2[e3] = t3;
      }
      return t3;
    }, Ce2 = R2["__core-js_shared__"] || Te2("__core-js_shared__", {}), Ee2 = D2(function(e3) {
      (e3.exports = function(e4, t3) {
        return Ce2[e4] || (Ce2[e4] = void 0 !== t3 ? t3 : {});
      })("versions", []).push({ version: "3.21.0", mode: "global", copyright: "\xA9 2014-2022 Denis Pushkarev (zloirock.ru)", license: "https://github.com/zloirock/core-js/blob/v3.21.0/LICENSE", source: "https://github.com/zloirock/core-js" });
    }), Se2 = R2.Object, De2 = function(e3) {
      return Se2(Q2(e3));
    }, Ne2 = H2({}.hasOwnProperty), Ae2 = Object.hasOwn || function(e3, t3) {
      return Ne2(De2(e3), t3);
    }, ke2 = 0, Re2 = Math.random(), Oe2 = H2(1 .toString), Le2 = function(e3) {
      return "Symbol(" + (void 0 === e3 ? "" : e3) + ")_" + Oe2(++ke2 + Re2, 36);
    }, Ge2 = Ee2("wks"), Pe2 = R2.Symbol, Ue2 = Pe2 && Pe2.for, be2 = pe2 ? Pe2 : Pe2 && Pe2.withoutSetter || Le2, we2 = function(e3) {
      if (!Ae2(Ge2, e3) || !de2 && "string" != typeof Ge2[e3]) {
        var t3 = "Symbol." + e3;
        de2 && Ae2(Pe2, e3) ? Ge2[e3] = Pe2[e3] : Ge2[e3] = pe2 && Ue2 ? Ue2(t3) : be2(t3);
      }
      return Ge2[e3];
    }, Fe2 = R2.TypeError, qe2 = we2("toPrimitive"), xe2 = function(e3, t3) {
      if (!te2(e3) || he2(e3))
        return e3;
      var n3, o3 = Me2(e3, qe2);
      if (o3) {
        if (void 0 === t3 && (t3 = "default"), n3 = U2(o3, e3, t3), !te2(n3) || he2(n3))
          return n3;
        throw Fe2("Can't convert object to primitive value");
      }
      return void 0 === t3 && (t3 = "number"), function(e4, t4) {
        var n4, o4;
        if ("string" === t4 && ee2(n4 = e4.toString) && !te2(o4 = U2(n4, e4)))
          return o4;
        if (ee2(n4 = e4.valueOf) && !te2(o4 = U2(n4, e4)))
          return o4;
        if ("string" !== t4 && ee2(n4 = e4.toString) && !te2(o4 = U2(n4, e4)))
          return o4;
        throw ye2("Can't convert object to primitive value");
      }(e3, t3);
    }, Ve2 = function(e3) {
      var t3 = xe2(e3, "string");
      return he2(t3) ? t3 : t3 + "";
    }, Be2 = R2.document, Ke2 = te2(Be2) && te2(Be2.createElement), He2 = function(e3) {
      return Ke2 ? Be2.createElement(e3) : {};
    }, je2 = !L2 && !O2(function() {
      return 7 != Object.defineProperty(He2("div"), "a", { get: function() {
        return 7;
      } }).a;
    }), We2 = Object.getOwnPropertyDescriptor, Ye2 = { f: L2 ? We2 : function(e3, t3) {
      if (e3 = Z2(e3), t3 = Ve2(t3), je2)
        try {
          return We2(e3, t3);
        } catch (n3) {
        }
      if (Ae2(e3, t3))
        return q2(!U2(F2.f, e3, t3), e3[t3]);
    } }, $e2 = L2 && O2(function() {
      return 42 != Object.defineProperty(function() {
      }, "prototype", { value: 42, writable: false }).prototype;
    }), ze2 = R2.String, Je2 = R2.TypeError, Xe2 = function(e3) {
      if (te2(e3))
        return e3;
      throw Je2(ze2(e3) + " is not an object");
    }, Qe2 = R2.TypeError, Ze2 = Object.defineProperty, et2 = Object.getOwnPropertyDescriptor, nt2 = { f: L2 ? $e2 ? function(e3, t3, n3) {
      if (Xe2(e3), t3 = Ve2(t3), Xe2(n3), "function" == typeof e3 && "prototype" === t3 && "value" in n3 && "writable" in n3 && !n3.writable) {
        var o3 = et2(e3, t3);
        o3 && o3.writable && (e3[t3] = n3.value, n3 = { configurable: "configurable" in n3 ? n3.configurable : o3.configurable, enumerable: "enumerable" in n3 ? n3.enumerable : o3.enumerable, writable: false });
      }
      return Ze2(e3, t3, n3);
    } : Ze2 : function(e3, t3, n3) {
      if (Xe2(e3), t3 = Ve2(t3), Xe2(n3), je2)
        try {
          return Ze2(e3, t3, n3);
        } catch (o3) {
        }
      if ("get" in n3 || "set" in n3)
        throw Qe2("Accessors not supported");
      return "value" in n3 && (e3[t3] = n3.value), e3;
    } }, ot2 = L2 ? function(e3, t3, n3) {
      return nt2.f(e3, t3, q2(1, n3));
    } : function(e3, t3, n3) {
      return e3[t3] = n3, e3;
    }, rt2 = H2(Function.toString);
    ee2(Ce2.inspectSource) || (Ce2.inspectSource = function(e3) {
      return rt2(e3);
    });
    var at2, st2, it2, ut2 = Ce2.inspectSource, ct2 = R2.WeakMap, lt2 = ee2(ct2) && /native code/.test(ut2(ct2)), dt2 = Ee2("keys"), pt2 = function(e3) {
      return dt2[e3] || (dt2[e3] = Le2(e3));
    }, gt2 = {}, ht2 = R2.TypeError, ft2 = R2.WeakMap;
    if (lt2 || Ce2.state) {
      var _t2 = Ce2.state || (Ce2.state = new ft2()), mt2 = H2(_t2.get), vt2 = H2(_t2.has), Mt = H2(_t2.set);
      at2 = function(e3, t3) {
        if (vt2(_t2, e3))
          throw new ht2("Object already initialized");
        return t3.facade = e3, Mt(_t2, e3, t3), t3;
      }, st2 = function(e3) {
        return mt2(_t2, e3) || {};
      }, it2 = function(e3) {
        return vt2(_t2, e3);
      };
    } else {
      var yt2 = pt2("state");
      gt2[yt2] = true, at2 = function(e3, t3) {
        if (Ae2(e3, yt2))
          throw new ht2("Object already initialized");
        return t3.facade = e3, ot2(e3, yt2, t3), t3;
      }, st2 = function(e3) {
        return Ae2(e3, yt2) ? e3[yt2] : {};
      }, it2 = function(e3) {
        return Ae2(e3, yt2);
      };
    }
    var It2 = { set: at2, get: st2, has: it2, enforce: function(e3) {
      return it2(e3) ? st2(e3) : at2(e3, {});
    }, getterFor: function(e3) {
      return function(t3) {
        var n3;
        if (!te2(t3) || (n3 = st2(t3)).type !== e3)
          throw ht2("Incompatible receiver, " + e3 + " required");
        return n3;
      };
    } }, Tt2 = Function.prototype, Ct = L2 && Object.getOwnPropertyDescriptor, Et2 = Ae2(Tt2, "name"), St2 = { EXISTS: Et2, PROPER: Et2 && "something" === function() {
    }.name, CONFIGURABLE: Et2 && (!L2 || L2 && Ct(Tt2, "name").configurable) }, Dt = D2(function(e3) {
      var t3 = St2.CONFIGURABLE, n3 = It2.get, o3 = It2.enforce, r3 = String(String).split("String");
      (e3.exports = function(e4, n4, a3, s3) {
        var i3, u3 = !!s3 && !!s3.unsafe, c3 = !!s3 && !!s3.enumerable, l3 = !!s3 && !!s3.noTargetGet, d3 = s3 && void 0 !== s3.name ? s3.name : n4;
        ee2(a3) && ("Symbol(" === String(d3).slice(0, 7) && (d3 = "[" + String(d3).replace(/^Symbol\(([^)]*)\)/, "$1") + "]"), (!Ae2(a3, "name") || t3 && a3.name !== d3) && ot2(a3, "name", d3), (i3 = o3(a3)).source || (i3.source = r3.join("string" == typeof d3 ? d3 : ""))), e4 !== R2 ? (u3 ? !l3 && e4[n4] && (c3 = true) : delete e4[n4], c3 ? e4[n4] = a3 : ot2(e4, n4, a3)) : c3 ? e4[n4] = a3 : Te2(n4, a3);
      })(Function.prototype, "toString", function() {
        return ee2(this) && n3(this).source || ut2(this);
      });
    }), Nt = Math.ceil, At2 = Math.floor, kt2 = function(e3) {
      var t3 = +e3;
      return t3 != t3 || 0 === t3 ? 0 : (t3 > 0 ? At2 : Nt)(t3);
    }, Rt = Math.max, Ot2 = Math.min, Lt = function(e3, t3) {
      var n3 = kt2(e3);
      return n3 < 0 ? Rt(n3 + t3, 0) : Ot2(n3, t3);
    }, Gt = Math.min, Pt2 = function(e3) {
      return e3 > 0 ? Gt(kt2(e3), 9007199254740991) : 0;
    }, Ut = function(e3) {
      return Pt2(e3.length);
    }, bt2 = function(e3) {
      return function(t3, n3, o3) {
        var r3, a3 = Z2(t3), s3 = Ut(a3), i3 = Lt(o3, s3);
        if (e3 && n3 != n3) {
          for (; s3 > i3; )
            if ((r3 = a3[i3++]) != r3)
              return true;
        } else
          for (; s3 > i3; i3++)
            if ((e3 || i3 in a3) && a3[i3] === n3)
              return e3 || i3 || 0;
        return !e3 && -1;
      };
    }, wt2 = { includes: bt2(true), indexOf: bt2(false) }, Ft = wt2.indexOf, qt = H2([].push), xt = function(e3, t3) {
      var n3, o3 = Z2(e3), r3 = 0, a3 = [];
      for (n3 in o3)
        !Ae2(gt2, n3) && Ae2(o3, n3) && qt(a3, n3);
      for (; t3.length > r3; )
        Ae2(o3, n3 = t3[r3++]) && (~Ft(a3, n3) || qt(a3, n3));
      return a3;
    }, Vt = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"], Bt = Vt.concat("length", "prototype"), Kt = { f: Object.getOwnPropertyNames || function(e3) {
      return xt(e3, Bt);
    } }, Ht = { f: Object.getOwnPropertySymbols }, jt = H2([].concat), Wt = oe2("Reflect", "ownKeys") || function(e3) {
      var t3 = Kt.f(Xe2(e3)), n3 = Ht.f;
      return n3 ? jt(t3, n3(e3)) : t3;
    }, Yt = function(e3, t3, n3) {
      for (var o3 = Wt(t3), r3 = nt2.f, a3 = Ye2.f, s3 = 0; s3 < o3.length; s3++) {
        var i3 = o3[s3];
        Ae2(e3, i3) || n3 && Ae2(n3, i3) || r3(e3, i3, a3(t3, i3));
      }
    }, $t = /#|\.prototype\./, zt = function(e3, t3) {
      var n3 = Xt[Jt(e3)];
      return n3 == Zt || n3 != Qt && (ee2(t3) ? O2(t3) : !!t3);
    }, Jt = zt.normalize = function(e3) {
      return String(e3).replace($t, ".").toLowerCase();
    }, Xt = zt.data = {}, Qt = zt.NATIVE = "N", Zt = zt.POLYFILL = "P", en = zt, tn = Ye2.f, nn = function(e3, t3) {
      var n3, o3, r3, a3, s3, i3 = e3.target, u3 = e3.global, c3 = e3.stat;
      if (n3 = u3 ? R2 : c3 ? R2[i3] || Te2(i3, {}) : (R2[i3] || {}).prototype)
        for (o3 in t3) {
          if (a3 = t3[o3], r3 = e3.noTargetGet ? (s3 = tn(n3, o3)) && s3.value : n3[o3], !en(u3 ? o3 : i3 + (c3 ? "." : "#") + o3, e3.forced) && void 0 !== r3) {
            if (typeof a3 == typeof r3)
              continue;
            Yt(a3, r3);
          }
          (e3.sham || r3 && r3.sham) && ot2(a3, "sham", true), Dt(n3, o3, a3, e3);
        }
    }, on = {};
    on[we2("toStringTag")] = "z";
    var rn = "[object z]" === String(on), an = we2("toStringTag"), sn = R2.Object, un = "Arguments" == Y2(function() {
      return arguments;
    }()), cn = rn ? Y2 : function(e3) {
      var t3, n3, o3;
      return void 0 === e3 ? "Undefined" : null === e3 ? "Null" : "string" == typeof (n3 = function(e4, t4) {
        try {
          return e4[t4];
        } catch (n4) {
        }
      }(t3 = sn(e3), an)) ? n3 : un ? Y2(t3) : "Object" == (o3 = Y2(t3)) && ee2(t3.callee) ? "Arguments" : o3;
    }, ln = R2.String, dn = function(e3) {
      if ("Symbol" === cn(e3))
        throw TypeError("Cannot convert a Symbol value to a string");
      return ln(e3);
    }, pn2 = "	\n\v\f\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF", gn = H2("".replace), hn = "[" + pn2 + "]", fn2 = RegExp("^" + hn + hn + "*"), _n = RegExp(hn + hn + "*$"), mn = function(e3) {
      return function(t3) {
        var n3 = dn(Q2(t3));
        return 1 & e3 && (n3 = gn(n3, fn2, "")), 2 & e3 && (n3 = gn(n3, _n, "")), n3;
      };
    }, vn = { start: mn(1), end: mn(2), trim: mn(3) }, Mn2 = vn.trim, yn2 = R2.parseInt, In = R2.Symbol, Tn2 = In && In.iterator, Cn2 = /^[+-]?0x/i, En2 = H2(Cn2.exec), Sn = 8 !== yn2(pn2 + "08") || 22 !== yn2(pn2 + "0x16") || Tn2 && !O2(function() {
      yn2(Object(Tn2));
    }) ? function(e3, t3) {
      var n3 = Mn2(dn(e3));
      return yn2(n3, t3 >>> 0 || (En2(Cn2, n3) ? 16 : 10));
    } : yn2;
    nn({ global: true, forced: parseInt != Sn }, { parseInt: Sn });
    var Dn2, Nn2 = Object.keys || function(e3) {
      return xt(e3, Vt);
    }, An2 = { f: L2 && !$e2 ? Object.defineProperties : function(e3, t3) {
      Xe2(e3);
      for (var n3, o3 = Z2(t3), r3 = Nn2(t3), a3 = r3.length, s3 = 0; a3 > s3; )
        nt2.f(e3, n3 = r3[s3++], o3[n3]);
      return e3;
    } }, kn = oe2("document", "documentElement"), Rn2 = pt2("IE_PROTO"), On2 = function() {
    }, Ln2 = function(e3) {
      return "<script>" + e3 + "<\/script>";
    }, Gn2 = function(e3) {
      e3.write(Ln2("")), e3.close();
      var t3 = e3.parentWindow.Object;
      return e3 = null, t3;
    }, Pn2 = function() {
      try {
        Dn2 = new ActiveXObject("htmlfile");
      } catch (o3) {
      }
      var e3, t3;
      Pn2 = "undefined" != typeof document ? document.domain && Dn2 ? Gn2(Dn2) : ((t3 = He2("iframe")).style.display = "none", kn.appendChild(t3), t3.src = String("javascript:"), (e3 = t3.contentWindow.document).open(), e3.write(Ln2("document.F=Object")), e3.close(), e3.F) : Gn2(Dn2);
      for (var n3 = Vt.length; n3--; )
        delete Pn2.prototype[Vt[n3]];
      return Pn2();
    };
    gt2[Rn2] = true;
    var Un2 = Object.create || function(e3, t3) {
      var n3;
      return null !== e3 ? (On2.prototype = Xe2(e3), n3 = new On2(), On2.prototype = null, n3[Rn2] = e3) : n3 = Pn2(), void 0 === t3 ? n3 : An2.f(n3, t3);
    };
    nn({ target: "Object", stat: true, sham: !L2 }, { create: Un2 });
    var bn2 = H2(H2.bind), wn2 = function(e3, t3) {
      return ve2(e3), void 0 === t3 ? e3 : G2 ? bn2(e3, t3) : function() {
        return e3.apply(t3, arguments);
      };
    }, Fn2 = Array.isArray || function(e3) {
      return "Array" == Y2(e3);
    }, qn2 = function() {
    }, xn2 = [], Vn2 = oe2("Reflect", "construct"), Bn2 = /^\s*(?:class|function)\b/, Kn2 = H2(Bn2.exec), Hn2 = !Bn2.exec(qn2), jn2 = function(e3) {
      if (!ee2(e3))
        return false;
      try {
        return Vn2(qn2, xn2, e3), true;
      } catch (t3) {
        return false;
      }
    }, Wn2 = function(e3) {
      if (!ee2(e3))
        return false;
      switch (cn(e3)) {
        case "AsyncFunction":
        case "GeneratorFunction":
        case "AsyncGeneratorFunction":
          return false;
      }
      try {
        return Hn2 || !!Kn2(Bn2, ut2(e3));
      } catch (t3) {
        return true;
      }
    };
    Wn2.sham = true;
    var Yn2 = !Vn2 || O2(function() {
      var e3;
      return jn2(jn2.call) || !jn2(Object) || !jn2(function() {
        e3 = true;
      }) || e3;
    }) ? Wn2 : jn2, $n2 = we2("species"), zn2 = R2.Array, Jn2 = function(e3, t3) {
      return new (function(e4) {
        var t4;
        return Fn2(e4) && (t4 = e4.constructor, (Yn2(t4) && (t4 === zn2 || Fn2(t4.prototype)) || te2(t4) && null === (t4 = t4[$n2])) && (t4 = void 0)), void 0 === t4 ? zn2 : t4;
      }(e3))(0 === t3 ? 0 : t3);
    }, Xn2 = H2([].push), Qn2 = function(e3) {
      var t3 = 1 == e3, n3 = 2 == e3, o3 = 3 == e3, r3 = 4 == e3, a3 = 6 == e3, s3 = 7 == e3, i3 = 5 == e3 || a3;
      return function(u3, c3, l3, d3) {
        for (var p3, g3, h3 = De2(u3), f3 = J2(h3), _3 = wn2(c3, l3), m3 = Ut(f3), v3 = 0, M3 = d3 || Jn2, y3 = t3 ? M3(u3, m3) : n3 || s3 ? M3(u3, 0) : void 0; m3 > v3; v3++)
          if ((i3 || v3 in f3) && (g3 = _3(p3 = f3[v3], v3, h3), e3))
            if (t3)
              y3[v3] = g3;
            else if (g3)
              switch (e3) {
                case 3:
                  return true;
                case 5:
                  return p3;
                case 6:
                  return v3;
                case 2:
                  Xn2(y3, p3);
              }
            else
              switch (e3) {
                case 4:
                  return false;
                case 7:
                  Xn2(y3, p3);
              }
        return a3 ? -1 : o3 || r3 ? r3 : y3;
      };
    }, Zn2 = { forEach: Qn2(0), map: Qn2(1), filter: Qn2(2), some: Qn2(3), every: Qn2(4), find: Qn2(5), findIndex: Qn2(6), filterReject: Qn2(7) }, eo = function(e3, t3) {
      var n3 = [][e3];
      return !!n3 && O2(function() {
        n3.call(null, t3 || function() {
          throw 1;
        }, 1);
      });
    }, to = Zn2.forEach, no = eo("forEach") ? [].forEach : function(e3) {
      return to(this, e3, arguments.length > 1 ? arguments[1] : void 0);
    };
    nn({ target: "Array", proto: true, forced: [].forEach != no }, { forEach: no });
    var oo = rn ? {}.toString : function() {
      return "[object " + cn(this) + "]";
    };
    rn || Dt(Object.prototype, "toString", oo, { unsafe: true });
    var ro = { CSSRuleList: 0, CSSStyleDeclaration: 0, CSSValueList: 0, ClientRectList: 0, DOMRectList: 0, DOMStringList: 0, DOMTokenList: 1, DataTransferItemList: 0, FileList: 0, HTMLAllCollection: 0, HTMLCollection: 0, HTMLFormElement: 0, HTMLSelectElement: 0, MediaList: 0, MimeTypeArray: 0, NamedNodeMap: 0, NodeList: 1, PaintRequestList: 0, Plugin: 0, PluginArray: 0, SVGLengthList: 0, SVGNumberList: 0, SVGPathSegList: 0, SVGPointList: 0, SVGStringList: 0, SVGTransformList: 0, SourceBufferList: 0, StyleSheetList: 0, TextTrackCueList: 0, TextTrackList: 0, TouchList: 0 }, ao = He2("span").classList, so = ao && ao.constructor && ao.constructor.prototype, io = so === Object.prototype ? void 0 : so, uo = function(e3) {
      if (e3 && e3.forEach !== no)
        try {
          ot2(e3, "forEach", no);
        } catch (t3) {
          e3.forEach = no;
        }
    };
    for (var co in ro)
      ro[co] && uo(R2[co] && R2[co].prototype);
    uo(io);
    var lo = O2(function() {
      Nn2(1);
    });
    nn({ target: "Object", stat: true, forced: lo }, { keys: function(e3) {
      return Nn2(De2(e3));
    } });
    var po = function(e3, t3, n3) {
      var o3, r3;
      Xe2(e3);
      try {
        if (!(o3 = Me2(e3, "return"))) {
          if ("throw" === t3)
            throw n3;
          return n3;
        }
        o3 = U2(o3, e3);
      } catch (a3) {
        r3 = true, o3 = a3;
      }
      if ("throw" === t3)
        throw n3;
      if (r3)
        throw o3;
      return Xe2(o3), n3;
    }, go = function(e3, t3, n3, o3) {
      try {
        return o3 ? t3(Xe2(n3)[0], n3[1]) : t3(n3);
      } catch (r3) {
        po(e3, "throw", r3);
      }
    }, ho = {}, fo = we2("iterator"), _o = Array.prototype, mo = function(e3) {
      return void 0 !== e3 && (ho.Array === e3 || _o[fo] === e3);
    }, vo = function(e3, t3, n3) {
      var o3 = Ve2(t3);
      o3 in e3 ? nt2.f(e3, o3, q2(0, n3)) : e3[o3] = n3;
    }, Mo = we2("iterator"), yo = function(e3) {
      if (null != e3)
        return Me2(e3, Mo) || Me2(e3, "@@iterator") || ho[cn(e3)];
    }, Io = R2.TypeError, To = function(e3, t3) {
      var n3 = arguments.length < 2 ? yo(e3) : t3;
      if (ve2(n3))
        return Xe2(U2(n3, e3));
      throw Io(_e2(e3) + " is not iterable");
    }, Co = R2.Array, Eo = function(e3) {
      var t3 = De2(e3), n3 = Yn2(this), o3 = arguments.length, r3 = o3 > 1 ? arguments[1] : void 0, a3 = void 0 !== r3;
      a3 && (r3 = wn2(r3, o3 > 2 ? arguments[2] : void 0));
      var s3, i3, u3, c3, l3, d3, p3 = yo(t3), g3 = 0;
      if (!p3 || this == Co && mo(p3))
        for (s3 = Ut(t3), i3 = n3 ? new this(s3) : Co(s3); s3 > g3; g3++)
          d3 = a3 ? r3(t3[g3], g3) : t3[g3], vo(i3, g3, d3);
      else
        for (l3 = (c3 = To(t3, p3)).next, i3 = n3 ? new this() : []; !(u3 = U2(l3, c3)).done; g3++)
          d3 = a3 ? go(c3, r3, [u3.value, g3], true) : u3.value, vo(i3, g3, d3);
      return i3.length = g3, i3;
    }, So = we2("iterator"), Do = false;
    try {
      var No = 0, Ao = { next: function() {
        return { done: !!No++ };
      }, return: function() {
        Do = true;
      } };
      Ao[So] = function() {
        return this;
      }, Array.from(Ao, function() {
        throw 2;
      });
    } catch (BS) {
    }
    var ko = function(e3, t3) {
      if (!t3 && !Do)
        return false;
      var n3 = false;
      try {
        var o3 = {};
        o3[So] = function() {
          return { next: function() {
            return { done: n3 = true };
          } };
        }, e3(o3);
      } catch (BS) {
      }
      return n3;
    }, Ro = !ko(function(e3) {
      Array.from(e3);
    });
    nn({ target: "Array", stat: true, forced: Ro }, { from: Eo });
    var Oo, Lo, Go, Po = H2("".charAt), Uo = H2("".charCodeAt), bo = H2("".slice), wo = function(e3) {
      return function(t3, n3) {
        var o3, r3, a3 = dn(Q2(t3)), s3 = kt2(n3), i3 = a3.length;
        return s3 < 0 || s3 >= i3 ? e3 ? "" : void 0 : (o3 = Uo(a3, s3)) < 55296 || o3 > 56319 || s3 + 1 === i3 || (r3 = Uo(a3, s3 + 1)) < 56320 || r3 > 57343 ? e3 ? Po(a3, s3) : o3 : e3 ? bo(a3, s3, s3 + 2) : r3 - 56320 + (o3 - 55296 << 10) + 65536;
      };
    }, Fo = { codeAt: wo(false), charAt: wo(true) }, qo = !O2(function() {
      function e3() {
      }
      return e3.prototype.constructor = null, Object.getPrototypeOf(new e3()) !== e3.prototype;
    }), xo = pt2("IE_PROTO"), Vo = R2.Object, Bo = Vo.prototype, Ko = qo ? Vo.getPrototypeOf : function(e3) {
      var t3 = De2(e3);
      if (Ae2(t3, xo))
        return t3[xo];
      var n3 = t3.constructor;
      return ee2(n3) && t3 instanceof n3 ? n3.prototype : t3 instanceof Vo ? Bo : null;
    }, Ho = we2("iterator"), jo = false;
    [].keys && ("next" in (Go = [].keys()) ? (Lo = Ko(Ko(Go))) !== Object.prototype && (Oo = Lo) : jo = true), (null == Oo || O2(function() {
      var e3 = {};
      return Oo[Ho].call(e3) !== e3;
    })) && (Oo = {}), ee2(Oo[Ho]) || Dt(Oo, Ho, function() {
      return this;
    });
    var Wo = { IteratorPrototype: Oo, BUGGY_SAFARI_ITERATORS: jo }, Yo = nt2.f, $o = we2("toStringTag"), zo = function(e3, t3, n3) {
      e3 && !n3 && (e3 = e3.prototype), e3 && !Ae2(e3, $o) && Yo(e3, $o, { configurable: true, value: t3 });
    }, Jo = Wo.IteratorPrototype, Xo = function() {
      return this;
    }, Qo = function(e3, t3, n3, o3) {
      var r3 = t3 + " Iterator";
      return e3.prototype = Un2(Jo, { next: q2(+!o3, n3) }), zo(e3, r3, false), ho[r3] = Xo, e3;
    }, Zo = R2.String, er = R2.TypeError, tr = Object.setPrototypeOf || ("__proto__" in {} ? function() {
      var e3, t3 = false, n3 = {};
      try {
        (e3 = H2(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set))(n3, []), t3 = n3 instanceof Array;
      } catch (BS) {
      }
      return function(n4, o3) {
        return Xe2(n4), function(e4) {
          if ("object" == typeof e4 || ee2(e4))
            return e4;
          throw er("Can't set " + Zo(e4) + " as a prototype");
        }(o3), t3 ? e3(n4, o3) : n4.__proto__ = o3, n4;
      };
    }() : void 0), nr = St2.PROPER, or = St2.CONFIGURABLE, rr = Wo.IteratorPrototype, ar = Wo.BUGGY_SAFARI_ITERATORS, sr2 = we2("iterator"), ir = function() {
      return this;
    }, ur = function(e3, t3, n3, o3, r3, a3, s3) {
      Qo(n3, t3, o3);
      var i3, u3, c3, l3 = function(e4) {
        if (e4 === r3 && f3)
          return f3;
        if (!ar && e4 in g3)
          return g3[e4];
        switch (e4) {
          case "keys":
          case "values":
          case "entries":
            return function() {
              return new n3(this, e4);
            };
        }
        return function() {
          return new n3(this);
        };
      }, d3 = t3 + " Iterator", p3 = false, g3 = e3.prototype, h3 = g3[sr2] || g3["@@iterator"] || r3 && g3[r3], f3 = !ar && h3 || l3(r3), _3 = "Array" == t3 && g3.entries || h3;
      if (_3 && (i3 = Ko(_3.call(new e3()))) !== Object.prototype && i3.next && (Ko(i3) !== rr && (tr ? tr(i3, rr) : ee2(i3[sr2]) || Dt(i3, sr2, ir)), zo(i3, d3, true)), nr && "values" == r3 && h3 && "values" !== h3.name && (or ? ot2(g3, "name", "values") : (p3 = true, f3 = function() {
        return U2(h3, this);
      })), r3)
        if (u3 = { values: l3("values"), keys: a3 ? f3 : l3("keys"), entries: l3("entries") }, s3)
          for (c3 in u3)
            (ar || p3 || !(c3 in g3)) && Dt(g3, c3, u3[c3]);
        else
          nn({ target: t3, proto: true, forced: ar || p3 }, u3);
      return g3[sr2] !== f3 && Dt(g3, sr2, f3, { name: r3 }), ho[t3] = f3, u3;
    }, cr = Fo.charAt, lr = It2.set, dr = It2.getterFor("String Iterator");
    ur(String, "String", function(e3) {
      lr(this, { type: "String Iterator", string: dn(e3), index: 0 });
    }, function() {
      var e3, t3 = dr(this), n3 = t3.string, o3 = t3.index;
      return o3 >= n3.length ? { value: void 0, done: true } : (e3 = cr(n3, o3), t3.index += e3.length, { value: e3, done: false });
    });
    var pr = { SDK_READY: "sdkStateReady", SDK_NOT_READY: "sdkStateNotReady", SDK_DESTROY: "sdkDestroy", MESSAGE_RECEIVED: "onMessageReceived", MESSAGE_MODIFIED: "onMessageModified", MESSAGE_REVOKED: "onMessageRevoked", MESSAGE_READ_BY_PEER: "onMessageReadByPeer", MESSAGE_READ_RECEIPT_RECEIVED: "onMessageReadReceiptReceived", MESSAGE_EXTENSIONS_UPDATED: "onMessageExtensionsUpdated", MESSAGE_EXTENSIONS_DELETED: "onMessageExtensionsDeleted", CONVERSATION_LIST_UPDATED: "onConversationListUpdated", TOTAL_UNREAD_MESSAGE_COUNT_UPDATED: "onTotalUnreadMessageCountUpdated", CONVERSATION_GROUP_LIST_UPDATED: "onConversationGroupListUpdated", CONVERSATION_IN_GROUP_UPDATED: "onConversationInGroupUpdated", GROUP_LIST_UPDATED: "onGroupListUpdated", GROUP_SYSTEM_NOTICE_RECEIVED: "receiveGroupSystemNotice", GROUP_ATTRIBUTES_UPDATED: "groupAttributesUpdated", GROUP_COUNTER_UPDATED: "onGroupCounterUpdated", TOPIC_CREATED: "onTopicCreated", TOPIC_DELETED: "onTopicDeleted", TOPIC_UPDATED: "onTopicUpdated", PROFILE_UPDATED: "onProfileUpdated", USER_STATUS_UPDATED: "onUserStatusUpdated", BLACKLIST_UPDATED: "blacklistUpdated", FRIEND_LIST_UPDATED: "onFriendListUpdated", FRIEND_GROUP_LIST_UPDATED: "onFriendGroupListUpdated", FRIEND_APPLICATION_LIST_UPDATED: "onFriendApplicationListUpdated", KICKED_OUT: "kickedOut", ERROR: "error", NET_STATE_CHANGE: "netStateChange", SDK_RELOAD: "sdkReload" }, gr = { MSG_TEXT: "TIMTextElem", MSG_IMAGE: "TIMImageElem", MSG_SOUND: "TIMSoundElem", MSG_AUDIO: "TIMSoundElem", MSG_FILE: "TIMFileElem", MSG_FACE: "TIMFaceElem", MSG_VIDEO: "TIMVideoFileElem", MSG_GEO: "TIMLocationElem", MSG_LOCATION: "TIMLocationElem", MSG_GRP_TIP: "TIMGroupTipElem", MSG_GRP_SYS_NOTICE: "TIMGroupSystemNoticeElem", MSG_CUSTOM: "TIMCustomElem", MSG_MERGER: "TIMRelayElem", MSG_PRIORITY_HIGH: "High", MSG_PRIORITY_NORMAL: "Normal", MSG_PRIORITY_LOW: "Low", MSG_PRIORITY_LOWEST: "Lowest", CONV_C2C: "C2C", CONV_GROUP: "GROUP", CONV_TOPIC: "TOPIC", CONV_SYSTEM: "@TIM#SYSTEM", CONV_AT_ME: 1, CONV_AT_ALL: 2, CONV_AT_ALL_AT_ME: 3, CONV_MARK_TYPE_STAR: 1, CONV_MARK_TYPE_UNREAD: 2, CONV_MARK_TYPE_FOLD: 4, CONV_MARK_TYPE_HIDE: 8, GRP_PRIVATE: "Private", GRP_WORK: "Private", GRP_PUBLIC: "Public", GRP_CHATROOM: "ChatRoom", GRP_MEETING: "ChatRoom", GRP_AVCHATROOM: "AVChatRoom", GRP_COMMUNITY: "Community", GRP_MBR_ROLE_OWNER: "Owner", GRP_MBR_ROLE_ADMIN: "Admin", GRP_MBR_ROLE_MEMBER: "Member", GRP_MBR_ROLE_CUSTOM: "Custom", GRP_TIP_MBR_JOIN: 1, GRP_TIP_MBR_QUIT: 2, GRP_TIP_MBR_KICKED_OUT: 3, GRP_TIP_MBR_SET_ADMIN: 4, GRP_TIP_MBR_CANCELED_ADMIN: 5, GRP_TIP_GRP_PROFILE_UPDATED: 6, GRP_TIP_MBR_PROFILE_UPDATED: 7, GRP_TIP_BAN_AVCHATROOM_MEMBER: 10, GRP_TIP_UNBAN_AVCHATROOM_MEMBER: 11, MSG_REMIND_ACPT_AND_NOTE: "AcceptAndNotify", MSG_REMIND_ACPT_NOT_NOTE: "AcceptNotNotify", MSG_REMIND_DISCARD: "Discard", GENDER_UNKNOWN: "Gender_Type_Unknown", GENDER_FEMALE: "Gender_Type_Female", GENDER_MALE: "Gender_Type_Male", KICKED_OUT_MULT_ACCOUNT: "multipleAccount", KICKED_OUT_MULT_DEVICE: "multipleDevice", KICKED_OUT_USERSIG_EXPIRED: "userSigExpired", KICKED_OUT_REST_API: "REST_API_Kick", ALLOW_TYPE_ALLOW_ANY: "AllowType_Type_AllowAny", ALLOW_TYPE_NEED_CONFIRM: "AllowType_Type_NeedConfirm", ALLOW_TYPE_DENY_ANY: "AllowType_Type_DenyAny", FORBID_TYPE_NONE: "AdminForbid_Type_None", FORBID_TYPE_SEND_OUT: "AdminForbid_Type_SendOut", JOIN_OPTIONS_FREE_ACCESS: "FreeAccess", JOIN_OPTIONS_NEED_PERMISSION: "NeedPermission", JOIN_OPTIONS_DISABLE_APPLY: "DisableApply", JOIN_STATUS_SUCCESS: "JoinedSuccess", JOIN_STATUS_ALREADY_IN_GROUP: "AlreadyInGroup", JOIN_STATUS_WAIT_APPROVAL: "WaitAdminApproval", GRP_PROFILE_OWNER_ID: "ownerID", GRP_PROFILE_CREATE_TIME: "createTime", GRP_PROFILE_LAST_INFO_TIME: "lastInfoTime", GRP_PROFILE_MEMBER_NUM: "memberNum", GRP_PROFILE_MAX_MEMBER_NUM: "maxMemberNum", GRP_PROFILE_JOIN_OPTION: "joinOption", GRP_PROFILE_INTRODUCTION: "introduction", GRP_PROFILE_NOTIFICATION: "notification", GRP_PROFILE_MUTE_ALL_MBRS: "muteAllMembers", SNS_ADD_TYPE_SINGLE: "Add_Type_Single", SNS_ADD_TYPE_BOTH: "Add_Type_Both", SNS_DELETE_TYPE_SINGLE: "Delete_Type_Single", SNS_DELETE_TYPE_BOTH: "Delete_Type_Both", SNS_APPLICATION_TYPE_BOTH: "Pendency_Type_Both", SNS_APPLICATION_SENT_TO_ME: "Pendency_Type_ComeIn", SNS_APPLICATION_SENT_BY_ME: "Pendency_Type_SendOut", SNS_APPLICATION_AGREE: "Response_Action_Agree", SNS_APPLICATION_AGREE_AND_ADD: "Response_Action_AgreeAndAdd", SNS_CHECK_TYPE_BOTH: "CheckResult_Type_Both", SNS_CHECK_TYPE_SINGLE: "CheckResult_Type_Single", SNS_TYPE_NO_RELATION: "CheckResult_Type_NoRelation", SNS_TYPE_A_WITH_B: "CheckResult_Type_AWithB", SNS_TYPE_B_WITH_A: "CheckResult_Type_BWithA", SNS_TYPE_BOTH_WAY: "CheckResult_Type_BothWay", NET_STATE_CONNECTED: "connected", NET_STATE_CONNECTING: "connecting", NET_STATE_DISCONNECTED: "disconnected", MSG_AT_ALL: "__kImSDK_MesssageAtALL__", READ_ALL_C2C_MSG: "readAllC2CMessage", READ_ALL_GROUP_MSG: "readAllGroupMessage", READ_ALL_MSG: "readAllMessage", USER_STATUS_UNKNOWN: 0, USER_STATUS_ONLINE: 1, USER_STATUS_OFFLINE: 2, USER_STATUS_UNLOGINED: 3 }, hr = H2([].slice), fr = R2.Function, _r = H2([].concat), mr = H2([].join), vr = {}, Mr = function(e3, t3, n3) {
      if (!Ae2(vr, t3)) {
        for (var o3 = [], r3 = 0; r3 < t3; r3++)
          o3[r3] = "a[" + r3 + "]";
        vr[t3] = fr("C,a", "return new C(" + mr(o3, ",") + ")");
      }
      return vr[t3](e3, n3);
    }, yr = G2 ? fr.bind : function(e3) {
      var t3 = ve2(this), n3 = t3.prototype, o3 = hr(arguments, 1), r3 = function() {
        var n4 = _r(o3, hr(arguments));
        return this instanceof r3 ? Mr(t3, n4.length, n4) : t3.apply(e3, n4);
      };
      return te2(n3) && (r3.prototype = n3), r3;
    };
    nn({ target: "Function", proto: true, forced: Function.bind !== yr }, { bind: yr });
    var Ir = we2("species"), Tr = function(e3) {
      return le2 >= 51 || !O2(function() {
        var t3 = [];
        return (t3.constructor = {})[Ir] = function() {
          return { foo: 1 };
        }, 1 !== t3[e3](Boolean).foo;
      });
    }, Cr = Zn2.map, Er = Tr("map");
    nn({ target: "Array", proto: true, forced: !Er }, { map: function(e3) {
      return Cr(this, e3, arguments.length > 1 ? arguments[1] : void 0);
    } });
    var Sr = function() {
      function e3() {
        o2(this, e3), this.cache = [], this.options = null;
      }
      return a2(e3, [{ key: "use", value: function(e4) {
        if ("function" != typeof e4)
          throw "middleware must be a function";
        return this.cache.push(e4), this;
      } }, { key: "next", value: function(e4) {
        if (this.middlewares && this.middlewares.length > 0)
          return this.middlewares.shift().call(this, this.options, this.next.bind(this));
      } }, { key: "run", value: function(e4) {
        return this.middlewares = this.cache.map(function(e5) {
          return e5;
        }), this.options = e4, this.next();
      } }]), e3;
    }(), Dr = St2.EXISTS, Nr = nt2.f, Ar = Function.prototype, kr = H2(Ar.toString), Rr = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/, Or = H2(Rr.exec);
    L2 && !Dr && Nr(Ar, "name", { configurable: true, get: function() {
      try {
        return Or(Rr, kr(this))[1];
      } catch (BS) {
        return "";
      }
    } });
    var Lr = we2("isConcatSpreadable"), Gr = R2.TypeError, Pr = le2 >= 51 || !O2(function() {
      var e3 = [];
      return e3[Lr] = false, e3.concat()[0] !== e3;
    }), Ur = Tr("concat"), br = function(e3) {
      if (!te2(e3))
        return false;
      var t3 = e3[Lr];
      return void 0 !== t3 ? !!t3 : Fn2(e3);
    };
    nn({ target: "Array", proto: true, forced: !Pr || !Ur }, { concat: function(e3) {
      var t3, n3, o3, r3, a3, s3 = De2(this), i3 = Jn2(s3, 0), u3 = 0;
      for (t3 = -1, o3 = arguments.length; t3 < o3; t3++)
        if (br(a3 = -1 === t3 ? s3 : arguments[t3])) {
          if (u3 + (r3 = Ut(a3)) > 9007199254740991)
            throw Gr("Maximum allowed index exceeded");
          for (n3 = 0; n3 < r3; n3++, u3++)
            n3 in a3 && vo(i3, u3, a3[n3]);
        } else {
          if (u3 >= 9007199254740991)
            throw Gr("Maximum allowed index exceeded");
          vo(i3, u3++, a3);
        }
      return i3.length = u3, i3;
    } });
    var wr = D2(function(e3, t3) {
      var n3, o3, r3, a3, s3, i3, u3, c3, l3, d3, p3, g3, h3, f3, _3, m3, v3, M3;
      e3.exports = (n3 = "function" == typeof Promise, o3 = "object" == typeof self ? self : S2, r3 = "undefined" != typeof Symbol, a3 = "undefined" != typeof Map, s3 = "undefined" != typeof Set, i3 = "undefined" != typeof WeakMap, u3 = "undefined" != typeof WeakSet, c3 = "undefined" != typeof DataView, l3 = r3 && void 0 !== Symbol.iterator, d3 = r3 && void 0 !== Symbol.toStringTag, p3 = s3 && "function" == typeof Set.prototype.entries, g3 = a3 && "function" == typeof Map.prototype.entries, h3 = p3 && Object.getPrototypeOf((/* @__PURE__ */ new Set()).entries()), f3 = g3 && Object.getPrototypeOf((/* @__PURE__ */ new Map()).entries()), _3 = l3 && "function" == typeof Array.prototype[Symbol.iterator], m3 = _3 && Object.getPrototypeOf([][Symbol.iterator]()), v3 = l3 && "function" == typeof String.prototype[Symbol.iterator], M3 = v3 && Object.getPrototypeOf(""[Symbol.iterator]()), function(e4) {
        var t4 = typeof e4;
        if ("object" !== t4)
          return t4;
        if (null === e4)
          return "null";
        if (e4 === o3)
          return "global";
        if (Array.isArray(e4) && (false === d3 || !(Symbol.toStringTag in e4)))
          return "Array";
        if ("object" == typeof window && null !== window) {
          if ("object" == typeof window.location && e4 === window.location)
            return "Location";
          if ("object" == typeof window.document && e4 === window.document)
            return "Document";
          if ("object" == typeof window.navigator) {
            if ("object" == typeof window.navigator.mimeTypes && e4 === window.navigator.mimeTypes)
              return "MimeTypeArray";
            if ("object" == typeof window.navigator.plugins && e4 === window.navigator.plugins)
              return "PluginArray";
          }
          if (("function" == typeof window.HTMLElement || "object" == typeof window.HTMLElement) && e4 instanceof window.HTMLElement) {
            if ("BLOCKQUOTE" === e4.tagName)
              return "HTMLQuoteElement";
            if ("TD" === e4.tagName)
              return "HTMLTableDataCellElement";
            if ("TH" === e4.tagName)
              return "HTMLTableHeaderCellElement";
          }
        }
        var r4 = d3 && e4[Symbol.toStringTag];
        if ("string" == typeof r4)
          return r4;
        var l4 = Object.getPrototypeOf(e4);
        return l4 === RegExp.prototype ? "RegExp" : l4 === Date.prototype ? "Date" : n3 && l4 === Promise.prototype ? "Promise" : s3 && l4 === Set.prototype ? "Set" : a3 && l4 === Map.prototype ? "Map" : u3 && l4 === WeakSet.prototype ? "WeakSet" : i3 && l4 === WeakMap.prototype ? "WeakMap" : c3 && l4 === DataView.prototype ? "DataView" : a3 && l4 === f3 ? "Map Iterator" : s3 && l4 === h3 ? "Set Iterator" : _3 && l4 === m3 ? "Array Iterator" : v3 && l4 === M3 ? "String Iterator" : null === l4 ? "Object" : Object.prototype.toString.call(e4).slice(8, -1);
      });
    });
    nn({ target: "Array", stat: true }, { isArray: Fn2 });
    var Fr = function(e3, t3, n3) {
      var o3, r3;
      return tr && ee2(o3 = t3.constructor) && o3 !== n3 && te2(r3 = o3.prototype) && r3 !== n3.prototype && tr(e3, r3), e3;
    }, qr = H2(1 .valueOf), xr = Kt.f, Vr = Ye2.f, Br = nt2.f, Kr = vn.trim, Hr = R2.Number, jr = Hr.prototype, Wr = R2.TypeError, Yr = H2("".slice), $r = H2("".charCodeAt), zr = function(e3) {
      var t3 = xe2(e3, "number");
      return "bigint" == typeof t3 ? t3 : Jr(t3);
    }, Jr = function(e3) {
      var t3, n3, o3, r3, a3, s3, i3, u3, c3 = xe2(e3, "number");
      if (he2(c3))
        throw Wr("Cannot convert a Symbol value to a number");
      if ("string" == typeof c3 && c3.length > 2) {
        if (c3 = Kr(c3), 43 === (t3 = $r(c3, 0)) || 45 === t3) {
          if (88 === (n3 = $r(c3, 2)) || 120 === n3)
            return NaN;
        } else if (48 === t3) {
          switch ($r(c3, 1)) {
            case 66:
            case 98:
              o3 = 2, r3 = 49;
              break;
            case 79:
            case 111:
              o3 = 8, r3 = 55;
              break;
            default:
              return +c3;
          }
          for (s3 = (a3 = Yr(c3, 2)).length, i3 = 0; i3 < s3; i3++)
            if ((u3 = $r(a3, i3)) < 48 || u3 > r3)
              return NaN;
          return parseInt(a3, o3);
        }
      }
      return +c3;
    };
    if (en("Number", !Hr(" 0o1") || !Hr("0b1") || Hr("+0x1"))) {
      for (var Xr, Qr = function(e3) {
        var t3 = arguments.length < 1 ? 0 : Hr(zr(e3)), n3 = this;
        return re2(jr, n3) && O2(function() {
          qr(n3);
        }) ? Fr(Object(t3), n3, Qr) : t3;
      }, Zr = L2 ? xr(Hr) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","), ea = 0; Zr.length > ea; ea++)
        Ae2(Hr, Xr = Zr[ea]) && !Ae2(Qr, Xr) && Br(Qr, Xr, Vr(Hr, Xr));
      Qr.prototype = jr, jr.constructor = Qr, Dt(R2, "Number", Qr);
    }
    var ta = O2(function() {
      Ko(1);
    });
    nn({ target: "Object", stat: true, forced: ta, sham: !qo }, { getPrototypeOf: function(e3) {
      return Ko(De2(e3));
    } });
    var na, oa, ra = function() {
      var e3 = Xe2(this), t3 = "";
      return e3.global && (t3 += "g"), e3.ignoreCase && (t3 += "i"), e3.multiline && (t3 += "m"), e3.dotAll && (t3 += "s"), e3.unicode && (t3 += "u"), e3.sticky && (t3 += "y"), t3;
    }, aa = R2.RegExp, sa = O2(function() {
      var e3 = aa("a", "y");
      return e3.lastIndex = 2, null != e3.exec("abcd");
    }), ia = sa || O2(function() {
      return !aa("a", "y").sticky;
    }), ua = { BROKEN_CARET: sa || O2(function() {
      var e3 = aa("^r", "gy");
      return e3.lastIndex = 2, null != e3.exec("str");
    }), MISSED_STICKY: ia, UNSUPPORTED_Y: sa }, ca = R2.RegExp, la = O2(function() {
      var e3 = ca(".", "s");
      return !(e3.dotAll && e3.exec("\n") && "s" === e3.flags);
    }), da = R2.RegExp, pa = O2(function() {
      var e3 = da("(?<a>b)", "g");
      return "b" !== e3.exec("b").groups.a || "bc" !== "b".replace(e3, "$<a>c");
    }), ga = It2.get, ha = Ee2("native-string-replace", String.prototype.replace), fa = RegExp.prototype.exec, _a2 = fa, ma = H2("".charAt), va = H2("".indexOf), Ma = H2("".replace), ya = H2("".slice), Ia = (oa = /b*/g, U2(fa, na = /a/, "a"), U2(fa, oa, "a"), 0 !== na.lastIndex || 0 !== oa.lastIndex), Ta = ua.BROKEN_CARET, Ca = void 0 !== /()??/.exec("")[1];
    (Ia || Ca || Ta || la || pa) && (_a2 = function(e3) {
      var t3, n3, o3, r3, a3, s3, i3, u3 = this, c3 = ga(u3), l3 = dn(e3), d3 = c3.raw;
      if (d3)
        return d3.lastIndex = u3.lastIndex, t3 = U2(_a2, d3, l3), u3.lastIndex = d3.lastIndex, t3;
      var p3 = c3.groups, g3 = Ta && u3.sticky, h3 = U2(ra, u3), f3 = u3.source, _3 = 0, m3 = l3;
      if (g3 && (h3 = Ma(h3, "y", ""), -1 === va(h3, "g") && (h3 += "g"), m3 = ya(l3, u3.lastIndex), u3.lastIndex > 0 && (!u3.multiline || u3.multiline && "\n" !== ma(l3, u3.lastIndex - 1)) && (f3 = "(?: " + f3 + ")", m3 = " " + m3, _3++), n3 = new RegExp("^(?:" + f3 + ")", h3)), Ca && (n3 = new RegExp("^" + f3 + "$(?!\\s)", h3)), Ia && (o3 = u3.lastIndex), r3 = U2(fa, g3 ? n3 : u3, m3), g3 ? r3 ? (r3.input = ya(r3.input, _3), r3[0] = ya(r3[0], _3), r3.index = u3.lastIndex, u3.lastIndex += r3[0].length) : u3.lastIndex = 0 : Ia && r3 && (u3.lastIndex = u3.global ? r3.index + r3[0].length : o3), Ca && r3 && r3.length > 1 && U2(ha, r3[0], n3, function() {
        for (a3 = 1; a3 < arguments.length - 2; a3++)
          void 0 === arguments[a3] && (r3[a3] = void 0);
      }), r3 && p3)
        for (r3.groups = s3 = Un2(null), a3 = 0; a3 < p3.length; a3++)
          s3[(i3 = p3[a3])[0]] = r3[i3[1]];
      return r3;
    });
    var Ea = _a2;
    nn({ target: "RegExp", proto: true, forced: /./.exec !== Ea }, { exec: Ea });
    var Sa = Date.prototype, Da = H2(Sa.toString), Na = H2(Sa.getTime);
    "Invalid Date" != String(new Date(NaN)) && Dt(Sa, "toString", function() {
      var e3 = Na(this);
      return e3 == e3 ? Da(this) : "Invalid Date";
    });
    var Aa = St2.PROPER, ka = RegExp.prototype, Ra = ka.toString, Oa = H2(ra), La = O2(function() {
      return "/a/b" != Ra.call({ source: "a", flags: "b" });
    }), Ga = Aa && "toString" != Ra.name;
    (La || Ga) && Dt(RegExp.prototype, "toString", function() {
      var e3 = Xe2(this), t3 = dn(e3.source), n3 = e3.flags;
      return "/" + t3 + "/" + dn(void 0 === n3 && re2(ka, e3) && !("flags" in ka) ? Oa(e3) : n3);
    }, { unsafe: true });
    var Pa = we2("species"), Ua = RegExp.prototype, ba = function(e3, t3, n3, o3) {
      var r3 = we2(e3), a3 = !O2(function() {
        var t4 = {};
        return t4[r3] = function() {
          return 7;
        }, 7 != ""[e3](t4);
      }), s3 = a3 && !O2(function() {
        var t4 = false, n4 = /a/;
        return "split" === e3 && ((n4 = {}).constructor = {}, n4.constructor[Pa] = function() {
          return n4;
        }, n4.flags = "", n4[r3] = /./[r3]), n4.exec = function() {
          return t4 = true, null;
        }, n4[r3](""), !t4;
      });
      if (!a3 || !s3 || n3) {
        var i3 = H2(/./[r3]), u3 = t3(r3, ""[e3], function(e4, t4, n4, o4, r4) {
          var s4 = H2(e4), u4 = t4.exec;
          return u4 === Ea || u4 === Ua.exec ? a3 && !r4 ? { done: true, value: i3(t4, n4, o4) } : { done: true, value: s4(n4, t4, o4) } : { done: false };
        });
        Dt(String.prototype, e3, u3[0]), Dt(Ua, r3, u3[1]);
      }
      o3 && ot2(Ua[r3], "sham", true);
    }, wa = Fo.charAt, Fa = function(e3, t3, n3) {
      return t3 + (n3 ? wa(e3, t3).length : 1);
    }, qa = R2.TypeError, xa = function(e3, t3) {
      var n3 = e3.exec;
      if (ee2(n3)) {
        var o3 = U2(n3, e3, t3);
        return null !== o3 && Xe2(o3), o3;
      }
      if ("RegExp" === Y2(e3))
        return U2(Ea, e3, t3);
      throw qa("RegExp#exec called on incompatible receiver");
    };
    ba("match", function(e3, t3, n3) {
      return [function(t4) {
        var n4 = Q2(this), o3 = null == t4 ? void 0 : Me2(t4, e3);
        return o3 ? U2(o3, t4, n4) : new RegExp(t4)[e3](dn(n4));
      }, function(e4) {
        var o3 = Xe2(this), r3 = dn(e4), a3 = n3(t3, o3, r3);
        if (a3.done)
          return a3.value;
        if (!o3.global)
          return xa(o3, r3);
        var s3 = o3.unicode;
        o3.lastIndex = 0;
        for (var i3, u3 = [], c3 = 0; null !== (i3 = xa(o3, r3)); ) {
          var l3 = dn(i3[0]);
          u3[c3] = l3, "" === l3 && (o3.lastIndex = Fa(r3, Pt2(o3.lastIndex), s3)), c3++;
        }
        return 0 === c3 ? null : u3;
      }];
    });
    var Va = R2.Date, Ba = H2(Va.prototype.getTime);
    nn({ target: "Date", stat: true }, { now: function() {
      return Ba(new Va());
    } });
    var Ka = we2("unscopables"), Ha = Array.prototype;
    null == Ha[Ka] && nt2.f(Ha, Ka, { configurable: true, value: Un2(null) });
    var ja = function(e3) {
      Ha[Ka][e3] = true;
    }, Wa = wt2.includes;
    nn({ target: "Array", proto: true }, { includes: function(e3) {
      return Wa(this, e3, arguments.length > 1 ? arguments[1] : void 0);
    } }), ja("includes");
    var Ya = we2("match"), $a = function(e3) {
      var t3;
      return te2(e3) && (void 0 !== (t3 = e3[Ya]) ? !!t3 : "RegExp" == Y2(e3));
    }, za = R2.TypeError, Ja = function(e3) {
      if ($a(e3))
        throw za("The method doesn't accept regular expressions");
      return e3;
    }, Xa = we2("match"), Qa = function(e3) {
      var t3 = /./;
      try {
        "/./"[e3](t3);
      } catch (n3) {
        try {
          return t3[Xa] = false, "/./"[e3](t3);
        } catch (o3) {
        }
      }
      return false;
    }, Za = H2("".indexOf);
    nn({ target: "String", proto: true, forced: !Qa("includes") }, { includes: function(e3) {
      return !!~Za(dn(Q2(this)), dn(Ja(e3)), arguments.length > 1 ? arguments[1] : void 0);
    } });
    var es2 = R2.RangeError, ts2 = H2(function(e3) {
      var t3 = dn(Q2(this)), n3 = "", o3 = kt2(e3);
      if (o3 < 0 || Infinity == o3)
        throw es2("Wrong number of repetitions");
      for (; o3 > 0; (o3 >>>= 1) && (t3 += t3))
        1 & o3 && (n3 += t3);
      return n3;
    }), ns2 = H2("".slice), os2 = Math.ceil, rs2 = function(e3) {
      return function(t3, n3, o3) {
        var r3, a3, s3 = dn(Q2(t3)), i3 = Pt2(n3), u3 = s3.length, c3 = void 0 === o3 ? " " : dn(o3);
        return i3 <= u3 || "" == c3 ? s3 : ((a3 = ts2(c3, os2((r3 = i3 - u3) / c3.length))).length > r3 && (a3 = ns2(a3, 0, r3)), e3 ? s3 + a3 : a3 + s3);
      };
    }, as2 = { start: rs2(false), end: rs2(true) }.start, ss2 = R2.RangeError, is2 = Math.abs, us2 = Date.prototype, cs2 = us2.toISOString, ls2 = H2(us2.getTime), ds2 = H2(us2.getUTCDate), ps2 = H2(us2.getUTCFullYear), gs2 = H2(us2.getUTCHours), hs2 = H2(us2.getUTCMilliseconds), fs2 = H2(us2.getUTCMinutes), _s2 = H2(us2.getUTCMonth), ms2 = H2(us2.getUTCSeconds), vs2 = O2(function() {
      return "0385-07-25T07:06:39.999Z" != cs2.call(new Date(-50000000000001));
    }) || !O2(function() {
      cs2.call(new Date(NaN));
    }) ? function() {
      if (!isFinite(ls2(this)))
        throw ss2("Invalid time value");
      var e3 = ps2(this), t3 = hs2(this), n3 = e3 < 0 ? "-" : e3 > 9999 ? "+" : "";
      return n3 + as2(is2(e3), n3 ? 6 : 4, 0) + "-" + as2(_s2(this) + 1, 2, 0) + "-" + as2(ds2(this), 2, 0) + "T" + as2(gs2(this), 2, 0) + ":" + as2(fs2(this), 2, 0) + ":" + as2(ms2(this), 2, 0) + "." + as2(t3, 3, 0) + "Z";
    } : cs2;
    nn({ target: "Date", proto: true, forced: Date.prototype.toISOString !== vs2 }, { toISOString: vs2 });
    var Ms = Function.prototype, ys2 = Ms.apply, Is2 = Ms.call, Ts2 = "object" == typeof Reflect && Reflect.apply || (G2 ? Is2.bind(ys2) : function() {
      return Is2.apply(ys2, arguments);
    }), Cs2 = Math.floor, Es2 = H2("".charAt), Ss2 = H2("".replace), Ds = H2("".slice), Ns = /\$([$&'`]|\d{1,2}|<[^>]*>)/g, As2 = /\$([$&'`]|\d{1,2})/g, ks2 = function(e3, t3, n3, o3, r3, a3) {
      var s3 = n3 + e3.length, i3 = o3.length, u3 = As2;
      return void 0 !== r3 && (r3 = De2(r3), u3 = Ns), Ss2(a3, u3, function(a4, u4) {
        var c3;
        switch (Es2(u4, 0)) {
          case "$":
            return "$";
          case "&":
            return e3;
          case "`":
            return Ds(t3, 0, n3);
          case "'":
            return Ds(t3, s3);
          case "<":
            c3 = r3[Ds(u4, 1, -1)];
            break;
          default:
            var l3 = +u4;
            if (0 === l3)
              return a4;
            if (l3 > i3) {
              var d3 = Cs2(l3 / 10);
              return 0 === d3 ? a4 : d3 <= i3 ? void 0 === o3[d3 - 1] ? Es2(u4, 1) : o3[d3 - 1] + Es2(u4, 1) : a4;
            }
            c3 = o3[l3 - 1];
        }
        return void 0 === c3 ? "" : c3;
      });
    }, Rs = we2("replace"), Os = Math.max, Ls = Math.min, Gs = H2([].concat), Ps2 = H2([].push), Us = H2("".indexOf), bs2 = H2("".slice), ws2 = "$0" === "a".replace(/./, "$0"), Fs = !!/./[Rs] && "" === /./[Rs]("a", "$0");
    ba("replace", function(e3, t3, n3) {
      var o3 = Fs ? "$" : "$0";
      return [function(e4, n4) {
        var o4 = Q2(this), r3 = null == e4 ? void 0 : Me2(e4, Rs);
        return r3 ? U2(r3, e4, o4, n4) : U2(t3, dn(o4), e4, n4);
      }, function(e4, r3) {
        var a3 = Xe2(this), s3 = dn(e4);
        if ("string" == typeof r3 && -1 === Us(r3, o3) && -1 === Us(r3, "$<")) {
          var i3 = n3(t3, a3, s3, r3);
          if (i3.done)
            return i3.value;
        }
        var u3 = ee2(r3);
        u3 || (r3 = dn(r3));
        var c3 = a3.global;
        if (c3) {
          var l3 = a3.unicode;
          a3.lastIndex = 0;
        }
        for (var d3 = []; ; ) {
          var p3 = xa(a3, s3);
          if (null === p3)
            break;
          if (Ps2(d3, p3), !c3)
            break;
          "" === dn(p3[0]) && (a3.lastIndex = Fa(s3, Pt2(a3.lastIndex), l3));
        }
        for (var g3, h3 = "", f3 = 0, _3 = 0; _3 < d3.length; _3++) {
          for (var m3 = dn((p3 = d3[_3])[0]), v3 = Os(Ls(kt2(p3.index), s3.length), 0), M3 = [], y3 = 1; y3 < p3.length; y3++)
            Ps2(M3, void 0 === (g3 = p3[y3]) ? g3 : String(g3));
          var I3 = p3.groups;
          if (u3) {
            var T3 = Gs([m3], M3, v3, s3);
            void 0 !== I3 && Ps2(T3, I3);
            var C3 = dn(Ts2(r3, void 0, T3));
          } else
            C3 = ks2(m3, s3, v3, M3, I3, r3);
          v3 >= f3 && (h3 += bs2(s3, f3, v3) + C3, f3 = v3 + m3.length);
        }
        return h3 + bs2(s3, f3);
      }];
    }, !!O2(function() {
      var e3 = /./;
      return e3.exec = function() {
        var e4 = [];
        return e4.groups = { a: "7" }, e4;
      }, "7" !== "".replace(e3, "$<a>");
    }) || !ws2 || Fs);
    var qs = nt2.f, xs = It2.set, Vs = It2.getterFor("Array Iterator"), Bs = ur(Array, "Array", function(e3, t3) {
      xs(this, { type: "Array Iterator", target: Z2(e3), index: 0, kind: t3 });
    }, function() {
      var e3 = Vs(this), t3 = e3.target, n3 = e3.kind, o3 = e3.index++;
      return !t3 || o3 >= t3.length ? (e3.target = void 0, { value: void 0, done: true }) : "keys" == n3 ? { value: o3, done: false } : "values" == n3 ? { value: t3[o3], done: false } : { value: [o3, t3[o3]], done: false };
    }, "values"), Ks = ho.Arguments = ho.Array;
    if (ja("keys"), ja("values"), ja("entries"), L2 && "values" !== Ks.name)
      try {
        qs(Ks, "name", { value: "values" });
      } catch (BS) {
      }
    var Hs = we2("iterator"), js = we2("toStringTag"), Ws = Bs.values, Ys = function(e3, t3) {
      if (e3) {
        if (e3[Hs] !== Ws)
          try {
            ot2(e3, Hs, Ws);
          } catch (BS) {
            e3[Hs] = Ws;
          }
        if (e3[js] || ot2(e3, js, t3), ro[t3]) {
          for (var n3 in Bs)
            if (e3[n3] !== Bs[n3])
              try {
                ot2(e3, n3, Bs[n3]);
              } catch (BS) {
                e3[n3] = Bs[n3];
              }
        }
      }
    };
    for (var $s in ro)
      Ys(R2[$s] && R2[$s].prototype, $s);
    Ys(io, "DOMTokenList");
    var zs = Tr("slice"), Js = we2("species"), Xs = R2.Array, Qs = Math.max;
    nn({ target: "Array", proto: true, forced: !zs }, { slice: function(e3, t3) {
      var n3, o3, r3, a3 = Z2(this), s3 = Ut(a3), i3 = Lt(e3, s3), u3 = Lt(void 0 === t3 ? s3 : t3, s3);
      if (Fn2(a3) && (n3 = a3.constructor, (Yn2(n3) && (n3 === Xs || Fn2(n3.prototype)) || te2(n3) && null === (n3 = n3[Js])) && (n3 = void 0), n3 === Xs || void 0 === n3))
        return hr(a3, i3, u3);
      for (o3 = new (void 0 === n3 ? Xs : n3)(Qs(u3 - i3, 0)), r3 = 0; i3 < u3; i3++, r3++)
        i3 in a3 && vo(o3, r3, a3[i3]);
      return o3.length = r3, o3;
    } });
    var Zs = H2([].join), ei = J2 != Object, ti = eo("join", ",");
    nn({ target: "Array", proto: true, forced: ei || !ti }, { join: function(e3) {
      return Zs(Z2(this), void 0 === e3 ? "," : e3);
    } });
    var ni = wt2.indexOf, oi = H2([].indexOf), ri = !!oi && 1 / oi([1], 1, -0) < 0, ai = eo("indexOf");
    nn({ target: "Array", proto: true, forced: ri || !ai }, { indexOf: function(e3) {
      var t3 = arguments.length > 1 ? arguments[1] : void 0;
      return ri ? oi(this, e3, t3) || 0 : ni(this, e3, t3);
    } });
    var si = R2.Array, ii = Math.max, ui = function(e3, t3, n3) {
      for (var o3 = Ut(e3), r3 = Lt(t3, o3), a3 = Lt(void 0 === n3 ? o3 : n3, o3), s3 = si(ii(a3 - r3, 0)), i3 = 0; r3 < a3; r3++, i3++)
        vo(s3, i3, e3[r3]);
      return s3.length = i3, s3;
    }, ci = Kt.f, li = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], di = { f: function(e3) {
      return li && "Window" == Y2(e3) ? function(e4) {
        try {
          return ci(e4);
        } catch (BS) {
          return ui(li);
        }
      }(e3) : ci(Z2(e3));
    } }, pi = di.f, gi = O2(function() {
      return !Object.getOwnPropertyNames(1);
    });
    nn({ target: "Object", stat: true, forced: gi }, { getOwnPropertyNames: pi });
    var hi = Zn2.find, fi = true;
    "find" in [] && Array(1).find(function() {
      fi = false;
    }), nn({ target: "Array", proto: true, forced: fi }, { find: function(e3) {
      return hi(this, e3, arguments.length > 1 ? arguments[1] : void 0);
    } }), ja("find");
    var _i, mi = Ye2.f, vi = H2("".startsWith), Mi = H2("".slice), yi = Math.min, Ii = Qa("startsWith"), Ti = !(Ii || (_i = mi(String.prototype, "startsWith"), !_i || _i.writable));
    nn({ target: "String", proto: true, forced: !Ti && !Ii }, { startsWith: function(e3) {
      var t3 = dn(Q2(this));
      Ja(e3);
      var n3 = Pt2(yi(arguments.length > 1 ? arguments[1] : void 0, t3.length)), o3 = dn(e3);
      return vi ? vi(t3, o3, n3) : Mi(t3, n3, n3 + o3.length) === o3;
    } });
    var Ci, Ei, Si, Di, Ni = R2.Promise, Ai = function(e3, t3, n3) {
      for (var o3 in t3)
        Dt(e3, o3, t3[o3], n3);
      return e3;
    }, ki = we2("species"), Ri = function(e3) {
      var t3 = oe2(e3), n3 = nt2.f;
      L2 && t3 && !t3[ki] && n3(t3, ki, { configurable: true, get: function() {
        return this;
      } });
    }, Oi = R2.TypeError, Li = function(e3, t3) {
      if (re2(t3, e3))
        return e3;
      throw Oi("Incorrect invocation");
    }, Gi = R2.TypeError, Pi = function(e3, t3) {
      this.stopped = e3, this.result = t3;
    }, Ui = Pi.prototype, bi = function(e3, t3, n3) {
      var o3, r3, a3, s3, i3, u3, c3, l3 = n3 && n3.that, d3 = !(!n3 || !n3.AS_ENTRIES), p3 = !(!n3 || !n3.IS_ITERATOR), g3 = !(!n3 || !n3.INTERRUPTED), h3 = wn2(t3, l3), f3 = function(e4) {
        return o3 && po(o3, "normal", e4), new Pi(true, e4);
      }, _3 = function(e4) {
        return d3 ? (Xe2(e4), g3 ? h3(e4[0], e4[1], f3) : h3(e4[0], e4[1])) : g3 ? h3(e4, f3) : h3(e4);
      };
      if (p3)
        o3 = e3;
      else {
        if (!(r3 = yo(e3)))
          throw Gi(_e2(e3) + " is not iterable");
        if (mo(r3)) {
          for (a3 = 0, s3 = Ut(e3); s3 > a3; a3++)
            if ((i3 = _3(e3[a3])) && re2(Ui, i3))
              return i3;
          return new Pi(false);
        }
        o3 = To(e3, r3);
      }
      for (u3 = o3.next; !(c3 = U2(u3, o3)).done; ) {
        try {
          i3 = _3(c3.value);
        } catch (BS) {
          po(o3, "throw", BS);
        }
        if ("object" == typeof i3 && i3 && re2(Ui, i3))
          return i3;
      }
      return new Pi(false);
    }, wi = R2.TypeError, Fi = function(e3) {
      if (Yn2(e3))
        return e3;
      throw wi(_e2(e3) + " is not a constructor");
    }, qi = we2("species"), xi = function(e3, t3) {
      var n3, o3 = Xe2(e3).constructor;
      return void 0 === o3 || null == (n3 = Xe2(o3)[qi]) ? t3 : Fi(n3);
    }, Vi = R2.TypeError, Bi = function(e3, t3) {
      if (e3 < t3)
        throw Vi("Not enough arguments");
      return e3;
    }, Ki = /(?:ipad|iphone|ipod).*applewebkit/i.test(ae2), Hi = "process" == Y2(R2.process), ji = R2.setImmediate, Wi = R2.clearImmediate, Yi = R2.process, $i = R2.Dispatch, zi = R2.Function, Ji = R2.MessageChannel, Xi = R2.String, Qi = 0, Zi = {};
    try {
      Ci = R2.location;
    } catch (BS) {
    }
    var eu = function(e3) {
      if (Ae2(Zi, e3)) {
        var t3 = Zi[e3];
        delete Zi[e3], t3();
      }
    }, tu = function(e3) {
      return function() {
        eu(e3);
      };
    }, nu = function(e3) {
      eu(e3.data);
    }, ou = function(e3) {
      R2.postMessage(Xi(e3), Ci.protocol + "//" + Ci.host);
    };
    ji && Wi || (ji = function(e3) {
      Bi(arguments.length, 1);
      var t3 = ee2(e3) ? e3 : zi(e3), n3 = hr(arguments, 1);
      return Zi[++Qi] = function() {
        Ts2(t3, void 0, n3);
      }, Ei(Qi), Qi;
    }, Wi = function(e3) {
      delete Zi[e3];
    }, Hi ? Ei = function(e3) {
      Yi.nextTick(tu(e3));
    } : $i && $i.now ? Ei = function(e3) {
      $i.now(tu(e3));
    } : Ji && !Ki ? (Di = (Si = new Ji()).port2, Si.port1.onmessage = nu, Ei = wn2(Di.postMessage, Di)) : R2.addEventListener && ee2(R2.postMessage) && !R2.importScripts && Ci && "file:" !== Ci.protocol && !O2(ou) ? (Ei = ou, R2.addEventListener("message", nu, false)) : Ei = "onreadystatechange" in He2("script") ? function(e3) {
      kn.appendChild(He2("script")).onreadystatechange = function() {
        kn.removeChild(this), eu(e3);
      };
    } : function(e3) {
      setTimeout(tu(e3), 0);
    });
    var ru, au, su, iu, uu, cu, lu, du, pu = { set: ji, clear: Wi }, gu = /ipad|iphone|ipod/i.test(ae2) && void 0 !== R2.Pebble, hu = /web0s(?!.*chrome)/i.test(ae2), fu = Ye2.f, _u = pu.set, mu = R2.MutationObserver || R2.WebKitMutationObserver, vu = R2.document, Mu = R2.process, yu = R2.Promise, Iu = fu(R2, "queueMicrotask"), Tu = Iu && Iu.value;
    Tu || (ru = function() {
      var e3, t3;
      for (Hi && (e3 = Mu.domain) && e3.exit(); au; ) {
        t3 = au.fn, au = au.next;
        try {
          t3();
        } catch (BS) {
          throw au ? iu() : su = void 0, BS;
        }
      }
      su = void 0, e3 && e3.enter();
    }, Ki || Hi || hu || !mu || !vu ? !gu && yu && yu.resolve ? ((lu = yu.resolve(void 0)).constructor = yu, du = wn2(lu.then, lu), iu = function() {
      du(ru);
    }) : Hi ? iu = function() {
      Mu.nextTick(ru);
    } : (_u = wn2(_u, R2), iu = function() {
      _u(ru);
    }) : (uu = true, cu = vu.createTextNode(""), new mu(ru).observe(cu, { characterData: true }), iu = function() {
      cu.data = uu = !uu;
    }));
    var Cu = Tu || function(e3) {
      var t3 = { fn: e3, next: void 0 };
      su && (su.next = t3), au || (au = t3, iu()), su = t3;
    }, Eu = function(e3) {
      var t3, n3;
      this.promise = new e3(function(e4, o3) {
        if (void 0 !== t3 || void 0 !== n3)
          throw TypeError("Bad Promise constructor");
        t3 = e4, n3 = o3;
      }), this.resolve = ve2(t3), this.reject = ve2(n3);
    }, Su = { f: function(e3) {
      return new Eu(e3);
    } }, Du = function(e3, t3) {
      if (Xe2(e3), te2(t3) && t3.constructor === e3)
        return t3;
      var n3 = Su.f(e3);
      return (0, n3.resolve)(t3), n3.promise;
    }, Nu = function(e3) {
      try {
        return { error: false, value: e3() };
      } catch (BS) {
        return { error: true, value: BS };
      }
    }, Au = function() {
      this.head = null, this.tail = null;
    };
    Au.prototype = { add: function(e3) {
      var t3 = { item: e3, next: null };
      this.head ? this.tail.next = t3 : this.head = t3, this.tail = t3;
    }, get: function() {
      var e3 = this.head;
      if (e3)
        return this.head = e3.next, this.tail === e3 && (this.tail = null), e3.item;
    } };
    var ku, Ru, Ou, Lu, Gu = Au, Pu = "object" == typeof window, Uu = pu.set, bu = we2("species"), wu = "Promise", Fu = It2.getterFor(wu), qu = It2.set, xu = It2.getterFor(wu), Vu = Ni && Ni.prototype, Bu = Ni, Ku = Vu, Hu = R2.TypeError, ju = R2.document, Wu = R2.process, Yu = Su.f, $u = Yu, zu = !!(ju && ju.createEvent && R2.dispatchEvent), Ju = ee2(R2.PromiseRejectionEvent), Xu = false, Qu = en(wu, function() {
      var e3 = ut2(Bu), t3 = e3 !== String(Bu);
      if (!t3 && 66 === le2)
        return true;
      if (le2 >= 51 && /native code/.test(e3))
        return false;
      var n3 = new Bu(function(e4) {
        e4(1);
      }), o3 = function(e4) {
        e4(function() {
        }, function() {
        });
      };
      return (n3.constructor = {})[bu] = o3, !(Xu = n3.then(function() {
      }) instanceof o3) || !t3 && Pu && !Ju;
    }), Zu = Qu || !ko(function(e3) {
      Bu.all(e3).catch(function() {
      });
    }), ec = function(e3) {
      var t3;
      return !(!te2(e3) || !ee2(t3 = e3.then)) && t3;
    }, tc = function(e3, t3) {
      var n3, o3, r3, a3 = t3.value, s3 = 1 == t3.state, i3 = s3 ? e3.ok : e3.fail, u3 = e3.resolve, c3 = e3.reject, l3 = e3.domain;
      try {
        i3 ? (s3 || (2 === t3.rejection && sc(t3), t3.rejection = 1), true === i3 ? n3 = a3 : (l3 && l3.enter(), n3 = i3(a3), l3 && (l3.exit(), r3 = true)), n3 === e3.promise ? c3(Hu("Promise-chain cycle")) : (o3 = ec(n3)) ? U2(o3, n3, u3, c3) : u3(n3)) : c3(a3);
      } catch (BS) {
        l3 && !r3 && l3.exit(), c3(BS);
      }
    }, nc = function(e3, t3) {
      e3.notified || (e3.notified = true, Cu(function() {
        for (var n3, o3 = e3.reactions; n3 = o3.get(); )
          tc(n3, e3);
        e3.notified = false, t3 && !e3.rejection && rc(e3);
      }));
    }, oc = function(e3, t3, n3) {
      var o3, r3;
      zu ? ((o3 = ju.createEvent("Event")).promise = t3, o3.reason = n3, o3.initEvent(e3, false, true), R2.dispatchEvent(o3)) : o3 = { promise: t3, reason: n3 }, !Ju && (r3 = R2["on" + e3]) ? r3(o3) : "unhandledrejection" === e3 && function(e4, t4) {
        var n4 = R2.console;
        n4 && n4.error && (1 == arguments.length ? n4.error(e4) : n4.error(e4, t4));
      }("Unhandled promise rejection", n3);
    }, rc = function(e3) {
      U2(Uu, R2, function() {
        var t3, n3 = e3.facade, o3 = e3.value;
        if (ac(e3) && (t3 = Nu(function() {
          Hi ? Wu.emit("unhandledRejection", o3, n3) : oc("unhandledrejection", n3, o3);
        }), e3.rejection = Hi || ac(e3) ? 2 : 1, t3.error))
          throw t3.value;
      });
    }, ac = function(e3) {
      return 1 !== e3.rejection && !e3.parent;
    }, sc = function(e3) {
      U2(Uu, R2, function() {
        var t3 = e3.facade;
        Hi ? Wu.emit("rejectionHandled", t3) : oc("rejectionhandled", t3, e3.value);
      });
    }, ic = function(e3, t3, n3) {
      return function(o3) {
        e3(t3, o3, n3);
      };
    }, uc = function(e3, t3, n3) {
      e3.done || (e3.done = true, n3 && (e3 = n3), e3.value = t3, e3.state = 2, nc(e3, true));
    }, cc = function(e3, t3, n3) {
      if (!e3.done) {
        e3.done = true, n3 && (e3 = n3);
        try {
          if (e3.facade === t3)
            throw Hu("Promise can't be resolved itself");
          var o3 = ec(t3);
          o3 ? Cu(function() {
            var n4 = { done: false };
            try {
              U2(o3, t3, ic(cc, n4, e3), ic(uc, n4, e3));
            } catch (BS) {
              uc(n4, BS, e3);
            }
          }) : (e3.value = t3, e3.state = 1, nc(e3, false));
        } catch (BS) {
          uc({ done: false }, BS, e3);
        }
      }
    };
    if (Qu && (Ku = (Bu = function(e3) {
      Li(this, Ku), ve2(e3), U2(ku, this);
      var t3 = Fu(this);
      try {
        e3(ic(cc, t3), ic(uc, t3));
      } catch (BS) {
        uc(t3, BS);
      }
    }).prototype, (ku = function(e3) {
      qu(this, { type: wu, done: false, notified: false, parent: false, reactions: new Gu(), rejection: false, state: 0, value: void 0 });
    }).prototype = Ai(Ku, { then: function(e3, t3) {
      var n3 = xu(this), o3 = Yu(xi(this, Bu));
      return n3.parent = true, o3.ok = !ee2(e3) || e3, o3.fail = ee2(t3) && t3, o3.domain = Hi ? Wu.domain : void 0, 0 == n3.state ? n3.reactions.add(o3) : Cu(function() {
        tc(o3, n3);
      }), o3.promise;
    }, catch: function(e3) {
      return this.then(void 0, e3);
    } }), Ru = function() {
      var e3 = new ku(), t3 = Fu(e3);
      this.promise = e3, this.resolve = ic(cc, t3), this.reject = ic(uc, t3);
    }, Su.f = Yu = function(e3) {
      return e3 === Bu || e3 === Ou ? new Ru(e3) : $u(e3);
    }, ee2(Ni) && Vu !== Object.prototype)) {
      Lu = Vu.then, Xu || (Dt(Vu, "then", function(e3, t3) {
        var n3 = this;
        return new Bu(function(e4, t4) {
          U2(Lu, n3, e4, t4);
        }).then(e3, t3);
      }, { unsafe: true }), Dt(Vu, "catch", Ku.catch, { unsafe: true }));
      try {
        delete Vu.constructor;
      } catch (BS) {
      }
      tr && tr(Vu, Ku);
    }
    nn({ global: true, wrap: true, forced: Qu }, { Promise: Bu }), zo(Bu, wu, false), Ri(wu), Ou = oe2(wu), nn({ target: wu, stat: true, forced: Qu }, { reject: function(e3) {
      var t3 = Yu(this);
      return U2(t3.reject, void 0, e3), t3.promise;
    } }), nn({ target: wu, stat: true, forced: Qu }, { resolve: function(e3) {
      return Du(this, e3);
    } }), nn({ target: wu, stat: true, forced: Zu }, { all: function(e3) {
      var t3 = this, n3 = Yu(t3), o3 = n3.resolve, r3 = n3.reject, a3 = Nu(function() {
        var n4 = ve2(t3.resolve), a4 = [], s3 = 0, i3 = 1;
        bi(e3, function(e4) {
          var u3 = s3++, c3 = false;
          i3++, U2(n4, t3, e4).then(function(e5) {
            c3 || (c3 = true, a4[u3] = e5, --i3 || o3(a4));
          }, r3);
        }), --i3 || o3(a4);
      });
      return a3.error && r3(a3.value), n3.promise;
    }, race: function(e3) {
      var t3 = this, n3 = Yu(t3), o3 = n3.reject, r3 = Nu(function() {
        var r4 = ve2(t3.resolve);
        bi(e3, function(e4) {
          U2(r4, t3, e4).then(n3.resolve, o3);
        });
      });
      return r3.error && o3(r3.value), n3.promise;
    } });
    var lc = ua.UNSUPPORTED_Y, dc = Math.min, pc = [].push, gc = H2(/./.exec), hc = H2(pc), fc = H2("".slice);
    ba("split", function(e3, t3, n3) {
      var o3;
      return o3 = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || ".".split(/()()/).length > 1 || "".split(/.?/).length ? function(e4, n4) {
        var o4 = dn(Q2(this)), r3 = void 0 === n4 ? 4294967295 : n4 >>> 0;
        if (0 === r3)
          return [];
        if (void 0 === e4)
          return [o4];
        if (!$a(e4))
          return U2(t3, o4, e4, r3);
        for (var a3, s3, i3, u3 = [], c3 = (e4.ignoreCase ? "i" : "") + (e4.multiline ? "m" : "") + (e4.unicode ? "u" : "") + (e4.sticky ? "y" : ""), l3 = 0, d3 = new RegExp(e4.source, c3 + "g"); (a3 = U2(Ea, d3, o4)) && !((s3 = d3.lastIndex) > l3 && (hc(u3, fc(o4, l3, a3.index)), a3.length > 1 && a3.index < o4.length && Ts2(pc, u3, ui(a3, 1)), i3 = a3[0].length, l3 = s3, u3.length >= r3)); )
          d3.lastIndex === a3.index && d3.lastIndex++;
        return l3 === o4.length ? !i3 && gc(d3, "") || hc(u3, "") : hc(u3, fc(o4, l3)), u3.length > r3 ? ui(u3, 0, r3) : u3;
      } : "0".split(void 0, 0).length ? function(e4, n4) {
        return void 0 === e4 && 0 === n4 ? [] : U2(t3, this, e4, n4);
      } : t3, [function(t4, n4) {
        var r3 = Q2(this), a3 = null == t4 ? void 0 : Me2(t4, e3);
        return a3 ? U2(a3, t4, r3, n4) : U2(o3, dn(r3), t4, n4);
      }, function(e4, r3) {
        var a3 = Xe2(this), s3 = dn(e4), i3 = n3(o3, a3, s3, r3, o3 !== t3);
        if (i3.done)
          return i3.value;
        var u3 = xi(a3, RegExp), c3 = a3.unicode, l3 = (a3.ignoreCase ? "i" : "") + (a3.multiline ? "m" : "") + (a3.unicode ? "u" : "") + (lc ? "g" : "y"), d3 = new u3(lc ? "^(?:" + a3.source + ")" : a3, l3), p3 = void 0 === r3 ? 4294967295 : r3 >>> 0;
        if (0 === p3)
          return [];
        if (0 === s3.length)
          return null === xa(d3, s3) ? [s3] : [];
        for (var g3 = 0, h3 = 0, f3 = []; h3 < s3.length; ) {
          d3.lastIndex = lc ? 0 : h3;
          var _3, m3 = xa(d3, lc ? fc(s3, h3) : s3);
          if (null === m3 || (_3 = dc(Pt2(d3.lastIndex + (lc ? h3 : 0)), s3.length)) === g3)
            h3 = Fa(s3, h3, c3);
          else {
            if (hc(f3, fc(s3, g3, h3)), f3.length === p3)
              return f3;
            for (var v3 = 1; v3 <= m3.length - 1; v3++)
              if (hc(f3, m3[v3]), f3.length === p3)
                return f3;
            h3 = g3 = _3;
          }
        }
        return hc(f3, fc(s3, g3)), f3;
      }];
    }, !!O2(function() {
      var e3 = /(?:)/, t3 = e3.exec;
      e3.exec = function() {
        return t3.apply(this, arguments);
      };
      var n3 = "ab".split(e3);
      return 2 !== n3.length || "a" !== n3[0] || "b" !== n3[1];
    }), lc);
    var _c = Fo.codeAt;
    nn({ target: "String", proto: true }, { codePointAt: function(e3) {
      return _c(this, e3);
    } });
    var mc = vn.trim, vc = H2("".charAt), Mc = R2.parseFloat, yc = R2.Symbol, Ic = yc && yc.iterator, Tc = 1 / Mc(pn2 + "-0") != -Infinity || Ic && !O2(function() {
      Mc(Object(Ic));
    }) ? function(e3) {
      var t3 = mc(dn(e3)), n3 = Mc(t3);
      return 0 === n3 && "-" == vc(t3, 0) ? -0 : n3;
    } : Mc;
    nn({ global: true, forced: parseFloat != Tc }, { parseFloat: Tc });
    var Cc = function() {
      function e3() {
        var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, n3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
        o2(this, e3), this.high = t3, this.low = n3;
      }
      return a2(e3, [{ key: "equal", value: function(e4) {
        return null !== e4 && (this.low === e4.low && this.high === e4.high);
      } }, { key: "toString", value: function() {
        var e4 = Number(this.high).toString(16), t3 = Number(this.low).toString(16);
        if (t3.length < 8)
          for (var n3 = 8 - t3.length; n3; )
            t3 = "0" + t3, n3--;
        return e4 + t3;
      } }]), e3;
    }(), Ec = { TEST: { CHINA: { DEFAULT: "wss://wss-dev.tim.qq.com" }, OVERSEA: { DEFAULT: "wss://wss-dev.tim.qq.com" }, SINGAPORE: { DEFAULT: "wss://wsssgp-dev.im.qcloud.com" }, KOREA: { DEFAULT: "wss://wsskr-dev.im.qcloud.com" }, GERMANY: { DEFAULT: "wss://wssger-dev.im.qcloud.com" }, IND: { DEFAULT: "wss://wssind-dev.im.qcloud.com" }, JPN: { DEFAULT: "wss://wssjpn-dev.im.qcloud.com" }, USA: { DEFAULT: "wss://wssusa-dev.im.qcloud.com" } }, PRODUCTION: { CHINA: { DEFAULT: "wss://wss.im.qcloud.com", BACKUP: "wss://wss.tim.qq.com", STAT: "https://events.im.qcloud.com" }, OVERSEA: { DEFAULT: "wss://wss.im.qcloud.com", BACKUP: "wss://wss.my-imcloud.com", STAT: "https://api.my-imcloud.com" }, SINGAPORE: { DEFAULT: "wss://wsssgp.im.qcloud.com", BACKUP: "wss://wsssgp.my-imcloud.com", STAT: "https://apisgp.my-imcloud.com" }, KOREA: { DEFAULT: "wss://wsskr.im.qcloud.com", BACKUP: "wss://wsskr.my-imcloud.com", STAT: "https://apikr.my-imcloud.com" }, GERMANY: { DEFAULT: "wss://wssger.im.qcloud.com", BACKUP: "wss://wssger.my-imcloud.com", STAT: "https://apiger.my-imcloud.com" }, IND: { DEFAULT: "wss://wssind.my-imcloud.com", BACKUP: "wss://wssind.im.qcloud.com", STAT: "https://apiind.my-imcloud.com" }, JPN: { DEFAULT: "wss://wssjpn.im.qcloud.com", BACKUP: "wss://wssjpn.my-imcloud.com", STAT: "https://apijpn.my-imcloud.com" }, USA: { DEFAULT: "wss://wssusa.im.qcloud.com", BACKUP: "wss://wssusa.my-imcloud.com", STAT: "https://apiusa.my-imcloud.com" } } }, Sc = { ANDROID: 2, IOS: 3, MAC: 4, WEB: 7, WX_MP: 8, QQ_MP: 9, TT_MP: 10, BAIDU_MP: 11, ALI_MP: 12, IPAD: 13, UNI_NATIVE_APP: 15 }, Dc = "1.7.3", Nc = 537048168, Ac = "CHINA", kc = "OVERSEA", Rc = "SINGAPORE", Oc = "KOREA", Lc = "GERMANY", Gc = "IND", Pc = "JPN", Uc = "USA", bc = { HOST: { CURRENT: { DEFAULT: "wss://wss.im.qcloud.com", STAT: "https://events.im.qcloud.com" }, setCurrent: function() {
      var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ac;
      this.CURRENT = Ec.PRODUCTION[e3];
    } }, NAME: { OPEN_IM: "openim", OPEN_IM_MSG_EXT: "openim_msg_ext_http_svc", GROUP: "group_open_http_svc", GROUP_AVCHATROOM: "group_open_avchatroom_http_svc", GROUP_COMMUNITY: "million_group_open_http_svc", GROUP_ATTR: "group_open_attr_http_svc", FRIEND: "sns", PROFILE: "profile", RECENT_CONTACT: "recentcontact", PIC: "openpic", BIG_GROUP_NO_AUTH: "group_open_http_noauth_svc", BIG_GROUP_LONG_POLLING: "group_open_long_polling_http_svc", BIG_GROUP_LONG_POLLING_NO_AUTH: "group_open_long_polling_http_noauth_svc", IM_OPEN_STAT: "imopenstat", WEB_IM: "webim", IM_COS_SIGN: "im_cos_sign_svr", CUSTOM_UPLOAD: "im_cos_msg", HEARTBEAT: "heartbeat", IM_OPEN_PUSH: "im_open_push", IM_OPEN_STATUS: "im_open_status", IM_LONG_MESSAGE: "im_long_msg", IM_CONFIG_MANAGER: "im_sdk_config_mgr", STAT_SERVICE: "StatSvc", OVERLOAD_PUSH: "OverLoadPush", IM_MSG_AUDIT_MGR: "im_msg_audit_mgr", TUIROOM_SVR: "tui_room_svr", IM_OPEN_TRANSLATE: "im_open_translate" }, CMD: { LOGIN: "wslogin", LOGOUT_LONG_POLL: "longpollinglogout", LOGOUT: "wslogout", HELLO: "wshello", STAT_BACKGROUND: "ws_stat_background", STAT_FOREGROUND: "ws_stat_foreground", SET_TOKEN: "ws_stat_settoken", PORTRAIT_GET: "portrait_get_all", PORTRAIT_SET: "portrait_set", GET_LONG_POLL_ID: "getlongpollingid", LONG_POLL: "longpolling", AVCHATROOM_LONG_POLL: "get_msg", ADD_FRIEND: "friend_add", UPDATE_FRIEND: "friend_update", GET_FRIEND_LIST: "friend_get", GET_FRIEND_PROFILE: "friend_get_specified", DELETE_FRIEND: "friend_delete", CHECK_FRIEND: "friend_check", GET_FRIEND_GROUP_LIST: "group_get", RESPOND_FRIEND_APPLICATION: "friend_response", GET_FRIEND_APPLICATION_LIST: "pendency_get", DELETE_FRIEND_APPLICATION: "pendency_delete", REPORT_FRIEND_APPLICATION: "pendency_report", GET_GROUP_APPLICATION: "get_pendency", CREATE_FRIEND_GROUP: "group_add", DELETE_FRIEND_GROUP: "group_delete", UPDATE_FRIEND_GROUP: "group_update", GET_BLACKLIST: "black_list_get", ADD_BLACKLIST: "black_list_add", DELETE_BLACKLIST: "black_list_delete", CREATE_GROUP: "create_group", GET_JOINED_GROUPS: "get_joined_group_list", SET_GROUP_ATTRIBUTES: "set_group_attr", MODIFY_GROUP_ATTRIBUTES: "modify_group_attr", DELETE_GROUP_ATTRIBUTES: "delete_group_attr", CLEAR_GROUP_ATTRIBUTES: "clear_group_attr", GET_GROUP_ATTRIBUTES: "get_group_attr", SEND_MESSAGE: "sendmsg", REVOKE_C2C_MESSAGE: "msgwithdraw", DELETE_C2C_MESSAGE: "delete_c2c_msg_ramble", MODIFY_C2C_MESSAGE: "modify_c2c_msg", MODIFY_C2C_MESSAGE_EXTENSIONS: "set_key_values", GET_C2C_MESSAGE_EXTENSIONS: "get_key_values", SEND_GROUP_MESSAGE: "send_group_msg", REVOKE_GROUP_MESSAGE: "group_msg_recall", DELETE_GROUP_MESSAGE: "delete_group_ramble_msg_by_seq", MODIFY_GROUP_MESSAGE: "modify_group_msg", MODIFY_GROUP_MESSAGE_EXTENSIONS: "group_set_key_values", GET_GROUP_MESSAGE_EXTENSIONS: "group_get_key_values", GET_GROUP_INFO: "get_group_self_member_info", GET_GROUP_MEMBER_INFO: "get_specified_group_member_info", GET_GROUP_MEMBER_LIST: "get_group_member_info", GET_AVCHATROOM_MEMBER_LIST: "get_members", MARK_AVCHATROOM_MEMBER_INFO: "modify_user_info", QUIT_GROUP: "quit_group", CHANGE_GROUP_OWNER: "change_group_owner", DESTROY_GROUP: "destroy_group", ADD_GROUP_MEMBER: "add_group_member", DELETE_GROUP_MEMBER: "delete_group_member", BAN_AVCHATROOM_MEMBER: "ban_group_member", SEARCH_GROUP_BY_ID: "get_group_public_info", APPLY_JOIN_GROUP: "apply_join_group", HANDLE_APPLY_JOIN_GROUP: "handle_apply_join_group", HANDLE_GROUP_INVITATION: "handle_invite_join_group", MODIFY_GROUP_INFO: "modify_group_base_info", MODIFY_GROUP_MEMBER_INFO: "modify_group_member_info", DELETE_GROUP_SYSTEM_MESSAGE: "deletemsg", DELETE_GROUP_AT_TIPS: "deletemsg", GET_GROUP_NOTIFY: "get_group_notify", GET_CONVERSATION_LIST: "get", PAGING_GET_CONVERSATION_LIST: "page_get", DELETE_CONVERSATION: "delete", CLEAR_HISTORY_MESSAGE: "clear_msg", PIN_CONVERSATION: "top", SET_CONVERSATION_CUSTOM_DATA: "mark_contact", MARK_CONVERSATION: "mark_contact", CREATE_CONVERSATION_GROUP: "create_contact_group", DELETE_CONVERSATION_GROUP: "del_contact_group", UPDATE_CONVERSATION_GROUP: "update_contact_group", GET_CONVERSATION_GROUP_LIST: "get_contact_group", GET_MESSAGES: "getmsg", GET_C2C_ROAM_MESSAGES: "getroammsg", SET_C2C_PEER_MUTE_NOTIFICATIONS: "set_c2c_peer_mute_notifications", GET_C2C_PEER_MUTE_NOTIFICATIONS: "get_c2c_peer_mute_notifications", GET_GROUP_ROAM_MESSAGES: "group_msg_get", GET_READ_RECEIPT: "get_group_msg_receipt", GET_READ_RECEIPT_DETAIL: "get_group_msg_receipt_detail", SEND_READ_RECEIPT: "group_msg_receipt", SEND_C2C_READ_RECEIPT: "c2c_msg_read_receipt", SET_C2C_MESSAGE_READ: "msgreaded", GET_PEER_READ_TIME: "get_peer_read_time", SET_GROUP_MESSAGE_READ: "msg_read_report", FILE_READ_AND_WRITE_AUTHKEY: "authkey", FILE_UPLOAD: "pic_up", COS_SIGN: "cos", COS_PRE_SIG: "pre_sig", VIDEO_COVER: "video_cover", TIM_WEB_REPORT_V2: "tim_web_report_v2", BIG_DATA_HALLWAY_AUTH_KEY: "authkey", GET_ONLINE_MEMBER_NUM: "get_online_member_num", ALIVE: "alive", MESSAGE_PUSH: "msg_push", MULTI_MESSAGE_PUSH: "multi_msg_push_ws", MESSAGE_PUSH_ACK: "ws_msg_push_ack", STATUS_FORCE_OFFLINE: "stat_forceoffline", DOWNLOAD_MERGER_MESSAGE: "get_relay_json_msg", UPLOAD_MERGER_MESSAGE: "save_relay_json_msg", FETCH_CLOUD_CONTROL_CONFIG: "fetch_config", PUSHED_CLOUD_CONTROL_CONFIG: "push_configv2", FETCH_COMMERCIAL_CONFIG: "fetch_imsdk_purchase_bitsv2", PUSHED_COMMERCIAL_CONFIG: "push_imsdk_purchase_bitsv2", KICK_OTHER: "KickOther", OVERLOAD_NOTIFY: "notify2", SET_ALL_MESSAGE_READ: "read_all_unread_msg", CREATE_TOPIC: "create_topic", DELETE_TOPIC: "destroy_topic", UPDATE_TOPIC_PROFILE: "modify_topic", GET_TOPIC_LIST: "get_topic", SET_SELF_STATUS: "ws_set_custom_status", GET_USER_STATUS: "ws_get_user_status", SUBSCRIBE_USER_STATUS: "ws_status_subscribe", UNSUBSCRIBE_USER_STATUS: "ws_status_unsubscribe", GET_RPOFANITY_LIST: "get_local_words", TRANSLATE_TEXT: "ws_batch_trans_text", UPDATE_GROUP_COUNTER: "update_group_counter", GET_GROUP_COUNTER: "get_group_counter" }, CHANNEL: { SOCKET: 1, XHR: 2, AUTO: 0 }, NAME_VERSION: { openim: "v4", group_open_http_svc: "v4", sns: "v4", profile: "v4", recentcontact: "v4", openpic: "v4", group_open_http_noauth_svc: "v4", group_open_long_polling_http_svc: "v4", group_open_long_polling_http_noauth_svc: "v4", imopenstat: "v4", im_cos_sign_svr: "v4", im_cos_msg: "v4", webim: "v4", im_open_push: "v4", im_open_status: "v4" } }, wc = { SEARCH_MSG: new Cc(0, Math.pow(2, 0)).toString(), SEARCH_GRP_SNS: new Cc(0, Math.pow(2, 1)).toString(), AVCHATROOM_HISTORY_MSG: new Cc(0, Math.pow(2, 2)).toString(), GRP_COMMUNITY: new Cc(0, Math.pow(2, 3)).toString(), MSG_TO_SPECIFIED_GRP_MBR: new Cc(0, Math.pow(2, 4)).toString(), AVCHATROOM_MBR_LIST: new Cc(0, Math.pow(2, 6)).toString(), USER_STATUS: new Cc(0, Math.pow(2, 7)).toString(), CONV_MARK: new Cc(0, Math.pow(2, 9)).toString(), CONV_GROUP: new Cc(0, Math.pow(2, 10)).toString(), AVCHATROOM_BAN_MBR: new Cc(0, Math.pow(2, 11)).toString(), MSG_EXT: new Cc(0, Math.pow(2, 13)).toString() }, Fc = "c2c_text_message", qc = "c2c_custom_message", xc = "group_text_message", Vc = "group_custom_message", Bc = "user_profile", Kc = "group_profile", Hc = "group_member_profile";
    bc.HOST.setCurrent(Ac);
    var jc, Wc, Yc, $c = "undefined" != typeof wx$1 && "function" == typeof wx$1.getSystemInfoSync && Boolean(wx$1.getSystemInfoSync().fontSizeSetting), zc = "undefined" != typeof qq && "function" == typeof qq.getSystemInfoSync && Boolean(qq.getSystemInfoSync().fontSizeSetting), Jc = "undefined" != typeof tt && "function" == typeof tt.getSystemInfoSync && Boolean(tt.getSystemInfoSync().fontSizeSetting), Xc = "undefined" != typeof swan && "function" == typeof swan.getSystemInfoSync && Boolean(swan.getSystemInfoSync().fontSizeSetting), Qc = "undefined" != typeof my && "function" == typeof my.getSystemInfoSync && Boolean(my.getSystemInfoSync().fontSizeSetting), Zc = "undefined" != typeof index$1 && "undefined" == typeof window, el = "undefined" != typeof index$1, tl = $c || zc || Jc || Xc || Qc || Zc, nl = ("undefined" != typeof index$1 || "undefined" != typeof window) && !tl, ol = zc ? qq : Jc ? tt : Xc ? swan : Qc ? my : $c ? wx$1 : Zc ? index$1 : {}, rl = (jc = "WEB", Ml ? jc = "WEB" : zc ? jc = "QQ_MP" : Jc ? jc = "TT_MP" : Xc ? jc = "BAIDU_MP" : Qc ? jc = "ALI_MP" : $c ? jc = "WX_MP" : Zc && (jc = "UNI_NATIVE_APP"), Sc[jc]), al = nl && window && window.navigator && window.navigator.userAgent || "", sl = /AppleWebKit\/([\d.]+)/i.exec(al), il = (sl && parseFloat(sl.pop()), /iPad/i.test(al)), ul = /iPhone/i.test(al) && !il, cl = /iPod/i.test(al), ll = ul || il || cl, dl = function() {
      var e3 = al.match(/OS (\d+)_/i);
      return e3 && e3[1] ? e3[1] : null;
    }(), pl = /Android/i.test(al), gl = function() {
      var e3 = al.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
      if (!e3)
        return null;
      var t3 = e3[1] && parseFloat(e3[1]), n3 = e3[2] && parseFloat(e3[2]);
      return t3 && n3 ? parseFloat(e3[1] + "." + e3[2]) : t3 || null;
    }(), hl = (pl && /webkit/i.test(al), /Firefox/i.test(al), /Edge/i.test(al));
    !hl && /Chrome/i.test(al);
    var _l = (function() {
      var e3 = al.match(/Chrome\/(\d+)/);
      e3 && e3[1] && parseFloat(e3[1]);
    }(), /MSIE/.test(al) || al.indexOf("Trident") > -1 && al.indexOf("rv:11.0") > -1), ml = (/MSIE\s8\.0/.test(al), function() {
      var e3 = /MSIE\s(\d+)\.\d/.exec(al), t3 = e3 && parseFloat(e3[1]);
      return !t3 && /Trident\/7.0/i.test(al) && /rv:11.0/.test(al) && (t3 = 11), t3;
    }()), vl = (/Safari/i.test(al), /TBS\/\d+/i.test(al)), Ml = (function() {
      var e3 = al.match(/TBS\/(\d+)/i);
      if (e3 && e3[1])
        e3[1];
    }(), !vl && /MQQBrowser\/\d+/i.test(al), !vl && / QQBrowser\/\d+/i.test(al), /(micromessenger|webbrowser)/i.test(al)), yl = /Windows/i.test(al), Il = /MAC OS X/i.test(al), Tl = (/MicroMessenger/i.test(al), nl && "undefined" != typeof Worker && !_l), Cl = pl || ll, El = nl && void 0 !== window.tencent_cloud_im_csig_flutter_for_web_25F_cy, Sl = "undefined" != typeof commonjsGlobal ? commonjsGlobal : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {};
    Wc = "undefined" != typeof console ? console : void 0 !== Sl && Sl.console ? Sl.console : "undefined" != typeof window && window.console ? window.console : {};
    for (var Dl = function() {
    }, Nl = ["assert", "clear", "count", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeStamp", "trace", "warn"], Al = Nl.length; Al--; )
      Yc = Nl[Al], console[Yc] || (Wc[Yc] = Dl);
    var kl = Wc, Rl = 0, Ol = function() {
      return new Date().getTime() + Rl;
    }, Ll = function() {
      Rl = 0;
    }, Gl = function() {
      return Math.floor(Ol() / 1e3);
    }, Pl = 0;
    function Ul() {
      return Kd() ? "%c TIM %c" : "TIM";
    }
    function bl() {
      var e3, t3 = ((e3 = new Date()).setTime(Ol()), e3);
      return t3.toLocaleTimeString("en-US", { hour12: false }) + "." + function(e4) {
        var t4;
        switch (e4.toString().length) {
          case 1:
            t4 = "00" + e4;
            break;
          case 2:
            t4 = "0" + e4;
            break;
          default:
            t4 = e4;
        }
        return t4;
      }(t3.getMilliseconds());
    }
    var wl = { arguments2String: function(e3) {
      var t3 = "";
      if (1 === e3.length)
        t3 = e3[0];
      else
        for (var n3 = 0, o3 = e3.length; n3 < o3; n3++)
          nd(e3[n3]) ? rd(e3[n3]) ? t3 += ld(e3[n3]) : t3 += JSON.stringify(e3[n3]) : t3 += e3[n3], t3 += " ";
      return t3;
    }, _exec: function(e3, t3) {
      Kd() ? kl[e3](Ul(), "background:#0abf5b; padding:1px; border-radius:3px; color: #fff", "background:transparent", bl(), t3) : kl[e3]("".concat(Ul(), " ").concat(bl(), " ").concat(t3));
    }, debug: function() {
      if (Pl <= -1) {
        var e3 = this.arguments2String(arguments);
        this._exec("debug", e3);
      }
    }, log: function() {
      if (Pl <= 0) {
        var e3 = this.arguments2String(arguments);
        this._exec("log", e3);
      }
    }, info: function() {
      if (Pl <= 1) {
        var e3 = this.arguments2String(arguments);
        this._exec("info", e3);
      }
    }, warn: function() {
      if (Pl <= 2) {
        var e3 = this.arguments2String(arguments);
        this._exec("warn", e3);
      }
    }, error: function() {
      if (Pl <= 3) {
        var e3 = this.arguments2String(arguments);
        this._exec("error", e3);
      }
    }, setLevel: function(e3) {
      e3 < 4 && this._exec("log", "set level from " + Pl + " to " + e3), Pl = e3;
    }, getLevel: function() {
      return Pl;
    } }, Fl = { JPG: 1, JPEG: 1, GIF: 2, PNG: 3, BMP: 4, UNKNOWN: 255 }, ql = { NICK: "Tag_Profile_IM_Nick", GENDER: "Tag_Profile_IM_Gender", BIRTHDAY: "Tag_Profile_IM_BirthDay", LOCATION: "Tag_Profile_IM_Location", SELFSIGNATURE: "Tag_Profile_IM_SelfSignature", ALLOWTYPE: "Tag_Profile_IM_AllowType", LANGUAGE: "Tag_Profile_IM_Language", AVATAR: "Tag_Profile_IM_Image", MESSAGESETTINGS: "Tag_Profile_IM_MsgSettings", ADMINFORBIDTYPE: "Tag_Profile_IM_AdminForbidType", LEVEL: "Tag_Profile_IM_Level", ROLE: "Tag_Profile_IM_Role" }, xl = { UNKNOWN: "Gender_Type_Unknown", FEMALE: "Gender_Type_Female", MALE: "Gender_Type_Male" }, Vl = { NONE: "AdminForbid_Type_None", SEND_OUT: "AdminForbid_Type_SendOut" }, Bl = { NEED_CONFIRM: "AllowType_Type_NeedConfirm", ALLOW_ANY: "AllowType_Type_AllowAny", DENY_ANY: "AllowType_Type_DenyAny" }, Kl = "JoinedSuccess", Hl = "WaitAdminApproval", jl = "@TGS#_", Wl = "@TOPIC#_", Yl = ["url"], $l = function(e3) {
      return "map" === ad(e3);
    }, zl = function(e3) {
      return "file" === ad(e3);
    }, Jl = function(e3) {
      return null !== e3 && ("number" == typeof e3 && !isNaN(e3 - 0) || "object" === n2(e3) && e3.constructor === Number);
    }, Xl = function(e3) {
      return "string" == typeof e3;
    }, Ql = function(e3) {
      return null !== e3 && "object" === n2(e3);
    }, Zl = function(e3) {
      if ("object" !== n2(e3) || null === e3)
        return false;
      var t3 = Object.getPrototypeOf(e3);
      if (null === t3)
        return true;
      for (var o3 = t3; null !== Object.getPrototypeOf(o3); )
        o3 = Object.getPrototypeOf(o3);
      return t3 === o3;
    }, ed = function(e3) {
      return "function" == typeof Array.isArray ? Array.isArray(e3) : "array" === ad(e3);
    }, td = function(e3) {
      return void 0 === e3;
    }, nd = function(e3) {
      return ed(e3) || Ql(e3);
    }, od = function(e3) {
      return "function" == typeof e3;
    }, rd = function(e3) {
      return e3 instanceof Error;
    }, ad = function(e3) {
      return Object.prototype.toString.call(e3).match(/^\[object (.*)\]$/)[1].toLowerCase();
    }, sd = function(e3) {
      if ("string" != typeof e3)
        return false;
      var t3 = e3[0];
      return !/[^a-zA-Z0-9]/.test(t3);
    }, id = 0;
    Date.now || (Date.now = function() {
      return new Date().getTime();
    });
    var ud = function() {
      0 === id && (id = Date.now() - 1);
      var e3 = Date.now() - id;
      return e3 > 4294967295 ? (id += 4294967295, Date.now() - id) : e3;
    }, cd = function e3(t3, n3, o3, r3) {
      if (!nd(t3) || !nd(n3))
        return 0;
      for (var a3, s3 = 0, i3 = Object.keys(n3), u3 = 0, c3 = i3.length; u3 < c3; u3++)
        if (a3 = i3[u3], !(td(n3[a3]) || o3 && o3.includes(a3)))
          if (nd(t3[a3]) && nd(n3[a3]))
            s3 += e3(t3[a3], n3[a3], o3, r3);
          else {
            if (r3 && r3.includes(n3[a3]))
              continue;
            t3[a3] !== n3[a3] && (t3[a3] = n3[a3], s3 += 1);
          }
      return s3;
    }, ld = function(e3) {
      return JSON.stringify(e3, ["message", "code"]);
    }, dd = function(e3) {
      if (0 === e3.length)
        return 0;
      for (var t3 = 0, n3 = 0, o3 = "undefined" != typeof document && void 0 !== document.characterSet ? document.characterSet : "UTF-8"; void 0 !== e3[t3]; )
        n3 += e3[t3++].charCodeAt[t3] <= 255 ? 1 : false === o3 ? 3 : 2;
      return n3;
    }, pd = function(e3) {
      var t3 = e3 || 99999999;
      return Math.round(Math.random() * t3);
    }, gd = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", hd = gd.length, fd = function(e3, t3) {
      for (var n3 in e3)
        if (e3[n3] === t3)
          return true;
      return false;
    }, _d = {}, md = function(e3) {
      return -1 === e3.indexOf("http://") || -1 === e3.indexOf("https://") ? "https://" + e3 : e3.replace(/https|http/, "https");
    }, vd = function e3(t3) {
      if (0 === Object.getOwnPropertyNames(t3).length)
        return /* @__PURE__ */ Object.create(null);
      var o3 = Array.isArray(t3) ? [] : /* @__PURE__ */ Object.create(null), r3 = "";
      for (var a3 in t3)
        null !== t3[a3] ? void 0 !== t3[a3] ? (r3 = n2(t3[a3]), ["string", "number", "function", "boolean"].indexOf(r3) >= 0 ? o3[a3] = t3[a3] : o3[a3] = e3(t3[a3])) : o3[a3] = void 0 : o3[a3] = null;
      return o3;
    };
    function Md(e3, t3) {
      ed(e3) && ed(t3) && t3.forEach(function(t4) {
        var n3 = t4.key, o3 = t4.value, r3 = e3.find(function(e4) {
          return e4.key === n3;
        });
        r3 ? r3.value = o3 : e3.push({ key: n3, value: o3 });
      });
    }
    var yd = function(e3) {
      return e3 === gr.GRP_PUBLIC;
    }, Id = function(e3) {
      return e3 === gr.GRP_AVCHATROOM;
    }, Td = function(e3) {
      var t3 = e3.type, n3 = e3.groupID;
      return t3 === gr.GRP_COMMUNITY || "".concat(n3).startsWith(jl) && !"".concat(n3).includes(Wl);
    }, Cd = function(e3) {
      return "".concat(e3).startsWith(jl) && "".concat(e3).includes(Wl);
    }, Ed = function(e3) {
      return Xl(e3) && e3.slice(0, 3) === gr.CONV_C2C;
    }, Sd = function(e3) {
      return Xl(e3) && e3.slice(0, 5) === gr.CONV_GROUP;
    }, Dd = function(e3) {
      return Xl(e3) && e3 === gr.CONV_SYSTEM;
    };
    function Nd(e3, t3) {
      var n3 = {};
      return Object.keys(e3).forEach(function(o3) {
        n3[o3] = t3(e3[o3], o3);
      }), n3;
    }
    function Ad(e3) {
      return tl ? new Promise(function(t3, n3) {
        ol.getImageInfo({ src: e3, success: function(e4) {
          t3({ width: e4.width, height: e4.height });
        }, fail: function() {
          t3({ width: 0, height: 0 });
        } });
      }) : _l && 9 === ml ? Promise.resolve({ width: 0, height: 0 }) : new Promise(function(t3, n3) {
        var o3 = new Image();
        o3.onload = function() {
          t3({ width: this.width, height: this.height }), o3 = null;
        }, o3.onerror = function() {
          t3({ width: 0, height: 0 }), o3 = null;
        }, o3.src = e3;
      });
    }
    function kd() {
      function e3() {
        return (65536 * (1 + Math.random()) | 0).toString(16).substring(1);
      }
      return "".concat(e3() + e3()).concat(e3()).concat(e3()).concat(e3()).concat(e3()).concat(e3()).concat(e3());
    }
    function Rd() {
      var e3 = "unknown";
      if (Il && (e3 = "mac"), yl && (e3 = "windows"), ll && (e3 = "ios"), pl && (e3 = "android"), tl)
        try {
          var t3 = ol.getSystemInfoSync().platform;
          void 0 !== t3 && (e3 = t3);
        } catch (BS) {
        }
      return e3;
    }
    function Od(e3, t3) {
      e3 = e3.split("."), t3 = t3.split(".");
      for (var n3 = Math.max(e3.length, t3.length); e3.length < n3; )
        e3.push("0");
      for (; t3.length < n3; )
        t3.push("0");
      for (var o3 = 0; o3 < n3; o3++) {
        var r3 = parseInt(e3[o3]), a3 = parseInt(t3[o3]);
        if (r3 > a3)
          return 1;
        if (r3 < a3)
          return -1;
      }
      return 0;
    }
    function Ld(e3) {
      var t3 = e3.originUrl, n3 = void 0 === t3 ? void 0 : t3, o3 = e3.originWidth, r3 = e3.originHeight, a3 = e3.min, s3 = void 0 === a3 ? 198 : a3, i3 = parseInt(o3), u3 = parseInt(r3), c3 = { url: void 0, width: 0, height: 0 };
      if ((i3 <= u3 ? i3 : u3) <= s3)
        c3.url = n3, c3.width = i3, c3.height = u3;
      else {
        u3 <= i3 ? (c3.width = Math.ceil(i3 * s3 / u3), c3.height = s3) : (c3.width = s3, c3.height = Math.ceil(u3 * s3 / i3));
        var l3 = n3 && n3.indexOf("?") > -1 ? "".concat(n3, "&") : "".concat(n3, "?");
        c3.url = "".concat(l3, 198 === s3 ? "imageView2/3/w/198/h/198" : "imageView2/3/w/720/h/720");
      }
      return td(n3) ? g2(c3, Yl) : c3;
    }
    function Gd(e3) {
      var t3 = e3[2];
      e3[2] = e3[1], e3[1] = t3;
      for (var n3 = 0; n3 < e3.length; n3++)
        e3[n3].setType(n3);
    }
    function Pd(e3) {
      var t3 = e3.servcmd;
      return t3.slice(t3.indexOf(".") + 1);
    }
    function Ud(e3, t3) {
      return Math.round(Number(e3) * Math.pow(10, t3)) / Math.pow(10, t3);
    }
    function bd(e3, t3) {
      return e3.includes(t3);
    }
    function wd(e3, t3) {
      return e3.includes(t3);
    }
    function Fd(e3) {
      return e3.split(Wl)[0];
    }
    var qd = function(e3, t3, n3) {
      if (td(t3))
        return "";
      switch (e3) {
        case gr.MSG_TEXT:
          return t3.text;
        case gr.MSG_IMAGE:
          return n3 ? "[Image]" : "[\u56FE\u7247]";
        case gr.MSG_LOCATION:
          return n3 ? "[Location]" : "[\u4F4D\u7F6E]";
        case gr.MSG_AUDIO:
          return n3 ? "[Voice]" : "[\u8BED\u97F3]";
        case gr.MSG_VIDEO:
          return n3 ? "[Video]" : "[\u89C6\u9891]";
        case gr.MSG_FILE:
          return n3 ? "[File]" : "[\u6587\u4EF6]";
        case gr.MSG_CUSTOM:
          return n3 ? "[Custom Messages]" : "[\u81EA\u5B9A\u4E49\u6D88\u606F]";
        case gr.MSG_GRP_TIP:
          return n3 ? "[Group Notification]" : "[\u7FA4\u63D0\u793A\u6D88\u606F]";
        case gr.MSG_GRP_SYS_NOTICE:
          return n3 ? "[Group System Message]" : "[\u7FA4\u7CFB\u7EDF\u901A\u77E5]";
        case gr.MSG_FACE:
          return n3 ? "[Animated Sticker]" : "[\u52A8\u753B\u8868\u60C5]";
        case gr.MSG_MERGER:
          return n3 ? "[Chat Record]" : "[\u804A\u5929\u8BB0\u5F55]";
        default:
          return "";
      }
    };
    function xd(e3) {
      return e3 === gr.MSG_TEXT || e3 === gr.MSG_CUSTOM || e3 === gr.MSG_LOCATION || e3 === gr.MSG_FACE;
    }
    function Vd(e3) {
      var t3 = [];
      if (!Xl(e3))
        return t3;
      var n3 = e3.length;
      if (0 === n3)
        return t3;
      for (var o3 = n3 - 1; o3 >= 0; o3--)
        "1" === e3[o3] && t3.push(Math.pow(2, n3 - o3 - 1));
      return t3;
    }
    function Bd(e3) {
      return 0 === e3 || e3 >= 2e7 && e3 < 8e7 || e3 >= 172e7 && e3 < 178e7;
    }
    function Kd() {
      return !_l && !tl;
    }
    function Hd(e3) {
      return "the length of userIDList cannot exceed ".concat(e3);
    }
    var jd = Object.prototype.hasOwnProperty;
    function Wd(e3) {
      if (null == e3)
        return true;
      if ("boolean" == typeof e3)
        return false;
      if ("number" == typeof e3)
        return 0 === e3;
      if ("string" == typeof e3)
        return 0 === e3.length;
      if ("function" == typeof e3)
        return 0 === e3.length;
      if (Array.isArray(e3))
        return 0 === e3.length;
      if (e3 instanceof Error)
        return "" === e3.message;
      if (Zl(e3)) {
        for (var t3 in e3)
          if (jd.call(e3, t3))
            return false;
        return true;
      }
      return !(!$l(e3) && (n3 = e3, "set" !== ad(n3)) && !zl(e3)) && 0 === e3.size;
      var n3;
    }
    function Yd(e3, t3, n3) {
      if (void 0 === t3)
        return true;
      var o3 = true;
      if ("object" === wr(t3).toLowerCase())
        Object.keys(t3).forEach(function(r4) {
          var a3 = 1 === e3.length ? e3[0][r4] : void 0;
          o3 = !!$d(a3, t3[r4], n3, r4) && o3;
        });
      else if ("array" === wr(t3).toLowerCase())
        for (var r3 = 0; r3 < t3.length; r3++)
          o3 = !!$d(e3[r3], t3[r3], n3, t3[r3].name) && o3;
      if (o3)
        return o3;
      throw new Error("Params validate failed.");
    }
    function $d(e3, t3, n3, o3) {
      if (void 0 === t3)
        return true;
      var r3 = true;
      return t3.required && Wd(e3) && (wl.error("[".concat(n3, '] Missing required params: "').concat(o3, '".')), r3 = false), Wd(e3) || wr(e3).toLowerCase() === t3.type.toLowerCase() || (wl.error("[".concat(n3, '] Invalid params: type check failed for "').concat(o3, '".Expected ').concat(t3.type, ".")), r3 = false), t3.validator && !t3.validator(e3) && (wl.error("[".concat(n3, "] Invalid params: custom validator check failed for params.")), r3 = false), r3;
    }
    var zd = { f: we2 }, Jd = R2, Xd = nt2.f, Qd = Zn2.forEach, Zd = pt2("hidden"), ep = we2("toPrimitive"), tp = It2.set, np = It2.getterFor("Symbol"), op = Object.prototype, rp = R2.Symbol, ap = rp && rp.prototype, sp = R2.TypeError, ip = R2.QObject, up = oe2("JSON", "stringify"), cp = Ye2.f, lp = nt2.f, dp = di.f, pp = F2.f, gp = H2([].push), hp = Ee2("symbols"), fp = Ee2("op-symbols"), _p = Ee2("string-to-symbol-registry"), mp = Ee2("symbol-to-string-registry"), vp = Ee2("wks"), Mp = !ip || !ip.prototype || !ip.prototype.findChild, yp = L2 && O2(function() {
      return 7 != Un2(lp({}, "a", { get: function() {
        return lp(this, "a", { value: 7 }).a;
      } })).a;
    }) ? function(e3, t3, n3) {
      var o3 = cp(op, t3);
      o3 && delete op[t3], lp(e3, t3, n3), o3 && e3 !== op && lp(op, t3, o3);
    } : lp, Ip = function(e3, t3) {
      var n3 = hp[e3] = Un2(ap);
      return tp(n3, { type: "Symbol", tag: e3, description: t3 }), L2 || (n3.description = t3), n3;
    }, Tp = function(e3, t3, n3) {
      e3 === op && Tp(fp, t3, n3), Xe2(e3);
      var o3 = Ve2(t3);
      return Xe2(n3), Ae2(hp, o3) ? (n3.enumerable ? (Ae2(e3, Zd) && e3[Zd][o3] && (e3[Zd][o3] = false), n3 = Un2(n3, { enumerable: q2(0, false) })) : (Ae2(e3, Zd) || lp(e3, Zd, q2(1, {})), e3[Zd][o3] = true), yp(e3, o3, n3)) : lp(e3, o3, n3);
    }, Cp = function(e3, t3) {
      Xe2(e3);
      var n3 = Z2(t3), o3 = Nn2(n3).concat(Np(n3));
      return Qd(o3, function(t4) {
        L2 && !U2(Ep, n3, t4) || Tp(e3, t4, n3[t4]);
      }), e3;
    }, Ep = function(e3) {
      var t3 = Ve2(e3), n3 = U2(pp, this, t3);
      return !(this === op && Ae2(hp, t3) && !Ae2(fp, t3)) && (!(n3 || !Ae2(this, t3) || !Ae2(hp, t3) || Ae2(this, Zd) && this[Zd][t3]) || n3);
    }, Sp = function(e3, t3) {
      var n3 = Z2(e3), o3 = Ve2(t3);
      if (n3 !== op || !Ae2(hp, o3) || Ae2(fp, o3)) {
        var r3 = cp(n3, o3);
        return !r3 || !Ae2(hp, o3) || Ae2(n3, Zd) && n3[Zd][o3] || (r3.enumerable = true), r3;
      }
    }, Dp = function(e3) {
      var t3 = dp(Z2(e3)), n3 = [];
      return Qd(t3, function(e4) {
        Ae2(hp, e4) || Ae2(gt2, e4) || gp(n3, e4);
      }), n3;
    }, Np = function(e3) {
      var t3 = e3 === op, n3 = dp(t3 ? fp : Z2(e3)), o3 = [];
      return Qd(n3, function(e4) {
        !Ae2(hp, e4) || t3 && !Ae2(op, e4) || gp(o3, hp[e4]);
      }), o3;
    };
    if (de2 || (ap = (rp = function() {
      if (re2(ap, this))
        throw sp("Symbol is not a constructor");
      var e3 = arguments.length && void 0 !== arguments[0] ? dn(arguments[0]) : void 0, t3 = Le2(e3), n3 = function(e4) {
        this === op && U2(n3, fp, e4), Ae2(this, Zd) && Ae2(this[Zd], t3) && (this[Zd][t3] = false), yp(this, t3, q2(1, e4));
      };
      return L2 && Mp && yp(op, t3, { configurable: true, set: n3 }), Ip(t3, e3);
    }).prototype, Dt(ap, "toString", function() {
      return np(this).tag;
    }), Dt(rp, "withoutSetter", function(e3) {
      return Ip(Le2(e3), e3);
    }), F2.f = Ep, nt2.f = Tp, An2.f = Cp, Ye2.f = Sp, Kt.f = di.f = Dp, Ht.f = Np, zd.f = function(e3) {
      return Ip(we2(e3), e3);
    }, L2 && (lp(ap, "description", { configurable: true, get: function() {
      return np(this).description;
    } }), Dt(op, "propertyIsEnumerable", Ep, { unsafe: true }))), nn({ global: true, wrap: true, forced: !de2, sham: !de2 }, { Symbol: rp }), Qd(Nn2(vp), function(e3) {
      !function(e4) {
        var t3 = Jd.Symbol || (Jd.Symbol = {});
        Ae2(t3, e4) || Xd(t3, e4, { value: zd.f(e4) });
      }(e3);
    }), nn({ target: "Symbol", stat: true, forced: !de2 }, { for: function(e3) {
      var t3 = dn(e3);
      if (Ae2(_p, t3))
        return _p[t3];
      var n3 = rp(t3);
      return _p[t3] = n3, mp[n3] = t3, n3;
    }, keyFor: function(e3) {
      if (!he2(e3))
        throw sp(e3 + " is not a symbol");
      if (Ae2(mp, e3))
        return mp[e3];
    }, useSetter: function() {
      Mp = true;
    }, useSimple: function() {
      Mp = false;
    } }), nn({ target: "Object", stat: true, forced: !de2, sham: !L2 }, { create: function(e3, t3) {
      return void 0 === t3 ? Un2(e3) : Cp(Un2(e3), t3);
    }, defineProperty: Tp, defineProperties: Cp, getOwnPropertyDescriptor: Sp }), nn({ target: "Object", stat: true, forced: !de2 }, { getOwnPropertyNames: Dp, getOwnPropertySymbols: Np }), nn({ target: "Object", stat: true, forced: O2(function() {
      Ht.f(1);
    }) }, { getOwnPropertySymbols: function(e3) {
      return Ht.f(De2(e3));
    } }), up) {
      var Ap = !de2 || O2(function() {
        var e3 = rp();
        return "[null]" != up([e3]) || "{}" != up({ a: e3 }) || "{}" != up(Object(e3));
      });
      nn({ target: "JSON", stat: true, forced: Ap }, { stringify: function(e3, t3, n3) {
        var o3 = hr(arguments), r3 = t3;
        if ((te2(t3) || void 0 !== e3) && !he2(e3))
          return Fn2(t3) || (t3 = function(e4, t4) {
            if (ee2(r3) && (t4 = U2(r3, this, e4, t4)), !he2(t4))
              return t4;
          }), o3[1] = t3, Ts2(up, null, o3);
      } });
    }
    if (!ap[ep]) {
      var kp = ap.valueOf;
      Dt(ap, ep, function(e3) {
        return U2(kp, this);
      });
    }
    zo(rp, "Symbol"), gt2[Zd] = true;
    var Rp = nt2.f, Op = R2.Symbol, Lp = Op && Op.prototype;
    if (L2 && ee2(Op) && (!("description" in Lp) || void 0 !== Op().description)) {
      var Gp = {}, Pp = function() {
        var e3 = arguments.length < 1 || void 0 === arguments[0] ? void 0 : dn(arguments[0]), t3 = re2(Lp, this) ? new Op(e3) : void 0 === e3 ? Op() : Op(e3);
        return "" === e3 && (Gp[t3] = true), t3;
      };
      Yt(Pp, Op), Pp.prototype = Lp, Lp.constructor = Pp;
      var Up = "Symbol(test)" == String(Op("test")), bp = H2(Lp.toString), wp = H2(Lp.valueOf), Fp = /^Symbol\((.*)\)[^)]+$/, qp = H2("".replace), xp = H2("".slice);
      Rp(Lp, "description", { configurable: true, get: function() {
        var e3 = wp(this), t3 = bp(e3);
        if (Ae2(Gp, e3))
          return "";
        var n3 = Up ? xp(t3, 7, -1) : qp(t3, Fp, "$1");
        return "" === n3 ? void 0 : n3;
      } }), nn({ global: true, forced: true }, { Symbol: Pp });
    }
    var Vp = { UNSEND: "unSend", SUCCESS: "success", FAIL: "fail" }, Bp = { NOT_START: "notStart", PENDING: "pending", RESOLVED: "resolved", REJECTED: "rejected" }, Kp = false, Hp = function(e3) {
      return !!e3 && (!!(Ed(e3) || Sd(e3) || Dd(e3)) || (Kp ? wl.warn("Invalid conversationID:".concat(e3, "."), "Supported formats: C2C${userID} (one-to-one chat) | GROUP${groupID} (group chat) | @TIM#SYSTEM (system notification conversation)") : wl.warn("\u975E\u6CD5\u7684\u4F1A\u8BDD ID:".concat(e3, "\u3002\u4F1A\u8BDD ID \u7EC4\u6210\u65B9\u5F0F\uFF1AC2C + userID\uFF08\u5355\u804A\uFF09GROUP + groupID\uFF08\u7FA4\u804A\uFF09@TIM#SYSTEM\uFF08\u7CFB\u7EDF\u901A\u77E5\u4F1A\u8BDD\uFF09")), false));
    }, jp = function(e3) {
      return "[".concat(e3.api, "] | ").concat(e3.param, " | ").concat(e3.desc, ", ").concat(Kp ? "see https://web.sdk.qcloud.com/im/doc/en/SDK.html#" : "\u8BF7\u53C2\u8003 https://web.sdk.qcloud.com/im/doc/zh-cn/SDK.html#").concat(e3.api);
    }, Wp = function() {
      return Kp ? "String type required" : "\u7C7B\u578B\u5FC5\u987B\u4E3A String";
    }, Yp = function(e3) {
      return Kp ? "String type required and ".concat(e3, " must not be an empty string") : "\u7C7B\u578B\u5FC5\u987B\u4E3A String\uFF0C\u4E14\u4E0D\u80FD\u4E3A\u7A7A";
    }, $p = function() {
      return Kp ? "Number type required" : "\u7C7B\u578B\u5FC5\u987B\u4E3A Number";
    }, zp = function() {
      return Kp ? "Must not be undefined" : "\u4E0D\u80FD\u4E3A undefined";
    }, Jp = function() {
      return Kp ? "HTMLInputElement or File required" : "\u7C7B\u578B\u5FC5\u987B\u4E3A HTMLInputElement \u6216 File";
    }, Xp = function() {
      return Kp ? "Function type required" : "\u7C7B\u578B\u5FC5\u987B\u4E3A Function";
    }, Qp = function() {
      return Kp ? "Array type required" : "\u7C7B\u578B\u5FC5\u987B\u4E3A Array";
    }, Zp = function() {
      return Kp ? "Must not be an empty array" : "\u4E0D\u80FD\u4E3A\u7A7A\u6570\u7EC4";
    }, eg = function() {
      return Kp ? "Without onProgress function, you can not query the upload progress" : "\u6CA1\u6709 onProgress \u56DE\u8C03\uFF0C\u60A8\u5C06\u65E0\u6CD5\u83B7\u53D6\u4E0A\u4F20\u8FDB\u5EA6";
    }, tg = function() {
      return Kp ? "A positive integer required" : "\u5FC5\u987B\u4E3A\u6B63\u6574\u6570";
    }, ng = function(e3, t3) {
      return Kp ? "".concat(e3, " must not be longer than ").concat(t3, " bytes") : "".concat(e3, " \u957F\u5EA6\u4E0D\u5F97\u8D85\u8FC7 ").concat(t3, " \u5B57\u8282");
    }, og = function(e3, t3) {
      return Kp ? "".concat(e3, " must be less than ").concat(t3) : "".concat(e3, " \u5FC5\u987B\u5C0F\u4E8E").concat(t3);
    }, rg = function(e3) {
      return Kp ? "Type of ".concat(e3, " of key-value pairs must be String") : "\u952E\u503C\u5BF9\u7684 ".concat(e3, " \u7684\u7C7B\u578B\u5FC5\u987B\u4E3A String");
    }, ag = function() {
      return Kp ? "Plain Object required" : "\u7C7B\u578B\u5FC5\u987B\u4E3A Plain Object";
    }, sg = function() {
      return Kp ? "Message content must not be empty" : "\u6D88\u606F\u5185\u5BB9\u4E0D\u80FD\u4E3A\u7A7A";
    }, ig = function() {
      return Kp ? "Please select a file first" : "\u60A8\u6CA1\u6709\u9009\u62E9\u6587\u4EF6\uFF0C\u65E0\u6CD5\u53D1\u9001";
    }, ug = function() {
      return Kp ? "A message instance required" : "\u8BF7\u4F20\u5165\u6D88\u606F\uFF08Message\uFF09\u5B9E\u4F8B";
    }, cg = function() {
      return Kp ? "Non-anonymous Function recommended" : "\u63A8\u8350\u4F7F\u7528\u5177\u540D\u51FD\u6570";
    }, lg = function() {
      return Kp ? "Please check the status and isSupportExtension properties of the message" : "\u8BF7\u68C0\u67E5\u6D88\u606F\u7684 status \u548C isSupportExtension \u5C5E\u6027";
    }, dg = { type: "String", required: true }, pg = { type: "Array", required: true }, gg = { type: "Object", required: true }, hg = { type: "Boolean", required: true }, fg = { type: "number", required: true }, _g = { setIsIntl: function(e3) {
      Kp = e3;
    }, login: { userID: dg, userSig: dg }, addToBlacklist: { userIDList: pg }, removeFromBlacklist: { userIDList: pg }, on: [{ name: "eventName", type: "String", validator: function(e3) {
      return "string" == typeof e3 && 0 !== e3.length || (wl.warn(jp({ api: "on", param: "eventName", desc: Yp("eventName") })), false);
    } }, { name: "handler", type: "Function", validator: function(e3) {
      return "function" != typeof e3 ? (wl.warn(jp({ api: "on", param: "handler", desc: Xp() })), false) : ("" === e3.name && wl.warn(jp({ api: "on", param: "handler", desc: cg() })), true);
    } }], once: [{ name: "eventName", type: "String", validator: function(e3) {
      return "string" == typeof e3 && 0 !== e3.length || (wl.warn(jp({ api: "once", param: "eventName", desc: Yp("eventName") })), false);
    } }, { name: "handler", type: "Function", validator: function(e3) {
      return "function" != typeof e3 ? (wl.warn(jp({ api: "once", param: "handler", desc: Xp() })), false) : ("" === e3.name && wl.warn(jp({ api: "once", param: "handler", desc: cg() })), true);
    } }], off: [{ name: "eventName", type: "String", validator: function(e3) {
      return "string" == typeof e3 && 0 !== e3.length || (wl.warn(jp({ api: "off", param: "eventName", desc: Yp("eventName") })), false);
    } }, { name: "handler", type: "Function", validator: function(e3) {
      return "function" != typeof e3 ? (wl.warn(jp({ api: "off", param: "handler", desc: Xp() })), false) : ("" === e3.name && wl.warn(jp({ api: "off", param: "handler", desc: cg() })), true);
    } }], sendMessage: [t2({ name: "message" }, gg)], setMessageExtensions: [t2(t2({ name: "message" }, gg), {}, { validator: function(e3) {
      return e3.status === Vp.SUCCESS && true === e3.isSupportExtension || (wl.warn(jp({ api: "setMessageExtensions", param: "message", desc: lg() })), false);
    } }), t2({ name: "extensions" }, pg)], getMessageExtensions: [t2(t2({ name: "message" }, gg), {}, { validator: function(e3) {
      return e3.status === Vp.SUCCESS && true === e3.isSupportExtension || (wl.warn(jp({ api: "getMessageExtensions", param: "message", desc: lg() })), false);
    } })], deleteMessageExtensions: [t2(t2({ name: "message" }, gg), {}, { validator: function(e3) {
      return e3.status === Vp.SUCCESS && true === e3.isSupportExtension || (wl.warn(jp({ api: "deleteMessageExtensions", param: "message", desc: lg() })), false);
    } })], getMessageList: { conversationID: t2(t2({}, dg), {}, { validator: function(e3) {
      return Hp(e3);
    } }), nextReqMessageID: { type: "String" }, count: { type: "Number", validator: function(e3) {
      return !(!td(e3) && !/^[1-9][0-9]*$/.test(e3)) || (wl.warn(jp({ api: "getMessageList", param: "count", desc: tg() })), false);
    } } }, getMessageListHopping: { conversationID: t2(t2({}, dg), {}, { validator: function(e3) {
      return Hp(e3);
    } }), sequence: { type: "Number" }, time: { type: "Number" }, direction: { type: "Number", validator: function(e3) {
      return !(!td(e3) && 0 !== e3 && 1 !== e3) || (wl.warn(jp({ api: "getMessageListHopping", param: "direction", desc: Kp ? "0 or 1 required" : "\u5FC5\u987B\u4E3A0\u62161" })), false);
    } }, count: { type: "Number", validator: function(e3) {
      return !(!td(e3) && !/^[1-9][0-9]*$/.test(e3)) || (wl.warn(jp({ api: "getMessageListHopping", param: "count", desc: tg })), false);
    } } }, setMessageRead: { conversationID: t2(t2({}, dg), {}, { validator: function(e3) {
      return Hp(e3);
    } }) }, setAllMessageRead: { scope: { type: "String", required: false, validator: function(e3) {
      return !e3 || -1 !== [gr.READ_ALL_C2C_MSG, gr.READ_ALL_GROUP_MSG, gr.READ_ALL_MSG].indexOf(e3) || (wl.warn(jp({ api: "setAllMessageRead", param: "scope", desc: "TIM.TYPES.READ_ALL_C2C_MSG or TIM.TYPES.READ_ALL_GROUP_MSG or TIM.TYPES.READ_ALL_MSG required" })), false);
    } } }, getConversationProfile: [t2(t2({ name: "conversationID" }, dg), {}, { validator: function(e3) {
      return Hp(e3);
    } })], deleteConversation: [t2(t2({ name: "conversationID" }, dg), {}, { validator: function(e3) {
      return Hp(e3);
    } })], clearHistoryMessage: [t2(t2({ name: "conversationID" }, dg), {}, { validator: function(e3) {
      return Hp(e3);
    } })], pinConversation: { conversationID: t2(t2({}, dg), {}, { validator: function(e3) {
      return Hp(e3);
    } }), isPinned: t2({}, hg) }, setConversationCustomData: { conversationIDList: t2({}, pg), customData: { type: "String", validator: function(e3) {
      return Xl(e3) ? !(e3.length > 256) || (wl.warn(jp({ api: "setConversationCustomData", param: "customData", desc: ng("customData", 256) })), false) : (wl.warn(jp({ api: "setConversationCustomData", param: "customData", desc: Wp() })), false);
    } } }, markConversation: { conversationIDList: t2({}, pg), markType: { type: "number", validator: function(e3) {
      return Jl(e3) ? e3 <= 0 ? (wl.warn(jp({ api: "markConversation", param: "markType", desc: (t3 = "markType", n3 = 0, Kp ? "".concat(t3, " must be greater than ").concat(n3) : "".concat(t3, " \u5FC5\u987B\u5927\u4E8E").concat(n3)) })), false) : !(e3 >= Math.pow(2, 64)) || (wl.warn(jp({ api: "markConversation", param: "markType", desc: og("markType", "Math.pow(2,64)") })), false) : (wl.warn(jp({ api: "markConversation", param: "markType", desc: $p() })), false);
      var t3, n3;
    } }, enableMark: t2({}, hg) }, createConversationGroup: { conversationIDList: t2({}, pg), groupName: t2(t2({}, dg), {}, { validator: function(e3) {
      return !!e3 && (!(e3.length > 32) || (wl.warn(jp({ api: "createConversationGroup", param: "groupName", desc: ng("groupName", 32) })), false));
    } }) }, deleteConversationGroup: [t2({ name: "groupName" }, dg)], renameConversationGroup: { oldName: t2({}, dg), newName: t2(t2({}, dg), {}, { validator: function(e3) {
      return !!e3 && (!(e3.length > 32) || (wl.warn(jp({ api: "renameConversationGroup", param: "newName", desc: ng("newName", 32) })), false));
    } }) }, addConversationsToGroup: { conversationIDList: t2({}, pg), groupName: t2({}, dg) }, deleteConversationsFromGroup: { conversationIDList: t2({}, pg), groupName: t2({}, dg) }, getGroupList: { groupProfileFilter: { type: "Array" } }, getGroupProfile: { groupID: dg, groupCustomFieldFilter: { type: "Array" }, memberCustomFieldFilter: { type: "Array" } }, getGroupProfileAdvance: { groupIDList: pg }, createGroup: { name: dg }, joinGroup: { groupID: dg, type: { type: "String" }, applyMessage: { type: "String" } }, quitGroup: [t2({ name: "groupID" }, dg)], handleApplication: { message: gg, handleAction: dg, handleMessage: { type: "String" } }, changeGroupOwner: { groupID: dg, newOwnerID: dg }, updateGroupProfile: { groupID: dg, muteAllMembers: { type: "Boolean" } }, dismissGroup: [t2({ name: "groupID" }, dg)], searchGroupByID: [t2({ name: "groupID" }, dg)], initGroupAttributes: { groupID: dg, groupAttributes: t2(t2({}, gg), {}, { validator: function(e3) {
      var t3 = true;
      return Object.keys(e3).forEach(function(n3) {
        if (!Xl(e3[n3]))
          return wl.warn(jp({ api: "initGroupAttributes", param: "groupAttributes", desc: rg("value") })), t3 = false;
      }), t3;
    } }) }, setGroupAttributes: { groupID: dg, groupAttributes: t2(t2({}, gg), {}, { validator: function(e3) {
      var t3 = true;
      return Object.keys(e3).forEach(function(n3) {
        if (!Xl(e3[n3]))
          return wl.warn(jp({ api: "setGroupAttributes", param: "groupAttributes", desc: rg("value") })), t3 = false;
      }), t3;
    } }) }, deleteGroupAttributes: { groupID: dg, keyList: { type: "Array", validator: function(e3) {
      if (td(e3) || !ed(e3))
        return wl.warn(jp({ api: "deleteGroupAttributes", param: "keyList", desc: Qp() })), false;
      if (!Wd(e3)) {
        var t3 = true;
        return e3.forEach(function(e4) {
          if (!Xl(e4))
            return wl.warn(jp({ api: "deleteGroupAttributes", param: "keyList", desc: Kp ? "Type of the array element must be String" : "\u6570\u7EC4\u5143\u7D20\u7684\u7C7B\u578B\u5FC5\u987B\u4E3A String" })), t3 = false;
        }), t3;
      }
      return true;
    } } }, getGroupAttributes: { groupID: dg, keyList: { type: "Array", validator: function(e3) {
      if (td(e3) || !ed(e3))
        return wl.warn(jp({ api: "getGroupAttributes", param: "keyList", desc: Qp() })), false;
      if (!Wd(e3)) {
        var t3 = true;
        return e3.forEach(function(e4) {
          if (!Xl(e4))
            return wl.warn(jp({ api: "getGroupAttributes", param: "keyList", desc: rg("key") })), t3 = false;
        }), t3;
      }
      return true;
    } } }, setGroupCounters: { groupID: dg, counters: gg }, increaseGroupCounter: { groupID: dg, key: dg, value: fg }, decreaseGroupCounter: { groupID: dg, key: dg, value: fg }, getGroupCounters: { groupID: dg }, getGroupMemberList: { groupID: dg, count: { type: "Number" } }, getGroupMemberProfile: { groupID: dg, userIDList: pg, memberCustomFieldFilter: { type: "Array" } }, addGroupMember: { groupID: dg, userIDList: pg }, setGroupMemberRole: { groupID: dg, userID: dg, role: dg }, setGroupMemberMuteTime: { groupID: dg, userID: dg, muteTime: { type: "Number", validator: function(e3) {
      return e3 >= 0;
    } } }, setGroupMemberNameCard: { groupID: dg, userID: { type: "String" }, nameCard: { type: "String", validator: function(e3) {
      return Xl(e3) ? (e3.length, true) : (wl.warn(jp({ api: "setGroupMemberNameCard", param: "nameCard", desc: Wp() })), false);
    } } }, setGroupMemberCustomField: { groupID: dg, userID: { type: "String" }, memberCustomField: pg }, deleteGroupMember: { groupID: dg }, markGroupMemberList: { groupID: dg, markType: { type: "number", validator: function(e3) {
      return Jl(e3) ? !(e3 < 1e3) || (wl.warn(jp({ api: "markGroupMemberList", param: "markType", desc: (t3 = "markType", n3 = 1e3, Kp ? "".concat(t3, " must be greater than or equal to ").concat(n3) : "".concat(t3, " \u5FC5\u987B\u5927\u4E8E\u6216\u7B49\u4E8E").concat(n3)) })), false) : (wl.warn(jp({ api: "markGroupMemberList", param: "markType", desc: $p() })), false);
      var t3, n3;
    } }, userIDList: t2({}, pg), enableMark: t2({}, hg) }, createTextMessage: { to: dg, conversationType: dg, payload: t2(t2({}, gg), {}, { validator: function(e3) {
      return Zl(e3) ? Xl(e3.text) ? 0 !== e3.text.length || (wl.warn(jp({ api: "createTextMessage", param: "payload.text", desc: sg() })), false) : (wl.warn(jp({ api: "createTextMessage", param: "payload.text", desc: Wp() })), false) : (wl.warn(jp({ api: "createTextMessage", param: "payload", desc: ag() })), false);
    } }) }, createTextAtMessage: { to: dg, conversationType: dg, payload: t2(t2({}, gg), {}, { validator: function(e3) {
      return Zl(e3) ? Xl(e3.text) ? 0 === e3.text.length ? (wl.warn(jp({ api: "createTextAtMessage", param: "payload.text", desc: sg() })), false) : !(e3.atUserList && !ed(e3.atUserList)) || (wl.warn(jp({ api: "createTextAtMessage", param: "payload.atUserList", desc: Qp() })), false) : (wl.warn(jp({ api: "createTextAtMessage", param: "payload.text", desc: Wp() })), false) : (wl.warn(jp({ api: "createTextAtMessage", param: "payload", desc: ag() })), false);
    } }) }, createCustomMessage: { to: dg, conversationType: dg, payload: t2(t2({}, gg), {}, { validator: function(e3) {
      return Zl(e3) ? e3.data && !Xl(e3.data) ? (wl.warn(jp({ api: "createCustomMessage", param: "payload.data", desc: Wp() })), false) : e3.description && !Xl(e3.description) ? (wl.warn(jp({ api: "createCustomMessage", param: "payload.description", desc: Wp() })), false) : !(e3.extension && !Xl(e3.extension)) || (wl.warn(jp({ api: "createCustomMessage", param: "payload.extension", desc: Wp() })), false) : (wl.warn(jp({ api: "createCustomMessage", param: "payload", desc: ag() })), false);
    } }) }, createImageMessage: { to: dg, conversationType: dg, payload: t2(t2({}, gg), {}, { validator: function(e3) {
      if (!Zl(e3))
        return wl.warn(jp({ api: "createImageMessage", param: "payload", desc: ag() })), false;
      if (td(e3.file))
        return wl.warn(jp({ api: "createImageMessage", param: "payload.file", desc: zp() })), false;
      if (nl) {
        if (!(e3.file instanceof HTMLInputElement || zl(e3.file)))
          return Zl(e3.file) && "undefined" != typeof index$1 ? 0 !== e3.file.tempFilePaths.length && 0 !== e3.file.tempFiles.length || (wl.warn(jp({ api: "createImageMessage", param: "payload.file", desc: ig() })), false) : (wl.warn(jp({ api: "createImageMessage", param: "payload.file", desc: Jp() })), false);
        if (e3.file instanceof HTMLInputElement && 0 === e3.file.files.length)
          return wl.warn(jp({ api: "createImageMessage", param: "payload.file", desc: ig() })), false;
      }
      return true;
    }, onProgress: { type: "Function", required: false, validator: function(e3) {
      return td(e3) && wl.warn(jp({ api: "createImageMessage", param: "onProgress", desc: eg() })), true;
    } } }) }, createAudioMessage: { to: dg, conversationType: dg, payload: t2(t2({}, gg), {}, { validator: function(e3) {
      return !!Zl(e3) || (wl.warn(jp({ api: "createAudioMessage", param: "payload", desc: ag() })), false);
    } }), onProgress: { type: "Function", required: false, validator: function(e3) {
      return td(e3) && wl.warn(jp({ api: "createAudioMessage", param: "onProgress", desc: eg() })), true;
    } } }, createVideoMessage: { to: dg, conversationType: dg, payload: t2(t2({}, gg), {}, { validator: function(e3) {
      if (!Zl(e3))
        return wl.warn(jp({ api: "createVideoMessage", param: "payload", desc: ag() })), false;
      if (td(e3.file))
        return wl.warn(jp({ api: "createVideoMessage", param: "payload.file", desc: zp() })), false;
      if (nl) {
        if (!(e3.file instanceof HTMLInputElement || zl(e3.file)))
          return Zl(e3.file) && "undefined" != typeof index$1 ? !!zl(e3.file.tempFile) || (wl.warn(jp({ api: "createVideoMessage", param: "payload.file", desc: ig() })), false) : (wl.warn(jp({ api: "createVideoMessage", param: "payload.file", desc: Jp() })), false);
        if (e3.file instanceof HTMLInputElement && 0 === e3.file.files.length)
          return wl.warn(jp({ api: "createVideoMessage", param: "payload.file", desc: ig() })), false;
      }
      return true;
    } }), onProgress: { type: "Function", required: false, validator: function(e3) {
      return td(e3) && wl.warn(jp({ api: "createVideoMessage", param: "onProgress", desc: eg() })), true;
    } } }, createFaceMessage: { to: dg, conversationType: dg, payload: t2(t2({}, gg), {}, { validator: function(e3) {
      return Zl(e3) ? Jl(e3.index) ? !!Xl(e3.data) || (wl.warn(jp({ api: "createFaceMessage", param: "payload.data", desc: Wp() })), false) : (wl.warn(jp({ api: "createFaceMessage", param: "payload.index", desc: $p() })), false) : (wl.warn(jp({ api: "createFaceMessage", param: "payload", desc: ag() })), false);
    } }) }, createFileMessage: { to: dg, conversationType: dg, payload: t2(t2({}, gg), {}, { validator: function(e3) {
      if (!Zl(e3))
        return wl.warn(jp({ api: "createFileMessage", param: "payload", desc: ag() })), false;
      if (td(e3.file))
        return wl.warn(jp({ api: "createFileMessage", param: "payload.file", desc: zp() })), false;
      if (nl) {
        if (!(e3.file instanceof HTMLInputElement || zl(e3.file)))
          return Zl(e3.file) && "undefined" != typeof index$1 ? 0 !== e3.file.tempFilePaths.length && 0 !== e3.file.tempFiles.length || (wl.warn(jp({ api: "createFileMessage", param: "payload.file", desc: ig() })), false) : (wl.warn(jp({ api: "createFileMessage", param: "payload.file", desc: Jp() })), false);
        if (e3.file instanceof HTMLInputElement && 0 === e3.file.files.length)
          return wl.warn(jp({ api: "createFileMessage", param: "payload.file", desc: ig() })), false;
      }
      return true;
    } }), onProgress: { type: "Function", required: false, validator: function(e3) {
      return td(e3) && wl.warn(jp({ api: "createFileMessage", param: "onProgress", desc: eg() })), true;
    } } }, createLocationMessage: { to: dg, conversationType: dg, payload: t2(t2({}, gg), {}, { validator: function(e3) {
      return Zl(e3) ? Xl(e3.description) ? Jl(e3.longitude) ? !!Jl(e3.latitude) || (wl.warn(jp({ api: "createLocationMessage", param: "payload.latitude", desc: $p() })), false) : (wl.warn(jp({ api: "createLocationMessage", param: "payload.longitude", desc: $p() })), false) : (wl.warn(jp({ api: "createLocationMessage", param: "payload.description", desc: Wp() })), false) : (wl.warn(jp({ api: "createLocationMessage", param: "payload", desc: ag() })), false);
    } }) }, createMergerMessage: { to: dg, conversationType: dg, payload: t2(t2({}, gg), {}, { validator: function(e3) {
      if (Wd(e3.messageList))
        return wl.warn(jp({ api: "createMergerMessage", param: "payload.messageList", desc: Zp() })), false;
      if (Wd(e3.compatibleText))
        return wl.warn(jp({ api: "createMergerMessage", param: "payload.compatibleText", desc: Yp("compatibleText") })), false;
      var t3 = false;
      return e3.messageList.forEach(function(e4) {
        e4.status === Vp.FAIL && (t3 = true);
      }), !t3 || (wl.warn(jp({ api: "createMergerMessage", param: "payload.messageList", desc: Kp ? "Does not support combining messages that failed to sent" : "\u4E0D\u652F\u6301\u5408\u5E76\u5DF2\u53D1\u9001\u5931\u8D25\u7684\u6D88\u606F" })), false);
    } }) }, revokeMessage: [t2(t2({ name: "message" }, gg), {}, { validator: function(e3) {
      return Wd(e3) ? (wl.warn(jp({ api: "revokeMessage", param: "message", desc: ug() })), false) : e3.conversationType === gr.CONV_SYSTEM ? (wl.warn(jp({ api: "revokeMessage", param: "message", desc: Kp ? "Only one-to-one or group message can be recalled" : "\u4E0D\u652F\u6301\u64A4\u56DE\u7CFB\u7EDF\u4F1A\u8BDD\u6D88\u606F\uFF0C\u53EA\u652F\u6301\u64A4\u56DE\u5355\u804A\u6D88\u606F\u6216\u7FA4\u6D88\u606F" })), false) : true !== e3.isRevoked || (wl.warn(jp({ api: "revokeMessage", param: "message", desc: Kp ? "Message has been recalled" : "\u6D88\u606F\u5DF2\u7ECF\u88AB\u64A4\u56DE\uFF0C\u8BF7\u52FF\u91CD\u590D\u64CD\u4F5C" })), false);
    } })], deleteMessage: [t2(t2({ name: "messageList" }, pg), {}, { validator: function(e3) {
      return !Wd(e3) || (wl.warn(jp({ api: "deleteMessage", param: "messageList", desc: Zp() })), false);
    } })], translateText: { sourceTextList: pg, sourceLanguage: dg, targetLanguage: dg }, modifyMessage: [t2(t2({ name: "message" }, gg), {}, { validator: function(e3) {
      return Wd(e3) ? (wl.warn(jp({ api: "modifyMessage", param: "message", desc: ug() })), false) : e3.conversationType === gr.CONV_SYSTEM ? (wl.warn(jp({ api: "modifyMessage", param: "message", desc: Kp ? "Only one-to-one or group message can be modified" : "\u4E0D\u652F\u6301\u4FEE\u6539\u7CFB\u7EDF\u4F1A\u8BDD\u6D88\u606F\uFF0C\u53EA\u652F\u6301\u4FEE\u6539\u5355\u804A\u6D88\u606F\u6216\u7FA4\u6D88\u606F" })), false) : true !== e3._onlineOnlyFlag || (wl.warn(jp({ api: "modifyMessage", param: "message", desc: Kp ? "Does not support modifying online message" : "\u4E0D\u652F\u6301\u4FEE\u6539\u5728\u7EBF\u6D88\u606F" })), false);
    } })], getUserProfile: { userIDList: { type: "Array", validator: function(e3) {
      return ed(e3) ? (0 === e3.length && wl.warn(jp({ api: "getUserProfile", param: "userIDList", desc: Zp() })), true) : (wl.warn(jp({ api: "getUserProfile", param: "userIDList", desc: Qp() })), false);
    } } }, updateMyProfile: { profileCustomField: { type: "Array", validator: function(e3) {
      return !!td(e3) || (!!ed(e3) || (wl.warn(jp({ api: "updateMyProfile", param: "profileCustomField", desc: Qp() })), false));
    } } }, setSelfStatus: { customStatus: { type: "String", validator: function(e3) {
      return !!Xl(e3) || (wl.warn(jp({ api: "setSelfStatus", param: "customStatus", desc: Wp() })), false);
    } } }, getUserStatus: { userIDList: { type: "Array", validator: function(e3) {
      return ed(e3) ? 0 !== e3.length || (wl.warn(jp({ api: "getUserStatus", param: "userIDList", desc: Zp() })), false) : (wl.warn(jp({ api: "getUserStatus", param: "userIDList", desc: Qp() })), false);
    } } }, subscribeUserStatus: { userIDList: { type: "Array", validator: function(e3) {
      return ed(e3) ? 0 !== e3.length || (wl.warn(jp({ api: "subscribeUserStatus", param: "userIDList", desc: Zp() })), false) : (wl.warn(jp({ api: "subscribeUserStatus", param: "userIDList", desc: Qp() })), false);
    } } }, unsubscribeUserStatus: { userIDList: { type: "Array", validator: function(e3) {
      return !e3 || (!!ed(e3) || (wl.warn(jp({ api: "subscribeUserStatus", param: "userIDList", desc: Qp() })), false));
    } } }, addFriend: { to: dg, source: { type: "String", required: true, validator: function(e3) {
      return !!e3 && (e3.startsWith("AddSource_Type_") ? !(e3.replace("AddSource_Type_", "").length > 8) || (wl.warn(jp({ api: "addFriend", param: "source", desc: ng("keyword", 8) })), false) : (wl.warn(jp({ api: "addFriend", param: "source", desc: Kp ? "The prefix of the source field is AddSource_Type_" : "\u524D\u7F00\u5FC5\u987B\u662F\uFF1AAddSource_Type_" })), false));
    } }, remark: { type: "String", required: false, validator: function(e3) {
      return !(Xl(e3) && e3.length > 96) || (wl.warn(jp({ api: "addFriend", param: "remark", desc: ng("remark", 96) })), false);
    } } }, deleteFriend: { userIDList: pg }, checkFriend: { userIDList: pg }, getFriendProfile: { userIDList: pg }, updateFriend: { userID: dg, remark: { type: "String", required: false, validator: function(e3) {
      return !(Xl(e3) && e3.length > 96) || (wl.warn(jp({ api: "updateFriend", param: "remark", desc: ng("remark", 96) })), false);
    } }, friendCustomField: { type: "Array", required: false, validator: function(e3) {
      if (e3) {
        if (!ed(e3))
          return wl.warn(jp({ api: "updateFriend", param: "friendCustomField", desc: Qp() })), false;
        var t3 = true;
        return e3.forEach(function(e4) {
          return Xl(e4.key) && -1 !== e4.key.indexOf("Tag_SNS_Custom") ? Xl(e4.value) ? e4.key.replace("Tag_SNS_Custom_", "").length > 8 ? (wl.warn(jp({ api: "updateFriend", param: "friendCustomField", desc: ng("keyword", 8) })), t3 = false) : void 0 : (wl.warn(jp({ api: "updateFriend", param: "friendCustomField", desc: rg("value") })), t3 = false) : (wl.warn(jp({ api: "updateFriend", param: "friendCustomField", desc: Kp ? "The prefix of the friendCustomField is Tag_SNS_Custom" : "\u524D\u7F00\u5FC5\u987B\u662F Tag_SNS_Custom" })), t3 = false);
        }), t3;
      }
      return true;
    } } }, acceptFriendApplication: { userID: dg }, refuseFriendApplication: { userID: dg }, deleteFriendApplication: { userID: dg }, createFriendGroup: { name: dg }, deleteFriendGroup: { name: dg }, addToFriendGroup: { name: dg, userIDList: pg }, removeFromFriendGroup: { name: dg, userIDList: pg }, renameFriendGroup: { oldName: dg, newName: dg }, sendMessageReadReceipt: [{ name: "messageList", type: "Array", validator: function(e3) {
      return ed(e3) ? 0 !== e3.length || (wl.warn(jp({ api: "sendMessageReadReceipt", param: "messageList", desc: Zp() })), false) : (wl.warn(jp({ api: "sendMessageReadReceipt", param: "messageList", desc: Qp() })), false);
    } }], getMessageReadReceiptList: [{ name: "messageList", type: "Array", validator: function(e3) {
      return ed(e3) ? 0 !== e3.length || (wl.warn(jp({ api: "getMessageReadReceiptList", param: "messageList", desc: Zp() })), false) : (wl.warn(jp({ api: "getMessageReadReceiptList", param: "messageList", desc: Qp() })), false);
    } }], createTopicInCommunity: { groupID: dg, topicName: dg }, deleteTopicFromCommunity: { groupID: dg, topicIDList: { type: "Array", validator: function(e3) {
      return !e3 || (!!ed(e3) || (wl.warn(jp({ api: "deleteTopicFromCommunity", param: "topicIDList", desc: Qp() })), false));
    } } }, updateTopicProfile: { groupID: dg, topicID: dg }, getTopicList: { groupID: dg, topicIDList: { type: "Array", validator: function(e3) {
      return !e3 || (!!ed(e3) || (wl.warn(jp({ api: "getTopicList", param: "topicIDList", desc: Qp() })), false));
    } } } }, mg = { login: "login", logout: "logout", on: "on", once: "once", off: "off", setLogLevel: "setLogLevel", registerPlugin: "registerPlugin", destroy: "destroy", createTextMessage: "createTextMessage", createTextAtMessage: "createTextAtMessage", createImageMessage: "createImageMessage", createAudioMessage: "createAudioMessage", createVideoMessage: "createVideoMessage", createCustomMessage: "createCustomMessage", createFaceMessage: "createFaceMessage", createFileMessage: "createFileMessage", createLocationMessage: "createLocationMessage", createMergerMessage: "createMergerMessage", downloadMergerMessage: "downloadMergerMessage", createForwardMessage: "createForwardMessage", sendMessage: "sendMessage", resendMessage: "resendMessage", revokeMessage: "revokeMessage", deleteMessage: "deleteMessage", translateText: "translateText", modifyMessage: "modifyMessage", sendMessageReadReceipt: "sendMessageReadReceipt", getGroupMessageReadMemberList: "getGroupMessageReadMemberList", getMessageReadReceiptList: "getMessageReadReceiptList", setMessageExtensions: "setMessageExtensions", getMessageExtensions: "getMessageExtensions", deleteMessageExtensions: "deleteMessageExtensions", getMessageList: "getMessageList", findMessage: "findMessage", getMessageListHopping: "getMessageListHopping", setMessageRead: "setMessageRead", setAllMessageRead: "setAllMessageRead", getConversationList: "getConversationList", getConversationProfile: "getConversationProfile", deleteConversation: "deleteConversation", pinConversation: "pinConversation", getTotalUnreadMessageCount: "getTotalUnreadMessageCount", setConversationCustomData: "setConversationCustomData", markConversation: "markConversation", createConversationGroup: "createConversationGroup", getConversationGroupList: "getConversationGroupList", deleteConversationGroup: "deleteConversationGroup", renameConversationGroup: "renameConversationGroup", addConversationsToGroup: "addConversationsToGroup", deleteConversationsFromGroup: "deleteConversationsFromGroup", clearHistoryMessage: "clearHistoryMessage", getGroupList: "getGroupList", getGroupProfile: "getGroupProfile", createGroup: "createGroup", joinGroup: "joinGroup", updateGroupProfile: "updateGroupProfile", quitGroup: "quitGroup", dismissGroup: "dismissGroup", changeGroupOwner: "changeGroupOwner", searchGroupByID: "searchGroupByID", setMessageRemindType: "setMessageRemindType", getGroupApplicationList: "getGroupApplicationList", handleGroupApplication: "handleGroupApplication", initGroupAttributes: "initGroupAttributes", setGroupAttributes: "setGroupAttributes", deleteGroupAttributes: "deleteGroupAttributes", getGroupAttributes: "getGroupAttributes", setGroupCounters: "setGroupCounters", increaseGroupCounter: "increaseGroupCounter", decreaseGroupCounter: "decreaseGroupCounter", getGroupCounters: "getGroupCounters", getJoinedCommunityList: "getJoinedCommunityList", createTopicInCommunity: "createTopicInCommunity", deleteTopicFromCommunity: "deleteTopicFromCommunity", updateTopicProfile: "updateTopicProfile", getTopicList: "getTopicList", getGroupMemberProfile: "getGroupMemberProfile", getGroupMemberList: "getGroupMemberList", addGroupMember: "addGroupMember", deleteGroupMember: "deleteGroupMember", setGroupMemberNameCard: "setGroupMemberNameCard", setGroupMemberMuteTime: "setGroupMemberMuteTime", setGroupMemberRole: "setGroupMemberRole", setGroupMemberCustomField: "setGroupMemberCustomField", getGroupOnlineMemberCount: "getGroupOnlineMemberCount", markGroupMemberList: "markGroupMemberList", getMyProfile: "getMyProfile", getUserProfile: "getUserProfile", updateMyProfile: "updateMyProfile", setSelfStatus: "setSelfStatus", getUserStatus: "getUserStatus", subscribeUserStatus: "subscribeUserStatus", unsubscribeUserStatus: "unsubscribeUserStatus", getBlacklist: "getBlacklist", addToBlacklist: "addToBlacklist", removeFromBlacklist: "removeFromBlacklist", getFriendList: "getFriendList", addFriend: "addFriend", deleteFriend: "deleteFriend", checkFriend: "checkFriend", updateFriend: "updateFriend", getFriendProfile: "getFriendProfile", getFriendApplicationList: "getFriendApplicationList", refuseFriendApplication: "refuseFriendApplication", deleteFriendApplication: "deleteFriendApplication", acceptFriendApplication: "acceptFriendApplication", setFriendApplicationRead: "setFriendApplicationRead", getFriendGroupList: "getFriendGroupList", createFriendGroup: "createFriendGroup", renameFriendGroup: "renameFriendGroup", deleteFriendGroup: "deleteFriendGroup", addToFriendGroup: "addToFriendGroup", removeFromFriendGroup: "removeFromFriendGroup", callExperimentalAPI: "callExperimentalAPI" }, vg = !!Ni && O2(function() {
      Ni.prototype.finally.call({ then: function() {
      } }, function() {
      });
    });
    if (nn({ target: "Promise", proto: true, real: true, forced: vg }, { finally: function(e3) {
      var t3 = xi(this, oe2("Promise")), n3 = ee2(e3);
      return this.then(n3 ? function(n4) {
        return Du(t3, e3()).then(function() {
          return n4;
        });
      } : e3, n3 ? function(n4) {
        return Du(t3, e3()).then(function() {
          throw n4;
        });
      } : e3);
    } }), ee2(Ni)) {
      var Mg = oe2("Promise").prototype.finally;
      Ni.prototype.finally !== Mg && Dt(Ni.prototype, "finally", Mg, { unsafe: true });
    }
    var yg = O2(function() {
      if ("function" == typeof ArrayBuffer) {
        var e3 = new ArrayBuffer(8);
        Object.isExtensible(e3) && Object.defineProperty(e3, "a", { value: 8 });
      }
    }), Ig = Object.isExtensible, Tg = O2(function() {
      Ig(1);
    }) || yg ? function(e3) {
      return !!te2(e3) && ((!yg || "ArrayBuffer" != Y2(e3)) && (!Ig || Ig(e3)));
    } : Ig, Cg = !O2(function() {
      return Object.isExtensible(Object.preventExtensions({}));
    }), Eg = D2(function(e3) {
      var t3 = nt2.f, n3 = false, o3 = Le2("meta"), r3 = 0, a3 = function(e4) {
        t3(e4, o3, { value: { objectID: "O" + r3++, weakData: {} } });
      }, s3 = e3.exports = { enable: function() {
        s3.enable = function() {
        }, n3 = true;
        var e4 = Kt.f, t4 = H2([].splice), r4 = {};
        r4[o3] = 1, e4(r4).length && (Kt.f = function(n4) {
          for (var r5 = e4(n4), a4 = 0, s4 = r5.length; a4 < s4; a4++)
            if (r5[a4] === o3) {
              t4(r5, a4, 1);
              break;
            }
          return r5;
        }, nn({ target: "Object", stat: true, forced: true }, { getOwnPropertyNames: di.f }));
      }, fastKey: function(e4, t4) {
        if (!te2(e4))
          return "symbol" == typeof e4 ? e4 : ("string" == typeof e4 ? "S" : "P") + e4;
        if (!Ae2(e4, o3)) {
          if (!Tg(e4))
            return "F";
          if (!t4)
            return "E";
          a3(e4);
        }
        return e4[o3].objectID;
      }, getWeakData: function(e4, t4) {
        if (!Ae2(e4, o3)) {
          if (!Tg(e4))
            return true;
          if (!t4)
            return false;
          a3(e4);
        }
        return e4[o3].weakData;
      }, onFreeze: function(e4) {
        return Cg && n3 && Tg(e4) && !Ae2(e4, o3) && a3(e4), e4;
      } };
      gt2[o3] = true;
    }), Sg = (Eg.enable, Eg.fastKey, Eg.getWeakData, Eg.onFreeze, nt2.f), Dg = Eg.fastKey, Ng = It2.set, Ag = It2.getterFor;
    !function(e3, t3, n3) {
      var o3 = -1 !== e3.indexOf("Map"), r3 = -1 !== e3.indexOf("Weak"), a3 = o3 ? "set" : "add", s3 = R2[e3], i3 = s3 && s3.prototype, u3 = s3, c3 = {}, l3 = function(e4) {
        var t4 = H2(i3[e4]);
        Dt(i3, e4, "add" == e4 ? function(e5) {
          return t4(this, 0 === e5 ? 0 : e5), this;
        } : "delete" == e4 ? function(e5) {
          return !(r3 && !te2(e5)) && t4(this, 0 === e5 ? 0 : e5);
        } : "get" == e4 ? function(e5) {
          return r3 && !te2(e5) ? void 0 : t4(this, 0 === e5 ? 0 : e5);
        } : "has" == e4 ? function(e5) {
          return !(r3 && !te2(e5)) && t4(this, 0 === e5 ? 0 : e5);
        } : function(e5, n4) {
          return t4(this, 0 === e5 ? 0 : e5, n4), this;
        });
      };
      if (en(e3, !ee2(s3) || !(r3 || i3.forEach && !O2(function() {
        new s3().entries().next();
      }))))
        u3 = n3.getConstructor(t3, e3, o3, a3), Eg.enable();
      else if (en(e3, true)) {
        var d3 = new u3(), p3 = d3[a3](r3 ? {} : -0, 1) != d3, g3 = O2(function() {
          d3.has(1);
        }), h3 = ko(function(e4) {
          new s3(e4);
        }), f3 = !r3 && O2(function() {
          for (var e4 = new s3(), t4 = 5; t4--; )
            e4[a3](t4, t4);
          return !e4.has(-0);
        });
        h3 || ((u3 = t3(function(e4, t4) {
          Li(e4, i3);
          var n4 = Fr(new s3(), e4, u3);
          return null != t4 && bi(t4, n4[a3], { that: n4, AS_ENTRIES: o3 }), n4;
        })).prototype = i3, i3.constructor = u3), (g3 || f3) && (l3("delete"), l3("has"), o3 && l3("get")), (f3 || p3) && l3(a3), r3 && i3.clear && delete i3.clear;
      }
      c3[e3] = u3, nn({ global: true, forced: u3 != s3 }, c3), zo(u3, e3), r3 || n3.setStrong(u3, e3, o3);
    }("Map", function(e3) {
      return function() {
        return e3(this, arguments.length ? arguments[0] : void 0);
      };
    }, { getConstructor: function(e3, t3, n3, o3) {
      var r3 = e3(function(e4, r4) {
        Li(e4, a3), Ng(e4, { type: t3, index: Un2(null), first: void 0, last: void 0, size: 0 }), L2 || (e4.size = 0), null != r4 && bi(r4, e4[o3], { that: e4, AS_ENTRIES: n3 });
      }), a3 = r3.prototype, s3 = Ag(t3), i3 = function(e4, t4, n4) {
        var o4, r4, a4 = s3(e4), i4 = u3(e4, t4);
        return i4 ? i4.value = n4 : (a4.last = i4 = { index: r4 = Dg(t4, true), key: t4, value: n4, previous: o4 = a4.last, next: void 0, removed: false }, a4.first || (a4.first = i4), o4 && (o4.next = i4), L2 ? a4.size++ : e4.size++, "F" !== r4 && (a4.index[r4] = i4)), e4;
      }, u3 = function(e4, t4) {
        var n4, o4 = s3(e4), r4 = Dg(t4);
        if ("F" !== r4)
          return o4.index[r4];
        for (n4 = o4.first; n4; n4 = n4.next)
          if (n4.key == t4)
            return n4;
      };
      return Ai(a3, { clear: function() {
        for (var e4 = s3(this), t4 = e4.index, n4 = e4.first; n4; )
          n4.removed = true, n4.previous && (n4.previous = n4.previous.next = void 0), delete t4[n4.index], n4 = n4.next;
        e4.first = e4.last = void 0, L2 ? e4.size = 0 : this.size = 0;
      }, delete: function(e4) {
        var t4 = s3(this), n4 = u3(this, e4);
        if (n4) {
          var o4 = n4.next, r4 = n4.previous;
          delete t4.index[n4.index], n4.removed = true, r4 && (r4.next = o4), o4 && (o4.previous = r4), t4.first == n4 && (t4.first = o4), t4.last == n4 && (t4.last = r4), L2 ? t4.size-- : this.size--;
        }
        return !!n4;
      }, forEach: function(e4) {
        for (var t4, n4 = s3(this), o4 = wn2(e4, arguments.length > 1 ? arguments[1] : void 0); t4 = t4 ? t4.next : n4.first; )
          for (o4(t4.value, t4.key, this); t4 && t4.removed; )
            t4 = t4.previous;
      }, has: function(e4) {
        return !!u3(this, e4);
      } }), Ai(a3, n3 ? { get: function(e4) {
        var t4 = u3(this, e4);
        return t4 && t4.value;
      }, set: function(e4, t4) {
        return i3(this, 0 === e4 ? 0 : e4, t4);
      } } : { add: function(e4) {
        return i3(this, e4 = 0 === e4 ? 0 : e4, e4);
      } }), L2 && Sg(a3, "size", { get: function() {
        return s3(this).size;
      } }), r3;
    }, setStrong: function(e3, t3, n3) {
      var o3 = t3 + " Iterator", r3 = Ag(t3), a3 = Ag(o3);
      ur(e3, t3, function(e4, t4) {
        Ng(this, { type: o3, target: e4, state: r3(e4), kind: t4, last: void 0 });
      }, function() {
        for (var e4 = a3(this), t4 = e4.kind, n4 = e4.last; n4 && n4.removed; )
          n4 = n4.previous;
        return e4.target && (e4.last = n4 = n4 ? n4.next : e4.state.first) ? "keys" == t4 ? { value: n4.key, done: false } : "values" == t4 ? { value: n4.value, done: false } : { value: [n4.key, n4.value], done: false } : (e4.target = void 0, { value: void 0, done: true });
      }, n3 ? "entries" : "values", !n3, true), Ri(t3);
    } });
    var kg = /MSIE .\./.test(ae2), Rg = R2.Function, Og = function(e3) {
      return function(t3, n3) {
        var o3 = Bi(arguments.length, 1) > 2, r3 = ee2(t3) ? t3 : Rg(t3), a3 = o3 ? hr(arguments, 2) : void 0;
        return e3(o3 ? function() {
          Ts2(r3, this, a3);
        } : r3, n3);
      };
    };
    nn({ global: true, bind: true, forced: kg }, { setTimeout: Og(R2.setTimeout), setInterval: Og(R2.setInterval) });
    var Lg = Zn2.filter, Gg = Tr("filter");
    nn({ target: "Array", proto: true, forced: !Gg }, { filter: function(e3) {
      return Lg(this, e3, arguments.length > 1 ? arguments[1] : void 0);
    } });
    var Pg, Ug = "sign", bg = "message", wg = "messageExtension", Fg = "user", qg = "c2c", xg = "group", Vg = "sns", Bg = "groupMember", Kg = "Topic", Hg = "conversation", jg = "context", Wg = "storage", Yg = "eventStat", $g = "netMonitor", zg = "bigDataChannel", Jg = "upload", Xg = "plugin", Qg = "syncUnreadMessage", Zg = "session", eh = "channel", th = "message_loss_detection", nh = "cloudControl", oh = "workerTimer", rh = "recoverMessage", ah = "qualityStat", sh = "commercialConfig", ih = "offlinePush", uh = "profanityFilter", ch = "transCmd", lh = "comboMessage", dh = { NO_SDKAPPID: 2e3, NO_ACCOUNT_TYPE: 2001, NO_IDENTIFIER: 2002, NO_USERSIG: 2003, NO_TINYID: 2022, NO_A2KEY: 2023, USER_NOT_LOGGED_IN: 2024, REPEAT_LOGIN: 2025, COS_UNDETECTED: 2040, COS_GET_SIG_FAIL: 2041, MESSAGE_SEND_FAIL: 2100, MESSAGE_SEND_FAIL_NOT_IN_AVCHATROOM: 2101, MESSAGE_SEND_NEED_MESSAGE_INSTANCE: 2105, MESSAGE_SEND_INVALID_CONVERSATION_TYPE: 2106, MESSAGE_FILE_IS_EMPTY: 2108, MESSAGE_ONPROGRESS_FUNCTION_ERROR: 2109, MESSAGE_REVOKE_FAIL: 2110, MESSAGE_DELETE_FAIL: 2111, MESSAGE_UNREAD_ALL_FAIL: 2112, READ_RECEIPT_MESSAGE_LIST_EMPTY: 2114, MESSAGE_SEND_GROUP_WITH_TOPIC_FAIL: 2115, CANNOT_DELETE_GROUP_SYSTEM_NOTICE: 2116, TRANSLATE_TEXT_FAIL: 2117, MESSAGE_IMAGE_SELECT_FILE_FIRST: 2251, MESSAGE_IMAGE_TYPES_LIMIT: 2252, MESSAGE_IMAGE_SIZE_LIMIT: 2253, MESSAGE_AUDIO_UPLOAD_FAIL: 2300, MESSAGE_AUDIO_SIZE_LIMIT: 2301, MESSAGE_VIDEO_UPLOAD_FAIL: 2350, MESSAGE_VIDEO_SIZE_LIMIT: 2351, MESSAGE_VIDEO_TYPES_LIMIT: 2352, MESSAGE_FILE_UPLOAD_FAIL: 2400, MESSAGE_FILE_SELECT_FILE_FIRST: 2401, MESSAGE_FILE_SIZE_LIMIT: 2402, MESSAGE_FILE_URL_IS_EMPTY: 2403, MESSAGE_MERGER_TYPE_INVALID: 2450, MESSAGE_MERGER_KEY_INVALID: 2451, MESSAGE_MERGER_DOWNLOAD_FAIL: 2452, MESSAGE_FORWARD_TYPE_INVALID: 2453, MESSAGE_MODIFY_CONFLICT: 2480, MESSAGE_MODIFY_DISABLED_IN_AVCHATROOM: 2481, CONVERSATION_NOT_FOUND: 2500, USER_OR_GROUP_NOT_FOUND: 2501, CONVERSATION_UN_RECORDED_TYPE: 2502, INVALID_CONVERSATION_ID: 2503, ILLEGAL_GROUP_TYPE: 2600, CANNOT_JOIN_WORK: 2601, ILLEGAL_GROUP_ID: 2602, CANNOT_FIND_GROUP: 2603, CANNOT_CHANGE_OWNER_IN_AVCHATROOM: 2620, CANNOT_CHANGE_OWNER_TO_SELF: 2621, CANNOT_DISMISS_WORK: 2622, MEMBER_NOT_IN_GROUP: 2623, JOIN_GROUP_FAIL: 2660, CANNOT_ADD_MEMBER_IN_AVCHATROOM: 2661, CANNOT_JOIN_NON_AVCHATROOM_WITHOUT_LOGIN: 2662, NOT_OWNER: 2681, CANNOT_SET_MEMBER_ROLE_IN_WORK_AND_AVCHATROOM: 2682, INVALID_MEMBER_ROLE: 2683, CANNOT_SET_SELF_MEMBER_ROLE: 2684, CANNOT_MUTE_SELF: 2685, BAN_DURATION_INVALID: 2686, NOT_MY_FRIEND: 2700, ALREADY_MY_FRIEND: 2701, FRIEND_GROUP_EXISTED: 2710, FRIEND_GROUP_NOT_EXIST: 2711, FRIEND_APPLICATION_NOT_EXIST: 2716, UPDATE_PROFILE_INVALID_PARAM: 2721, UPDATE_PROFILE_NO_KEY: 2722, CANNOT_ADD_SELF_TO_BLACKLIST: 2742, NETWORK_ERROR: 2800, NETWORK_TIMEOUT: 2801, NO_NETWORK: 2805, UNCAUGHT_ERROR: 2903, INVALID_OPERATION: 2905, OVER_FREQUENCY_LIMIT: 2996, CANNOT_FIND_PROTOCOL: 2997, CANNOT_FIND_MODULE: 2998, SDK_IS_NOT_READY: 2999, LOGGING_IN: 3e3, LOGIN_FAILED: 3001, KICKED_OUT_MULT_DEVICE: 3002, KICKED_OUT_MULT_ACCOUNT: 3003, KICKED_OUT_USERSIG_EXPIRED: 3004, LOGGED_OUT: 3005, KICKED_OUT_REST_API: 3006, ILLEGAL_TOPIC_ID: 3021, CANNOT_USE_COMMERCIAL_ABILITY: 3122, PROFANITY_FOUND: 3123, MESSAGE_A2KEY_EXPIRED: 20002, ACCOUNT_A2KEY_EXPIRED: 70001, HELLO_ANSWER_KICKED_OUT: 1002, OPEN_SERVICE_OVERLOAD_ERROR: 60022 }, ph = { 2e3: "\u65E0 SDKAppID", 2022: "\u65E0 tinyID", 2023: "\u65E0 a2key", 2024: "\u7528\u6237\u672A\u767B\u5F55", 2025: "\u91CD\u590D\u767B\u5F55", 2040: "\u672A\u68C0\u6D4B\u5230\u4E0A\u4F20\u63D2\u4EF6", 2041: "\u83B7\u53D6 COS \u9884\u7B7E\u540D URL \u5931\u8D25", 2100: "\u6D88\u606F\u53D1\u9001\u5931\u8D25", 2101: "\u672A\u52A0\u5165\u76F4\u64AD\u7FA4\u4E0D\u80FD\u5411\u76F4\u64AD\u7FA4\u53D1\u9001\u6D88\u606F", 2105: "\u9700\u8981 Message \u7684\u5B9E\u4F8B", 2106: 'Message.conversationType \u53EA\u80FD\u4E3A "C2C" \u6216 "GROUP"', 2108: "\u65E0\u6CD5\u53D1\u9001\u7A7A\u6587\u4EF6", 2109: "\u56DE\u8C03\u51FD\u6570\u8FD0\u884C\u65F6\u9047\u5230\u9519\u8BEF\uFF0C\u8BF7\u68C0\u67E5\u63A5\u5165\u4FA7\u4EE3\u7801", 2110: "\u6D88\u606F\u64A4\u56DE\u5931\u8D25", 2111: "\u6D88\u606F\u5220\u9664\u5931\u8D25", 2112: "\u8BBE\u7F6E\u6240\u6709\u672A\u8BFB\u6D88\u606F\u4E3A\u5DF2\u8BFB\u5904\u7406\u5931\u8D25", 2114: "\u6D88\u606F\u5217\u8868\u4E2D\u6CA1\u6709\u9700\u8981\u53D1\u9001\u5DF2\u8BFB\u56DE\u6267\u7684\u6D88\u606F", 2115: "\u4E0D\u80FD\u5728\u652F\u6301\u8BDD\u9898\u7684\u7FA4\u7EC4\u4E2D\u53D1\u6D88\u606F\uFF0C\u8BF7\u68C0\u67E5\u7FA4\u7EC4 isSupportTopic \u5C5E\u6027", 2116: "\u4E0D\u652F\u6301\u5220\u9664\u7FA4\u7CFB\u7EDF\u901A\u77E5", 2117: "\u7FFB\u8BD1\u6587\u672C\u5931\u8D25", 2251: "\u8BF7\u5148\u9009\u62E9\u4E00\u5F20\u56FE\u7247", 2252: "\u53EA\u5141\u8BB8\u4E0A\u4F20 jpg png jpeg gif bmp image webp \u683C\u5F0F\u7684\u56FE\u7247", 2253: "\u56FE\u7247\u5927\u5C0F\u8D85\u8FC720M\uFF0C\u65E0\u6CD5\u53D1\u9001", 2300: "\u8BED\u97F3\u4E0A\u4F20\u5931\u8D25", 2301: "\u8BED\u97F3\u5927\u5C0F\u8D85\u8FC720M\uFF0C\u65E0\u6CD5\u53D1\u9001", 2350: "\u89C6\u9891\u4E0A\u4F20\u5931\u8D25", 2351: "\u89C6\u9891\u5927\u5C0F\u8D85\u8FC7100M\uFF0C\u65E0\u6CD5\u53D1\u9001", 2352: "\u53EA\u5141\u8BB8\u4E0A\u4F20 mp4/mov \u683C\u5F0F\u7684\u89C6\u9891", 2400: "\u6587\u4EF6\u4E0A\u4F20\u5931\u8D25", 2401: "\u8BF7\u5148\u9009\u62E9\u4E00\u4E2A\u6587\u4EF6", 2402: "\u6587\u4EF6\u5927\u5C0F\u8D85\u8FC7100M\uFF0C\u65E0\u6CD5\u53D1\u9001", 2403: "\u7F3A\u5C11\u5FC5\u8981\u7684\u53C2\u6570\u6587\u4EF6 URL", 2450: "\u975E\u5408\u5E76\u6D88\u606F", 2451: "\u5408\u5E76\u6D88\u606F\u7684 messageKey \u65E0\u6548", 2452: "\u4E0B\u8F7D\u5408\u5E76\u6D88\u606F\u5931\u8D25", 2453: "\u9009\u62E9\u7684\u6D88\u606F\u7C7B\u578B\uFF08\u5982\u7FA4\u63D0\u793A\u6D88\u606F\uFF09\u4E0D\u53EF\u4EE5\u8F6C\u53D1", 2480: "\u4FEE\u6539\u6D88\u606F\u65F6\u53D1\u751F\u51B2\u7A81", 2481: "\u76F4\u64AD\u7FA4\u4E0D\u652F\u6301\u4FEE\u6539\u6D88\u606F", 2500: "\u6CA1\u6709\u627E\u5230\u76F8\u5E94\u7684\u4F1A\u8BDD\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u53C2\u6570", 2501: "\u6CA1\u6709\u627E\u5230\u76F8\u5E94\u7684\u7528\u6237\u6216\u7FA4\u4E3B\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u53C2\u6570", 2502: "\u672A\u8BB0\u5F55\u7684\u4F1A\u8BDD\u7C7B\u578B", 2503: "\u65E0\u6548\u7684\u4F1A\u8BDD ID", 2600: "\u975E\u6CD5\u7684\u7FA4\u7C7B\u578B\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u53C2\u6570", 2601: "\u4E0D\u80FD\u52A0\u5165 Work \u7C7B\u578B\u7684\u7FA4\u7EC4", 2602: "\u7FA4\u7EC4 ID \u975E\u6CD5", 2603: "\u627E\u4E0D\u5230\u6307\u5B9A ID \u7684\u7FA4\u7EC4", 2620: "AVChatRoom \u7C7B\u578B\u7684\u7FA4\u7EC4\u4E0D\u80FD\u8F6C\u8BA9\u7FA4\u4E3B", 2621: "\u4E0D\u80FD\u628A\u7FA4\u4E3B\u8F6C\u8BA9\u7ED9\u81EA\u5DF1", 2622: "\u4E0D\u80FD\u89E3\u6563 Work \u7C7B\u578B\u7684\u7FA4\u7EC4", 2623: "\u7528\u6237\u4E0D\u5728\u8BE5\u7FA4\u7EC4\u5185", 2660: "\u52A0\u7FA4\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u53C2\u6570\u6216\u91CD\u8BD5", 2661: "AVChatRoom \u7C7B\u578B\u7684\u7FA4\u4E0D\u652F\u6301\u9080\u8BF7\u7FA4\u6210\u5458", 2662: "\u975E AVChatRoom \u7C7B\u578B\u7684\u7FA4\u7EC4\u4E0D\u5141\u8BB8\u533F\u540D\u52A0\u7FA4\uFF0C\u8BF7\u5148\u767B\u5F55\u540E\u518D\u52A0\u7FA4", 2681: "\u4F60\u4E0D\u662F\u7FA4\u4E3B\uFF0C\u53EA\u6709\u7FA4\u4E3B\u624D\u6709\u6743\u9650\u64CD\u4F5C", 2682: "\u4E0D\u80FD\u5728 Work / AVChatRoom \u7C7B\u578B\u7684\u7FA4\u4E2D\u8BBE\u7F6E\u7FA4\u6210\u5458\u8EAB\u4EFD", 2683: "\u4E0D\u5408\u6CD5\u7684\u7FA4\u6210\u5458\u8EAB\u4EFD\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u53C2\u6570", 2684: "\u4E0D\u80FD\u8BBE\u7F6E\u81EA\u5DF1\u7684\u7FA4\u6210\u5458\u8EAB\u4EFD\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u53C2\u6570", 2685: "\u4E0D\u80FD\u5C06\u81EA\u5DF1\u7981\u8A00\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u53C2\u6570", 2686: "\u5C01\u7981\u65F6\u957F\u65E0\u6548\uFF0C\u5FC5\u987B\u4F20\u5165 duration \u53C2\u6570\u4E14\u8981\u5927\u4E8E 0", 2700: "\u6307\u5B9A\u7684 userID \u4E0D\u662F\u6211\u7684\u597D\u53CB\u6548", 2701: "\u5DF2\u7ECF\u662F\u597D\u53CB\u5173\u7CFB", 2710: "\u597D\u53CB\u5206\u7EC4\u5DF2\u7ECF\u5B58\u5728", 2711: "\u597D\u53CB\u5206\u7EC4\u4E0D\u5B58\u5728", 2716: "\u597D\u53CB\u7533\u8BF7\u4E0D\u5B58\u5728", 2721: "\u4F20\u5165 updateMyProfile \u63A5\u53E3\u7684\u53C2\u6570\u65E0\u6548", 2722: "updateMyProfile \u65E0\u6807\u914D\u8D44\u6599\u5B57\u6BB5\u6216\u81EA\u5B9A\u4E49\u8D44\u6599\u5B57\u6BB5", 2742: "\u4E0D\u80FD\u62C9\u9ED1\u81EA\u5DF1", 2800: "\u7F51\u7EDC\u9519\u8BEF", 2801: "\u8BF7\u6C42\u8D85\u65F6", 2805: "\u672A\u8FDE\u63A5\u5230\u7F51\u7EDC", 2903: "\u672A\u7ECF\u660E\u786E\u5B9A\u4E49\u7684\u9519\u8BEF", 2905: "\u65E0\u6548\u64CD\u4F5C\uFF0C\u5982\u8C03\u7528\u4E86\u672A\u5B9A\u4E49\u6216\u8005\u672A\u5B9E\u73B0\u7684\u65B9\u6CD5\u7B49", 2996: "\u8D85\u51FA SDK \u9891\u7387\u63A7\u5236", 2997: "\u65E0\u6CD5\u627E\u5230\u534F\u8BAE", 2998: "\u65E0\u6CD5\u627E\u5230\u6A21\u5757\uFF0C\u5173\u7CFB\u94FE\u4F7F\u7528\u6307\u5F15\uFF1Ahttps://web.sdk.qcloud.com/im/doc/zh-cn/tutorial-03-sns.html", 2999: "\u63A5\u53E3\u8C03\u7528\u65F6\u673A\u4E0D\u5408\u7406\uFF0C\u8BF7\u7B49\u5F85 SDK \u5904\u4E8E ready \u72B6\u6001\u540E\u518D\u8C03\u7528\uFF08\u76D1\u542C TIM.EVENT.SDK_READY \u4E8B\u4EF6\uFF09", 3e3: "\u7528\u6237\u6B63\u5728\u767B\u5F55\u4E2D\u5BFC\u81F4 sdk not ready", 3001: "\u7528\u6237\u767B\u5F55\u5931\u8D25\u5BFC\u81F4 sdk not ready", 3002: "\u7528\u6237\u591A\u7EC8\u7AEF\u767B\u5F55\u88AB\u8E22\u51FA\u5BFC\u81F4 sdk not ready", 3003: "\u7528\u6237\u591A\u5B9E\u4F8B\u767B\u5F55\u88AB\u8E22\u51FA\u5BFC\u81F4 sdk not ready", 3004: "\u7528\u6237 userSig \u8FC7\u671F\u88AB\u8E22\u51FA\u5BFC\u81F4 sdk not ready", 3005: "\u7528\u6237\u5DF2\u767B\u51FA\u5BFC\u81F4 sdk not ready", 3006: "\u7528\u6237\u88AB REST API \u8E22\u51FA\u5BFC\u81F4 sdk not ready", 3021: "\u975E\u6CD5\u7684 topicID", 3122: "\u5957\u9910\u5305\u4E0D\u652F\u6301\u8BE5\u63A5\u53E3\u7684\u4F7F\u7528\uFF0C\u8BF7\u5347\u7EA7\u5230\u65D7\u8230\u7248\u5957\u9910", 3123: "\u6587\u672C\u5305\u542B\u672C\u5730\u5BA1\u6838\u62E6\u622A\u8BCD", 60022: "\u540E\u53F0\u670D\u52A1\u6B63\u5FD9\uFF0C\u8BF7\u7A0D\u540E\u518D\u8BD5" }, gh = { 2e3: "No SDKAppID", 2022: "No tinyID", 2023: "No a2key", 2024: "The user has not logged in", 2025: "Repeated login", 2040: "No upload plugin is detected", 2041: "Failed to get cos presig url", 2100: "Failed to send the message", 2101: "Failed to send the message to an audio-video group due to not joining it", 2105: "A message instance is required", 2106: 'Message.conversationType can only be "C2C" or "GROUP"', 2108: "An empty file cannot be sent", 2109: "An error occurred while running the callback function. Please check the code on the access side", 2110: "Failed to recall the message", 2111: "Failed to delete the message", 2112: "Failed to set all messages as read", 2114: "No messages in the message list that require a read receipt", 2115: "Message cannot be sent to Community that supports Topic, please check the isSupportTopic property of Community", 2116: "Group system notification cannot be deleted", 2117: "Failed to translate the text", 2251: "Please select an image first", 2252: "Only JPG/PNG/JPEG/GIF images can be uploaded", 2253: "Unable to send the image as it exceeds 20 MB", 2300: "Failed to upload the audio", 2301: "Unable to send the audio as it exceeds 20 MB", 2350: "Failed to upload the video", 2351: "Unable to send the video as it exceeds 100 MB", 2352: "Only MP4 videos can be uploaded", 2400: "File upload failed", 2401: "Please select a file first", 2402: "Unable to send the file as it exceeds 100 MB", 2403: "The required parameter file URL is missing", 2450: "Non-combined message", 2451: "Invalid messageKey of the combined message", 2452: "Failed to download the combined message", 2453: "The selected message type (such as group notification) does not support forwarding", 2480: "Conflict occurred while modifying message", 2481: "Audio-video group does not support modifying messages", 2500: "The corresponding conversation is not found. Please check the input parameters", 2501: "The corresponding user or group owner is not found. Please check the input parameters", 2502: "Unrecorded conversation type", 2503: "Invalid conversationID", 2600: "Invalid group type. Please check the input parameters", 2601: "Unable to join a work group", 2602: "Invalid groupID", 2603: "The group with the given id could not be found", 2620: "The group owner of an audio-video group cannot be changed", 2621: "You cannot change the group owner to yourself", 2622: "A work group cannot be disbanded", 2623: "The user is not in the group", 2660: "Failed to join the group. Please check the input parameters and try again", 2661: "Audio-video groups do not support inviting group members", 2662: "Non Audio-video groups do not allow anonymous joining. Please log in before you join the group", 2681: "You are not the group owner. Only the group owner has the permission to perform the operation", 2682: "You cannot set the group member role in a Work or Audio-video group", 2683: "Invalid group member role. Please check the input parameters", 2684: "You cannot set the group member role for yourself. Please check the input parameters", 2685: "You cannot mute yourself. Please check the input parameters", 2686: "Ban duration must be greater than 0", 2700: "The specified userID is not my friend", 2701: "The specified userID is my friend already", 2710: "The Friend group already exists", 2711: "The Friend group does not exist", 2716: "The Friend application does not exist", 2721: "Invalid parameter passed in to the updateMyProfile API", 2722: "updateMyProfile does not contain standard or custom profile fields", 2742: "You cannot blacklist yourself", 2800: "Network error", 2801: "Request timeout", 2805: "Network disconnected", 2903: "Undefined error", 2905: "Invalid operation, such as calling an undefined or unimplemented method", 2996: "Frequency control limit exceeded", 2997: "Protocol not found", 2998: "Module not found", 2999: "The API call timing is inappropriate. Call the API until the SDK is ready (listening for the TIM.EVENT.SDK_READY event)", 3e3: "SDK not ready because the user is Logging in", 3001: "SDK not ready because the user login failed", 3002: "SDK not ready because the user is kicked offline(the same account logs in from multiple pages on the web client)", 3003: "SDK not ready because the user is kicked offline(the same account logs in from multiple terminals)", 3004: "SDK not ready because the user is kicked offline(the signature expires)", 3005: "SDK not ready because the user is logged out ", 3006: "SDK not ready because the user is kicked offline by REST API", 3021: "Invalid topicID", 3122: "Please upgrade to the ultimate version", 3123: "Blocked due to filtering profanity", 60022: "Service is busy, please try again later" }, hh = function() {
      function e3(t3) {
        o2(this, e3), this._moduleManager = t3, this._className = "";
      }
      return a2(e3, [{ key: "isLoggedIn", value: function() {
        return this._moduleManager.getModule(jg).isLoggedIn();
      } }, { key: "isOversea", value: function() {
        return this._moduleManager.getModule(jg).isOversea();
      } }, { key: "isPrivateNetWork", value: function() {
        return this._moduleManager.getModule(jg).isPrivateNetWork();
      } }, { key: "getMyUserID", value: function() {
        return this._moduleManager.getModule(jg).getUserID();
      } }, { key: "getMyTinyID", value: function() {
        return this._moduleManager.getModule(jg).getTinyID();
      } }, { key: "getSDKAppID", value: function() {
        return this._moduleManager.getModule(jg).getSDKAppID();
      } }, { key: "isIntl", value: function() {
        return this._moduleManager.getModule(jg).isIntl();
      } }, { key: "isDevMode", value: function() {
        return this._moduleManager.getModule(jg).isDevMode();
      } }, { key: "getModule", value: function(e4) {
        return this._moduleManager.getModule(e4);
      } }, { key: "getPlatform", value: function() {
        return rl;
      } }, { key: "getNetworkType", value: function() {
        return this._moduleManager.getModule($g).getNetworkType();
      } }, { key: "probeNetwork", value: function(e4) {
        return this._moduleManager.getModule($g).probe(e4);
      } }, { key: "getCloudConfig", value: function(e4) {
        return this._moduleManager.getModule(nh).getCloudConfig(e4);
      } }, { key: "emitOuterEvent", value: function(e4, t3) {
        this._moduleManager.getOuterEmitterInstance().emit(e4, t3);
      } }, { key: "emitInnerEvent", value: function(e4, t3) {
        this._moduleManager.getInnerEmitterInstance().emit(e4, t3);
      } }, { key: "getInnerEmitterInstance", value: function() {
        return this._moduleManager.getInnerEmitterInstance();
      } }, { key: "generateTjgID", value: function(e4) {
        return this._moduleManager.getModule(jg).getTinyID() + "-" + e4.random;
      } }, { key: "filterModifiedMessage", value: function(e4) {
        if (!Wd(e4)) {
          var t3 = e4.filter(function(e5) {
            return true === e5.isModified;
          });
          t3.length > 0 && this.emitOuterEvent(pr.MESSAGE_MODIFIED, t3);
        }
      } }, { key: "filterUnmodifiedMessage", value: function(e4) {
        return Wd(e4) ? [] : e4.filter(function(e5) {
          return false === e5.isModified;
        });
      } }, { key: "request", value: function(e4) {
        return this._moduleManager.getModule(Zg).request(e4);
      } }, { key: "canIUse", value: function(e4) {
        return this._moduleManager.getModule(sh).canIUse(e4);
      } }, { key: "getErrorMessage", value: function(e4) {
        return this.isIntl() ? gh[e4] : ph[e4];
      } }]), e3;
    }(), fh = "wslogin", _h = "wslogout", mh = "wshello", vh = "KickOther", Mh = "getmsg", yh = "authkey", Ih = "sendmsg", Th = "send_group_msg", Ch = "portrait_get_all", Eh = "portrait_set", Sh = "black_list_get", Dh = "black_list_add", Nh = "black_list_delete", Ah = "msgwithdraw", kh = "msgreaded", Rh = "set_c2c_peer_mute_notifications", Oh = "get_c2c_peer_mute_notifications", Lh = "getroammsg", Gh = "get_peer_read_time", Ph = "delete_c2c_msg_ramble", Uh = "modify_c2c_msg", bh = "set_key_values", wh = "get_key_values", Fh = "page_get", qh = "get", xh = "delete", Vh = "clear_msg", Bh = "top", Kh = "deletemsg", Hh = "set_conv_custom_data", jh = "mark_contact", Wh = "create_contact_group", Yh = "del_contact_group", $h = "update_contact_group", zh = "add_conv_to_group", Jh = "del_conv_from_group", Xh = "get_contact_group", Qh = "get_joined_group_list", Zh = "get_group_self_member_info", ef = "create_group", tf = "destroy_group", nf = "modify_group_base_info", of = "apply_join_group", rf = "apply_join_group_noauth", af = "quit_group", sf = "get_group_public_info", uf = "change_group_owner", cf = "handle_apply_join_group", lf = "handle_invite_join_group", df = "group_msg_recall", pf = "msg_read_report", gf = "read_all_unread_msg", hf = "group_msg_get", ff = "get_group_msg_receipt", _f = "group_msg_receipt", mf = "c2c_msg_read_receipt", vf = "get_group_msg_receipt_detail", Mf = "get_pendency", yf = "deletemsg", If = "get_msg", Tf = "get_msg_noauth", Cf = "get_online_member_num", Ef = "delete_group_ramble_msg_by_seq", Sf = "modify_group_msg", Df = "set_group_attr", Nf = "modify_group_attr", Af = "delete_group_attr", kf = "clear_group_attr", Rf = "get_group_attr", Of = "group_set_key_values", Lf = "group_get_key_values", Gf = "get_group_notify", Pf = "update_group_counter", Uf = "get_group_counter", bf = "get_group_member_info", wf = "get_members", Ff = "get_specified_group_member_info", qf = "add_group_member", xf = "delete_group_member", Vf = "ban_group_member", Bf = "modify_group_member_info", Kf = "modify_user_info", Hf = "cos", jf = "pre_sig", Wf = "video_cover", Yf = "tim_web_report_v2", $f = "alive", zf = "msg_push", Jf = "multi_msg_push_ws", Xf = "ws_msg_push_ack", Qf = "stat_forceoffline", Zf = "save_relay_json_msg", e_ = "get_relay_json_msg", t_ = "fetch_config", n_ = "push_configv2", o_ = "fetch_imsdk_purchase_bitsv2", r_ = "push_imsdk_purchase_bitsv2", a_ = "notify2", s_ = "create_topic", i_ = "destroy_topic", u_ = "modify_topic", c_ = "get_topic", l_ = "ws_set_custom_status", d_ = "ws_get_user_status", p_ = "ws_status_subscribe", g_ = "ws_status_unsubscribe", h_ = "ws_stat_background", f_ = "ws_stat_foreground", __ = "ws_stat_settoken", m_ = "get_local_words", v_ = "ws_batch_trans_text", M_ = "networkRTT", y_ = "messageE2EDelay", I_ = "sendMessageC2C", T_ = "sendMessageGroup", C_ = "sendMessageGroupAV", E_ = "sendMessageRichMedia", S_ = "cosUpload", D_ = "messageReceivedGroup", N_ = "messageReceivedGroupAVPush", A_ = "messageReceivedGroupAVPull", k_ = (s2(Pg = {}, M_, 2), s2(Pg, y_, 3), s2(Pg, I_, 4), s2(Pg, T_, 5), s2(Pg, C_, 6), s2(Pg, E_, 7), s2(Pg, D_, 8), s2(Pg, N_, 9), s2(Pg, A_, 10), s2(Pg, S_, 11), Pg), R_ = { info: 4, warning: 5, error: 6 }, O_ = { wifi: 1, "2g": 2, "3g": 3, "4g": 4, "5g": 5, unknown: 6, none: 7, online: 8 }, L_ = { login: 4 }, G_ = function() {
      function e3(t3) {
        o2(this, e3), this.eventType = L_[t3] || 0, this.timestamp = 0, this.networkType = 8, this.code = 0, this.message = "", this.moreMessage = "", this.extension = t3, this.costTime = 0, this.duplicate = false, this.level = 4, this.uiPlatform = void 0, this._sentFlag = false, this._startts = Ol();
      }
      return a2(e3, [{ key: "updateTimeStamp", value: function() {
        this.timestamp = Ol();
      } }, { key: "start", value: function(e4) {
        return this._startts = e4, this;
      } }, { key: "end", value: function() {
        var e4 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
        if (!this._sentFlag) {
          var n3 = Ol();
          0 === this.costTime && (this.costTime = n3 - this._startts), this.setMoreMessage("startts:".concat(this._startts, " endts:").concat(n3)), t3 ? (this._sentFlag = true, this._eventStatModule && this._eventStatModule.pushIn(this)) : setTimeout(function() {
            e4._sentFlag = true, e4._eventStatModule && e4._eventStatModule.pushIn(e4);
          }, 0);
        }
      } }, { key: "setError", value: function(e4, t3, n3) {
        if (!(e4 instanceof Error))
          return wl.warn("SSOLogData.setError value not instanceof Error, please check!"), this;
        if (this._sentFlag)
          return this;
        if (this.setNetworkType(n3), t3)
          e4.code && this.setCode(e4.code), e4.message && this.setMoreMessage(e4.message);
        else {
          var o3 = dh.NO_NETWORK;
          this.setCode(o3), this.setMoreMessage(gh[o3]);
        }
        return this.setLevel("error"), this;
      } }, { key: "setCode", value: function(e4) {
        return td(e4) || this._sentFlag || ("ECONNABORTED" === e4 && (this.code = 103), Jl(e4) ? this.code = e4 : wl.warn("SSOLogData.setCode value not a number, please check!", e4, n2(e4))), this;
      } }, { key: "setMessage", value: function(e4) {
        return td(e4) || this._sentFlag || (Jl(e4) && (this.message = e4.toString()), Xl(e4) && (this.message = e4)), this;
      } }, { key: "setCostTime", value: function(e4) {
        return this.costTime = e4, this;
      } }, { key: "setLevel", value: function(e4) {
        return td(e4) || this._sentFlag || (this.level = R_[e4]), this;
      } }, { key: "setMoreMessage", value: function(e4) {
        return Wd(this.moreMessage) ? this.moreMessage = "".concat(e4) : this.moreMessage += " ".concat(e4), this;
      } }, { key: "setNetworkType", value: function(e4) {
        if (td(e4))
          wl.warn("SSOLogData.setNetworkType value is undefined, please check!");
        else {
          var t3 = O_[e4.toLowerCase()];
          td(t3) || (this.networkType = t3);
        }
        return this;
      } }, { key: "getStartTs", value: function() {
        return this._startts;
      } }, { key: "setUIPlatform", value: function(e4) {
        this.uiPlatform = e4;
      } }], [{ key: "bindEventStatModule", value: function(t3) {
        e3.prototype._eventStatModule = t3;
      } }]), e3;
    }(), P_ = { SDK_CONSTRUCT: "sdkConstruct", SDK_READY: "sdkReady", LOGIN: "login", LOGOUT: "logout", KICKED_OUT: "kickedOut", REGISTER_PLUGIN: "registerPlugin", KICK_OTHER: "kickOther", WS_CONNECT: "wsConnect", WS_ON_OPEN: "wsOnOpen", WS_ON_CLOSE: "wsOnClose", WS_ON_ERROR: "wsOnError", NETWORK_CHANGE: "networkChange", GET_COS_AUTH_KEY: "getCosAuthKey", GET_COS_PRE_SIG_URL: "getCosPreSigUrl", GET_SNAPSHOT_INFO: "getSnapshotInfo", UPLOAD: "upload", SEND_MESSAGE: "sendMessage", SEND_MESSAGE_WITH_RECEIPT: "sendMessageWithReceipt", SEND_COMBO_MESSAGE: "sendComboMessage", GET_C2C_ROAMING_MESSAGES: "getC2CRoamingMessages", GET_GROUP_ROAMING_MESSAGES: "getGroupRoamingMessages", GET_C2C_ROAMING_MESSAGES_HOPPING: "getC2CRoamingMessagesHopping", GET_GROUP_ROAMING_MESSAGES_HOPPING: "getGroupRoamingMessagesHopping", GET_READ_RECEIPT: "getReadReceipt", GET_READ_RECEIPT_DETAIL: "getReadReceiptDetail", SEND_READ_RECEIPT: "sendReadReceipt", SEND_C2C_READ_RECEIPT: "sendC2CReadReceipt", REVOKE_MESSAGE: "revokeMessage", DELETE_MESSAGE: "deleteMessage", MODIFY_MESSAGE: "modifyMessage", TRANSLATE_TEXT: "translateText", SET_C2C_MESSAGE_READ: "setC2CMessageRead", SET_GROUP_MESSAGE_READ: "setGroupMessageRead", EMPTY_MESSAGE_BODY: "emptyMessageBody", GET_PEER_READ_TIME: "getPeerReadTime", UPLOAD_MERGER_MESSAGE: "uploadMergerMessage", DOWNLOAD_MERGER_MESSAGE: "downloadMergerMessage", JSON_PARSE_ERROR: "jsonParseError", MESSAGE_E2E_DELAY_EXCEPTION: "messageE2EDelayException", SET_MESSAGE_EXTENSIONS: "setMessageExtensions", DELETE_MESSAGE_EXTENSIONS: "deleteMessageExtensions", GET_MESSAGE_EXTENSIONS: "getMessageExtensions", PROFANITY_FILTER: "profanityFilter", GET_CONVERSATION_LIST: "getConversationList", GET_CONVERSATION_PROFILE: "getConversationProfile", DELETE_CONVERSATION: "deleteConversation", CLEAR_HISTORY_MESSAGE: "clearHistoryMessage", PIN_CONVERSATION: "pinConversation", GET_CONVERSATION_LIST_IN_STORAGE: "getConversationListInStorage", SYNC_CONVERSATION_LIST: "syncConversationList", SET_ALL_MESSAGE_READ: "setAllMessageRead", SET_CONV_CUSTOM_DATA: "setConvCustomData", MARK_CONVERSATION: "markConversation", GET_REMOTE_CONV_GROUP_LIST: "getRemoteConvGroupList", CREATE_CONV_GROUP: "createConvGroup", DELETE_CONV_GROUP: "deleteConvGroup", RENAME_CONV_GROUP: "renameConvGroup", ADD_CONVS_TO_GROUP: "addConvsToGroup", DELETE_CONVS_FROM_GROUP: "deleteConvsFromGroup", CREATE_GROUP: "createGroup", APPLY_JOIN_GROUP: "applyJoinGroup", QUIT_GROUP: "quitGroup", SEARCH_GROUP_BY_ID: "searchGroupByID", CHANGE_GROUP_OWNER: "changeGroupOwner", HANDLE_GROUP_APPLICATION: "handleGroupApplication", HANDLE_GROUP_INVITATION: "handleGroupInvitation", SET_MESSAGE_REMIND_TYPE: "setMessageRemindType", DISMISS_GROUP: "dismissGroup", UPDATE_GROUP_PROFILE: "updateGroupProfile", GET_GROUP_LIST: "getGroupList", GET_GROUP_PROFILE: "getGroupProfile", GET_GROUP_LIST_IN_STORAGE: "getGroupListInStorage", GET_GROUP_LAST_SEQUENCE: "getGroupLastSequence", RECOVER_MESSAGE: "recoverMessage", PAGING_GET_GROUP_LIST: "pagingGetGroupList", PAGING_GET_GROUP_LIST_WITH_TOPIC: "pagingGetGroupListWithTopic", GET_GROUP_SIMPLIFIED_INFO: "getGroupSimplifiedInfo", JOIN_WITHOUT_AUTH: "joinWithoutAuth", INIT_GROUP_ATTRIBUTES: "initGroupAttributes", SET_GROUP_ATTRIBUTES: "setGroupAttributes", DELETE_GROUP_ATTRIBUTES: "deleteGroupAttributes", GET_GROUP_ATTRIBUTES: "getGroupAttributes", SET_GROUP_COUNTERS: "setGroupCounters", INCREASE_GROUP_COUNTER: "increaseGroupCounter", DECREASE_GROUP_COUNTER: "decreaseGroupCounter", GET_GROUP_COUNTERS: "getGroupCounters", GET_GROUP_MEMBER_LIST: "getGroupMemberList", GET_AVCHATROOM_MEMBER_LIST: "getAVChatRoomMemberList", GET_GROUP_MEMBER_PROFILE: "getGroupMemberProfile", ADD_GROUP_MEMBER: "addGroupMember", DELETE_GROUP_MEMBER: "deleteGroupMember", BAN_AVCHATROOM_MEMBER: "banAVChatRoomMember", SET_GROUP_MEMBER_MUTE_TIME: "setGroupMemberMuteTime", SET_GROUP_MEMBER_NAME_CARD: "setGroupMemberNameCard", SET_GROUP_MEMBER_ROLE: "setGroupMemberRole", SET_GROUP_MEMBER_CUSTOM_FIELD: "setGroupMemberCustomField", GET_GROUP_ONLINE_MEMBER_COUNT: "getGroupOnlineMemberCount", MARK_GROUP_MEMBER_LIST: "markGroupMemberList", SYNC_MESSAGE: "syncMessage", LONG_POLLING_AV_ERROR: "longPollingAVError", MESSAGE_LOSS: "messageLoss", MESSAGE_STACKED: "messageStacked", GET_USER_PROFILE: "getUserProfile", UPDATE_MY_PROFILE: "updateMyProfile", GET_BLACKLIST: "getBlacklist", ADD_TO_BLACKLIST: "addToBlacklist", REMOVE_FROM_BLACKLIST: "removeFromBlacklist", SET_SELF_STATUS: "setSelfStatus", GET_USER_STATUS: "getUserStatus", SUBSCRIBE_USER_STATUS: "subscribeUserStatus", UNSUBSCRIBE_USER_STATUS: "unsubscribeUserStatus", ADD_FRIEND: "addFriend", CHECK_FRIEND: "checkFriend", DELETE_FRIEND: "removeFromFriendList", GET_FRIEND_PROFILE: "getFriendProfile", GET_FRIEND_LIST: "getFriendList", UPDATE_FRIEND: "updateFriend", GET_FRIEND_APPLICATION_LIST: "getFriendApplicationList", DELETE_FRIEND_APPLICATION: "deleteFriendApplication", ACCEPT_FRIEND_APPLICATION: "acceptFriendApplication", REFUSE_FRIEND_APPLICATION: "refuseFriendApplication", SET_FRIEND_APPLICATION_READ: "setFriendApplicationRead", CREATE_FRIEND_GROUP: "createFriendGroup", DELETE_FRIEND_GROUP: "deleteFriendGroup", RENAME_FRIEND_GROUP: "renameFriendGroup", ADD_TO_FRIEND_GROUP: "addToFriendGroup", REMOVE_FROM_FRIEND_GROUP: "removeFromFriendGroup", GET_FRIEND_GROUP_LIST: "getFriendGroupList", CREATE_TOPIC: "createTopic", DELETE_TOPIC: "deleteTopic", UPDATE_TOPIC_PROFILE: "updateTopicProfile", GET_TOPIC_LIST: "getTopicList", RELAY_GET_TOPIC_LIST: "relayGetTopicList", GET_TOPIC_LAST_SEQUENCE: "getTopicLastSequence", GET_DEVICE_TOKEN: "getDeviceToken", GET_DEVICE_TOKEN_RES: "getDeviceTokenRes", OFFLINE_PUSH_SET_TOKEN: "offlinePushSetToken", SET_APP_SHOW_LISTENER: "setAppShowListener", SET_APP_SHOW_LISTENER_RES: "setAppShowListenerRes", ON_FOREGROUND: "onForeground", ON_BACKGROUND: "onBackground", MP_HIDE_TO_SHOW: "mpHideToShow", CALLBACK_FUNCTION_ERROR: "callbackFunctionError", FETCH_CLOUD_CONTROL_CONFIG: "fetchCloudControlConfig", PUSHED_CLOUD_CONTROL_CONFIG: "pushedCloudControlConfig", FETCH_COMMERCIAL_CONFIG: "fetchCommercialConfig", PUSHED_COMMERCIAL_CONFIG: "pushedCommercialConfig", ERROR: "error", LAST_MESSAGE_NOT_EXIST: "lastMessageNotExist" }, U_ = F2.f, b_ = H2(U_), w_ = H2([].push), F_ = function(e3) {
      return function(t3) {
        for (var n3, o3 = Z2(t3), r3 = Nn2(o3), a3 = r3.length, s3 = 0, i3 = []; a3 > s3; )
          n3 = r3[s3++], L2 && !b_(o3, n3) || w_(i3, e3 ? [n3, o3[n3]] : o3[n3]);
        return i3;
      };
    }, q_ = { entries: F_(true), values: F_(false) }.values;
    nn({ target: "Object", stat: true }, { values: function(e3) {
      return q_(e3);
    } });
    var x_ = function() {
      function e3(t3) {
        o2(this, e3), this.type = gr.MSG_TEXT, this.content = { text: t3.text || "" };
      }
      return a2(e3, [{ key: "setText", value: function(e4) {
        this.content.text = e4;
      } }, { key: "sendable", value: function() {
        return 0 !== this.content.text.length;
      } }]), e3;
    }(), V_ = we2("iterator"), B_ = !O2(function() {
      var e3 = new URL("b?a=1&b=2&c=3", "http://a"), t3 = e3.searchParams, n3 = "";
      return e3.pathname = "c%20d", t3.forEach(function(e4, o3) {
        t3.delete("b"), n3 += o3 + e4;
      }), !t3.sort || "http://a/c%20d?a=1&c=3" !== e3.href || "3" !== t3.get("c") || "a=1" !== String(new URLSearchParams("?a=1")) || !t3[V_] || "a" !== new URL("https://a@b").username || "b" !== new URLSearchParams(new URLSearchParams("a=b")).get("a") || "xn--e1aybc" !== new URL("http://\u0442\u0435\u0441\u0442").host || "#%D0%B1" !== new URL("http://a#\u0431").hash || "a1c3" !== n3 || "x" !== new URL("http://x", void 0).host;
    }), K_ = Object.assign, H_ = Object.defineProperty, j_ = H2([].concat), W_ = !K_ || O2(function() {
      if (L2 && 1 !== K_({ b: 1 }, K_(H_({}, "a", { enumerable: true, get: function() {
        H_(this, "b", { value: 3, enumerable: false });
      } }), { b: 2 })).b)
        return true;
      var e3 = {}, t3 = {}, n3 = Symbol();
      return e3[n3] = 7, "abcdefghijklmnopqrst".split("").forEach(function(e4) {
        t3[e4] = e4;
      }), 7 != K_({}, e3)[n3] || "abcdefghijklmnopqrst" != Nn2(K_({}, t3)).join("");
    }) ? function(e3, t3) {
      for (var n3 = De2(e3), o3 = arguments.length, r3 = 1, a3 = Ht.f, s3 = F2.f; o3 > r3; )
        for (var i3, u3 = J2(arguments[r3++]), c3 = a3 ? j_(Nn2(u3), a3(u3)) : Nn2(u3), l3 = c3.length, d3 = 0; l3 > d3; )
          i3 = c3[d3++], L2 && !U2(s3, u3, i3) || (n3[i3] = u3[i3]);
      return n3;
    } : K_, Y_ = /[^\0-\u007E]/, $_ = /[.\u3002\uFF0E\uFF61]/g, z_ = "Overflow: input needs wider integers to process", J_ = R2.RangeError, X_ = H2($_.exec), Q_ = Math.floor, Z_ = String.fromCharCode, em = H2("".charCodeAt), tm = H2([].join), nm = H2([].push), om = H2("".replace), rm = H2("".split), am = H2("".toLowerCase), sm = function(e3) {
      return e3 + 22 + 75 * (e3 < 26);
    }, im = function(e3, t3, n3) {
      var o3 = 0;
      for (e3 = n3 ? Q_(e3 / 700) : e3 >> 1, e3 += Q_(e3 / t3); e3 > 455; )
        e3 = Q_(e3 / 35), o3 += 36;
      return Q_(o3 + 36 * e3 / (e3 + 38));
    }, um = function(e3) {
      var t3, n3, o3 = [], r3 = (e3 = function(e4) {
        for (var t4 = [], n4 = 0, o4 = e4.length; n4 < o4; ) {
          var r4 = em(e4, n4++);
          if (r4 >= 55296 && r4 <= 56319 && n4 < o4) {
            var a4 = em(e4, n4++);
            56320 == (64512 & a4) ? nm(t4, ((1023 & r4) << 10) + (1023 & a4) + 65536) : (nm(t4, r4), n4--);
          } else
            nm(t4, r4);
        }
        return t4;
      }(e3)).length, a3 = 128, s3 = 0, i3 = 72;
      for (t3 = 0; t3 < e3.length; t3++)
        (n3 = e3[t3]) < 128 && nm(o3, Z_(n3));
      var u3 = o3.length, c3 = u3;
      for (u3 && nm(o3, "-"); c3 < r3; ) {
        var l3 = 2147483647;
        for (t3 = 0; t3 < e3.length; t3++)
          (n3 = e3[t3]) >= a3 && n3 < l3 && (l3 = n3);
        var d3 = c3 + 1;
        if (l3 - a3 > Q_((2147483647 - s3) / d3))
          throw J_(z_);
        for (s3 += (l3 - a3) * d3, a3 = l3, t3 = 0; t3 < e3.length; t3++) {
          if ((n3 = e3[t3]) < a3 && ++s3 > 2147483647)
            throw J_(z_);
          if (n3 == a3) {
            for (var p3 = s3, g3 = 36; ; ) {
              var h3 = g3 <= i3 ? 1 : g3 >= i3 + 26 ? 26 : g3 - i3;
              if (p3 < h3)
                break;
              var f3 = p3 - h3, _3 = 36 - h3;
              nm(o3, Z_(sm(h3 + f3 % _3))), p3 = Q_(f3 / _3), g3 += 36;
            }
            nm(o3, Z_(sm(p3))), i3 = im(s3, d3, c3 == u3), s3 = 0, c3++;
          }
        }
        s3++, a3++;
      }
      return tm(o3, "");
    }, cm = Math.floor, lm = function(e3, t3) {
      var n3 = e3.length, o3 = cm(n3 / 2);
      return n3 < 8 ? dm(e3, t3) : pm(e3, lm(ui(e3, 0, o3), t3), lm(ui(e3, o3), t3), t3);
    }, dm = function(e3, t3) {
      for (var n3, o3, r3 = e3.length, a3 = 1; a3 < r3; ) {
        for (o3 = a3, n3 = e3[a3]; o3 && t3(e3[o3 - 1], n3) > 0; )
          e3[o3] = e3[--o3];
        o3 !== a3++ && (e3[o3] = n3);
      }
      return e3;
    }, pm = function(e3, t3, n3, o3) {
      for (var r3 = t3.length, a3 = n3.length, s3 = 0, i3 = 0; s3 < r3 || i3 < a3; )
        e3[s3 + i3] = s3 < r3 && i3 < a3 ? o3(t3[s3], n3[i3]) <= 0 ? t3[s3++] : n3[i3++] : s3 < r3 ? t3[s3++] : n3[i3++];
      return e3;
    }, gm = lm, hm = we2("iterator"), fm = It2.set, _m = It2.getterFor("URLSearchParams"), mm = It2.getterFor("URLSearchParamsIterator"), vm = oe2("fetch"), Mm = oe2("Request"), ym = oe2("Headers"), Im = Mm && Mm.prototype, Tm = ym && ym.prototype, Cm = R2.RegExp, Em = R2.TypeError, Sm = R2.decodeURIComponent, Dm = R2.encodeURIComponent, Nm = H2("".charAt), Am = H2([].join), km = H2([].push), Rm = H2("".replace), Om = H2([].shift), Lm = H2([].splice), Gm = H2("".split), Pm = H2("".slice), Um = /\+/g, bm = Array(4), wm = function(e3) {
      return bm[e3 - 1] || (bm[e3 - 1] = Cm("((?:%[\\da-f]{2}){" + e3 + "})", "gi"));
    }, Fm = function(e3) {
      try {
        return Sm(e3);
      } catch (BS) {
        return e3;
      }
    }, qm = function(e3) {
      var t3 = Rm(e3, Um, " "), n3 = 4;
      try {
        return Sm(t3);
      } catch (BS) {
        for (; n3; )
          t3 = Rm(t3, wm(n3--), Fm);
        return t3;
      }
    }, xm = /[!'()~]|%20/g, Vm = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+" }, Bm = function(e3) {
      return Vm[e3];
    }, Km = function(e3) {
      return Rm(Dm(e3), xm, Bm);
    }, Hm = Qo(function(e3, t3) {
      fm(this, { type: "URLSearchParamsIterator", iterator: To(_m(e3).entries), kind: t3 });
    }, "Iterator", function() {
      var e3 = mm(this), t3 = e3.kind, n3 = e3.iterator.next(), o3 = n3.value;
      return n3.done || (n3.value = "keys" === t3 ? o3.key : "values" === t3 ? o3.value : [o3.key, o3.value]), n3;
    }, true), jm = function(e3) {
      this.entries = [], this.url = null, void 0 !== e3 && (te2(e3) ? this.parseObject(e3) : this.parseQuery("string" == typeof e3 ? "?" === Nm(e3, 0) ? Pm(e3, 1) : e3 : dn(e3)));
    };
    jm.prototype = { type: "URLSearchParams", bindURL: function(e3) {
      this.url = e3, this.update();
    }, parseObject: function(e3) {
      var t3, n3, o3, r3, a3, s3, i3, u3 = yo(e3);
      if (u3)
        for (n3 = (t3 = To(e3, u3)).next; !(o3 = U2(n3, t3)).done; ) {
          if (a3 = (r3 = To(Xe2(o3.value))).next, (s3 = U2(a3, r3)).done || (i3 = U2(a3, r3)).done || !U2(a3, r3).done)
            throw Em("Expected sequence with length 2");
          km(this.entries, { key: dn(s3.value), value: dn(i3.value) });
        }
      else
        for (var c3 in e3)
          Ae2(e3, c3) && km(this.entries, { key: c3, value: dn(e3[c3]) });
    }, parseQuery: function(e3) {
      if (e3)
        for (var t3, n3, o3 = Gm(e3, "&"), r3 = 0; r3 < o3.length; )
          (t3 = o3[r3++]).length && (n3 = Gm(t3, "="), km(this.entries, { key: qm(Om(n3)), value: qm(Am(n3, "=")) }));
    }, serialize: function() {
      for (var e3, t3 = this.entries, n3 = [], o3 = 0; o3 < t3.length; )
        e3 = t3[o3++], km(n3, Km(e3.key) + "=" + Km(e3.value));
      return Am(n3, "&");
    }, update: function() {
      this.entries.length = 0, this.parseQuery(this.url.query);
    }, updateURL: function() {
      this.url && this.url.update();
    } };
    var Wm = function() {
      Li(this, Ym);
      var e3 = arguments.length > 0 ? arguments[0] : void 0;
      fm(this, new jm(e3));
    }, Ym = Wm.prototype;
    if (Ai(Ym, { append: function(e3, t3) {
      Bi(arguments.length, 2);
      var n3 = _m(this);
      km(n3.entries, { key: dn(e3), value: dn(t3) }), n3.updateURL();
    }, delete: function(e3) {
      Bi(arguments.length, 1);
      for (var t3 = _m(this), n3 = t3.entries, o3 = dn(e3), r3 = 0; r3 < n3.length; )
        n3[r3].key === o3 ? Lm(n3, r3, 1) : r3++;
      t3.updateURL();
    }, get: function(e3) {
      Bi(arguments.length, 1);
      for (var t3 = _m(this).entries, n3 = dn(e3), o3 = 0; o3 < t3.length; o3++)
        if (t3[o3].key === n3)
          return t3[o3].value;
      return null;
    }, getAll: function(e3) {
      Bi(arguments.length, 1);
      for (var t3 = _m(this).entries, n3 = dn(e3), o3 = [], r3 = 0; r3 < t3.length; r3++)
        t3[r3].key === n3 && km(o3, t3[r3].value);
      return o3;
    }, has: function(e3) {
      Bi(arguments.length, 1);
      for (var t3 = _m(this).entries, n3 = dn(e3), o3 = 0; o3 < t3.length; )
        if (t3[o3++].key === n3)
          return true;
      return false;
    }, set: function(e3, t3) {
      Bi(arguments.length, 1);
      for (var n3, o3 = _m(this), r3 = o3.entries, a3 = false, s3 = dn(e3), i3 = dn(t3), u3 = 0; u3 < r3.length; u3++)
        (n3 = r3[u3]).key === s3 && (a3 ? Lm(r3, u3--, 1) : (a3 = true, n3.value = i3));
      a3 || km(r3, { key: s3, value: i3 }), o3.updateURL();
    }, sort: function() {
      var e3 = _m(this);
      gm(e3.entries, function(e4, t3) {
        return e4.key > t3.key ? 1 : -1;
      }), e3.updateURL();
    }, forEach: function(e3) {
      for (var t3, n3 = _m(this).entries, o3 = wn2(e3, arguments.length > 1 ? arguments[1] : void 0), r3 = 0; r3 < n3.length; )
        o3((t3 = n3[r3++]).value, t3.key, this);
    }, keys: function() {
      return new Hm(this, "keys");
    }, values: function() {
      return new Hm(this, "values");
    }, entries: function() {
      return new Hm(this, "entries");
    } }, { enumerable: true }), Dt(Ym, hm, Ym.entries, { name: "entries" }), Dt(Ym, "toString", function() {
      return _m(this).serialize();
    }, { enumerable: true }), zo(Wm, "URLSearchParams"), nn({ global: true, forced: !B_ }, { URLSearchParams: Wm }), !B_ && ee2(ym)) {
      var $m = H2(Tm.has), zm = H2(Tm.set), Jm = function(e3) {
        if (te2(e3)) {
          var t3, n3 = e3.body;
          if ("URLSearchParams" === cn(n3))
            return t3 = e3.headers ? new ym(e3.headers) : new ym(), $m(t3, "content-type") || zm(t3, "content-type", "application/x-www-form-urlencoded;charset=UTF-8"), Un2(e3, { body: q2(0, dn(n3)), headers: q2(0, t3) });
        }
        return e3;
      };
      if (ee2(vm) && nn({ global: true, enumerable: true, forced: true }, { fetch: function(e3) {
        return vm(e3, arguments.length > 1 ? Jm(arguments[1]) : {});
      } }), ee2(Mm)) {
        var Xm = function(e3) {
          return Li(this, Im), new Mm(e3, arguments.length > 1 ? Jm(arguments[1]) : {});
        };
        Im.constructor = Xm, Xm.prototype = Im, nn({ global: true, forced: true }, { Request: Xm });
      }
    }
    var Qm, Zm = { URLSearchParams: Wm, getState: _m }, ev = An2.f, tv = Fo.codeAt, nv = It2.set, ov = It2.getterFor("URL"), rv = Zm.URLSearchParams, av = Zm.getState, sv = R2.URL, iv = R2.TypeError, uv = R2.parseInt, cv = Math.floor, lv = Math.pow, dv = H2("".charAt), pv = H2(/./.exec), gv = H2([].join), hv = H2(1 .toString), fv = H2([].pop), _v = H2([].push), mv = H2("".replace), vv = H2([].shift), Mv = H2("".split), yv = H2("".slice), Iv = H2("".toLowerCase), Tv = H2([].unshift), Cv = /[a-z]/i, Ev = /[\d+-.a-z]/i, Sv = /\d/, Dv = /^0x/i, Nv = /^[0-7]+$/, Av = /^\d+$/, kv = /^[\da-f]+$/i, Rv = /[\0\t\n\r #%/:<>?@[\\\]^|]/, Ov = /[\0\t\n\r #/:<>?@[\\\]^|]/, Lv = /^[\u0000-\u0020]+|[\u0000-\u0020]+$/g, Gv = /[\t\n\r]/g, Pv = function(e3) {
      var t3, n3, o3, r3;
      if ("number" == typeof e3) {
        for (t3 = [], n3 = 0; n3 < 4; n3++)
          Tv(t3, e3 % 256), e3 = cv(e3 / 256);
        return gv(t3, ".");
      }
      if ("object" == typeof e3) {
        for (t3 = "", o3 = function(e4) {
          for (var t4 = null, n4 = 1, o4 = null, r4 = 0, a3 = 0; a3 < 8; a3++)
            0 !== e4[a3] ? (r4 > n4 && (t4 = o4, n4 = r4), o4 = null, r4 = 0) : (null === o4 && (o4 = a3), ++r4);
          return r4 > n4 && (t4 = o4, n4 = r4), t4;
        }(e3), n3 = 0; n3 < 8; n3++)
          r3 && 0 === e3[n3] || (r3 && (r3 = false), o3 === n3 ? (t3 += n3 ? ":" : "::", r3 = true) : (t3 += hv(e3[n3], 16), n3 < 7 && (t3 += ":")));
        return "[" + t3 + "]";
      }
      return e3;
    }, Uv = {}, bv = W_({}, Uv, { " ": 1, '"': 1, "<": 1, ">": 1, "`": 1 }), wv = W_({}, bv, { "#": 1, "?": 1, "{": 1, "}": 1 }), Fv = W_({}, wv, { "/": 1, ":": 1, ";": 1, "=": 1, "@": 1, "[": 1, "\\": 1, "]": 1, "^": 1, "|": 1 }), qv = function(e3, t3) {
      var n3 = tv(e3, 0);
      return n3 > 32 && n3 < 127 && !Ae2(t3, e3) ? e3 : encodeURIComponent(e3);
    }, xv = { ftp: 21, file: null, http: 80, https: 443, ws: 80, wss: 443 }, Vv = function(e3, t3) {
      var n3;
      return 2 == e3.length && pv(Cv, dv(e3, 0)) && (":" == (n3 = dv(e3, 1)) || !t3 && "|" == n3);
    }, Bv = function(e3) {
      var t3;
      return e3.length > 1 && Vv(yv(e3, 0, 2)) && (2 == e3.length || "/" === (t3 = dv(e3, 2)) || "\\" === t3 || "?" === t3 || "#" === t3);
    }, Kv = function(e3) {
      return "." === e3 || "%2e" === Iv(e3);
    }, Hv = {}, jv = {}, Wv = {}, Yv = {}, $v = {}, zv = {}, Jv = {}, Xv = {}, Qv = {}, Zv = {}, eM = {}, tM = {}, nM = {}, oM = {}, rM = {}, aM = {}, sM = {}, iM = {}, uM = {}, cM = {}, lM = {}, dM = function(e3, t3, n3) {
      var o3, r3, a3, s3 = dn(e3);
      if (t3) {
        if (r3 = this.parse(s3))
          throw iv(r3);
        this.searchParams = null;
      } else {
        if (void 0 !== n3 && (o3 = new dM(n3, true)), r3 = this.parse(s3, null, o3))
          throw iv(r3);
        (a3 = av(new rv())).bindURL(this), this.searchParams = a3;
      }
    };
    dM.prototype = { type: "URL", parse: function(e3, t3, n3) {
      var o3, r3, a3, s3, i3, u3 = this, c3 = t3 || Hv, l3 = 0, d3 = "", p3 = false, g3 = false, h3 = false;
      for (e3 = dn(e3), t3 || (u3.scheme = "", u3.username = "", u3.password = "", u3.host = null, u3.port = null, u3.path = [], u3.query = null, u3.fragment = null, u3.cannotBeABaseURL = false, e3 = mv(e3, Lv, "")), e3 = mv(e3, Gv, ""), o3 = Eo(e3); l3 <= o3.length; ) {
        switch (r3 = o3[l3], c3) {
          case Hv:
            if (!r3 || !pv(Cv, r3)) {
              if (t3)
                return "Invalid scheme";
              c3 = Wv;
              continue;
            }
            d3 += Iv(r3), c3 = jv;
            break;
          case jv:
            if (r3 && (pv(Ev, r3) || "+" == r3 || "-" == r3 || "." == r3))
              d3 += Iv(r3);
            else {
              if (":" != r3) {
                if (t3)
                  return "Invalid scheme";
                d3 = "", c3 = Wv, l3 = 0;
                continue;
              }
              if (t3 && (u3.isSpecial() != Ae2(xv, d3) || "file" == d3 && (u3.includesCredentials() || null !== u3.port) || "file" == u3.scheme && !u3.host))
                return;
              if (u3.scheme = d3, t3)
                return void (u3.isSpecial() && xv[u3.scheme] == u3.port && (u3.port = null));
              d3 = "", "file" == u3.scheme ? c3 = oM : u3.isSpecial() && n3 && n3.scheme == u3.scheme ? c3 = Yv : u3.isSpecial() ? c3 = Xv : "/" == o3[l3 + 1] ? (c3 = $v, l3++) : (u3.cannotBeABaseURL = true, _v(u3.path, ""), c3 = uM);
            }
            break;
          case Wv:
            if (!n3 || n3.cannotBeABaseURL && "#" != r3)
              return "Invalid scheme";
            if (n3.cannotBeABaseURL && "#" == r3) {
              u3.scheme = n3.scheme, u3.path = ui(n3.path), u3.query = n3.query, u3.fragment = "", u3.cannotBeABaseURL = true, c3 = lM;
              break;
            }
            c3 = "file" == n3.scheme ? oM : zv;
            continue;
          case Yv:
            if ("/" != r3 || "/" != o3[l3 + 1]) {
              c3 = zv;
              continue;
            }
            c3 = Qv, l3++;
            break;
          case $v:
            if ("/" == r3) {
              c3 = Zv;
              break;
            }
            c3 = iM;
            continue;
          case zv:
            if (u3.scheme = n3.scheme, r3 == Qm)
              u3.username = n3.username, u3.password = n3.password, u3.host = n3.host, u3.port = n3.port, u3.path = ui(n3.path), u3.query = n3.query;
            else if ("/" == r3 || "\\" == r3 && u3.isSpecial())
              c3 = Jv;
            else if ("?" == r3)
              u3.username = n3.username, u3.password = n3.password, u3.host = n3.host, u3.port = n3.port, u3.path = ui(n3.path), u3.query = "", c3 = cM;
            else {
              if ("#" != r3) {
                u3.username = n3.username, u3.password = n3.password, u3.host = n3.host, u3.port = n3.port, u3.path = ui(n3.path), u3.path.length--, c3 = iM;
                continue;
              }
              u3.username = n3.username, u3.password = n3.password, u3.host = n3.host, u3.port = n3.port, u3.path = ui(n3.path), u3.query = n3.query, u3.fragment = "", c3 = lM;
            }
            break;
          case Jv:
            if (!u3.isSpecial() || "/" != r3 && "\\" != r3) {
              if ("/" != r3) {
                u3.username = n3.username, u3.password = n3.password, u3.host = n3.host, u3.port = n3.port, c3 = iM;
                continue;
              }
              c3 = Zv;
            } else
              c3 = Qv;
            break;
          case Xv:
            if (c3 = Qv, "/" != r3 || "/" != dv(d3, l3 + 1))
              continue;
            l3++;
            break;
          case Qv:
            if ("/" != r3 && "\\" != r3) {
              c3 = Zv;
              continue;
            }
            break;
          case Zv:
            if ("@" == r3) {
              p3 && (d3 = "%40" + d3), p3 = true, a3 = Eo(d3);
              for (var f3 = 0; f3 < a3.length; f3++) {
                var _3 = a3[f3];
                if (":" != _3 || h3) {
                  var m3 = qv(_3, Fv);
                  h3 ? u3.password += m3 : u3.username += m3;
                } else
                  h3 = true;
              }
              d3 = "";
            } else if (r3 == Qm || "/" == r3 || "?" == r3 || "#" == r3 || "\\" == r3 && u3.isSpecial()) {
              if (p3 && "" == d3)
                return "Invalid authority";
              l3 -= Eo(d3).length + 1, d3 = "", c3 = eM;
            } else
              d3 += r3;
            break;
          case eM:
          case tM:
            if (t3 && "file" == u3.scheme) {
              c3 = aM;
              continue;
            }
            if (":" != r3 || g3) {
              if (r3 == Qm || "/" == r3 || "?" == r3 || "#" == r3 || "\\" == r3 && u3.isSpecial()) {
                if (u3.isSpecial() && "" == d3)
                  return "Invalid host";
                if (t3 && "" == d3 && (u3.includesCredentials() || null !== u3.port))
                  return;
                if (s3 = u3.parseHost(d3))
                  return s3;
                if (d3 = "", c3 = sM, t3)
                  return;
                continue;
              }
              "[" == r3 ? g3 = true : "]" == r3 && (g3 = false), d3 += r3;
            } else {
              if ("" == d3)
                return "Invalid host";
              if (s3 = u3.parseHost(d3))
                return s3;
              if (d3 = "", c3 = nM, t3 == tM)
                return;
            }
            break;
          case nM:
            if (!pv(Sv, r3)) {
              if (r3 == Qm || "/" == r3 || "?" == r3 || "#" == r3 || "\\" == r3 && u3.isSpecial() || t3) {
                if ("" != d3) {
                  var v3 = uv(d3, 10);
                  if (v3 > 65535)
                    return "Invalid port";
                  u3.port = u3.isSpecial() && v3 === xv[u3.scheme] ? null : v3, d3 = "";
                }
                if (t3)
                  return;
                c3 = sM;
                continue;
              }
              return "Invalid port";
            }
            d3 += r3;
            break;
          case oM:
            if (u3.scheme = "file", "/" == r3 || "\\" == r3)
              c3 = rM;
            else {
              if (!n3 || "file" != n3.scheme) {
                c3 = iM;
                continue;
              }
              if (r3 == Qm)
                u3.host = n3.host, u3.path = ui(n3.path), u3.query = n3.query;
              else if ("?" == r3)
                u3.host = n3.host, u3.path = ui(n3.path), u3.query = "", c3 = cM;
              else {
                if ("#" != r3) {
                  Bv(gv(ui(o3, l3), "")) || (u3.host = n3.host, u3.path = ui(n3.path), u3.shortenPath()), c3 = iM;
                  continue;
                }
                u3.host = n3.host, u3.path = ui(n3.path), u3.query = n3.query, u3.fragment = "", c3 = lM;
              }
            }
            break;
          case rM:
            if ("/" == r3 || "\\" == r3) {
              c3 = aM;
              break;
            }
            n3 && "file" == n3.scheme && !Bv(gv(ui(o3, l3), "")) && (Vv(n3.path[0], true) ? _v(u3.path, n3.path[0]) : u3.host = n3.host), c3 = iM;
            continue;
          case aM:
            if (r3 == Qm || "/" == r3 || "\\" == r3 || "?" == r3 || "#" == r3) {
              if (!t3 && Vv(d3))
                c3 = iM;
              else if ("" == d3) {
                if (u3.host = "", t3)
                  return;
                c3 = sM;
              } else {
                if (s3 = u3.parseHost(d3))
                  return s3;
                if ("localhost" == u3.host && (u3.host = ""), t3)
                  return;
                d3 = "", c3 = sM;
              }
              continue;
            }
            d3 += r3;
            break;
          case sM:
            if (u3.isSpecial()) {
              if (c3 = iM, "/" != r3 && "\\" != r3)
                continue;
            } else if (t3 || "?" != r3)
              if (t3 || "#" != r3) {
                if (r3 != Qm && (c3 = iM, "/" != r3))
                  continue;
              } else
                u3.fragment = "", c3 = lM;
            else
              u3.query = "", c3 = cM;
            break;
          case iM:
            if (r3 == Qm || "/" == r3 || "\\" == r3 && u3.isSpecial() || !t3 && ("?" == r3 || "#" == r3)) {
              if (".." === (i3 = Iv(i3 = d3)) || "%2e." === i3 || ".%2e" === i3 || "%2e%2e" === i3 ? (u3.shortenPath(), "/" == r3 || "\\" == r3 && u3.isSpecial() || _v(u3.path, "")) : Kv(d3) ? "/" == r3 || "\\" == r3 && u3.isSpecial() || _v(u3.path, "") : ("file" == u3.scheme && !u3.path.length && Vv(d3) && (u3.host && (u3.host = ""), d3 = dv(d3, 0) + ":"), _v(u3.path, d3)), d3 = "", "file" == u3.scheme && (r3 == Qm || "?" == r3 || "#" == r3))
                for (; u3.path.length > 1 && "" === u3.path[0]; )
                  vv(u3.path);
              "?" == r3 ? (u3.query = "", c3 = cM) : "#" == r3 && (u3.fragment = "", c3 = lM);
            } else
              d3 += qv(r3, wv);
            break;
          case uM:
            "?" == r3 ? (u3.query = "", c3 = cM) : "#" == r3 ? (u3.fragment = "", c3 = lM) : r3 != Qm && (u3.path[0] += qv(r3, Uv));
            break;
          case cM:
            t3 || "#" != r3 ? r3 != Qm && ("'" == r3 && u3.isSpecial() ? u3.query += "%27" : u3.query += "#" == r3 ? "%23" : qv(r3, Uv)) : (u3.fragment = "", c3 = lM);
            break;
          case lM:
            r3 != Qm && (u3.fragment += qv(r3, bv));
        }
        l3++;
      }
    }, parseHost: function(e3) {
      var t3, n3, o3;
      if ("[" == dv(e3, 0)) {
        if ("]" != dv(e3, e3.length - 1))
          return "Invalid host";
        if (!(t3 = function(e4) {
          var t4, n4, o4, r3, a3, s3, i3, u3 = [0, 0, 0, 0, 0, 0, 0, 0], c3 = 0, l3 = null, d3 = 0, p3 = function() {
            return dv(e4, d3);
          };
          if (":" == p3()) {
            if (":" != dv(e4, 1))
              return;
            d3 += 2, l3 = ++c3;
          }
          for (; p3(); ) {
            if (8 == c3)
              return;
            if (":" != p3()) {
              for (t4 = n4 = 0; n4 < 4 && pv(kv, p3()); )
                t4 = 16 * t4 + uv(p3(), 16), d3++, n4++;
              if ("." == p3()) {
                if (0 == n4)
                  return;
                if (d3 -= n4, c3 > 6)
                  return;
                for (o4 = 0; p3(); ) {
                  if (r3 = null, o4 > 0) {
                    if (!("." == p3() && o4 < 4))
                      return;
                    d3++;
                  }
                  if (!pv(Sv, p3()))
                    return;
                  for (; pv(Sv, p3()); ) {
                    if (a3 = uv(p3(), 10), null === r3)
                      r3 = a3;
                    else {
                      if (0 == r3)
                        return;
                      r3 = 10 * r3 + a3;
                    }
                    if (r3 > 255)
                      return;
                    d3++;
                  }
                  u3[c3] = 256 * u3[c3] + r3, 2 != ++o4 && 4 != o4 || c3++;
                }
                if (4 != o4)
                  return;
                break;
              }
              if (":" == p3()) {
                if (d3++, !p3())
                  return;
              } else if (p3())
                return;
              u3[c3++] = t4;
            } else {
              if (null !== l3)
                return;
              d3++, l3 = ++c3;
            }
          }
          if (null !== l3)
            for (s3 = c3 - l3, c3 = 7; 0 != c3 && s3 > 0; )
              i3 = u3[c3], u3[c3--] = u3[l3 + s3 - 1], u3[l3 + --s3] = i3;
          else if (8 != c3)
            return;
          return u3;
        }(yv(e3, 1, -1))))
          return "Invalid host";
        this.host = t3;
      } else if (this.isSpecial()) {
        if (e3 = function(e4) {
          var t4, n4, o4 = [], r3 = rm(om(am(e4), $_, "."), ".");
          for (t4 = 0; t4 < r3.length; t4++)
            n4 = r3[t4], nm(o4, X_(Y_, n4) ? "xn--" + um(n4) : n4);
          return tm(o4, ".");
        }(e3), pv(Rv, e3))
          return "Invalid host";
        if (null === (t3 = function(e4) {
          var t4, n4, o4, r3, a3, s3, i3, u3 = Mv(e4, ".");
          if (u3.length && "" == u3[u3.length - 1] && u3.length--, (t4 = u3.length) > 4)
            return e4;
          for (n4 = [], o4 = 0; o4 < t4; o4++) {
            if ("" == (r3 = u3[o4]))
              return e4;
            if (a3 = 10, r3.length > 1 && "0" == dv(r3, 0) && (a3 = pv(Dv, r3) ? 16 : 8, r3 = yv(r3, 8 == a3 ? 1 : 2)), "" === r3)
              s3 = 0;
            else {
              if (!pv(10 == a3 ? Av : 8 == a3 ? Nv : kv, r3))
                return e4;
              s3 = uv(r3, a3);
            }
            _v(n4, s3);
          }
          for (o4 = 0; o4 < t4; o4++)
            if (s3 = n4[o4], o4 == t4 - 1) {
              if (s3 >= lv(256, 5 - t4))
                return null;
            } else if (s3 > 255)
              return null;
          for (i3 = fv(n4), o4 = 0; o4 < n4.length; o4++)
            i3 += n4[o4] * lv(256, 3 - o4);
          return i3;
        }(e3)))
          return "Invalid host";
        this.host = t3;
      } else {
        if (pv(Ov, e3))
          return "Invalid host";
        for (t3 = "", n3 = Eo(e3), o3 = 0; o3 < n3.length; o3++)
          t3 += qv(n3[o3], Uv);
        this.host = t3;
      }
    }, cannotHaveUsernamePasswordPort: function() {
      return !this.host || this.cannotBeABaseURL || "file" == this.scheme;
    }, includesCredentials: function() {
      return "" != this.username || "" != this.password;
    }, isSpecial: function() {
      return Ae2(xv, this.scheme);
    }, shortenPath: function() {
      var e3 = this.path, t3 = e3.length;
      !t3 || "file" == this.scheme && 1 == t3 && Vv(e3[0], true) || e3.length--;
    }, serialize: function() {
      var e3 = this, t3 = e3.scheme, n3 = e3.username, o3 = e3.password, r3 = e3.host, a3 = e3.port, s3 = e3.path, i3 = e3.query, u3 = e3.fragment, c3 = t3 + ":";
      return null !== r3 ? (c3 += "//", e3.includesCredentials() && (c3 += n3 + (o3 ? ":" + o3 : "") + "@"), c3 += Pv(r3), null !== a3 && (c3 += ":" + a3)) : "file" == t3 && (c3 += "//"), c3 += e3.cannotBeABaseURL ? s3[0] : s3.length ? "/" + gv(s3, "/") : "", null !== i3 && (c3 += "?" + i3), null !== u3 && (c3 += "#" + u3), c3;
    }, setHref: function(e3) {
      var t3 = this.parse(e3);
      if (t3)
        throw iv(t3);
      this.searchParams.update();
    }, getOrigin: function() {
      var e3 = this.scheme, t3 = this.port;
      if ("blob" == e3)
        try {
          return new pM(e3.path[0]).origin;
        } catch (BS) {
          return "null";
        }
      return "file" != e3 && this.isSpecial() ? e3 + "://" + Pv(this.host) + (null !== t3 ? ":" + t3 : "") : "null";
    }, getProtocol: function() {
      return this.scheme + ":";
    }, setProtocol: function(e3) {
      this.parse(dn(e3) + ":", Hv);
    }, getUsername: function() {
      return this.username;
    }, setUsername: function(e3) {
      var t3 = Eo(dn(e3));
      if (!this.cannotHaveUsernamePasswordPort()) {
        this.username = "";
        for (var n3 = 0; n3 < t3.length; n3++)
          this.username += qv(t3[n3], Fv);
      }
    }, getPassword: function() {
      return this.password;
    }, setPassword: function(e3) {
      var t3 = Eo(dn(e3));
      if (!this.cannotHaveUsernamePasswordPort()) {
        this.password = "";
        for (var n3 = 0; n3 < t3.length; n3++)
          this.password += qv(t3[n3], Fv);
      }
    }, getHost: function() {
      var e3 = this.host, t3 = this.port;
      return null === e3 ? "" : null === t3 ? Pv(e3) : Pv(e3) + ":" + t3;
    }, setHost: function(e3) {
      this.cannotBeABaseURL || this.parse(e3, eM);
    }, getHostname: function() {
      var e3 = this.host;
      return null === e3 ? "" : Pv(e3);
    }, setHostname: function(e3) {
      this.cannotBeABaseURL || this.parse(e3, tM);
    }, getPort: function() {
      var e3 = this.port;
      return null === e3 ? "" : dn(e3);
    }, setPort: function(e3) {
      this.cannotHaveUsernamePasswordPort() || ("" == (e3 = dn(e3)) ? this.port = null : this.parse(e3, nM));
    }, getPathname: function() {
      var e3 = this.path;
      return this.cannotBeABaseURL ? e3[0] : e3.length ? "/" + gv(e3, "/") : "";
    }, setPathname: function(e3) {
      this.cannotBeABaseURL || (this.path = [], this.parse(e3, sM));
    }, getSearch: function() {
      var e3 = this.query;
      return e3 ? "?" + e3 : "";
    }, setSearch: function(e3) {
      "" == (e3 = dn(e3)) ? this.query = null : ("?" == dv(e3, 0) && (e3 = yv(e3, 1)), this.query = "", this.parse(e3, cM)), this.searchParams.update();
    }, getSearchParams: function() {
      return this.searchParams.facade;
    }, getHash: function() {
      var e3 = this.fragment;
      return e3 ? "#" + e3 : "";
    }, setHash: function(e3) {
      "" != (e3 = dn(e3)) ? ("#" == dv(e3, 0) && (e3 = yv(e3, 1)), this.fragment = "", this.parse(e3, lM)) : this.fragment = null;
    }, update: function() {
      this.query = this.searchParams.serialize() || null;
    } };
    var pM = function(e3) {
      var t3 = Li(this, gM), n3 = Bi(arguments.length, 1) > 1 ? arguments[1] : void 0, o3 = nv(t3, new dM(e3, false, n3));
      L2 || (t3.href = o3.serialize(), t3.origin = o3.getOrigin(), t3.protocol = o3.getProtocol(), t3.username = o3.getUsername(), t3.password = o3.getPassword(), t3.host = o3.getHost(), t3.hostname = o3.getHostname(), t3.port = o3.getPort(), t3.pathname = o3.getPathname(), t3.search = o3.getSearch(), t3.searchParams = o3.getSearchParams(), t3.hash = o3.getHash());
    }, gM = pM.prototype, hM = function(e3, t3) {
      return { get: function() {
        return ov(this)[e3]();
      }, set: t3 && function(e4) {
        return ov(this)[t3](e4);
      }, configurable: true, enumerable: true };
    };
    if (L2 && ev(gM, { href: hM("serialize", "setHref"), origin: hM("getOrigin"), protocol: hM("getProtocol", "setProtocol"), username: hM("getUsername", "setUsername"), password: hM("getPassword", "setPassword"), host: hM("getHost", "setHost"), hostname: hM("getHostname", "setHostname"), port: hM("getPort", "setPort"), pathname: hM("getPathname", "setPathname"), search: hM("getSearch", "setSearch"), searchParams: hM("getSearchParams"), hash: hM("getHash", "setHash") }), Dt(gM, "toJSON", function() {
      return ov(this).serialize();
    }, { enumerable: true }), Dt(gM, "toString", function() {
      return ov(this).serialize();
    }, { enumerable: true }), sv) {
      var fM = sv.createObjectURL, _M = sv.revokeObjectURL;
      fM && Dt(pM, "createObjectURL", wn2(fM, sv)), _M && Dt(pM, "revokeObjectURL", wn2(_M, sv));
    }
    zo(pM, "URL"), nn({ global: true, forced: !B_, sham: !L2 }, { URL: pM }), nn({ target: "Object", stat: true, forced: Object.assign !== W_ }, { assign: W_ });
    var mM = function() {
      function e3(t3) {
        o2(this, e3), this._imageMemoryURL = "", tl ? this.createImageDataASURLInWXMiniApp(t3.file) : this.createImageDataASURLInWeb(t3.file), this._initImageInfoModel(), this.type = gr.MSG_IMAGE, this._percent = 0, this.content = { imageFormat: t3.imageFormat || Fl.UNKNOWN, uuid: t3.uuid, imageInfoArray: [] }, this.initImageInfoArray(t3.imageInfoArray), this._defaultImage = "http://imgcache.qq.com/open/qcloud/video/act/webim-images/default.jpg", this._autoFixUrl();
      }
      return a2(e3, [{ key: "_initImageInfoModel", value: function() {
        var e4 = this;
        this._ImageInfoModel = function(t3) {
          this.instanceID = pd(9999999), this.sizeType = t3.type || 0, this.type = 0, this.size = t3.size || 0, this.width = t3.width || 0, this.height = t3.height || 0, this.imageUrl = t3.url || "", this.url = t3.url || e4._imageMemoryURL || e4._defaultImage;
        }, this._ImageInfoModel.prototype = { setSizeType: function(e5) {
          this.sizeType = e5;
        }, setType: function(e5) {
          this.type = e5;
        }, setImageUrl: function(e5) {
          e5 && (this.imageUrl = e5);
        }, getImageUrl: function() {
          return this.imageUrl;
        } };
      } }, { key: "initImageInfoArray", value: function(e4) {
        for (var t3 = 0, n3 = null, o3 = null; t3 <= 2; )
          o3 = td(e4) || td(e4[t3]) ? { type: 0, size: 0, width: 0, height: 0, url: "" } : e4[t3], (n3 = new this._ImageInfoModel(o3)).setSizeType(t3 + 1), n3.setType(t3), this.addImageInfo(n3), t3++;
        this.updateAccessSideImageInfoArray();
      } }, { key: "updateImageInfoArray", value: function(e4) {
        for (var t3, n3 = this.content.imageInfoArray.length, o3 = 0; o3 < n3; o3++)
          t3 = this.content.imageInfoArray[o3], e4[o3].size && (t3.size = e4[o3].size), e4[o3].url && t3.setImageUrl(e4[o3].url), e4[o3].width && (t3.width = e4[o3].width), e4[o3].height && (t3.height = e4[o3].height);
      } }, { key: "_autoFixUrl", value: function() {
        for (var e4 = this.content.imageInfoArray.length, t3 = "", n3 = "", o3 = ["http", "https"], r3 = null, a3 = 0; a3 < e4; a3++)
          this.content.imageInfoArray[a3].url && "" !== (r3 = this.content.imageInfoArray[a3]).imageUrl && (n3 = r3.imageUrl.slice(0, r3.imageUrl.indexOf("://") + 1), t3 = r3.imageUrl.slice(r3.imageUrl.indexOf("://") + 1), o3.indexOf(n3) < 0 && (n3 = "https:"), this.content.imageInfoArray[a3].setImageUrl([n3, t3].join("")));
      } }, { key: "updatePercent", value: function(e4) {
        this._percent = e4, this._percent > 1 && (this._percent = 1);
      } }, { key: "updateImageFormat", value: function(e4) {
        this.content.imageFormat = Fl[e4.toUpperCase()] || Fl.UNKNOWN;
      } }, { key: "createImageDataASURLInWeb", value: function(e4) {
        void 0 !== e4 && e4.files.length > 0 && (this._imageMemoryURL = window.URL.createObjectURL(e4.files[0]));
      } }, { key: "createImageDataASURLInWXMiniApp", value: function(e4) {
        e4 && e4.url && (this._imageMemoryURL = e4.url);
      } }, { key: "replaceImageInfo", value: function(e4, t3) {
        this.content.imageInfoArray[t3] instanceof this._ImageInfoModel || (this.content.imageInfoArray[t3] = e4);
      } }, { key: "addImageInfo", value: function(e4) {
        this.content.imageInfoArray.length >= 3 || this.content.imageInfoArray.push(e4);
      } }, { key: "updateAccessSideImageInfoArray", value: function() {
        var e4 = this.content.imageInfoArray, t3 = e4[0], n3 = t3.width, o3 = void 0 === n3 ? 0 : n3, r3 = t3.height, a3 = void 0 === r3 ? 0 : r3;
        0 !== o3 && 0 !== a3 && (Gd(e4), Object.assign(e4[2], Ld({ originWidth: o3, originHeight: a3, min: 720 })));
      } }, { key: "sendable", value: function() {
        return 0 !== this.content.imageInfoArray.length && ("" !== this.content.imageInfoArray[0].imageUrl && 0 !== this.content.imageInfoArray[0].size);
      } }]), e3;
    }(), vM = function() {
      function e3(t3) {
        o2(this, e3), this.type = gr.MSG_FACE, this.content = t3 || null;
      }
      return a2(e3, [{ key: "sendable", value: function() {
        return null !== this.content;
      } }]), e3;
    }(), MM = function() {
      function e3(t3) {
        o2(this, e3), this.type = gr.MSG_AUDIO, this._percent = 0, this.content = { downloadFlag: 2, second: t3.second, size: t3.size, url: t3.url, remoteAudioUrl: t3.url || "", uuid: t3.uuid };
      }
      return a2(e3, [{ key: "updatePercent", value: function(e4) {
        this._percent = e4, this._percent > 1 && (this._percent = 1);
      } }, { key: "updateAudioUrl", value: function(e4) {
        this.content.remoteAudioUrl = e4;
      } }, { key: "sendable", value: function() {
        return "" !== this.content.remoteAudioUrl;
      } }]), e3;
    }(), yM = { from: true, groupID: true, groupName: true, to: true }, IM = function() {
      function e3(t3) {
        o2(this, e3), this.type = gr.MSG_GRP_TIP, this.content = {}, this._initContent(t3);
      }
      return a2(e3, [{ key: "_initContent", value: function(e4) {
        var t3 = this;
        Object.keys(e4).forEach(function(n3) {
          switch (n3) {
            case "remarkInfo":
              break;
            case "groupProfile":
              t3.content.groupProfile = {}, t3._initGroupProfile(e4[n3]);
              break;
            case "operatorInfo":
              break;
            case "memberInfoList":
            case "msgMemberInfo":
              t3._updateMemberList(e4[n3]);
              break;
            case "memberExtraInfo":
            case "onlineMemberInfo":
              break;
            case "memberNum":
              t3.content[n3] = e4[n3], t3.content.memberCount = e4[n3];
              break;
            case "newGroupProfile":
              t3.content.newGroupProfile = {}, t3._initNewGroupProfile(e4[n3]);
              break;
            default:
              t3.content[n3] = e4[n3];
          }
        }), this.content.userIDList || (this.content.userIDList = [this.content.operatorID]);
      } }, { key: "_initGroupProfile", value: function(e4) {
        for (var t3 = Object.keys(e4), n3 = 0; n3 < t3.length; n3++) {
          var o3 = t3[n3];
          yM[o3] && (this.content.groupProfile[o3] = e4[o3]);
        }
      } }, { key: "_updateMemberList", value: function(e4) {
        Wd(this.content.memberList) ? this.content.memberList = e4 : this.content.memberList.forEach(function(t3) {
          e4.forEach(function(e5) {
            t3.userID === e5.userID && Object.assign(t3, e5);
          });
        });
      } }, { key: "_initNewGroupProfile", value: function(e4) {
        for (var t3 = Object.keys(e4), n3 = 0; n3 < t3.length; n3++) {
          var o3 = t3[n3];
          "muteAllMembers" !== o3 ? this.content.newGroupProfile[o3] = e4[o3] : this.content.newGroupProfile[o3] = 1 === e4[o3];
        }
      } }]), e3;
    }(), TM = { from: true, groupID: true, groupName: true, to: true }, CM = function() {
      function e3(t3) {
        o2(this, e3), this.type = gr.MSG_GRP_SYS_NOTICE, this.content = {}, this._initContent(t3);
      }
      return a2(e3, [{ key: "_initContent", value: function(e4) {
        var t3 = this;
        Object.keys(e4).forEach(function(n3) {
          switch (n3) {
            case "memberInfoList":
              break;
            case "remarkInfo":
              t3.content.handleMessage = e4[n3];
              break;
            case "groupProfile":
              t3.content.groupProfile = {}, t3._initGroupProfile(e4[n3]);
              break;
            default:
              t3.content[n3] = e4[n3];
          }
        });
      } }, { key: "_initGroupProfile", value: function(e4) {
        for (var t3 = Object.keys(e4), n3 = 0; n3 < t3.length; n3++) {
          var o3 = t3[n3];
          TM[o3] && ("groupName" === o3 ? this.content.groupProfile.name = e4[o3] : this.content.groupProfile[o3] = e4[o3]);
        }
      } }]), e3;
    }(), EM = Math.min, SM = [].lastIndexOf, DM = !!SM && 1 / [1].lastIndexOf(1, -0) < 0, NM = eo("lastIndexOf"), AM = DM || !NM ? function(e3) {
      if (DM)
        return Ts2(SM, this, arguments) || 0;
      var t3 = Z2(this), n3 = Ut(t3), o3 = n3 - 1;
      for (arguments.length > 1 && (o3 = EM(o3, kt2(arguments[1]))), o3 < 0 && (o3 = n3 + o3); o3 >= 0; o3--)
        if (o3 in t3 && t3[o3] === e3)
          return o3 || 0;
      return -1;
    } : SM;
    nn({ target: "Array", proto: true, forced: AM !== [].lastIndexOf }, { lastIndexOf: AM });
    var kM = function() {
      function e3(t3) {
        o2(this, e3), this.type = gr.MSG_FILE, this._percent = 0;
        var n3 = this._getFileInfo(t3);
        this.content = { downloadFlag: 2, fileUrl: t3.url || "", uuid: t3.uuid, fileName: n3.name || "", fileSize: n3.size || 0 };
      }
      return a2(e3, [{ key: "_getFileInfo", value: function(e4) {
        if (!td(e4.fileName) && !td(e4.fileSize))
          return { size: e4.fileSize, name: e4.fileName };
        var t3 = e4.file.files[0];
        if (Zc) {
          if (t3.path && -1 !== t3.path.indexOf(".")) {
            var n3 = t3.path.slice(t3.path.lastIndexOf(".") + 1).toLowerCase();
            t3.type = n3, t3.name || (t3.name = "".concat(pd(999999), ".").concat(n3));
          }
          t3.name || (t3.type = "", t3.name = t3.path.slice(t3.path.lastIndexOf("/") + 1).toLowerCase()), t3.suffix && (t3.type = t3.suffix), t3.url || (t3.url = t3.path);
        }
        return { size: t3.size, name: t3.name };
      } }, { key: "updatePercent", value: function(e4) {
        this._percent = e4, this._percent > 1 && (this._percent = 1);
      } }, { key: "updateFileUrl", value: function(e4) {
        this.content.fileUrl = e4;
      } }, { key: "sendable", value: function() {
        return "" !== this.content.fileUrl && ("" !== this.content.fileName && 0 !== this.content.fileSize);
      } }]), e3;
    }(), RM = function() {
      function e3(t3) {
        o2(this, e3), this.type = gr.MSG_CUSTOM, this.content = { data: t3.data || "", description: t3.description || "", extension: t3.extension || "" };
      }
      return a2(e3, [{ key: "setData", value: function(e4) {
        return this.content.data = e4, this;
      } }, { key: "setDescription", value: function(e4) {
        return this.content.description = e4, this;
      } }, { key: "setExtension", value: function(e4) {
        return this.content.extension = e4, this;
      } }, { key: "sendable", value: function() {
        return 0 !== this.content.data.length || 0 !== this.content.description.length || 0 !== this.content.extension.length;
      } }]), e3;
    }(), OM = function() {
      function e3(t3) {
        o2(this, e3), this.type = gr.MSG_VIDEO, this._percent = 0, this.content = { remoteVideoUrl: t3.remoteVideoUrl || t3.videoUrl || "", videoFormat: t3.videoFormat, videoSecond: parseInt(t3.videoSecond, 10), videoSize: t3.videoSize, videoUrl: t3.videoUrl, videoDownloadFlag: 2, videoUUID: t3.videoUUID, thumbUUID: t3.thumbUUID, thumbFormat: t3.thumbFormat, thumbWidth: t3.thumbWidth, snapshotWidth: t3.thumbWidth, thumbHeight: t3.thumbHeight, snapshotHeight: t3.thumbHeight, thumbSize: t3.thumbSize, snapshotSize: t3.thumbSize, thumbDownloadFlag: 2, thumbUrl: t3.thumbUrl, snapshotUrl: t3.thumbUrl };
      }
      return a2(e3, [{ key: "updatePercent", value: function(e4) {
        this._percent = e4, this._percent > 1 && (this._percent = 1);
      } }, { key: "updateVideoUrl", value: function(e4) {
        e4 && (this.content.remoteVideoUrl = e4);
      } }, { key: "updateSnapshotInfo", value: function(e4) {
        var t3 = e4.snapshotUrl, n3 = e4.snapshotWidth, o3 = e4.snapshotHeight;
        Wd(t3) || (this.content.thumbUrl = this.content.snapshotUrl = t3), Wd(n3) || (this.content.thumbWidth = this.content.snapshotWidth = Number(n3)), Wd(o3) || (this.content.thumbHeight = this.content.snapshotHeight = Number(o3));
      } }, { key: "sendable", value: function() {
        return "" !== this.content.remoteVideoUrl;
      } }]), e3;
    }(), LM = function() {
      function e3(t3) {
        o2(this, e3), this.type = gr.MSG_LOCATION;
        var n3 = t3.description, r3 = t3.longitude, a3 = t3.latitude;
        this.content = { description: n3, longitude: r3, latitude: a3 };
      }
      return a2(e3, [{ key: "sendable", value: function() {
        return true;
      } }]), e3;
    }(), GM = function() {
      function e3(t3) {
        if (o2(this, e3), this.from = t3.from, this.messageSender = t3.from, this.time = t3.time, this.messageSequence = t3.sequence, this.clientSequence = t3.clientSequence || t3.sequence, this.messageRandom = t3.random, this.cloudCustomData = t3.cloudCustomData || "", this.clientTime = t3.clientTime || void 0, t3.ID)
          this.ID = t3.ID || "", this.nick = t3.nick || "", this.avatar = t3.avatar || "", this.messageBody = [{ type: t3.type, payload: t3.payload }], t3.conversationType.startsWith(gr.CONV_C2C) ? this.receiverUserID = t3.to : t3.conversationType.startsWith(gr.CONV_GROUP) && (this.receiverGroupID = t3.to), this.messageReceiver = t3.to;
        else {
          this.nick = t3.nick || "", this.avatar = t3.avatar || "", this.messageBody = [];
          var n3 = t3.elements[0].type, r3 = t3.elements[0].content;
          this._patchRichMediaPayload(n3, r3), n3 === gr.MSG_MERGER ? this.messageBody.push({ type: n3, payload: new PM(r3).content }) : this.messageBody.push({ type: n3, payload: r3 }), t3.groupID && (this.receiverGroupID = t3.groupID, this.messageReceiver = t3.groupID), t3.to && (this.receiverUserID = t3.to, this.messageReceiver = t3.to), this.ID = "".concat(t3.tinyID, "-").concat(t3.clientTime, "-").concat(t3.random);
        }
      }
      return a2(e3, [{ key: "_patchRichMediaPayload", value: function(e4, t3) {
        e4 === gr.MSG_IMAGE ? t3.imageInfoArray.forEach(function(e5) {
          !e5.imageUrl && e5.url && (e5.imageUrl = e5.url, e5.sizeType = e5.type, 1 === e5.type ? e5.type = 0 : 3 === e5.type && (e5.type = 1));
        }) : e4 === gr.MSG_VIDEO ? !t3.remoteVideoUrl && t3.videoUrl && (t3.remoteVideoUrl = t3.videoUrl) : e4 === gr.MSG_AUDIO ? !t3.remoteAudioUrl && t3.url && (t3.remoteAudioUrl = t3.url) : e4 === gr.MSG_FILE && !t3.fileUrl && t3.url && (t3.fileUrl = t3.url, t3.url = void 0);
      } }]), e3;
    }(), PM = function() {
      function e3(t3) {
        if (o2(this, e3), this.type = gr.MSG_MERGER, this.content = { downloadKey: "", pbDownloadKey: "", messageList: [], title: "", abstractList: [], compatibleText: "", version: 0, layersOverLimit: false }, t3.downloadKey) {
          var n3 = t3.downloadKey, r3 = t3.pbDownloadKey, a3 = t3.title, s3 = t3.abstractList, i3 = t3.compatibleText, u3 = t3.version;
          this.content.downloadKey = n3, this.content.pbDownloadKey = r3, this.content.title = a3, this.content.abstractList = s3, this.content.compatibleText = i3, this.content.version = u3 || 0;
        } else if (Wd(t3.messageList))
          1 === t3.layersOverLimit && (this.content.layersOverLimit = true);
        else {
          var c3 = t3.messageList, l3 = t3.title, d3 = t3.abstractList, p3 = t3.compatibleText, g3 = t3.version, h3 = [];
          c3.forEach(function(e4) {
            if (!Wd(e4)) {
              var t4 = new GM(e4);
              h3.push(t4);
            }
          }), this.content.messageList = h3, this.content.title = l3, this.content.abstractList = d3, this.content.compatibleText = p3, this.content.version = g3 || 0;
        }
        wl.debug("MergerElement.content:", this.content);
      }
      return a2(e3, [{ key: "sendable", value: function() {
        return !Wd(this.content.messageList) || !Wd(this.content.downloadKey);
      } }]), e3;
    }(), UM = { 1: gr.MSG_PRIORITY_HIGH, 2: gr.MSG_PRIORITY_NORMAL, 3: gr.MSG_PRIORITY_LOW, 4: gr.MSG_PRIORITY_LOWEST }, bM = function() {
      function e3(t3) {
        o2(this, e3), this.ID = "", this.conversationID = t3.conversationID || null, this.conversationType = t3.conversationType || gr.CONV_C2C, this.conversationSubType = t3.conversationSubType, this.time = t3.time || Math.ceil(Date.now() / 1e3), this.sequence = t3.sequence || 0, this.clientSequence = t3.clientSequence || t3.sequence || 0, this.random = t3.random || 0 === t3.random ? t3.random : pd(), this.priority = this._computePriority(t3.priority), this.nick = t3.nick || "", this.avatar = t3.avatar || "", this.isPeerRead = false, this.nameCard = "", this._elements = [], this.isPlaceMessage = t3.isPlaceMessage || 0, this.isRevoked = 2 === t3.isPlaceMessage || 8 === t3.msgFlagBits, this.from = t3.from || null, this.to = t3.to || null, this.flow = "", this.isSystemMessage = t3.isSystemMessage || false, this.protocol = t3.protocol || "JSON", this.isResend = false, this.isRead = false, this.status = t3.status || Vp.SUCCESS, this._onlineOnlyFlag = false, this._groupAtInfoList = [], this._relayFlag = false, this.atUserList = [], this.cloudCustomData = t3.cloudCustomData || "", this.isDeleted = false, this.isModified = false, this._isExcludedFromUnreadCount = !(!t3.messageControlInfo || 1 !== t3.messageControlInfo.excludedFromUnreadCount), this._isExcludedFromLastMessage = !(!t3.messageControlInfo || 1 !== t3.messageControlInfo.excludedFromLastMessage), this.clientTime = t3.clientTime || Gl() || 0, this.senderTinyID = t3.senderTinyID || t3.tinyID || "", this.readReceiptInfo = t3.readReceiptInfo || { readCount: void 0, unreadCount: void 0, isPeerRead: void 0 }, this.needReadReceipt = true === t3.needReadReceipt || 1 === t3.needReadReceipt, this.version = t3.messageVersion || 0, this.isBroadcastMessage = t3.isBroadcastMessage || false, this._receiverList = t3.receiverList || void 0, this.isSupportExtension = true === t3.isSupportExtension || 1 === t3.isSupportExtension, this.revoker = t3.revokerInfo && t3.revokerInfo.revoker || null, this.reInitialize(t3.currentUser), this.extractGroupInfo(t3.groupProfile || null), this.handleGroupAtInfo(t3), this.initC2CReadReceiptInfo(t3.readReceiptSentByPeer);
      }
      return a2(e3, [{ key: "elements", get: function() {
        return this._elements;
      } }, { key: "getElements", value: function() {
        return this._elements;
      } }, { key: "extractGroupInfo", value: function(e4) {
        if (null !== e4) {
          Xl(e4.nick) && (this.nick = e4.nick), Xl(e4.avatar) && (this.avatar = e4.avatar);
          var t3 = e4.messageFromAccountExtraInformation;
          Zl(t3) && Xl(t3.nameCard) && (this.nameCard = t3.nameCard);
        }
      } }, { key: "handleGroupAtInfo", value: function(e4) {
        var t3 = this;
        e4.payload && e4.payload.atUserList && e4.payload.atUserList.forEach(function(e5) {
          e5 !== gr.MSG_AT_ALL ? (t3._groupAtInfoList.push({ groupAtAllFlag: 0, groupAtUserID: e5 }), t3.atUserList.push(e5)) : (t3._groupAtInfoList.push({ groupAtAllFlag: 1 }), t3.atUserList.push(gr.MSG_AT_ALL));
        }), ed(e4.groupAtInfo) && e4.groupAtInfo.forEach(function(e5) {
          0 === e5.groupAtAllFlag ? t3.atUserList.push(e5.groupAtUserID) : 1 === e5.groupAtAllFlag && t3.atUserList.push(gr.MSG_AT_ALL);
        });
      } }, { key: "getGroupAtInfoList", value: function() {
        return this._groupAtInfoList;
      } }, { key: "_initProxy", value: function() {
        this._elements[0] && (this.payload = this._elements[0].content, this.type = this._elements[0].type);
      } }, { key: "reInitialize", value: function(e4) {
        e4 && (this.status = this.from ? Vp.SUCCESS : Vp.UNSEND, !this.from && (this.from = e4)), this._initFlow(e4), this._initSequence(e4), this._concatConversationID(e4), this.generateMessageID();
      } }, { key: "isSendable", value: function() {
        return 0 !== this._elements.length && ("function" != typeof this._elements[0].sendable ? (wl.warn("".concat(this._elements[0].type, ' need "boolean : sendable()" method')), false) : this._elements[0].sendable());
      } }, { key: "_initTo", value: function(e4) {
        this.conversationType === gr.CONV_GROUP && (this.to = e4.groupID);
      } }, { key: "_initSequence", value: function(e4) {
        0 === this.clientSequence && e4 && (this.clientSequence = function(e5) {
          if (!e5)
            return wl.error("autoIncrementIndex(string: key) need key parameter"), false;
          if (void 0 === _d[e5]) {
            var t3 = new Date(), n3 = "3".concat(t3.getHours()).slice(-2), o3 = "0".concat(t3.getMinutes()).slice(-2), r3 = "0".concat(t3.getSeconds()).slice(-2);
            _d[e5] = parseInt([n3, o3, r3, "0001"].join("")), n3 = null, o3 = null, r3 = null, wl.log("autoIncrementIndex start index:".concat(_d[e5]));
          }
          return _d[e5]++;
        }(e4)), 0 === this.sequence && this.conversationType === gr.CONV_C2C && (this.sequence = this.clientSequence);
      } }, { key: "generateMessageID", value: function() {
        this.from === gr.CONV_SYSTEM && (this.senderTinyID = "144115198244471703"), this.ID = "".concat(this.senderTinyID, "-").concat(this.clientTime, "-").concat(this.random);
      } }, { key: "_initFlow", value: function(e4) {
        "" !== e4 && (e4 === this.from ? (this.flow = "out", this.isRead = true) : this.flow = "in");
      } }, { key: "_concatConversationID", value: function(e4) {
        var t3 = this.to, n3 = "", o3 = this.conversationType;
        o3 !== gr.CONV_SYSTEM ? (n3 = o3 === gr.CONV_C2C ? e4 === this.from ? t3 : this.from : this.to, this.conversationID = "".concat(o3).concat(n3)) : this.conversationID = gr.CONV_SYSTEM;
      } }, { key: "isElement", value: function(e4) {
        return e4 instanceof x_ || e4 instanceof mM || e4 instanceof vM || e4 instanceof MM || e4 instanceof kM || e4 instanceof OM || e4 instanceof IM || e4 instanceof CM || e4 instanceof RM || e4 instanceof LM || e4 instanceof PM;
      } }, { key: "setElement", value: function(e4) {
        var t3 = this;
        if (this.isElement(e4))
          return this._elements = [e4], void this._initProxy();
        var n3 = function(e5) {
          if (e5.type && e5.content)
            switch (e5.type) {
              case gr.MSG_TEXT:
                t3.setTextElement(e5.content);
                break;
              case gr.MSG_IMAGE:
                t3.setImageElement(e5.content);
                break;
              case gr.MSG_AUDIO:
                t3.setAudioElement(e5.content);
                break;
              case gr.MSG_FILE:
                t3.setFileElement(e5.content);
                break;
              case gr.MSG_VIDEO:
                t3.setVideoElement(e5.content);
                break;
              case gr.MSG_CUSTOM:
                t3.setCustomElement(e5.content);
                break;
              case gr.MSG_LOCATION:
                t3.setLocationElement(e5.content);
                break;
              case gr.MSG_GRP_TIP:
                t3.setGroupTipElement(e5.content);
                break;
              case gr.MSG_GRP_SYS_NOTICE:
                t3.setGroupSystemNoticeElement(e5.content);
                break;
              case gr.MSG_FACE:
                t3.setFaceElement(e5.content);
                break;
              case gr.MSG_MERGER:
                t3.setMergerElement(e5.content);
                break;
              default:
                wl.warn(e5.type, e5.content, "no operation......");
            }
        };
        if (ed(e4))
          for (var o3 = 0; o3 < e4.length; o3++)
            n3(e4[o3]);
        else
          n3(e4);
        this._initProxy();
      } }, { key: "clearElement", value: function() {
        this._elements.length = 0;
      } }, { key: "setTextElement", value: function(e4) {
        var t3 = "string" == typeof e4 ? e4 : e4.text, n3 = new x_({ text: t3 });
        this._elements.push(n3);
      } }, { key: "setImageElement", value: function(e4) {
        var t3 = new mM(e4);
        this._elements.push(t3);
      } }, { key: "setAudioElement", value: function(e4) {
        var t3 = new MM(e4);
        this._elements.push(t3);
      } }, { key: "setFileElement", value: function(e4) {
        var t3 = new kM(e4);
        this._elements.push(t3);
      } }, { key: "setVideoElement", value: function(e4) {
        var t3 = new OM(e4);
        this._elements.push(t3);
      } }, { key: "setLocationElement", value: function(e4) {
        var t3 = new LM(e4);
        this._elements.push(t3);
      } }, { key: "setCustomElement", value: function(e4) {
        var t3 = new RM(e4);
        this._elements.push(t3);
      } }, { key: "setGroupTipElement", value: function(e4) {
        var t3 = {}, n3 = e4.operationType;
        if (Wd(e4.memberInfoList) ? e4.operatorInfo && (t3 = e4.operatorInfo) : n3 !== gr.GRP_TIP_MBR_JOIN && n3 !== gr.GRP_TIP_MBR_KICKED_OUT && n3 !== gr.GRP_TIP_MBR_SET_ADMIN && n3 !== gr.GRP_TIP_MBR_CANCELED_ADMIN || (t3 = e4.memberInfoList[0]), !Wd(e4.memberExtraInfo)) {
          var o3 = e4.memberExtraInfo.reason;
          e4.msgMemberInfo.forEach(function(e5) {
            e5.reason = o3;
          });
        }
        var r3 = t3, a3 = r3.nick, s3 = r3.avatar;
        Xl(a3) && (this.nick = a3), Xl(s3) && (this.avatar = s3);
        var i3 = new IM(e4);
        this._elements.push(i3);
      } }, { key: "setGroupSystemNoticeElement", value: function(e4) {
        var t3 = new CM(e4);
        this._elements.push(t3);
      } }, { key: "setFaceElement", value: function(e4) {
        var t3 = new vM(e4);
        this._elements.push(t3);
      } }, { key: "setMergerElement", value: function(e4) {
        var t3 = new PM(e4);
        this._elements.push(t3);
      } }, { key: "setIsRead", value: function(e4) {
        this.isRead = e4;
      } }, { key: "setRelayFlag", value: function(e4) {
        this._relayFlag = e4;
      } }, { key: "getRelayFlag", value: function() {
        return this._relayFlag;
      } }, { key: "_computePriority", value: function(e4) {
        if (td(e4))
          return gr.MSG_PRIORITY_NORMAL;
        if (Xl(e4) && -1 !== Object.values(UM).indexOf(e4))
          return e4;
        if (Jl(e4)) {
          var t3 = "" + e4;
          if (-1 !== Object.keys(UM).indexOf(t3))
            return UM[t3];
        }
        return gr.MSG_PRIORITY_NORMAL;
      } }, { key: "setNickAndAvatar", value: function(e4) {
        var t3 = e4.nick, n3 = e4.avatar;
        Xl(t3) && (this.nick = t3), Xl(n3) && (this.avatar = n3);
      } }, { key: "setNameCard", value: function(e4) {
        Xl(e4) && (this.nameCard = e4);
      } }, { key: "initC2CReadReceiptInfo", value: function(e4) {
        this.conversationType === gr.CONV_C2C && true === this.needReadReceipt && (this.readReceiptInfo.isPeerRead = 1 === e4);
      } }]), e3;
    }(), wM = function(e3) {
      return { code: 0, data: e3 || {} };
    }, FM = "https://cloud.tencent.com/document/product/", qM = "\u60A8\u53EF\u4EE5\u5728\u5373\u65F6\u901A\u4FE1 IM \u63A7\u5236\u53F0\u7684\u3010\u5F00\u53D1\u8F85\u52A9\u5DE5\u5177(https://console.cloud.tencent.com/im-detail/tool-usersig)\u3011 \u9875\u9762\u6821\u9A8C UserSig\u3002", xM = "UserSig \u975E\u6CD5\uFF0C\u8BF7\u4F7F\u7528\u5B98\u7F51\u63D0\u4F9B\u7684 API \u91CD\u65B0\u751F\u6210 UserSig(".concat(FM, "269/32688)\u3002"), VM = "#.E6.B6.88.E6.81.AF.E5.85.83.E7.B4.A0-timmsgelement", BM = { 70001: "UserSig \u5DF2\u8FC7\u671F\uFF0C\u8BF7\u91CD\u65B0\u751F\u6210\u3002\u5EFA\u8BAE UserSig \u6709\u6548\u671F\u8BBE\u7F6E\u4E0D\u5C0F\u4E8E24\u5C0F\u65F6\u3002", 70002: "UserSig \u957F\u5EA6\u4E3A0\uFF0C\u8BF7\u68C0\u67E5\u4F20\u5165\u7684 UserSig \u662F\u5426\u6B63\u786E\u3002", 70003: xM, 70005: xM, 70009: "UserSig \u9A8C\u8BC1\u5931\u8D25\uFF0C\u53EF\u80FD\u56E0\u4E3A\u751F\u6210 UserSig \u65F6\u6DF7\u7528\u4E86\u5176\u4ED6 SDKAppID \u7684\u79C1\u94A5\u6216\u5BC6\u94A5\u5BFC\u81F4\uFF0C\u8BF7\u4F7F\u7528\u5BF9\u5E94 SDKAppID \u4E0B\u7684\u79C1\u94A5\u6216\u5BC6\u94A5\u91CD\u65B0\u751F\u6210 UserSig(".concat(FM, "269/32688)\u3002"), 70013: "\u8BF7\u6C42\u4E2D\u7684 UserID \u4E0E\u751F\u6210 UserSig \u65F6\u4F7F\u7528\u7684 UserID \u4E0D\u5339\u914D\u3002".concat(qM), 70014: "\u8BF7\u6C42\u4E2D\u7684 SDKAppID \u4E0E\u751F\u6210 UserSig \u65F6\u4F7F\u7528\u7684 SDKAppID \u4E0D\u5339\u914D\u3002".concat(qM), 70016: "\u5BC6\u94A5\u4E0D\u5B58\u5728\uFF0CUserSig \u9A8C\u8BC1\u5931\u8D25\uFF0C\u8BF7\u5728\u5373\u65F6\u901A\u4FE1 IM \u63A7\u5236\u53F0\u83B7\u53D6\u5BC6\u94A5(".concat(FM, "269/32578#.E8.8E.B7.E5.8F.96.E5.AF.86.E9.92.A5)\u3002"), 70020: "SDKAppID \u672A\u627E\u5230\uFF0C\u8BF7\u5728\u5373\u65F6\u901A\u4FE1 IM \u63A7\u5236\u53F0\u786E\u8BA4\u5E94\u7528\u4FE1\u606F\u3002", 70050: "UserSig \u9A8C\u8BC1\u6B21\u6570\u8FC7\u4E8E\u9891\u7E41\u3002\u8BF7\u68C0\u67E5 UserSig \u662F\u5426\u6B63\u786E\uFF0C\u5E76\u4E8E1\u5206\u949F\u540E\u91CD\u65B0\u9A8C\u8BC1\u3002".concat(qM), 70051: "\u5E10\u53F7\u88AB\u62C9\u5165\u9ED1\u540D\u5355\u3002", 70052: "UserSig \u5DF2\u7ECF\u5931\u6548\uFF0C\u8BF7\u91CD\u65B0\u751F\u6210\uFF0C\u518D\u6B21\u5C1D\u8BD5\u3002", 70107: "\u56E0\u5B89\u5168\u539F\u56E0\u88AB\u9650\u5236\u767B\u5F55\uFF0C\u8BF7\u4E0D\u8981\u9891\u7E41\u767B\u5F55\u3002", 70169: "\u8BF7\u6C42\u7684\u7528\u6237\u5E10\u53F7\u4E0D\u5B58\u5728\u3002", 70114: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u8D85\u65F6\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5\u3002"), 70202: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u8D85\u65F6\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5\u3002"), 70206: "\u8BF7\u6C42\u4E2D\u6279\u91CF\u6570\u91CF\u4E0D\u5408\u6CD5\u3002", 70402: "\u53C2\u6570\u975E\u6CD5\uFF0C\u8BF7\u68C0\u67E5\u5FC5\u586B\u5B57\u6BB5\u662F\u5426\u586B\u5145\uFF0C\u6216\u8005\u5B57\u6BB5\u7684\u586B\u5145\u662F\u5426\u6EE1\u8DB3\u534F\u8BAE\u8981\u6C42\u3002", 70403: "\u8BF7\u6C42\u5931\u8D25\uFF0C\u9700\u8981 App \u7BA1\u7406\u5458\u6743\u9650\u3002", 70398: "\u5E10\u53F7\u6570\u8D85\u9650\u3002\u5982\u9700\u521B\u5EFA\u591A\u4E8E100\u4E2A\u5E10\u53F7\uFF0C\u8BF7\u5C06\u5E94\u7528\u5347\u7EA7\u4E3A\u4E13\u4E1A\u7248\uFF0C\u5177\u4F53\u64CD\u4F5C\u6307\u5F15\u8BF7\u53C2\u89C1\u8D2D\u4E70\u6307\u5F15(".concat(FM, "269/32458)\u3002"), 70500: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002"), 71e3: "\u5220\u9664\u5E10\u53F7\u5931\u8D25\u3002\u4EC5\u652F\u6301\u5220\u9664\u4F53\u9A8C\u7248\u5E10\u53F7\uFF0C\u60A8\u5F53\u524D\u5E94\u7528\u4E3A\u4E13\u4E1A\u7248\uFF0C\u6682\u4E0D\u652F\u6301\u5E10\u53F7\u5220\u9664\u3002", 20001: "\u8BF7\u6C42\u5305\u975E\u6CD5\u3002", 20002: "UserSig \u6216 A2 \u5931\u6548\u3002", 20003: "\u6D88\u606F\u53D1\u9001\u65B9\u6216\u63A5\u6536\u65B9 UserID \u65E0\u6548\u6216\u4E0D\u5B58\u5728\uFF0C\u8BF7\u68C0\u67E5 UserID \u662F\u5426\u5DF2\u5BFC\u5165\u5373\u65F6\u901A\u4FE1 IM\u3002", 20004: "\u7F51\u7EDC\u5F02\u5E38\uFF0C\u8BF7\u91CD\u8BD5\u3002", 20005: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002"), 20006: "\u89E6\u53D1\u53D1\u9001".concat("\u5355\u804A\u6D88\u606F", "\u4E4B\u524D\u56DE\u8C03\uFF0CApp \u540E\u53F0\u8FD4\u56DE\u7981\u6B62\u4E0B\u53D1\u8BE5\u6D88\u606F\u3002"), 20007: "\u53D1\u9001".concat("\u5355\u804A\u6D88\u606F", "\uFF0C\u88AB\u5BF9\u65B9\u62C9\u9ED1\uFF0C\u7981\u6B62\u53D1\u9001\u3002\u6D88\u606F\u53D1\u9001\u72B6\u6001\u9ED8\u8BA4\u5C55\u793A\u4E3A\u5931\u8D25\uFF0C\u60A8\u53EF\u4EE5\u767B\u5F55\u63A7\u5236\u53F0\u4FEE\u6539\u8BE5\u573A\u666F\u4E0B\u7684\u6D88\u606F\u53D1\u9001\u72B6\u6001\u5C55\u793A\u7ED3\u679C\uFF0C\u5177\u4F53\u64CD\u4F5C\u8BF7\u53C2\u89C1\u6D88\u606F\u4FDD\u7559\u8BBE\u7F6E(").concat(FM, "269/38656)\u3002"), 20009: "\u6D88\u606F\u53D1\u9001\u53CC\u65B9\u4E92\u76F8\u4E0D\u662F\u597D\u53CB\uFF0C\u7981\u6B62\u53D1\u9001\uFF08\u914D\u7F6E".concat("\u5355\u804A\u6D88\u606F", "\u6821\u9A8C\u597D\u53CB\u5173\u7CFB\u624D\u4F1A\u51FA\u73B0\uFF09\u3002"), 20010: "\u53D1\u9001".concat("\u5355\u804A\u6D88\u606F", "\uFF0C\u81EA\u5DF1\u4E0D\u662F\u5BF9\u65B9\u7684\u597D\u53CB\uFF08\u5355\u5411\u5173\u7CFB\uFF09\uFF0C\u7981\u6B62\u53D1\u9001\u3002"), 20011: "\u53D1\u9001".concat("\u5355\u804A\u6D88\u606F", "\uFF0C\u5BF9\u65B9\u4E0D\u662F\u81EA\u5DF1\u7684\u597D\u53CB\uFF08\u5355\u5411\u5173\u7CFB\uFF09\uFF0C\u7981\u6B62\u53D1\u9001\u3002"), 20012: "\u53D1\u9001\u65B9\u88AB\u7981\u8A00\uFF0C\u8BE5\u6761\u6D88\u606F\u88AB\u7981\u6B62\u53D1\u9001\u3002", 20016: "\u6D88\u606F\u64A4\u56DE\u8D85\u8FC7\u4E86\u65F6\u95F4\u9650\u5236\uFF08\u9ED8\u8BA42\u5206\u949F\uFF09\u3002", 20018: "\u5220\u9664\u6F2B\u6E38\u5185\u90E8\u9519\u8BEF\u3002", 90001: "JSON \u683C\u5F0F\u89E3\u6790\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u8BF7\u6C42\u5305\u662F\u5426\u7B26\u5408 JSON \u89C4\u8303\u3002", 90002: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D MsgBody \u4E0D\u7B26\u5408\u6D88\u606F\u683C\u5F0F\u63CF\u8FF0\uFF0C\u6216\u8005 MsgBody \u4E0D\u662F Array \u7C7B\u578B\uFF0C\u8BF7\u53C2\u8003 TIMMsgElement \u5BF9\u8C61\u7684\u5B9A\u4E49(").concat(FM, "269/2720").concat(VM, ")\u3002"), 90003: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D\u7F3A\u5C11 To_Account \u5B57\u6BB5\u6216\u8005 To_Account \u5E10\u53F7\u4E0D\u5B58\u5728\u3002"), 90005: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D\u7F3A\u5C11 MsgRandom \u5B57\u6BB5\u6216\u8005 MsgRandom \u5B57\u6BB5\u4E0D\u662F Integer \u7C7B\u578B\u3002"), 90006: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D\u7F3A\u5C11 MsgTimeStamp \u5B57\u6BB5\u6216\u8005 MsgTimeStamp \u5B57\u6BB5\u4E0D\u662F Integer \u7C7B\u578B\u3002"), 90007: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D MsgBody \u7C7B\u578B\u4E0D\u662F Array \u7C7B\u578B\uFF0C\u8BF7\u5C06\u5176\u4FEE\u6539\u4E3A Array \u7C7B\u578B\u3002"), 90008: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D\u7F3A\u5C11 From_Account \u5B57\u6BB5\u6216\u8005 From_Account \u5E10\u53F7\u4E0D\u5B58\u5728\u3002"), 90009: "\u8BF7\u6C42\u9700\u8981 App \u7BA1\u7406\u5458\u6743\u9650\u3002", 90010: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E0D\u7B26\u5408\u6D88\u606F\u683C\u5F0F\u63CF\u8FF0\uFF0C\u8BF7\u53C2\u8003 TIMMsgElement \u5BF9\u8C61\u7684\u5B9A\u4E49(").concat(FM, "269/2720").concat(VM, ")\u3002"), 90011: "\u6279\u91CF\u53D1\u6D88\u606F\u76EE\u6807\u5E10\u53F7\u8D85\u8FC7500\uFF0C\u8BF7\u51CF\u5C11 To_Account \u4E2D\u76EE\u6807\u5E10\u53F7\u6570\u91CF\u3002", 90012: "To_Account \u6CA1\u6709\u6CE8\u518C\u6216\u4E0D\u5B58\u5728\uFF0C\u8BF7\u786E\u8BA4 To_Account \u662F\u5426\u5BFC\u5165\u5373\u65F6\u901A\u4FE1 IM \u6216\u8005\u662F\u5426\u62FC\u5199\u9519\u8BEF\u3002", 90026: "\u6D88\u606F\u79BB\u7EBF\u5B58\u50A8\u65F6\u95F4\u9519\u8BEF\uFF08\u6700\u591A\u4E0D\u80FD\u8D85\u8FC77\u5929\uFF09\u3002", 90031: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D SyncOtherMachine \u5B57\u6BB5\u4E0D\u662F Integer \u7C7B\u578B\u3002"), 90044: "".concat("JSON \u683C\u5F0F\u8BF7\u6C42\u5305\u4F53", "\u4E2D MsgLifeTime \u5B57\u6BB5\u4E0D\u662F Integer \u7C7B\u578B\u3002"), 90048: "\u8BF7\u6C42\u7684\u7528\u6237\u5E10\u53F7\u4E0D\u5B58\u5728\u3002", 90054: "\u64A4\u56DE\u8BF7\u6C42\u4E2D\u7684 MsgKey \u4E0D\u5408\u6CD5\u3002", 90994: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002"), 90995: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002"), 91e3: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002"), 90992: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002", "\u5982\u679C\u6240\u6709\u8BF7\u6C42\u90FD\u8FD4\u56DE\u8BE5\u9519\u8BEF\u7801\uFF0C\u4E14 App \u914D\u7F6E\u4E86\u7B2C\u4E09\u65B9\u56DE\u8C03\uFF0C\u8BF7\u68C0\u67E5 App \u670D\u52A1\u7AEF\u662F\u5426\u6B63\u5E38\u5411\u5373\u65F6\u901A\u4FE1 IM \u540E\u53F0\u670D\u52A1\u7AEF\u8FD4\u56DE\u56DE\u8C03\u7ED3\u679C\u3002"), 93e3: "JSON \u6570\u636E\u5305\u8D85\u957F\uFF0C\u6D88\u606F\u5305\u4F53\u8BF7\u4E0D\u8981\u8D85\u8FC78k\u3002", 91101: "Web \u7AEF\u957F\u8F6E\u8BE2\u88AB\u8E22\uFF08Web \u7AEF\u540C\u65F6\u5728\u7EBF\u5B9E\u4F8B\u4E2A\u6570\u8D85\u51FA\u9650\u5236\uFF09\u3002", 10002: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002"), 10003: "\u8BF7\u6C42\u4E2D\u7684\u63A5\u53E3\u540D\u79F0\u9519\u8BEF\uFF0C\u8BF7\u6838\u5BF9\u63A5\u53E3\u540D\u79F0\u5E76\u91CD\u8BD5\u3002", 10004: "\u53C2\u6570\u975E\u6CD5\uFF0C\u8BF7\u6839\u636E\u9519\u8BEF\u63CF\u8FF0\u68C0\u67E5\u8BF7\u6C42\u662F\u5426\u6B63\u786E\u3002", 10005: "\u8BF7\u6C42\u5305\u4F53\u4E2D\u643A\u5E26\u7684\u5E10\u53F7\u6570\u91CF\u8FC7\u591A\u3002", 10006: "\u64CD\u4F5C\u9891\u7387\u9650\u5236\uFF0C\u8BF7\u5C1D\u8BD5\u964D\u4F4E\u8C03\u7528\u7684\u9891\u7387\u3002", 10007: "\u64CD\u4F5C\u6743\u9650\u4E0D\u8DB3\uFF0C\u4F8B\u5982 Work ".concat("\u7FA4\u7EC4", "\u4E2D\u666E\u901A\u6210\u5458\u5C1D\u8BD5\u6267\u884C\u8E22\u4EBA\u64CD\u4F5C\uFF0C\u4F46\u53EA\u6709 App \u7BA1\u7406\u5458\u624D\u6709\u6743\u9650\u3002"), 10008: "\u8BF7\u6C42\u975E\u6CD5\uFF0C\u53EF\u80FD\u662F\u8BF7\u6C42\u4E2D\u643A\u5E26\u7684\u7B7E\u540D\u4FE1\u606F\u9A8C\u8BC1\u4E0D\u6B63\u786E\uFF0C\u8BF7\u518D\u6B21\u5C1D\u8BD5\u3002", 10009: "\u8BE5\u7FA4\u4E0D\u5141\u8BB8\u7FA4\u4E3B\u4E3B\u52A8\u9000\u51FA\u3002", 10010: "".concat("\u7FA4\u7EC4", "\u4E0D\u5B58\u5728\uFF0C\u6216\u8005\u66FE\u7ECF\u5B58\u5728\u8FC7\uFF0C\u4F46\u662F\u76EE\u524D\u5DF2\u7ECF\u88AB\u89E3\u6563\u3002"), 10011: "\u89E3\u6790 JSON \u5305\u4F53\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u5305\u4F53\u7684\u683C\u5F0F\u662F\u5426\u7B26\u5408 JSON \u683C\u5F0F\u3002", 10012: "\u53D1\u8D77\u64CD\u4F5C\u7684 UserID \u975E\u6CD5\uFF0C\u8BF7\u68C0\u67E5\u53D1\u8D77\u64CD\u4F5C\u7684\u7528\u6237 UserID \u662F\u5426\u586B\u5199\u6B63\u786E\u3002", 10013: "\u88AB\u9080\u8BF7\u52A0\u5165\u7684\u7528\u6237\u5DF2\u7ECF\u662F\u7FA4\u6210\u5458\u3002", 10014: "\u7FA4\u5DF2\u6EE1\u5458\uFF0C\u65E0\u6CD5\u5C06\u8BF7\u6C42\u4E2D\u7684\u7528\u6237\u52A0\u5165".concat("\u7FA4\u7EC4", "\uFF0C\u5982\u679C\u662F\u6279\u91CF\u52A0\u4EBA\uFF0C\u53EF\u4EE5\u5C1D\u8BD5\u51CF\u5C11\u52A0\u5165\u7528\u6237\u7684\u6570\u91CF\u3002"), 10015: "\u627E\u4E0D\u5230\u6307\u5B9A ID \u7684".concat("\u7FA4\u7EC4", "\u3002"), 10016: "App \u540E\u53F0\u901A\u8FC7\u7B2C\u4E09\u65B9\u56DE\u8C03\u62D2\u7EDD\u672C\u6B21\u64CD\u4F5C\u3002", 10017: "\u56E0\u88AB\u7981\u8A00\u800C\u4E0D\u80FD\u53D1\u9001\u6D88\u606F\uFF0C\u8BF7\u68C0\u67E5\u53D1\u9001\u8005\u662F\u5426\u88AB\u8BBE\u7F6E\u7981\u8A00\u3002", 10018: "\u5E94\u7B54\u5305\u957F\u5EA6\u8D85\u8FC7\u6700\u5927\u5305\u957F\uFF081MB\uFF09\uFF0C\u8BF7\u6C42\u7684\u5185\u5BB9\u8FC7\u591A\uFF0C\u8BF7\u5C1D\u8BD5\u51CF\u5C11\u5355\u6B21\u8BF7\u6C42\u7684\u6570\u636E\u91CF\u3002", 10019: "\u8BF7\u6C42\u7684\u7528\u6237\u5E10\u53F7\u4E0D\u5B58\u5728\u3002", 10021: "".concat("\u7FA4\u7EC4", " ID \u5DF2\u88AB\u4F7F\u7528\uFF0C\u8BF7\u9009\u62E9\u5176\u4ED6\u7684").concat("\u7FA4\u7EC4", " ID\u3002"), 10023: "\u53D1\u6D88\u606F\u7684\u9891\u7387\u8D85\u9650\uFF0C\u8BF7\u5EF6\u957F\u4E24\u6B21\u53D1\u6D88\u606F\u65F6\u95F4\u7684\u95F4\u9694\u3002", 10024: "\u6B64\u9080\u8BF7\u6216\u8005\u7533\u8BF7\u8BF7\u6C42\u5DF2\u7ECF\u88AB\u5904\u7406\u3002", 10025: "".concat("\u7FA4\u7EC4", " ID \u5DF2\u88AB\u4F7F\u7528\uFF0C\u5E76\u4E14\u64CD\u4F5C\u8005\u4E3A\u7FA4\u4E3B\uFF0C\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u3002"), 10026: "\u8BE5 SDKAppID \u8BF7\u6C42\u7684\u547D\u4EE4\u5B57\u5DF2\u88AB\u7981\u7528\u3002", 10030: "\u8BF7\u6C42\u64A4\u56DE\u7684\u6D88\u606F\u4E0D\u5B58\u5728\u3002", 10031: "\u6D88\u606F\u64A4\u56DE\u8D85\u8FC7\u4E86\u65F6\u95F4\u9650\u5236\uFF08\u9ED8\u8BA42\u5206\u949F\uFF09\u3002", 10032: "\u8BF7\u6C42\u64A4\u56DE\u7684\u6D88\u606F\u4E0D\u652F\u6301\u64A4\u56DE\u64CD\u4F5C\u3002", 10033: "".concat("\u7FA4\u7EC4", "\u7C7B\u578B\u4E0D\u652F\u6301\u6D88\u606F\u64A4\u56DE\u64CD\u4F5C\u3002"), 10034: "\u8BE5\u6D88\u606F\u7C7B\u578B\u4E0D\u652F\u6301\u5220\u9664\u64CD\u4F5C\u3002", 10035: "\u76F4\u64AD\u7FA4\u548C\u5728\u7EBF\u6210\u5458\u5E7F\u64AD\u5927\u7FA4\u4E0D\u652F\u6301\u5220\u9664\u6D88\u606F\u3002", 10036: "\u76F4\u64AD\u7FA4\u521B\u5EFA\u6570\u91CF\u8D85\u8FC7\u4E86\u9650\u5236\uFF0C\u8BF7\u53C2\u8003\u4EF7\u683C\u8BF4\u660E(".concat(FM, "269/11673)\u8D2D\u4E70\u9884\u4ED8\u8D39\u5957\u9910\u201CIM\u76F4\u64AD\u7FA4\u201D\u3002"), 10037: "\u5355\u4E2A\u7528\u6237\u53EF\u521B\u5EFA\u548C\u52A0\u5165\u7684".concat("\u7FA4\u7EC4", "\u6570\u91CF\u8D85\u8FC7\u4E86\u9650\u5236\uFF0C\u8BF7\u53C2\u8003\u4EF7\u683C\u8BF4\u660E(").concat(FM, "269/11673)\u8D2D\u4E70\u6216\u5347\u7EA7\u9884\u4ED8\u8D39\u5957\u9910\u201C\u5355\u4EBA\u53EF\u521B\u5EFA\u4E0E\u52A0\u5165").concat("\u7FA4\u7EC4", "\u6570\u201D\u3002"), 10038: "\u7FA4\u6210\u5458\u6570\u91CF\u8D85\u8FC7\u9650\u5236\uFF0C\u8BF7\u53C2\u8003\u4EF7\u683C\u8BF4\u660E(".concat(FM, "269/11673)\u8D2D\u4E70\u6216\u5347\u7EA7\u9884\u4ED8\u8D39\u5957\u9910\u201C\u6269\u5C55\u7FA4\u4EBA\u6570\u4E0A\u9650\u201D\u3002"), 10041: "\u8BE5\u5E94\u7528\uFF08SDKAppID\uFF09\u5DF2\u914D\u7F6E\u4E0D\u652F\u6301\u7FA4\u6D88\u606F\u64A4\u56DE\u3002", 10050: "\u7FA4\u5C5E\u6027 key \u4E0D\u5B58\u5728", 10056: "\u8BF7\u5728\u5199\u5165\u7FA4\u5C5E\u6027\u524D\u5148\u4F7F\u7528 getGroupAttributes \u63A5\u53E3\u66F4\u65B0\u672C\u5730\u7FA4\u5C5E\u6027\uFF0C\u907F\u514D\u51B2\u7A81\u3002", 10059: "\u975E\u65D7\u8230\u7248", 10060: "\u7FA4\u4EBA\u6570\u8D85\u8FC7\u5DF2\u8BFB\u56DE\u6267\u4EBA\u6570\u4E0A\u9650", 10061: "\u5728\u7EBF\u6D88\u606F\u4E0D\u652F\u6301\u5DF2\u8BFB\u56DE\u6267", 10062: "\u627E\u4E0D\u5230\u7FA4\u6D88\u606F\u7684\u5DF2\u8BFB\u56DE\u6267\u4FE1\u606F", 20026: "\u6D88\u606F\u4E0D\u5B58\u5728", 20029: "\u8BE5\u7FA4\u7C7B\u578B\u4E0D\u652F\u6301\u4FEE\u6539\u6D88\u606F\u3002", 30001: "\u8BF7\u6C42\u53C2\u6570\u9519\u8BEF\uFF0C\u8BF7\u6839\u636E\u9519\u8BEF\u63CF\u8FF0\u68C0\u67E5\u8BF7\u6C42\u53C2\u6570", 30002: "SDKAppID \u4E0D\u5339\u914D", 30003: "\u8BF7\u6C42\u7684\u7528\u6237\u5E10\u53F7\u4E0D\u5B58\u5728", 30004: "\u8BF7\u6C42\u9700\u8981 App \u7BA1\u7406\u5458\u6743\u9650", 30005: "\u5173\u7CFB\u94FE\u5B57\u6BB5\u4E2D\u5305\u542B\u654F\u611F\u8BCD", 30006: "".concat("\u670D\u52A1\u7AEF\u5185\u90E8\u9519\u8BEF\uFF0C\u8BF7\u91CD\u8BD5\u3002"), 30007: "".concat("\u7F51\u7EDC\u8D85\u65F6\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5. "), 30008: "\u5E76\u53D1\u5199\u5BFC\u81F4\u5199\u51B2\u7A81\uFF0C\u5EFA\u8BAE\u4F7F\u7528\u6279\u91CF\u65B9\u5F0F", 30009: "\u540E\u53F0\u7981\u6B62\u8BE5\u7528\u6237\u53D1\u8D77\u52A0\u597D\u53CB\u8BF7\u6C42", 30010: "\u81EA\u5DF1\u7684\u597D\u53CB\u6570\u5DF2\u8FBE\u7CFB\u7EDF\u4E0A\u9650", 30011: "\u5206\u7EC4\u5DF2\u8FBE\u7CFB\u7EDF\u4E0A\u9650", 30012: "\u672A\u51B3\u6570\u5DF2\u8FBE\u7CFB\u7EDF\u4E0A\u9650", 30014: "\u5BF9\u65B9\u7684\u597D\u53CB\u6570\u5DF2\u8FBE\u7CFB\u7EDF\u4E0A\u9650", 30515: "\u8BF7\u6C42\u6DFB\u52A0\u597D\u53CB\u65F6\uFF0C\u5BF9\u65B9\u5728\u81EA\u5DF1\u7684\u9ED1\u540D\u5355\u4E2D\uFF0C\u4E0D\u5141\u8BB8\u52A0\u597D\u53CB", 30516: "\u8BF7\u6C42\u6DFB\u52A0\u597D\u53CB\u65F6\uFF0C\u5BF9\u65B9\u7684\u52A0\u597D\u53CB\u9A8C\u8BC1\u65B9\u5F0F\u662F\u4E0D\u5141\u8BB8\u4EFB\u4F55\u4EBA\u6DFB\u52A0\u81EA\u5DF1\u4E3A\u597D\u53CB", 30525: "\u8BF7\u6C42\u6DFB\u52A0\u597D\u53CB\u65F6\uFF0C\u81EA\u5DF1\u5728\u5BF9\u65B9\u7684\u9ED1\u540D\u5355\u4E2D\uFF0C\u4E0D\u5141\u8BB8\u52A0\u597D\u53CB", 30539: "\u7B49\u5F85\u5BF9\u65B9\u540C\u610F", 30540: "\u6DFB\u52A0\u597D\u53CB\u8BF7\u6C42\u88AB\u5B89\u5168\u7B56\u7565\u6253\u51FB\uFF0C\u8BF7\u52FF\u9891\u7E41\u53D1\u8D77\u6DFB\u52A0\u597D\u53CB\u8BF7\u6C42", 31704: "\u4E0E\u8BF7\u6C42\u5220\u9664\u7684\u5E10\u53F7\u4E4B\u95F4\u4E0D\u5B58\u5728\u597D\u53CB\u5173\u7CFB", 31707: "\u5220\u9664\u597D\u53CB\u8BF7\u6C42\u88AB\u5B89\u5168\u7B56\u7565\u6253\u51FB\uFF0C\u8BF7\u52FF\u9891\u7E41\u53D1\u8D77\u5220\u9664\u597D\u53CB\u8BF7\u6C42", 50001: "\u89E3\u5305\u5931\u8D25", 50002: "\u8BF7\u6C42\u53C2\u6570\u9519\u8BEF\uFF0C\u8BF7\u6839\u636E\u9519\u8BEF\u63CF\u8FF0\u68C0\u67E5\u8BF7\u6C42\u662F\u5426\u6B63\u786E", 50004: "\u4F1A\u8BDD\u5206\u7EC4\u4E0D\u5B58\u5728", 51006: "\u4F1A\u8BDD\u6807\u8BB0\u6BCF\u6B21\u8C03\u6574\u7684\u4F1A\u8BDD\u6570\u4E3A\u7A7A\u6216\u8005\u8D85\u8FC7\u4E86100\u4E2A\u4E0A\u9650", 51007: "GroupID \u6362 GroupCode \u5931\u8D25\uFF0C\u5185\u90E8\u9519\u8BEF\u6216 Group \u5DF2\u7ECF\u89E3\u6563", 51008: "\u4F1A\u8BDD\u5206\u7EC4\u7684\u603B\u7684\u4F1A\u8BDD\u6570\u8D85\u8FC7\u4E861000", 51009: "\u5220\u9664\u4F1A\u8BDD\u5206\u7EC4\u65F6\u5206\u7EC4\u4E0D\u5B58\u5728", 51010: "\u4F1A\u8BDD\u5206\u7EC4\u6570\u8D85\u8FC7\u4E86\u4E0A\u9650\uFF08\u9ED8\u8BA420\u4E2A\uFF09", 51011: "\u5206\u7EC4\u540D\u8D85\u8FC7\u4E8632\u4E2A\u5B57\u8282" }, KM = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        o2(this, n3), r3 = t3.call(this);
        var a3 = e4.code, s3 = e4.message, i3 = e4.data;
        return r3.code = a3, s3 ? r3.message = s3 : r3._isIntl ? r3.message = gh[r3.code] : r3.message = BM[r3.code] || ph[r3.code], r3.data = i3 || {}, r3;
      }
      return a2(n3);
    }(p2(Error)), HM = null, jM = function(e3) {
      HM = e3;
    }, WM = function(e3) {
      return Promise.resolve(wM(e3));
    }, YM = function(e3) {
      var t3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
      if (e3 instanceof KM)
        return t3 && null !== HM && HM.emit(pr.ERROR, e3), Promise.reject(e3);
      if (e3 instanceof Error) {
        var n3 = new KM({ code: dh.UNCAUGHT_ERROR, message: gh[dh.UNCAUGHT_ERROR] });
        return t3 && null !== HM && HM.emit(pr.ERROR, n3), Promise.reject(n3);
      }
      if (!td(e3) && !td(e3.code)) {
        var o3 = new KM(e3);
        return t3 && null !== HM && HM.emit(pr.ERROR, o3), Promise.reject(o3);
      }
      wl.error("IMPromise.reject code required!");
    }, $M = function(e3) {
      i2(r3, e3);
      var n3 = _2(r3);
      function r3(e4) {
        var t3;
        return o2(this, r3), (t3 = n3.call(this, e4))._className = "C2CModule", t3._messageFromUnreadDBMap = /* @__PURE__ */ new Map(), t3;
      }
      return a2(r3, [{ key: "onNewC2CMessage", value: function(e4) {
        var t3 = e4.dataList, n4 = e4.isInstantMessage, o3 = e4.C2CRemainingUnreadList, r4 = e4.C2CPairUnreadList;
        wl.debug("".concat(this._className, ".onNewC2CMessage count:").concat(t3.length, " isInstantMessage:").concat(n4));
        var a3 = this._newC2CMessageStoredAndSummary({ dataList: t3, C2CRemainingUnreadList: o3, C2CPairUnreadList: r4, isInstantMessage: n4 }), s3 = a3.conversationOptionsList, i3 = a3.messageList, u3 = a3.isUnreadC2CMessage;
        (this.filterModifiedMessage(i3), s3.length > 0) && this.getModule(Hg).onNewMessage({ conversationOptionsList: s3, isInstantMessage: n4, isUnreadC2CMessage: u3 });
        var c3 = this.filterUnmodifiedMessage(i3);
        n4 && c3.length > 0 && this.emitOuterEvent(pr.MESSAGE_RECEIVED, c3), i3.length = 0;
      } }, { key: "_newC2CMessageStoredAndSummary", value: function(e4) {
        for (var t3 = e4.dataList, n4 = e4.C2CRemainingUnreadList, o3 = e4.C2CPairUnreadList, r4 = e4.isInstantMessage, a3 = null, s3 = [], i3 = [], u3 = {}, c3 = this.getModule(zg), l3 = this.getModule(ah), d3 = false, p3 = this.getModule(Hg), g3 = 0, h3 = t3.length; g3 < h3; g3++) {
          var f3 = t3[g3];
          f3.currentUser = this.getMyUserID(), f3.conversationType = gr.CONV_C2C, f3.isSystemMessage = !!f3.isSystemMessage, (td(f3.nick) || td(f3.avatar)) && (d3 = true, wl.debug("".concat(this._className, "._newC2CMessageStoredAndSummary nick or avatar missing!"))), a3 = new bM(f3), f3.elements = c3.parseElements(f3.elements, f3.from), a3.setElement(f3.elements), a3.setNickAndAvatar({ nick: f3.nick, avatar: f3.avatar });
          var _3 = a3.conversationID;
          if (r4) {
            if (1 === this._messageFromUnreadDBMap.get(a3.ID))
              continue;
            var m3 = false;
            if (a3.from !== this.getMyUserID()) {
              var v3 = p3.getLatestMessageSentByPeer(_3);
              if (v3) {
                var M3 = v3.nick, y3 = v3.avatar;
                d3 ? a3.setNickAndAvatar({ nick: M3, avatar: y3 }) : M3 === a3.nick && y3 === a3.avatar || (m3 = true);
              }
            } else {
              var I3 = p3.getLatestMessageSentByMe(_3);
              if (I3) {
                var T3 = I3.nick, C3 = I3.avatar;
                T3 === a3.nick && C3 === a3.avatar || p3.modifyMessageSentByMe({ conversationID: _3, latestNick: a3.nick, latestAvatar: a3.avatar });
              }
            }
            var E3 = 1 === t3[g3].isModified;
            if (p3.isMessageSentByCurrentInstance(a3) ? a3.isModified = E3 : E3 = false, 0 === f3.msgLifeTime)
              a3._onlineOnlyFlag = true, p3.isMessageSentByCurrentInstance(a3) || i3.push(a3);
            else {
              if (!p3.pushIntoMessageList(i3, a3, E3))
                continue;
              m3 && (p3.modifyMessageSentByPeer({ conversationID: _3, latestNick: a3.nick, latestAvatar: a3.avatar }), p3.updateUserProfileSpecifiedKey({ conversationID: _3, nick: a3.nick, avatar: a3.avatar }));
            }
            r4 && a3.clientTime > 0 && l3.addMessageDelay(a3.clientTime);
          } else
            this._messageFromUnreadDBMap.set(a3.ID, 1);
          if (0 !== f3.msgLifeTime) {
            if (false === a3._onlineOnlyFlag) {
              var S3 = p3.getLastMessageTime(_3);
              if (Jl(S3) && a3.time < S3)
                continue;
              if (td(u3[_3])) {
                var D3 = 0;
                "in" === a3.flow && (a3._isExcludedFromUnreadCount || (D3 = 1)), u3[_3] = s3.push({ conversationID: _3, unreadCount: D3, type: a3.conversationType, subType: a3.conversationSubType, lastMessage: a3._isExcludedFromLastMessage ? "" : a3 }) - 1;
              } else {
                var N3 = u3[_3];
                s3[N3].type = a3.conversationType, s3[N3].subType = a3.conversationSubType, s3[N3].lastMessage = a3._isExcludedFromLastMessage ? "" : a3, "in" === a3.flow && (a3._isExcludedFromUnreadCount || s3[N3].unreadCount++);
              }
            }
          } else
            a3._onlineOnlyFlag = true;
        }
        var A3 = false;
        if (ed(o3))
          for (var k3 = function(e5, t4) {
            if (o3[e5].unreadCount > 0) {
              A3 = true;
              var n5 = s3.find(function(t5) {
                return t5.conversationID === "C2C".concat(o3[e5].from);
              });
              n5 ? n5.unreadCount = o3[e5].unreadCount : s3.push({ conversationID: "C2C".concat(o3[e5].from), unreadCount: o3[e5].unreadCount, type: gr.CONV_C2C });
            }
          }, R3 = 0, O3 = o3.length; R3 < O3; R3++)
            k3(R3);
        if (ed(n4))
          for (var L3 = function(e5, t4) {
            s3.find(function(t5) {
              return t5.conversationID === "C2C".concat(n4[e5].from);
            }) || s3.push({ conversationID: "C2C".concat(n4[e5].from), type: gr.CONV_C2C, lastMsgTime: n4[e5].lastMsgTime });
          }, G3 = 0, P3 = n4.length; G3 < P3; G3++)
            L3(G3);
        return { conversationOptionsList: s3, messageList: i3, isUnreadC2CMessage: A3 };
      } }, { key: "onC2CMessageRevoked", value: function(e4) {
        var t3 = this, n4 = this.getModule(Hg), o3 = [], r4 = null, a3 = true;
        e4.dataList.forEach(function(e5) {
          if (e5.c2cMessageRevokedNotify) {
            var s3 = e5.c2cMessageRevokedNotify.revokedInfos;
            td(s3) || s3.forEach(function(e6) {
              var s4 = t3.getMyUserID() === e6.from ? "".concat(gr.CONV_C2C).concat(e6.to) : "".concat(gr.CONV_C2C).concat(e6.from);
              r4 = n4.revoke(s4, e6.sequence, e6.random);
              var i3 = e6.revokerInfo && e6.revokerInfo.revoker;
              if (r4)
                r4.revoker = i3, o3.push(r4);
              else {
                var u3 = { conversationID: s4, sequence: e6.sequence, time: e6.time, revoker: i3 };
                n4.isLastMessageRevoked(u3) && (o3.push(u3), a3 = false);
              }
            });
          }
        }), 0 !== o3.length && (n4.onMessageRevoked(o3), true === a3 && (wl.log("".concat(this._className, ".onC2CMessageRevoked count:").concat(o3.length)), this.emitOuterEvent(pr.MESSAGE_REVOKED, o3)));
      } }, { key: "onC2CMessageReadReceipt", value: function(e4) {
        var t3 = this;
        e4.dataList.forEach(function(e5) {
          if (!Wd(e5.c2cMessageReadReceipt)) {
            var n4 = e5.c2cMessageReadReceipt.to;
            e5.c2cMessageReadReceipt.uinPairReadArray.forEach(function(e6) {
              var o3 = e6.peerReadTime;
              wl.debug("".concat(t3._className, "._onC2CMessageReadReceipt to:").concat(n4, " peerReadTime:").concat(o3));
              var r4 = "".concat(gr.CONV_C2C).concat(n4), a3 = t3.getModule(Hg);
              a3.recordPeerReadTime(r4, o3), a3.updateMessageIsPeerReadProperty(r4, o3);
            });
          }
        });
      } }, { key: "onC2CMessageReadNotice", value: function(e4) {
        var t3 = this;
        e4.dataList.forEach(function(e5) {
          if (!Wd(e5.c2cMessageReadNotice)) {
            var n4 = t3.getModule(Hg);
            e5.c2cMessageReadNotice.uinPairReadArray.forEach(function(e6) {
              var o3 = e6.from, r4 = e6.peerReadTime;
              wl.debug("".concat(t3._className, ".onC2CMessageReadNotice from:").concat(o3, " lastReadTime:").concat(r4));
              var a3 = "".concat(gr.CONV_C2C).concat(o3);
              n4.updateIsReadAfterReadReport({ conversationID: a3, lastMessageTime: r4 }), n4.updateUnreadCount(a3);
            });
          }
        });
      } }, { key: "onC2CMessageModified", value: function(e4) {
        wl.debug("".concat(this._className, ".onC2CMessageModified options:"), JSON.stringify(e4));
        var n4 = this.getModule(Hg);
        e4.dataList.forEach(function(e5) {
          n4.onMessageModified(t2(t2({}, e5), {}, { conversationType: gr.CONV_C2C }));
        });
      } }, { key: "onReadReceiptList", value: function(e4) {
        wl.debug("".concat(this._className, ".onReadReceiptList options:"), JSON.stringify(e4));
        var t3 = e4.dataList, n4 = t3.userID, o3 = t3.readReceiptList;
        this.getModule(Hg).updateReadReceiptInfo({ userID: n4, readReceiptList: o3 });
      } }, { key: "sendMessage", value: function(e4, t3) {
        var n4 = this._createC2CMessagePack(e4, t3);
        return this.request(n4);
      } }, { key: "_createC2CMessagePack", value: function(e4, t3) {
        var n4 = null;
        t3 && (t3.offlinePushInfo && (n4 = t3.offlinePushInfo), true === t3.onlineUserOnly && (n4 ? n4.disablePush = true : n4 = { disablePush: true }));
        var o3 = "";
        Xl(e4.cloudCustomData) && e4.cloudCustomData.length > 0 && (o3 = e4.cloudCustomData);
        var r4 = [];
        if (Zl(t3) && Zl(t3.messageControlInfo)) {
          var a3 = t3.messageControlInfo, s3 = a3.excludedFromUnreadCount, i3 = a3.excludedFromLastMessage;
          true === s3 && r4.push("NoUnread"), true === i3 && r4.push("NoLastMsg");
        }
        var u3 = this.isOnlineMessage(e4, t3) ? 0 : void 0;
        return { protocolName: Ih, tjgID: this.generateTjgID(e4), requestData: { fromAccount: this.getMyUserID(), toAccount: e4.to, msgBody: e4.getElements(), cloudCustomData: o3, msgSeq: e4.sequence, msgRandom: e4.random, msgLifeTime: u3, nick: e4.nick, avatar: e4.avatar, offlinePushInfo: n4 ? { pushFlag: true === n4.disablePush ? 1 : 0, title: n4.title || "", desc: n4.description || "", ext: n4.extension || "", apnsInfo: { badgeMode: true === n4.ignoreIOSBadge ? 1 : 0, isVoipPush: this._isVoipPush(n4) }, androidInfo: { OPPOChannelID: n4.androidOPPOChannelID || "" } } : void 0, messageControlInfo: 0 !== u3 ? r4 : void 0, clientTime: e4.clientTime, needReadReceipt: true === e4.needReadReceipt ? 1 : 0, isSupportExtension: true === e4.isSupportExtension ? 1 : 0 } };
      } }, { key: "_isVoipPush", value: function(e4) {
        var t3 = void 0;
        return td(e4.disableVoipPush) || (t3 = false === e4.disableVoipPush ? 1 : 0), t3;
      } }, { key: "isOnlineMessage", value: function(e4, t3) {
        return !(!t3 || true !== t3.onlineUserOnly);
      } }, { key: "revokeMessage", value: function(e4) {
        return this.request({ protocolName: Ah, requestData: { msgInfo: { fromAccount: e4.from, toAccount: e4.to, msgSeq: e4.sequence, msgRandom: e4.random, msgTimeStamp: e4.time } } });
      } }, { key: "deleteMessage", value: function(e4) {
        var t3 = e4.to, n4 = e4.keyList;
        return wl.log("".concat(this._className, ".deleteMessage toAccount:").concat(t3, " count:").concat(n4.length)), this.request({ protocolName: Ph, requestData: { fromAccount: this.getMyUserID(), to: t3, keyList: n4 } });
      } }, { key: "modifyRemoteMessage", value: function(e4) {
        var t3 = e4.from, n4 = e4.to, o3 = e4.version, r4 = void 0 === o3 ? 0 : o3, a3 = e4.sequence, s3 = e4.random, i3 = e4.time, u3 = e4.payload, c3 = e4.type, l3 = e4.cloudCustomData, d3 = void 0;
        return xd(c3) && (d3 = []).push({ type: c3, content: u3 }), this.request({ protocolName: Uh, requestData: { from: t3, to: n4, version: r4, sequence: a3, random: s3, time: i3, elements: d3, cloudCustomData: l3 } });
      } }, { key: "setMessageRead", value: function(e4) {
        var t3 = this, n4 = e4.conversationID, o3 = e4.lastMessageTime, r4 = "".concat(this._className, ".setMessageRead");
        if (wl.log("".concat(r4, " conversationID:").concat(n4, " lastMessageTime:").concat(o3)), !Jl(o3)) {
          var a3 = "";
          a3 = this.isIntl() ? "Do not modify Conversation.lastMessage.lastTime, otherwise the result of setMessageRead will be incorrect" : "\u8BF7\u52FF\u4FEE\u6539 Conversation.lastMessage.lastTime\uFF0C\u5426\u5219\u53EF\u80FD\u4F1A\u5BFC\u81F4\u5DF2\u8BFB\u4E0A\u62A5\u7ED3\u679C\u4E0D\u51C6\u786E", wl.warn("".concat(r4, " ").concat(a3));
        }
        var s3 = new G_(P_.SET_C2C_MESSAGE_READ);
        return s3.setMessage("conversationID:".concat(n4, " lastMessageTime:").concat(o3)), this.request({ protocolName: kh, requestData: { C2CMsgReaded: { cookie: "", C2CMsgReadedItem: [{ toAccount: n4.replace("C2C", ""), lastMessageTime: o3, receipt: 1 }] } } }).then(function() {
          s3.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(r4, " ok"));
          var e5 = t3.getModule(Hg);
          return e5.updateIsReadAfterReadReport({ conversationID: n4, lastMessageTime: o3 }), e5.updateUnreadCount(n4), wM();
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            s3.setError(e5, o4, r5).end();
          }), wl.log("".concat(r4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "getRoamingMessage", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".getRoamingMessage"), o3 = e4.peerAccount, r4 = e4.conversationID, a3 = e4.count, s3 = e4.lastMessageTime, i3 = e4.messageKey, u3 = "peerAccount:".concat(o3, " count:").concat(a3 || 15, " lastMessageTime:").concat(s3 || 0, " messageKey:").concat(i3);
        wl.log("".concat(n4, " ").concat(u3));
        var c3 = new G_(P_.GET_C2C_ROAMING_MESSAGES);
        return this.request({ protocolName: Lh, requestData: { peerAccount: o3, count: a3 || 15, lastMessageTime: s3 || 0, messageKey: i3 } }).then(function(e5) {
          var o4 = e5.data, a4 = o4.complete, s4 = o4.messageList, i4 = o4.messageKey, l3 = o4.lastMessageTime;
          td(s4) ? wl.log("".concat(n4, " ok. complete:").concat(a4, " but messageList is undefined!")) : wl.log("".concat(n4, " ok. complete:").concat(a4, " count:").concat(s4.length)), c3.setNetworkType(t3.getNetworkType()).setMessage("".concat(u3, " complete:").concat(a4, " length:").concat(s4.length)).end();
          var d3 = t3.getModule(Hg);
          1 === a4 && d3.setCompleted(r4);
          var p3 = d3.onRoamingMessage(s4, r4);
          d3.modifyMessageList(r4), d3.updateIsRead(r4), d3.updateRoamingMessageKeyAndTime(r4, i4, l3);
          var g3 = d3.getPeerReadTime(r4);
          if (wl.log("".concat(n4, " update isPeerRead property. conversationID:").concat(r4, " peerReadTime:").concat(g3)), g3)
            d3.updateMessageIsPeerReadProperty(r4, g3);
          else {
            var h3 = r4.replace(gr.CONV_C2C, "");
            t3.getRemotePeerReadTime([h3]).then(function() {
              d3.updateMessageIsPeerReadProperty(r4, d3.getPeerReadTime(r4));
            });
          }
          var f3 = "";
          if (p3.length > 0)
            f3 = p3[0].ID;
          else {
            var _3 = d3.getLocalOldestMessage(r4);
            _3 && (f3 = _3.ID);
          }
          return wl.log("".concat(n4, " nextReqID:").concat(f3, " stored message count:").concat(p3.length)), { nextReqID: f3, storedMessageList: p3 };
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            c3.setMessage(u3).setError(e5, o4, r5).end();
          }), wl.warn("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "getRoamingMessagesHopping", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".getRoamingMessagesHopping"), o3 = e4.peerAccount, r4 = e4.time, a3 = void 0 === r4 ? 0 : r4, s3 = e4.count, i3 = e4.direction, u3 = "".concat(gr.CONV_C2C).concat(o3), c3 = "peerAccount:".concat(o3, " count:").concat(s3, " time:").concat(a3, " direction:").concat(i3);
        wl.log("".concat(n4, " ").concat(c3));
        var l3 = new G_(P_.GET_C2C_ROAMING_MESSAGES_HOPPING);
        return this.request({ protocolName: Lh, requestData: { peerAccount: o3, count: s3 + 1, lastMessageTime: a3, direction: i3 } }).then(function(e5) {
          var o4 = e5.data, r5 = o4.complete, a4 = o4.messageList, s4 = void 0 === a4 ? [] : a4, d3 = o4.lastMessageTime;
          wl.log("".concat(n4, " ok. complete:").concat(r5, " count:").concat(s4.length)), l3.setNetworkType(t3.getNetworkType()).setMessage("".concat(c3, " complete:").concat(r5, " length:").concat(s4.length)).end(), 1 !== r5 && (1 === i3 ? s4.pop() : s4.shift());
          var p3 = t3.getModule(Hg).onRoamingMessage(s4, u3, false);
          t3._modifyMessageList(u3, p3);
          var g3 = t3._computeResult({ complete: r5, lastMessageTime: d3, resultList: p3 });
          return wM(g3);
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            l3.setMessage(c3).setError(e5, o4, r5).end();
          }), wl.warn("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "_computeResult", value: function(e4) {
        var t3 = e4.complete, n4 = void 0 === t3 ? 0 : t3, o3 = e4.lastMessageTime, r4 = e4.resultList, a3 = { messageList: v2(void 0 === r4 ? [] : r4), isCompleted: false, nextMessageTime: "" };
        return 1 === n4 ? (a3.isCompleted = true, a3) : (a3.nextMessageTime = o3, a3);
      } }, { key: "_modifyMessageList", value: function(e4, t3) {
        var n4 = this.getModule(Hg).getLocalConversation(e4);
        if (n4)
          for (var o3 = n4.userProfile.nick, r4 = n4.userProfile.avatar, a3 = this.getModule(Fg).getNickAndAvatarByUserID(this.getMyUserID()), s3 = a3.nick, i3 = a3.avatar, u3 = t3.length - 1; u3 >= 0; u3--) {
            var c3 = t3[u3];
            "in" === c3.flow && (c3.nick !== o3 && c3.setNickAndAvatar({ nick: o3 }), c3.avatar !== r4 && c3.setNickAndAvatar({ avatar: r4 })), "out" === c3.flow && (c3.nick !== s3 && c3.setNickAndAvatar({ nick: s3 }), c3.avatar !== i3 && c3.setNickAndAvatar({ avatar: i3 }));
          }
      } }, { key: "getRemotePeerReadTime", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".getRemotePeerReadTime");
        if (Wd(e4))
          return wl.warn("".concat(n4, " userIDList is empty!")), Promise.resolve();
        var o3 = new G_(P_.GET_PEER_READ_TIME);
        return wl.log("".concat(n4, " userIDList:").concat(e4)), this.request({ protocolName: Gh, requestData: { userIDList: e4 } }).then(function(r4) {
          var a3 = r4.data.peerReadTimeList;
          wl.log("".concat(n4, " ok. peerReadTimeList:").concat(a3));
          for (var s3 = "", i3 = t3.getModule(Hg), u3 = 0; u3 < e4.length; u3++)
            s3 += "".concat(e4[u3], "-").concat(a3[u3], " "), a3[u3] > 0 && i3.recordPeerReadTime("C2C".concat(e4[u3]), a3[u3]);
          o3.setNetworkType(t3.getNetworkType()).setMessage(s3).end();
        }).catch(function(e5) {
          t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), r4 = n5[0], a3 = n5[1];
            o3.setError(e5, r4, a3).end();
          }), wl.warn("".concat(n4, " failed. error:"), e5);
        });
      } }, { key: "sendReadReceipt", value: function(e4) {
        var t3 = this, n4 = e4[0].conversationID.replace(gr.CONV_C2C, ""), o3 = new G_(P_.SEND_C2C_READ_RECEIPT);
        o3.setMessage("peerAccount:".concat(n4));
        var r4 = this.getMyUserID(), a3 = e4.filter(function(e5) {
          return e5.from !== r4 && true === e5.needReadReceipt;
        }).map(function(e5) {
          return { fromAccount: e5.from, toAccount: e5.to, sequence: e5.sequence, random: e5.random, time: e5.time, clientTime: e5.clientTime };
        });
        if (0 === a3.length)
          return YM({ code: dh.READ_RECEIPT_MESSAGE_LIST_EMPTY });
        var s3 = "".concat(this._className, ".sendReadReceipt");
        return wl.log("".concat(s3, ". peerAccount:").concat(n4, " messageInfoList length:").concat(a3.length)), this.request({ protocolName: mf, requestData: { peerAccount: n4, messageInfoList: a3 } }).then(function(e5) {
          return o3.end(), wl.log("".concat(s3, " ok")), wM();
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), r5 = n5[0], a4 = n5[1];
            o3.setError(e5, r5, a4).end();
          }), wl.warn("".concat(s3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "getReadReceiptList", value: function(e4) {
        var t3 = "".concat(this._className, ".getReadReceiptList"), n4 = this.getMyUserID(), o3 = e4.filter(function(e5) {
          return e5.from === n4 && true === e5.needReadReceipt;
        });
        return wl.log("".concat(t3, " userID:").concat(n4, " messageList length:").concat(o3.length)), WM({ messageList: o3 });
      } }, { key: "getMessageExtensions", value: function(e4, t3) {
        return wl.log("".concat(this._className, ".getMessageExtensions startSequence:").concat(t3)), this.request({ protocolName: wh, requestData: { from: e4.from, to: e4.to, messageKey: this._getMessageKey(e4), startSequence: t3 } });
      } }, { key: "modifyMessageExtensions", value: function(e4, t3) {
        var n4 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        return wl.log("".concat(this._className, ".modifyMessageExtensions operateType:").concat(n4)), this.request({ protocolName: bh, requestData: { from: e4.from, to: e4.to, messageKey: this._getMessageKey(e4), extensionList: t3, operateType: n4 } });
      } }, { key: "_getMessageKey", value: function(e4) {
        var t3 = e4.clientSequence, n4 = e4.random, o3 = e4.time;
        return "".concat(t3, "_").concat(n4, "_").concat(o3);
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._messageFromUnreadDBMap.clear();
      } }]), r3;
    }(hh), zM = ae2.match(/firefox\/(\d+)/i), JM = !!zM && +zM[1], XM = /MSIE|Trident/.test(ae2), QM = ae2.match(/AppleWebKit\/(\d+)\./), ZM = !!QM && +QM[1], ey = [], ty = H2(ey.sort), ny = H2(ey.push), oy = O2(function() {
      ey.sort(void 0);
    }), ry = O2(function() {
      ey.sort(null);
    }), ay = eo("sort"), sy = !O2(function() {
      if (le2)
        return le2 < 70;
      if (!(JM && JM > 3)) {
        if (XM)
          return true;
        if (ZM)
          return ZM < 603;
        var e3, t3, n3, o3, r3 = "";
        for (e3 = 65; e3 < 76; e3++) {
          switch (t3 = String.fromCharCode(e3), e3) {
            case 66:
            case 69:
            case 70:
            case 72:
              n3 = 3;
              break;
            case 68:
            case 71:
              n3 = 4;
              break;
            default:
              n3 = 2;
          }
          for (o3 = 0; o3 < 47; o3++)
            ey.push({ k: t3 + o3, v: n3 });
        }
        for (ey.sort(function(e4, t4) {
          return t4.v - e4.v;
        }), o3 = 0; o3 < ey.length; o3++)
          t3 = ey[o3].k.charAt(0), r3.charAt(r3.length - 1) !== t3 && (r3 += t3);
        return "DGBEFHACIJK" !== r3;
      }
    });
    nn({ target: "Array", proto: true, forced: oy || !ry || !ay || !sy }, { sort: function(e3) {
      void 0 !== e3 && ve2(e3);
      var t3 = De2(this);
      if (sy)
        return void 0 === e3 ? ty(t3) : ty(t3, e3);
      var n3, o3, r3 = [], a3 = Ut(t3);
      for (o3 = 0; o3 < a3; o3++)
        o3 in t3 && ny(r3, t3[o3]);
      for (gm(r3, function(e4) {
        return function(t4, n4) {
          return void 0 === n4 ? -1 : void 0 === t4 ? 1 : void 0 !== e4 ? +e4(t4, n4) || 0 : dn(t4) > dn(n4) ? 1 : -1;
        };
      }(e3)), n3 = r3.length, o3 = 0; o3 < n3; )
        t3[o3] = r3[o3++];
      for (; o3 < a3; )
        delete t3[o3++];
      return t3;
    } });
    var iy = Zn2.findIndex, uy = true;
    "findIndex" in [] && Array(1).findIndex(function() {
      uy = false;
    }), nn({ target: "Array", proto: true, forced: uy }, { findIndex: function(e3) {
      return iy(this, e3, arguments.length > 1 ? arguments[1] : void 0);
    } }), ja("findIndex");
    var cy = function() {
      function e3() {
        o2(this, e3), this.list = /* @__PURE__ */ new Map(), this._className = "MessageListHandler", this._latestMessageSentByPeerMap = /* @__PURE__ */ new Map(), this._latestMessageSentByMeMap = /* @__PURE__ */ new Map();
      }
      return a2(e3, [{ key: "getLocalOldestMessageByConversationID", value: function(e4) {
        if (!e4)
          return null;
        if (!this.list.has(e4))
          return null;
        var t3 = this.list.get(e4).values();
        return t3 ? t3.next().value : null;
      } }, { key: "pushIn", value: function(e4) {
        var t3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n3 = e4.conversationID, o3 = true;
        this.list.has(n3) || this.list.set(n3, /* @__PURE__ */ new Map());
        var r3 = this._getUniqueIDOfMessage(e4), a3 = this.list.get(n3).has(r3);
        if (a3) {
          var s3 = this.list.get(n3).get(r3);
          if (!t3 || true === s3.isModified)
            return o3 = false;
        }
        return this.list.get(n3).set(r3, e4), this._setLatestMessageSentByPeer(n3, e4), this._setLatestMessageSentByMe(n3, e4), o3;
      } }, { key: "unshift", value: function(e4, t3) {
        var n3;
        if (ed(e4) ? e4.length > 0 && (n3 = e4[0].conversationID, this._unshiftMultipleMessages(e4, t3)) : (n3 = e4.conversationID, this._unshiftSingleMessage(e4, t3)), n3 && n3.startsWith(gr.CONV_C2C)) {
          var o3 = Array.from(this.list.get(n3).values()), r3 = o3.length;
          if (0 === r3)
            return;
          for (var a3 = r3 - 1; a3 >= 0; a3--)
            if ("out" === o3[a3].flow) {
              this._setLatestMessageSentByMe(n3, o3[a3]);
              break;
            }
          for (var s3 = r3 - 1; s3 >= 0; s3--)
            if ("in" === o3[s3].flow) {
              this._setLatestMessageSentByPeer(n3, o3[s3]);
              break;
            }
        }
      } }, { key: "_unshiftSingleMessage", value: function(e4, t3) {
        var n3 = e4.conversationID, o3 = this._getUniqueIDOfMessage(e4);
        if (!this.list.has(n3))
          return this.list.set(n3, /* @__PURE__ */ new Map()), this.list.get(n3).set(o3, e4), void t3.push(e4);
        var r3 = this.list.get(n3), a3 = Array.from(r3);
        r3.has(o3) || (a3.unshift([o3, e4]), this.list.set(n3, new Map(a3)), t3.push(e4));
      } }, { key: "_unshiftMultipleMessages", value: function(e4, t3) {
        for (var n3 = e4.length, o3 = [], r3 = e4[0].conversationID, a3 = this.list.get(r3), s3 = this.list.has(r3) ? Array.from(a3) : [], i3 = 0; i3 < n3; i3++) {
          var u3 = this._getUniqueIDOfMessage(e4[i3]);
          a3 && a3.has(u3) || (o3.push([u3, e4[i3]]), t3.push(e4[i3]));
        }
        this.list.set(r3, new Map(o3.concat(s3)));
      } }, { key: "remove", value: function(e4) {
        var t3 = e4.conversationID, n3 = this._getUniqueIDOfMessage(e4);
        this.list.has(t3) && this.list.get(t3).delete(n3);
      } }, { key: "revoke", value: function(e4, t3, n3) {
        if (wl.debug("revoke message", e4, t3, n3), this.list.has(e4)) {
          var o3, r3 = E2(this.list.get(e4));
          try {
            for (r3.s(); !(o3 = r3.n()).done; ) {
              var a3 = m2(o3.value, 2)[1];
              if (a3.sequence === t3 && (td(n3) || a3.random === n3))
                return a3.isRevoked = true, a3;
            }
          } catch (s3) {
            r3.e(s3);
          } finally {
            r3.f();
          }
        }
        return null;
      } }, { key: "removeByConversationID", value: function(e4) {
        this.list.has(e4) && (this.list.delete(e4), this._latestMessageSentByPeerMap.delete(e4), this._latestMessageSentByMeMap.delete(e4));
      } }, { key: "findMessage", value: function(e4) {
        var t3, n3 = null, o3 = E2(this.list);
        try {
          for (o3.s(); !(t3 = o3.n()).done; )
            for (var r3 = v2(m2(t3.value, 2)[1].values()), a3 = r3.length, s3 = 0; s3 < a3; s3++)
              if (r3[s3].ID === e4) {
                n3 = r3[s3];
                break;
              }
        } catch (i3) {
          o3.e(i3);
        } finally {
          o3.f();
        }
        return n3;
      } }, { key: "updateMessageIsPeerReadProperty", value: function(e4, t3) {
        var n3 = [];
        if (this.list.has(e4)) {
          var o3, r3 = E2(this.list.get(e4));
          try {
            for (r3.s(); !(o3 = r3.n()).done; ) {
              var a3 = m2(o3.value, 2)[1];
              a3.time <= t3 && !a3.isPeerRead && "out" === a3.flow && (a3.isPeerRead = true, n3.push(a3));
            }
          } catch (s3) {
            r3.e(s3);
          } finally {
            r3.f();
          }
          wl.log("".concat(this._className, ".updateMessageIsPeerReadProperty conversationID:").concat(e4, " peerReadTime:").concat(t3, " count:").concat(n3.length));
        }
        return n3;
      } }, { key: "updateMessageIsModifiedProperty", value: function(e4) {
        var t3 = e4.conversationID;
        if (this.list.has(t3)) {
          var n3 = this._getUniqueIDOfMessage(e4), o3 = this.list.get(t3).get(n3);
          o3 && (o3.isModified = true);
        }
      } }, { key: "hasLocalMessageList", value: function(e4) {
        return this.list.has(e4);
      } }, { key: "getLocalMessageList", value: function(e4) {
        return this.hasLocalMessageList(e4) ? v2(this.list.get(e4).values()) : [];
      } }, { key: "hasLocalMessage", value: function(e4, t3) {
        for (var n3 = false, o3 = this.getLocalMessageList(e4), r3 = o3.length, a3 = 0; a3 < r3; a3++)
          o3[a3].ID === t3 && (n3 = true);
        return n3;
      } }, { key: "getLocalMessage", value: function(e4, t3) {
        for (var n3 = null, o3 = this.getLocalMessageList(e4), r3 = o3.length, a3 = 0; a3 < r3; a3++)
          if (o3[a3].ID === t3) {
            n3 = o3[a3];
            break;
          }
        return n3;
      } }, { key: "getLocalLastMessage", value: function(e4) {
        var t3 = this.getLocalMessageList(e4);
        return t3[t3.length - 1];
      } }, { key: "getLocalOldestMessage", value: function(e4) {
        return this.getLocalMessageList(e4)[0];
      } }, { key: "_setLatestMessageSentByPeer", value: function(e4, t3) {
        e4.startsWith(gr.CONV_C2C) && "in" === t3.flow && this._latestMessageSentByPeerMap.set(e4, t3);
      } }, { key: "_setLatestMessageSentByMe", value: function(e4, t3) {
        e4.startsWith(gr.CONV_C2C) && "out" === t3.flow && this._latestMessageSentByMeMap.set(e4, t3);
      } }, { key: "getLatestMessageSentByPeer", value: function(e4) {
        return this._latestMessageSentByPeerMap.get(e4);
      } }, { key: "getLatestMessageSentByMe", value: function(e4) {
        return this._latestMessageSentByMeMap.get(e4);
      } }, { key: "modifyMessageSentByPeer", value: function(e4) {
        var t3 = e4.conversationID, n3 = e4.latestNick, o3 = e4.latestAvatar, r3 = this.list.get(t3);
        if (!Wd(r3)) {
          var a3 = Array.from(r3.values()), s3 = a3.length;
          if (0 !== s3) {
            for (var i3 = null, u3 = 0, c3 = false, l3 = s3 - 1; l3 >= 0; l3--)
              "in" === a3[l3].flow && ((i3 = a3[l3]).nick !== n3 && (i3.setNickAndAvatar({ nick: n3 }), c3 = true), i3.avatar !== o3 && (i3.setNickAndAvatar({ avatar: o3 }), c3 = true), c3 && (u3 += 1));
            wl.log("".concat(this._className, ".modifyMessageSentByPeer conversationID:").concat(t3, " count:").concat(u3));
          }
        }
      } }, { key: "modifyMessageSentByMe", value: function(e4) {
        var t3 = e4.conversationID, n3 = e4.latestNick, o3 = e4.latestAvatar, r3 = this.list.get(t3);
        if (!Wd(r3)) {
          var a3 = Array.from(r3.values()), s3 = a3.length;
          if (0 !== s3) {
            for (var i3 = null, u3 = 0, c3 = false, l3 = s3 - 1; l3 >= 0; l3--)
              "out" === a3[l3].flow && ((i3 = a3[l3]).nick !== n3 && (i3.setNickAndAvatar({ nick: n3 }), c3 = true), i3.avatar !== o3 && (i3.setNickAndAvatar({ avatar: o3 }), c3 = true), c3 && (u3 += 1));
            wl.log("".concat(this._className, ".modifyMessageSentByMe conversationID:").concat(t3, " count:").concat(u3));
          }
        }
      } }, { key: "getTopicConversationIDList", value: function(e4) {
        return v2(this.list.keys()).filter(function(t3) {
          return t3.startsWith("".concat(gr.CONV_GROUP).concat(e4));
        });
      } }, { key: "traversal", value: function() {
        if (0 !== this.list.size && -1 === wl.getLevel()) {
          console.group("conversationID-messageCount");
          var e4, t3 = E2(this.list);
          try {
            for (t3.s(); !(e4 = t3.n()).done; ) {
              var n3 = m2(e4.value, 2), o3 = n3[0], r3 = n3[1];
              console.log("".concat(o3, "-").concat(r3.size));
            }
          } catch (a3) {
            t3.e(a3);
          } finally {
            t3.f();
          }
          console.groupEnd();
        }
      } }, { key: "onMessageModified", value: function(e4, t3) {
        if (!this.list.has(e4))
          return { isUpdated: false, message: null };
        var n3 = this._getUniqueIDOfMessage(t3), o3 = this.list.get(e4).has(n3);
        if (wl.debug("".concat(this._className, ".onMessageModified conversationID:").concat(e4, " uniqueID:").concat(n3, " has:").concat(o3)), o3) {
          var r3 = this.list.get(e4).get(n3), a3 = t3.messageVersion, s3 = t3.elements, i3 = t3.cloudCustomData;
          return r3.version < a3 ? (r3.version = a3, r3._elements = JSON.parse(JSON.stringify(s3)), r3.payload = JSON.parse(JSON.stringify(s3[0].content)), r3.type = s3[0].type, r3.cloudCustomData = i3, r3.isModified = true, { isUpdated: true, message: r3 }) : { isUpdated: false, message: r3 };
        }
        return { isUpdated: false, message: null };
      } }, { key: "_getUniqueIDOfMessage", value: function(e4) {
        var t3 = e4.from, n3 = e4.to, o3 = e4.random, r3 = e4.sequence, a3 = e4.time;
        return "".concat(t3, "-").concat(n3, "-").concat(o3, "-").concat(r3, "-").concat(a3);
      } }, { key: "reset", value: function() {
        this.list.clear(), this._latestMessageSentByPeerMap.clear(), this._latestMessageSentByMeMap.clear();
      } }]), e3;
    }(), ly = "_a2KeyAndTinyIDUpdated", dy = "_cloudConfigUpdated", py = "_profileUpdated";
    function gy(e3) {
      this.mixin(e3);
    }
    gy.mixin = function(e3) {
      var t3 = e3.prototype || e3;
      t3._isReady = false, t3.ready = function(e4) {
        var t4 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        if (e4)
          return this._isReady ? void (t4 ? e4.call(this) : setTimeout(e4, 1)) : (this._readyQueue = this._readyQueue || [], void this._readyQueue.push(e4));
      }, t3.triggerReady = function() {
        var e4 = this;
        this._isReady = true, setTimeout(function() {
          var t4 = e4._readyQueue;
          e4._readyQueue = [], t4 && t4.length > 0 && t4.forEach(function(e5) {
            e5.call(this);
          }, e4);
        }, 1);
      }, t3.resetReady = function() {
        this._isReady = false, this._readyQueue = [];
      }, t3.isReady = function() {
        return this._isReady;
      };
    };
    var hy = ["jpg", "jpeg", "gif", "png", "bmp", "image", "webp"], fy = ["mp4", "quicktime", "mov"], _y = 1, vy = 2, My = 3, yy = 255, Iy = function() {
      function e3(t3) {
        var n3 = this;
        o2(this, e3), Wd(t3) || (this.userID = t3.userID || "", this.nick = t3.nick || "", this.gender = t3.gender || "", this.birthday = t3.birthday || 0, this.location = t3.location || "", this.selfSignature = t3.selfSignature || "", this.allowType = t3.allowType || gr.ALLOW_TYPE_ALLOW_ANY, this.language = t3.language || 0, this.avatar = t3.avatar || "", this.messageSettings = t3.messageSettings || 0, this.adminForbidType = t3.adminForbidType || gr.FORBID_TYPE_NONE, this.level = t3.level || 0, this.role = t3.role || 0, this.lastUpdatedTime = 0, this.profileCustomField = [], Wd(t3.profileCustomField) || t3.profileCustomField.forEach(function(e4) {
          n3.profileCustomField.push({ key: e4.key, value: e4.value });
        }));
      }
      return a2(e3, [{ key: "validate", value: function(e4) {
        var t3 = true, n3 = "";
        if (Wd(e4))
          return { valid: false, tips: "empty options" };
        if (e4.profileCustomField)
          for (var o3 = e4.profileCustomField.length, r3 = null, a3 = 0; a3 < o3; a3++) {
            if (r3 = e4.profileCustomField[a3], !Xl(r3.key) || -1 === r3.key.indexOf("Tag_Profile_Custom"))
              return { valid: false, tips: "The prefix of keys of the custom profile key-value pairs (which is profileCustomField) must be Tag_Profile_Custom" };
            if (!Xl(r3.value))
              return { valid: false, tips: "The type of values of the custom profile key-value pairs (which is profileCustomField) must be String" };
          }
        for (var s3 in e4)
          if (Object.prototype.hasOwnProperty.call(e4, s3)) {
            if ("profileCustomField" === s3)
              continue;
            if (Wd(e4[s3]) && !Xl(e4[s3]) && !Jl(e4[s3])) {
              n3 = "key:" + s3 + ", invalid value:" + e4[s3], t3 = false;
              continue;
            }
            switch (s3) {
              case "nick":
                Xl(e4[s3]) || (n3 = "nick must be a string", t3 = false), dd(e4[s3]) > 500 && (n3 = "nick name limited: must less than or equal to ".concat(500, " bytes, current size: ").concat(dd(e4[s3]), " bytes"), t3 = false);
                break;
              case "gender":
                fd(xl, e4.gender) || (n3 = "key:gender, invalid value:" + e4.gender, t3 = false);
                break;
              case "birthday":
                Jl(e4.birthday) || (n3 = "birthday must be a number", t3 = false);
                break;
              case "location":
                Xl(e4.location) || (n3 = "location must be a string", t3 = false);
                break;
              case "selfSignature":
                Xl(e4.selfSignature) || (n3 = "selfSignature must be a string", t3 = false);
                break;
              case "allowType":
                fd(Bl, e4.allowType) || (n3 = "key:allowType, invalid value:" + e4.allowType, t3 = false);
                break;
              case "language":
                Jl(e4.language) || (n3 = "language must be a number", t3 = false);
                break;
              case "avatar":
                Xl(e4.avatar) || (n3 = "avatar must be a string", t3 = false);
                break;
              case "messageSettings":
                0 !== e4.messageSettings && 1 !== e4.messageSettings && (n3 = "messageSettings must be 0 or 1", t3 = false);
                break;
              case "adminForbidType":
                fd(Vl, e4.adminForbidType) || (n3 = "key:adminForbidType, invalid value:" + e4.adminForbidType, t3 = false);
                break;
              case "level":
                Jl(e4.level) || (n3 = "level must be a number", t3 = false);
                break;
              case "role":
                Jl(e4.role) || (n3 = "role must be a number", t3 = false);
                break;
              default:
                n3 = "unknown key:" + s3 + "  " + e4[s3], t3 = false;
            }
          }
        return { valid: t3, tips: n3 };
      } }]), e3;
    }(), Ty = a2(function e3(t3) {
      o2(this, e3), this.value = t3, this.next = null;
    }), Cy = function() {
      function e3(t3) {
        o2(this, e3), this.MAX_LENGTH = t3, this.pTail = null, this.pNodeToDel = null, this.map = /* @__PURE__ */ new Map(), wl.debug("SinglyLinkedList init MAX_LENGTH:".concat(this.MAX_LENGTH));
      }
      return a2(e3, [{ key: "set", value: function(e4) {
        var t3 = new Ty(e4);
        if (this.map.size < this.MAX_LENGTH)
          null === this.pTail ? (this.pTail = t3, this.pNodeToDel = t3) : (this.pTail.next = t3, this.pTail = t3), this.map.set(e4, 1);
        else {
          var n3 = this.pNodeToDel;
          this.pNodeToDel = this.pNodeToDel.next, this.map.delete(n3.value), n3.next = null, n3 = null, this.pTail.next = t3, this.pTail = t3, this.map.set(e4, 1);
        }
      } }, { key: "has", value: function(e4) {
        return this.map.has(e4);
      } }, { key: "delete", value: function(e4) {
        this.has(e4) && this.map.delete(e4);
      } }, { key: "tail", value: function() {
        return this.pTail;
      } }, { key: "size", value: function() {
        return this.map.size;
      } }, { key: "data", value: function() {
        return Array.from(this.map.keys());
      } }, { key: "reset", value: function() {
        for (var e4; null !== this.pNodeToDel; )
          e4 = this.pNodeToDel, this.pNodeToDel = this.pNodeToDel.next, e4.next = null, e4 = null;
        this.pTail = null, this.map.clear();
      } }]), e3;
    }(), Ey = ["groupID", "name", "avatar", "type", "introduction", "notification", "ownerID", "selfInfo", "createTime", "infoSequence", "lastInfoTime", "lastMessage", "nextMessageSeq", "memberNum", "maxMemberNum", "memberList", "joinOption", "groupCustomField", "muteAllMembers", "isSupportTopic", "_lastRevokedTime"], Sy = function() {
      function e3(t3) {
        o2(this, e3), this.groupID = "", this.name = "", this.avatar = "", this.type = "", this.introduction = "", this.notification = "", this.ownerID = "", this.createTime = "", this.infoSequence = "", this.lastInfoTime = "", this.selfInfo = { messageRemindType: "", joinTime: "", nameCard: "", role: "", userID: "", memberCustomField: void 0, readedSequence: 0, excludedUnreadSequenceList: void 0 }, this.lastMessage = { lastTime: "", lastSequence: "", fromAccount: "", messageForShow: "" }, this.nextMessageSeq = "", this.memberNum = "", this.memberCount = "", this.maxMemberNum = "", this.maxMemberCount = "", this.joinOption = "", this.groupCustomField = [], this.muteAllMembers = false, this.isSupportTopic = false, this._lastRevokedTime = 0, this._initGroup(t3);
      }
      return a2(e3, [{ key: "memberNum", get: function() {
        return this.memberCount;
      }, set: function(e4) {
      } }, { key: "maxMemberNum", get: function() {
        return this.maxMemberCount;
      }, set: function(e4) {
      } }, { key: "_initGroup", value: function(e4) {
        for (var t3 in e4)
          Ey.indexOf(t3) < 0 || ("selfInfo" !== t3 ? ("memberNum" === t3 && (this.memberCount = e4[t3]), "maxMemberNum" === t3 && (this.maxMemberCount = e4[t3]), "isSupportTopic" !== t3 ? this[t3] = e4[t3] : this.isSupportTopic = 1 === e4[t3]) : this.updateSelfInfo(e4[t3]));
      } }, { key: "updateGroup", value: function(e4) {
        var t3 = this;
        e4.appid = void 0, e4.grossTopicNextMsgSeq = void 0, e4.selfInfo && (e4.selfInfo.grossTopicReadSeq = void 0);
        var n3 = JSON.parse(JSON.stringify(e4));
        n3.lastMsgTime && (this.lastMessage.lastTime = n3.lastMsgTime), td(n3.muteAllMembers) || ("On" === n3.muteAllMembers ? n3.muteAllMembers = true : n3.muteAllMembers = false), n3.groupCustomField && Md(this.groupCustomField, n3.groupCustomField), td(n3.memberNum) || (this.memberCount = n3.memberNum), td(n3.maxMemberNum) || (this.maxMemberCount = n3.maxMemberNum), td(n3.isSupportTopic) || (this.isSupportTopic = Jl(n3.isSupportTopic) ? 1 === n3.isSupportTopic : n3.isSupportTopic), cd(this, n3, ["members", "errorCode", "lastMsgTime", "groupCustomField", "memberNum", "maxMemberNum", "isSupportTopic"]), ed(n3.members) && n3.members.length > 0 && n3.members.forEach(function(e5) {
          e5.userID === t3.selfInfo.userID && cd(t3.selfInfo, e5, ["sequence"]);
        });
      } }, { key: "updateSelfInfo", value: function(e4) {
        var n3 = { nameCard: e4.nameCard, joinTime: e4.joinTime, role: e4.role, messageRemindType: e4.messageRemindType, readedSequence: e4.readedSequence, excludedUnreadSequenceList: e4.excludedUnreadSequenceList };
        cd(this.selfInfo, t2({}, n3), [], ["", null, void 0, 0, NaN]);
      } }, { key: "setSelfNameCard", value: function(e4) {
        this.selfInfo.nameCard = e4;
      } }]), e3;
    }(), Dy = function(e3, n3) {
      return td(e3) ? { lastTime: 0, lastSequence: 0, fromAccount: 0, messageForShow: "", payload: null, type: "", isRevoked: false, cloudCustomData: "", onlineOnlyFlag: false, nick: "", nameCard: "", version: 0, isPeerRead: false, revoker: null } : e3 instanceof bM ? { lastTime: e3.time || 0, lastSequence: e3.sequence || 0, fromAccount: e3.from || "", messageForShow: qd(e3.type, e3.payload, n3), payload: e3.payload || null, type: e3.type || null, isRevoked: e3.isRevoked || false, cloudCustomData: e3.cloudCustomData || "", onlineOnlyFlag: e3._onlineOnlyFlag || false, nick: e3.nick || "", nameCard: e3.nameCard || "", version: e3.version || 0, isPeerRead: e3.isPeerRead || false, revoker: e3.revoker || null } : t2(t2({}, e3), {}, { messageForShow: qd(e3.type, e3.payload, n3) });
    }, Ny = function() {
      function e3(t3, n3) {
        o2(this, e3), this.conversationID = t3.conversationID || "", this.unreadCount = t3.unreadCount || 0, this.type = t3.type || "", this.lastMessage = Dy(t3.lastMessage, n3), t3.lastMsgTime && (this.lastMessage.lastTime = t3.lastMsgTime), this._isInfoCompleted = false, this.peerReadTime = t3.peerReadTime || 0, this.groupAtInfoList = [], this.remark = "", this.isPinned = t3.isPinned || false, this.messageRemindType = "", this.markList = t3.markList || [], this.customData = t3.customData || "", this.conversationGroupList = t3.conversationGroupList || [], this._initProfile(t3);
      }
      return a2(e3, [{ key: "toAccount", get: function() {
        return this.conversationID.startsWith(gr.CONV_C2C) ? this.conversationID.replace(gr.CONV_C2C, "") : this.conversationID.startsWith(gr.CONV_GROUP) ? this.conversationID.replace(gr.CONV_GROUP, "") : "";
      } }, { key: "subType", get: function() {
        return this.groupProfile ? this.groupProfile.type : "";
      } }, { key: "_initProfile", value: function(e4) {
        var t3 = this;
        Object.keys(e4).forEach(function(n3) {
          switch (n3) {
            case "userProfile":
              t3.userProfile = e4.userProfile;
              break;
            case "groupProfile":
              t3.groupProfile = e4.groupProfile;
          }
        }), td(this.userProfile) && this.type === gr.CONV_C2C ? this.userProfile = new Iy({ userID: e4.conversationID.replace("C2C", "") }) : td(this.groupProfile) && this.type === gr.CONV_GROUP && (this.groupProfile = new Sy({ groupID: e4.conversationID.replace("GROUP", "") }));
      } }, { key: "updateUnreadCount", value: function(e4) {
        var t3 = e4.nextUnreadCount, n3 = e4.isFromGetConversations, o3 = e4.isUnreadC2CMessage;
        td(t3) || (Id(this.subType) ? this.unreadCount = 0 : n3 && this.type === gr.CONV_GROUP || n3 && this.type === gr.CONV_TOPIC || o3 && this.type === gr.CONV_C2C ? this.unreadCount = t3 : this.unreadCount = this.unreadCount + t3);
      } }, { key: "updateLastMessage", value: function(e4) {
        this.lastMessage = Dy(e4);
      } }, { key: "updateGroupAtInfoList", value: function(e4) {
        if (!this._isNeedMergeGroupAtInfo(e4)) {
          var t3, n3 = (M2(t3 = e4.groupAtType) || y2(t3) || I2(t3) || C2()).slice(0);
          -1 !== n3.indexOf(gr.CONV_AT_ME) && -1 !== n3.indexOf(gr.CONV_AT_ALL) && (n3 = [gr.CONV_AT_ALL_AT_ME]);
          var o3 = { from: e4.from, groupID: e4.groupID, topicID: e4.topicID, messageSequence: e4.sequence, atTypeArray: n3, __random: e4.__random, __sequence: e4.__sequence };
          this.groupAtInfoList.push(o3), wl.debug("Conversation.updateGroupAtInfoList conversationID:".concat(this.conversationID), this.groupAtInfoList);
        }
      } }, { key: "_isNeedMergeGroupAtInfo", value: function(e4) {
        var t3 = e4.groupID, n3 = e4.sequence;
        if (!Td({ groupID: t3 }))
          return false;
        var o3 = false;
        return this.groupAtInfoList.forEach(function(t4) {
          t4.messageSequence === n3 && (t4.atTypeArray.indexOf(gr.CONV_AT_ME) > -1 && e4.groupAtType.indexOf(gr.CONV_AT_ALL) > -1 && (t4.atTypeArray = [gr.CONV_AT_ALL_AT_ME]), t4.atTypeArray.indexOf(gr.CONV_AT_ALL) > -1 && e4.groupAtType.indexOf(gr.CONV_AT_ME) > -1 && (t4.atTypeArray = [gr.CONV_AT_ALL_AT_ME], t4.__random = e4.__random, t4.__sequence = e4.__sequence), o3 = true);
        }), o3;
      } }, { key: "clearGroupAtInfoList", value: function() {
        this.groupAtInfoList.length = 0;
      } }, { key: "reduceUnreadCount", value: function() {
        return this.unreadCount >= 1 && (this.unreadCount -= 1, true);
      } }, { key: "isLastMessageRevoked", value: function(e4) {
        var t3 = e4.sequence, n3 = e4.time;
        return this.type === gr.CONV_C2C && t3 === this.lastMessage.lastSequence && n3 === this.lastMessage.lastTime || this.type === gr.CONV_GROUP && t3 === this.lastMessage.lastSequence;
      } }, { key: "setLastMessageRevoked", value: function(e4) {
        this.lastMessage.isRevoked = e4;
      } }, { key: "setLastMessageRevoker", value: function(e4) {
        this.lastMessage.revoker = e4;
      } }]), e3;
    }(), Ay = function() {
      function e3(t3) {
        o2(this, e3), this._conversationModule = t3, this._className = "MessageRemindHandler", this._updateSequence = 0;
      }
      return a2(e3, [{ key: "getC2CMessageRemindType", value: function() {
        var e4 = this, t3 = "".concat(this._className, ".getC2CMessageRemindType");
        return this._conversationModule.request({ protocolName: Oh, updateSequence: this._updateSequence }).then(function(n3) {
          wl.log("".concat(t3, " ok"));
          var o3 = n3.data, r3 = o3.updateSequence, a3 = o3.muteFlagList;
          e4._updateSequence = r3, e4._patchC2CMessageRemindType(a3);
        }).catch(function(e5) {
          wl.error("".concat(t3, " failed. error:"), e5);
        });
      } }, { key: "_patchC2CMessageRemindType", value: function(e4) {
        var t3 = this, n3 = 0, o3 = "";
        ed(e4) && e4.length > 0 && e4.forEach(function(e5) {
          var r3 = e5.userID, a3 = e5.muteFlag;
          0 === a3 ? o3 = gr.MSG_REMIND_ACPT_AND_NOTE : 1 === a3 ? o3 = gr.MSG_REMIND_DISCARD : 2 === a3 && (o3 = gr.MSG_REMIND_ACPT_NOT_NOTE), true === t3._conversationModule.patchMessageRemindType({ ID: r3, isC2CConversation: true, messageRemindType: o3 }) && (n3 += 1);
        }), wl.log("".concat(this._className, "._patchC2CMessageRemindType count:").concat(n3));
      } }, { key: "set", value: function(e4) {
        return e4.groupID ? this._setGroupMessageRemindType(e4) : ed(e4.userIDList) ? this._setC2CMessageRemindType(e4) : void 0;
      } }, { key: "_setGroupMessageRemindType", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, "._setGroupMessageRemindType"), o3 = e4.groupID, r3 = e4.messageRemindType, a3 = "groupID:".concat(o3, " messageRemindType:").concat(r3), s3 = new G_(P_.SET_MESSAGE_REMIND_TYPE);
        return s3.setMessage(a3), this._getModule(Bg).modifyGroupMemberInfo({ groupID: o3, messageRemindType: r3, userID: this._conversationModule.getMyUserID() }).then(function() {
          s3.setNetworkType(t3._conversationModule.getNetworkType()).end(), wl.log("".concat(n3, " ok. ").concat(a3));
          var o4 = t3.onGroupMessageRemindTypeUpdated(e4);
          return t3._conversationModule.emitTotalUnreadMessageCountUpdate(), wM(o4);
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            s3.setError(e5, o4, r4).end();
          }), wl.error("".concat(n3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "onGroupMessageRemindTypeUpdated", value: function(e4) {
        var t3 = e4.groupID, n3 = e4.messageRemindType, o3 = this._getModule(xg).getLocalGroupProfile(t3);
        if (o3 && (o3.selfInfo.messageRemindType = n3), Cd(t3)) {
          var r3 = t3, a3 = Fd(r3), s3 = this._getModule(Kg).getLocalTopic(a3, r3);
          return s3 && (s3.updateSelfInfo({ messageRemindType: n3 }), this._conversationModule.emitOuterEvent(pr.TOPIC_UPDATED, { groupID: a3, topic: s3 })), { topic: s3 };
        }
        return this._conversationModule.patchMessageRemindType({ ID: t3, isC2CConversation: false, messageRemindType: n3 }) && this._emitConversationUpdate(), { group: o3 };
      } }, { key: "_setC2CMessageRemindType", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, "._setC2CMessageRemindType"), o3 = e4.userIDList, r3 = e4.messageRemindType, a3 = o3.slice(0, 30), s3 = 0;
        r3 === gr.MSG_REMIND_DISCARD ? s3 = 1 : r3 === gr.MSG_REMIND_ACPT_NOT_NOTE && (s3 = 2);
        var i3 = "userIDList:".concat(a3, " messageRemindType:").concat(r3), u3 = new G_(P_.SET_MESSAGE_REMIND_TYPE);
        return u3.setMessage(i3), this._conversationModule.request({ protocolName: Rh, requestData: { userIDList: a3, muteFlag: s3 } }).then(function(e5) {
          u3.setNetworkType(t3._conversationModule.getNetworkType()).end();
          var o4 = e5.data, s4 = o4.updateSequence, i4 = o4.errorList;
          t3._updateSequence = s4;
          var c3 = [], l3 = [];
          ed(i4) && i4.forEach(function(e6) {
            c3.push(e6.userID), l3.push({ userID: e6.userID, code: e6.errorCode });
          });
          var d3 = a3.filter(function(e6) {
            return -1 === c3.indexOf(e6);
          });
          wl.log("".concat(n3, " ok. successUserIDList:").concat(d3, " failureUserIDList:").concat(JSON.stringify(l3)));
          var p3 = 0;
          return d3.forEach(function(e6) {
            t3._conversationModule.patchMessageRemindType({ ID: e6, isC2CConversation: true, messageRemindType: r3 }) && (p3 += 1);
          }), p3 >= 1 && t3._emitConversationUpdate(), a3.length = c3.length = 0, t3._conversationModule.emitTotalUnreadMessageCountUpdate(), WM({ successUserIDList: d3.map(function(e6) {
            return { userID: e6 };
          }), failureUserIDList: l3 });
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            u3.setError(e5, o4, r4).end();
          }), wl.error("".concat(n3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "_getModule", value: function(e4) {
        return this._conversationModule.getModule(e4);
      } }, { key: "_emitConversationUpdate", value: function() {
        this._conversationModule.emitConversationUpdate(true, false);
      } }, { key: "setUpdateSequence", value: function(e4) {
        this._updateSequence = e4;
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._updateSequence = 0;
      } }]), e3;
    }(), ky = Tr("splice"), Ry = R2.TypeError, Oy = Math.max, Ly = Math.min;
    nn({ target: "Array", proto: true, forced: !ky }, { splice: function(e3, t3) {
      var n3, o3, r3, a3, s3, i3, u3 = De2(this), c3 = Ut(u3), l3 = Lt(e3, c3), d3 = arguments.length;
      if (0 === d3 ? n3 = o3 = 0 : 1 === d3 ? (n3 = 0, o3 = c3 - l3) : (n3 = d3 - 2, o3 = Ly(Oy(kt2(t3), 0), c3 - l3)), c3 + n3 - o3 > 9007199254740991)
        throw Ry("Maximum allowed length exceeded");
      for (r3 = Jn2(u3, o3), a3 = 0; a3 < o3; a3++)
        (s3 = l3 + a3) in u3 && vo(r3, a3, u3[s3]);
      if (r3.length = o3, n3 < o3) {
        for (a3 = l3; a3 < c3 - o3; a3++)
          i3 = a3 + n3, (s3 = a3 + o3) in u3 ? u3[i3] = u3[s3] : delete u3[i3];
        for (a3 = c3; a3 > c3 - o3 + n3; a3--)
          delete u3[a3 - 1];
      } else if (n3 > o3)
        for (a3 = c3 - o3; a3 > l3; a3--)
          i3 = a3 + n3 - 1, (s3 = a3 + o3 - 1) in u3 ? u3[i3] = u3[s3] : delete u3[i3];
      for (a3 = 0; a3 < n3; a3++)
        u3[a3 + l3] = arguments[a3 + 2];
      return u3.length = c3 - o3 + n3, r3;
    } });
    var Gy = function() {
      function e3(t3) {
        o2(this, e3), this._conversationModule = t3, this._className = "ConvGroupHandler", this._convGroupMap = /* @__PURE__ */ new Map(), this._startIndex = 0, this._pagingStatus = Bp.NOT_START;
      }
      return a2(e3, [{ key: "setConvCustomData", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, ".setConvCustomData"), o3 = e4.conversationIDList, r3 = e4.customData;
        wl.log("".concat(n3, " options:"), e4);
        var a3 = new G_(P_.SET_CONV_CUSTOM_DATA);
        a3.setMessage(JSON.stringify(e4));
        var s3 = { fromAccount: this._getMyUserID(), itemList: [] }, i3 = [], u3 = [];
        return o3.forEach(function(e5) {
          if (!t3._hasLocalConversation(e5))
            return t3._onConversationNotFound(u3, e5), true;
          if (!Ed(e5) && !Sd(e5))
            return t3._onConversationIDInvalid(u3, e5), true;
          var n4 = { operationType: 2, contactItem: void 0, customMark: r3 };
          Ed(e5) ? n4.contactItem = { type: 1, toAccount: e5.replace(gr.CONV_C2C, "") } : Sd(e5) && (n4.contactItem = { type: 2, groupID: e5.replace(gr.CONV_GROUP, "") }), s3.itemList.push(n4);
        }), u3.length === o3.length ? WM({ successConversationIDList: i3, failureConversationIDList: u3 }) : this._conversationModule.request({ protocolName: Hh, requestData: s3 }).then(function(e5) {
          a3.setNetworkType(t3._conversationModule.getNetworkType()).end(), wl.log("".concat(n3, " ok"));
          var o4 = e5.data.resultItem;
          if (ed(o4)) {
            var s4, c3, l3 = false;
            o4.forEach(function(e6) {
              s4 = t3._concatConversationID(e6.contactItem), 0 === e6.resultCode ? (i3.push(s4), (c3 = t3._getLocalConversation(s4)) && c3.customData !== r3 && (c3.customData = r3, l3 = true)) : u3.push({ conversationID: s4, code: e6.resultCode, message: e6.resultInfo });
            }), true === l3 && t3._emitConversationUpdate();
          }
          return wM({ successConversationIDList: i3, failureConversationIDList: u3 });
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            a3.setError(e5, o4, r4).end();
          }), wl.error("".concat(n3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "markConversation", value: function(e4) {
        var t3 = this;
        if (!this._conversationModule.canIUse(wc.CONV_MARK))
          return YM({ code: dh.CANNOT_USE_COMMERCIAL_ABILITY });
        var n3 = "".concat(this._className, ".markConversation"), o3 = e4.conversationIDList, r3 = e4.markType, a3 = e4.enableMark;
        wl.log("".concat(n3, " options:"), e4);
        var s3 = new G_(P_.MARK_CONVERSATION);
        s3.setMessage(JSON.stringify(e4));
        var i3 = void 0, u3 = void 0, c3 = this._getFlagBit(r3);
        true === a3 ? u3 = [c3] : i3 = [c3];
        var l3 = { fromAccount: this._getMyUserID(), itemList: [] }, d3 = [], p3 = [];
        return o3.forEach(function(e5) {
          if (!t3._hasLocalConversation(e5))
            return t3._onConversationNotFound(p3, e5), true;
          if (!Ed(e5) && !Sd(e5))
            return t3._onConversationIDInvalid(p3, e5), true;
          var n4 = { operationType: 1, contactItem: void 0, clearMark: i3, setMark: u3 };
          Ed(e5) ? n4.contactItem = { type: 1, toAccount: e5.replace(gr.CONV_C2C, "") } : Sd(e5) && (n4.contactItem = { type: 2, groupID: e5.replace(gr.CONV_GROUP, "") }), l3.itemList.push(n4);
        }), p3.length === o3.length ? WM({ successConversationIDList: d3, failureConversationIDList: p3 }) : this._conversationModule.request({ protocolName: jh, requestData: l3 }).then(function(e5) {
          s3.setNetworkType(t3._conversationModule.getNetworkType()).end(), wl.log("".concat(n3, " ok"));
          var o4 = e5.data.resultItem;
          if (ed(o4)) {
            var i4, u4, c4 = false;
            o4.forEach(function(e6) {
              if (i4 = t3._concatConversationID(e6.contactItem), 0 === e6.resultCode) {
                if (d3.push(i4), u4 = t3._getLocalConversation(i4)) {
                  var n4 = u4.markList.indexOf(r3);
                  true === a3 ? -1 === n4 && (u4.markList.push(r3), c4 = true) : -1 !== n4 && (u4.markList.splice(n4, 1), c4 = true);
                }
              } else
                p3.push({ conversationID: i4, code: e6.resultCode, message: e6.resultInfo });
            }), true === c4 && t3._emitConversationUpdate();
          }
          return wM({ successConversationIDList: d3, failureConversationIDList: p3 });
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            s3.setError(e5, o4, r4).end();
          }), wl.error("".concat(n3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "getLocalConvGroupList", value: function() {
        var e4 = this;
        return wl.log("".concat(this._className, ".getLocalConvGroupList pagingStatus:").concat(this._pagingStatus)), this._pagingStatus === Bp.REJECTED ? this.getRemoteConvGroupList().then(function() {
          return wM(v2(e4._convGroupMap.values()));
        }) : WM(v2(this._convGroupMap.values()));
      } }, { key: "getRemoteConvGroupList", value: function() {
        var e4 = this, t3 = "".concat(this._className, ".getRemoteConvGroupList");
        return this._pagingStatus = Bp.PENDING, this._conversationModule.request({ protocolName: Xh, requestData: { fromAccount: this._getMyUserID(), startIndex: this._startIndex, startTime: Gl() } }).then(function(n3) {
          var o3, r3, a3 = n3.data, s3 = a3.completeFlag, i3 = a3.contactItem, u3 = a3.nextStartIndex, c3 = void 0 === u3 ? 0 : u3, l3 = a3.groupItem;
          (e4._startIndex = c3, wl.log("".concat(t3, " completeFlag:").concat(s3, " nextStartIndex:").concat(c3)), ed(l3) && l3.forEach(function(t4) {
            var n4 = t4.convGroupID, o4 = t4.groupName;
            e4._convGroupMap.set(n4, o4);
          }), ed(i3)) && i3.forEach(function(t4) {
            var n4 = t4.standardMark, a4 = t4.customData, s4 = t4.convGroupIDList;
            if (o3 = e4._concatConversationID(t4), (r3 = e4._getLocalConversation(o3)) && (r3.markList = Vd(n4), r3.customData = a4 || "", ed(s4))) {
              var i4 = [];
              s4.forEach(function(t5) {
                e4._convGroupMap.has(t5) && i4.push(e4._convGroupMap.get(t5));
              }), r3.conversationGroupList = [].concat(i4), i4.length = 0;
            }
          });
          if (0 === s3)
            return e4.getRemoteConvGroupList();
          1 === s3 && (e4._pagingStatus = Bp.RESOLVED, e4._emitConversationUpdate(), e4._emitConvGroupListUpdate());
        }).catch(function(n3) {
          e4._pagingStatus = Bp.REJECTED, wl.warn("".concat(t3, " failed. error:"), n3);
        });
      } }, { key: "createConvGroup", value: function(e4) {
        var t3 = this;
        if (!this._conversationModule.canIUse(wc.CONV_GROUP))
          return YM({ code: dh.CANNOT_USE_COMMERCIAL_ABILITY });
        var n3 = new G_(P_.CREATE_CONV_GROUP);
        n3.setMessage(JSON.stringify(e4));
        var o3 = "".concat(this._className, ".createConvGroup");
        wl.log("".concat(o3, " options:"), e4);
        var r3 = e4.groupName, a3 = e4.conversationIDList, s3 = { fromAccount: this._getMyUserID(), itemList: [{ groupName: r3, contactItem: [] }] }, i3 = [], u3 = [];
        return a3.forEach(function(e5) {
          return t3._hasLocalConversation(e5) ? Ed(e5) || Sd(e5) ? void (Ed(e5) ? s3.itemList[0].contactItem.push({ type: 1, toAccount: e5.replace(gr.CONV_C2C, "") }) : Sd(e5) && s3.itemList[0].contactItem.push({ type: 2, groupID: e5.replace(gr.CONV_GROUP, "") })) : (t3._onConversationIDInvalid(u3, e5), true) : (t3._onConversationNotFound(u3, e5), true);
        }), u3.length === a3.length ? WM({ successConversationIDList: i3, failureConversationIDList: u3 }) : this._conversationModule.request({ protocolName: Wh, requestData: s3 }).then(function(e5) {
          n3.setNetworkType(t3._conversationModule.getNetworkType()).end(), wl.log("".concat(o3, " ok"));
          var a4 = e5.data.groupResultItem[0], s4 = a4.groupItem, c3 = a4.resultItem;
          if (Zl(s4) && (t3._convGroupMap.set(s4.convGroupID, s4.groupName), t3._emitConvGroupListUpdate()), ed(c3)) {
            var l3, d3, p3 = false;
            c3.forEach(function(e6) {
              l3 = t3._concatConversationID(e6.contactItem), 0 === e6.resultCode ? (i3.push(l3), (d3 = t3._getLocalConversation(l3)) && -1 === d3.conversationGroupList.indexOf(r3) && (d3.conversationGroupList.push(r3), p3 = true)) : u3.push({ conversationID: l3, code: e6.resultCode, message: e6.resultInfo });
            }), true === p3 && (t3._emitConversationUpdate(), t3._emitConvGroupListUpdate());
          }
          return wM({ successConversationIDList: i3, failureConversationIDList: u3 });
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), r4 = o4[0], a4 = o4[1];
            n3.setError(e5, r4, a4).end();
          }), wl.error("".concat(o3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "deleteConvGroup", value: function(e4) {
        var t3 = this;
        if (!this._conversationModule.canIUse(wc.CONV_GROUP))
          return YM({ code: dh.CANNOT_USE_COMMERCIAL_ABILITY });
        var n3 = new G_(P_.DELETE_CONV_GROUP);
        n3.setMessage(e4);
        var o3 = "".concat(this._className, ".deleteConvGroup");
        return wl.log("".concat(o3, " groupName:").concat(e4)), this._conversationModule.request({ protocolName: Yh, requestData: { fromAccount: this._getMyUserID(), groupName: [e4] } }).then(function(r3) {
          n3.setNetworkType(t3._conversationModule.getNetworkType()).end(), wl.log("".concat(o3, " ok"));
          var a3 = r3.data.groupItem;
          if (ed(a3)) {
            var s3 = false;
            a3.forEach(function(e5) {
              t3._convGroupMap.has(e5.convGroupID) && (t3._convGroupMap.delete(e5.convGroupID), s3 = true);
            }), true === s3 && t3._emitConvGroupListUpdate();
          }
          t3._eraseFromConversationGroupList([e4]);
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), r3 = o4[0], a3 = o4[1];
            n3.setError(e5, r3, a3).end();
          }), wl.error("".concat(o3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "renameConvGroup", value: function(e4) {
        var t3 = this;
        if (!this._conversationModule.canIUse(wc.CONV_GROUP))
          return YM({ code: dh.CANNOT_USE_COMMERCIAL_ABILITY });
        var n3 = new G_(P_.RENAME_CONV_GROUP);
        n3.setMessage(JSON.stringify(e4));
        var o3 = "".concat(this._className, ".renameConvGroup");
        wl.log("".concat(o3, " options:"), e4);
        var r3 = e4.oldName, a3 = e4.newName;
        return this._conversationModule.request({ protocolName: $h, requestData: { fromAccount: this._getMyUserID(), updateType: 1, updateGroup: { updateGroupType: 1, oldName: r3, newName: a3 } } }).then(function(e5) {
          n3.setNetworkType(t3._conversationModule.getNetworkType()).end(), wl.log("".concat(o3, " ok"));
          var s3 = e5.data.updateGroupResult.convGroupID;
          t3._convGroupMap.set(s3, a3), t3._emitConvGroupListUpdate();
          var i3, u3, c3 = t3._conversationModule.getLocalConversationList(), l3 = false;
          c3.forEach(function(e6) {
            i3 = e6.conversationGroupList, -1 !== (u3 = i3.indexOf(r3)) && (i3.splice(u3, 1, a3), l3 = true);
          }), true === l3 && t3._emitConversationUpdate();
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), r4 = o4[0], a4 = o4[1];
            n3.setError(e5, r4, a4).end();
          }), wl.error("".concat(o3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "addConvsToGroup", value: function(e4) {
        var t3 = this;
        if (!this._conversationModule.canIUse(wc.CONV_GROUP))
          return YM({ code: dh.CANNOT_USE_COMMERCIAL_ABILITY });
        var n3 = new G_(P_.ADD_CONVS_TO_GROUP);
        n3.setMessage(JSON.stringify(e4));
        var o3 = "".concat(this._className, ".addConvsToGroup");
        wl.log("".concat(o3, " options:"), e4);
        var r3 = e4.conversationIDList, a3 = e4.groupName, s3 = { fromAccount: this._getMyUserID(), updateType: 1, updateGroup: { updateGroupType: 2, groupName: a3, updateItem: [] } }, i3 = [], u3 = [];
        return r3.forEach(function(e5) {
          return t3._hasLocalConversation(e5) ? Ed(e5) || Sd(e5) ? void (Ed(e5) ? s3.updateGroup.updateItem.push({ operationType: 1, contactItem: { type: 1, toAccount: e5.replace(gr.CONV_C2C, "") } }) : Sd(e5) && s3.updateGroup.updateItem.push({ operationType: 1, contactItem: { type: 2, groupID: e5.replace(gr.CONV_GROUP, "") } })) : (t3._onConversationIDInvalid(u3, e5), true) : (t3._onConversationNotFound(u3, e5), true);
        }), u3.length === r3.length ? WM({ successConversationIDList: i3, failureConversationIDList: u3 }) : this._conversationModule.request({ protocolName: zh, requestData: s3 }).then(function(e5) {
          n3.setNetworkType(t3._conversationModule.getNetworkType()).end(), wl.log("".concat(o3, " ok"));
          var r4 = e5.data.updateGroupResult.contactResultItem;
          if (ed(r4)) {
            var s4, c3, l3 = false;
            r4.forEach(function(e6) {
              s4 = t3._concatConversationID(e6.contactItem), 0 === e6.resultCode ? (c3 = t3._getLocalConversation(s4)) && -1 === c3.conversationGroupList.indexOf(a3) && (c3.conversationGroupList.push(a3), i3.push(s4), l3 = true) : u3.push({ conversationID: s4, code: e6.resultCode, message: e6.resultInfo });
            }), true === l3 && (t3._emitConversationUpdate(), t3._emitConvInGroupUpdate(a3));
          }
          return wM({ successConversationIDList: i3, failureConversationIDList: u3 });
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), r4 = o4[0], a4 = o4[1];
            n3.setError(e5, r4, a4).end();
          }), wl.error("".concat(o3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "deleteConvsFromGroup", value: function(e4) {
        var t3 = this;
        if (!this._conversationModule.canIUse(wc.CONV_GROUP))
          return YM({ code: dh.CANNOT_USE_COMMERCIAL_ABILITY });
        var n3 = new G_(P_.DELETE_CONVS_FROM_GROUP);
        n3.setMessage(JSON.stringify(e4));
        var o3 = "".concat(this._className, ".deleteConvsFromGroup");
        wl.log("".concat(o3, " options:"), e4);
        var r3 = e4.conversationIDList, a3 = e4.groupName, s3 = { fromAccount: this._getMyUserID(), updateType: 1, updateGroup: { updateGroupType: 2, groupName: a3, updateItem: [] } }, i3 = [], u3 = [];
        return r3.forEach(function(e5) {
          return t3._hasLocalConversation(e5) ? Ed(e5) || Sd(e5) ? void (Ed(e5) ? s3.updateGroup.updateItem.push({ operationType: 2, contactItem: { type: 1, toAccount: e5.replace(gr.CONV_C2C, "") } }) : Sd(e5) && s3.updateGroup.updateItem.push({ operationType: 2, contactItem: { type: 2, groupID: e5.replace(gr.CONV_GROUP, "") } })) : (t3._onConversationIDInvalid(u3, e5), true) : (t3._onConversationNotFound(u3, e5), true);
        }), u3.length === r3.length ? WM({ successConversationIDList: i3, failureConversationIDList: u3 }) : this._conversationModule.request({ protocolName: Jh, requestData: s3 }).then(function(e5) {
          n3.setNetworkType(t3._conversationModule.getNetworkType()).end(), wl.log("".concat(o3, " ok"));
          var r4 = e5.data.updateGroupResult.contactResultItem;
          if (ed(r4)) {
            var s4, c3, l3 = false;
            r4.forEach(function(e6) {
              if (s4 = t3._concatConversationID(e6.contactItem), 0 === e6.resultCode) {
                if (c3 = t3._getLocalConversation(s4)) {
                  var n4 = c3.conversationGroupList.indexOf(a3);
                  -1 !== n4 && (c3.conversationGroupList.splice(n4, 1), i3.push(s4), l3 = true);
                }
              } else
                u3.push({ conversationID: s4, code: e6.resultCode, message: e6.resultInfo });
            }), true === l3 && (t3._emitConversationUpdate(), t3._emitConvInGroupUpdate(a3));
          }
          return wM({ successConversationIDList: i3, failureConversationIDList: u3 });
        }).catch(function(e5) {
          return t3._conversationModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), r4 = o4[0], a4 = o4[1];
            n3.setError(e5, r4, a4).end();
          }), wl.error("".concat(o3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "onConvMarkUpdated", value: function(e4) {
        var t3 = this;
        if (!Wd(e4)) {
          var n3, o3;
          wl.debug("".concat(this._className, ".onConvMarkUpdated markItemList:"), e4);
          var r3 = false;
          e4.forEach(function(e5) {
            var a3 = e5.recentContactItem, s3 = e5.optType, i3 = e5.standardMark, u3 = e5.customMark;
            if (n3 = t3._concatConversationID(a3), o3 = t3._getLocalConversation(n3))
              if (1 === s3) {
                var c3 = Vd(i3);
                true !== function(e6, t4) {
                  if (e6 === t4)
                    return true;
                  if (!e6 || !t4)
                    return false;
                  if (e6.length !== t4.length)
                    return false;
                  for (var n4 = 0, o4 = e6.length; n4 < o4; n4++)
                    if (e6[n4] !== t4[n4])
                      return false;
                  return true;
                }(o3.markList, c3) && (o3.markList = c3, r3 = true);
              } else
                2 === s3 && o3.customData !== u3 && void 0 !== u3 && (o3.customData = u3, r3 = true);
          }), true === r3 && this._emitConversationUpdate();
        }
      } }, { key: "onConvGroupCreated", value: function(e4) {
        var t3 = this;
        wl.debug("".concat(this._className, ".onConvGroupCreated resultList:"), e4);
        var n3 = false, o3 = false;
        ed(e4) && (e4.forEach(function(e5) {
          var r3 = e5.msgGroupItem, a3 = r3.groupID, s3 = r3.groupName;
          t3._convGroupMap.get(a3) !== s3 && (t3._convGroupMap.set(a3, s3), o3 = true);
          var i3, u3, c3 = e5.msgRecentContactItem;
          ed(c3) && c3.forEach(function(e6) {
            i3 = t3._concatConversationID(e6), (u3 = t3._getLocalConversation(i3)) && -1 === u3.conversationGroupList.indexOf(s3) && (u3.conversationGroupList.push(s3), n3 = true);
          });
        }), true === n3 && this._emitConversationUpdate(), true === o3 && this._emitConvGroupListUpdate());
      } }, { key: "onConvGroupDeleted", value: function(e4) {
        var t3 = this;
        wl.debug("".concat(this._className, ".onConvGroupDeleted groupItemList:"), e4);
        var n3 = [];
        if (ed(e4)) {
          var o3 = false;
          e4.forEach(function(e5) {
            var r3 = e5.groupID, a3 = e5.groupName;
            t3._convGroupMap.has(r3) && (t3._convGroupMap.delete(r3), o3 = true, n3.push(a3));
          }), true === o3 && this._emitConvGroupListUpdate();
        }
        this._eraseFromConversationGroupList(n3);
      } }, { key: "_eraseFromConversationGroupList", value: function(e4) {
        Wd(e4) || (this._conversationModule.getLocalConversationList().forEach(function(t3) {
          t3.conversationGroupList = t3.conversationGroupList.filter(function(t4) {
            return !e4.includes(t4);
          });
        }), this._emitConversationUpdate());
      } }, { key: "onConvGroupNameUpdated", value: function(e4) {
        wl.debug("".concat(this._className, ".onConvGroupNameUpdated options:"), e4);
        var t3 = e4.groupID, n3 = e4.groupName, o3 = e4.oldGroupName;
        if (this._convGroupMap.get(t3) !== n3) {
          this._convGroupMap.set(t3, n3), this._emitConvGroupListUpdate();
          var r3, a3, s3 = this._conversationModule.getLocalConversationList(), i3 = false;
          s3.forEach(function(e5) {
            r3 = e5.conversationGroupList, -1 !== (a3 = r3.indexOf(o3)) && (r3.splice(a3, 1, n3), i3 = true);
          }), true === i3 && this._emitConversationUpdate();
        }
      } }, { key: "onConvInGroupUpdated", value: function(e4) {
        var t3 = this;
        wl.debug("".concat(this._className, ".onConvInGroupUpdated options:"), e4);
        var n3 = e4.oldGroupName, o3 = e4.recentContactUpdateGroupItem;
        if (ed(o3)) {
          var r3, a3, s3, i3 = false;
          o3.forEach(function(e5) {
            var o4 = e5.contactOptType, u3 = e5.recentContactItem;
            r3 = t3._concatConversationID(u3), (a3 = t3._getLocalConversation(r3)) && (s3 = a3.conversationGroupList.indexOf(n3), 1 === o4 ? -1 === s3 && (a3.conversationGroupList.push(n3), i3 = true) : 2 === o4 && -1 !== s3 && (a3.conversationGroupList.splice(s3, 1), i3 = true));
          }), true === i3 && (this._emitConversationUpdate(), this._emitConvInGroupUpdate(n3));
        }
      } }, { key: "onConvAddedToOrDeletedFromGroup", value: function(e4) {
        var t3 = this;
        wl.debug("".concat(this._className, ".onConvAddedToOrDeletedFromGroup options:"), e4);
        var n3 = e4.msgRecentContactItem, o3 = e4.msgRecentContactUpdateContactItem, r3 = this._concatConversationID(n3), a3 = this._getLocalConversation(r3);
        if (a3 && ed(o3)) {
          var s3, i3 = false;
          o3.forEach(function(e5) {
            var n4 = e5.groupOptType, o4 = e5.recentContactGroupItem.groupName;
            s3 = a3.conversationGroupList.indexOf(o4), 1 === n4 ? -1 === s3 && (a3.conversationGroupList.push(o4), i3 = true) : 2 === n4 && -1 !== s3 && (a3.conversationGroupList.splice(s3, 1), i3 = true), true === i3 && t3._emitConvInGroupUpdate(o4);
          }), true === i3 && this._emitConversationUpdate();
        }
      } }, { key: "onConvGroupListSynced", value: function(e4) {
        var t3 = this;
        ed(e4) && 0 !== e4.length && (wl.log("".concat(this._className, ".onConvGroupListSynced groupItemList:"), e4), e4.forEach(function(e5) {
          t3._convGroupMap.set(e5.convGroupID, e5.groupName);
        }));
      } }, { key: "getConvGroupListByID", value: function(e4) {
        var t3 = this;
        if (!Wd(e4)) {
          var n3 = [];
          return e4.forEach(function(e5) {
            t3._convGroupMap.has(e5) && n3.push(t3._convGroupMap.get(e5));
          }), n3;
        }
      } }, { key: "_onConversationNotFound", value: function(e4, t3) {
        e4.push({ conversationID: t3, code: dh.CONVERSATION_NOT_FOUND, message: this._conversationModule.getErrorMessage(dh.CONVERSATION_NOT_FOUND) });
      } }, { key: "_onConversationIDInvalid", value: function(e4, t3) {
        e4.push({ conversationID: t3, code: dh.INVALID_CONVERSATION_ID, message: this._conversationModule.getErrorMessage(dh.INVALID_CONVERSATION_ID) });
      } }, { key: "_getFlagBit", value: function(e4) {
        for (var t3 = e4.toString(2), n3 = t3.length, o3 = n3 - 1; o3 >= 0; o3--)
          if ("1" === t3[o3])
            return n3 - o3 - 1;
      } }, { key: "_concatConversationID", value: function(e4) {
        var t3, n3 = e4.type, o3 = e4.to, r3 = e4.groupID, a3 = e4.userID;
        return 1 === n3 ? td(a3) ? td(o3) || (t3 = "".concat(gr.CONV_C2C).concat(o3)) : t3 = "".concat(gr.CONV_C2C).concat(a3) : 2 === n3 && (t3 = "".concat(gr.CONV_GROUP).concat(r3)), t3;
      } }, { key: "_getMyUserID", value: function() {
        return this._conversationModule.getMyUserID();
      } }, { key: "_insertConversationGroup", value: function(e4, t3) {
        var n3 = this._getLocalConversation(e4);
        if (n3) {
          var o3 = n3.conversationGroupList;
          -1 === o3.indexOf(t3) && o3.push(t3);
        }
      } }, { key: "_getLocalConversation", value: function(e4) {
        return this._conversationModule.getLocalConversation(e4);
      } }, { key: "_hasLocalConversation", value: function(e4) {
        return this._conversationModule.hasLocalConversation(e4);
      } }, { key: "_emitConversationUpdate", value: function() {
        this._conversationModule.emitConversationUpdate(true, false);
      } }, { key: "_emitConvGroupListUpdate", value: function() {
        this._conversationModule.emitOuterEvent(pr.CONVERSATION_GROUP_LIST_UPDATED, v2(this._convGroupMap.values()));
      } }, { key: "_emitConvInGroupUpdate", value: function(e4) {
        var t3 = { groupName: e4, conversationList: [] }, n3 = this._conversationModule.getLocalConversationList();
        t3.conversationList = n3.filter(function(t4) {
          return t4.conversationGroupList.includes(e4);
        }), this._conversationModule.emitOuterEvent(pr.CONVERSATION_IN_GROUP_UPDATED, t3);
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._convGroupMap.clear(), this._startIndex = 0, this._pagingStatus = Bp.NOT_START;
      } }]), e3;
    }(), Py = function(e3) {
      i2(r3, e3);
      var n3 = _2(r3);
      function r3(e4) {
        var t3;
        return o2(this, r3), (t3 = n3.call(this, e4))._className = "ConversationModule", gy.mixin(h2(t3)), t3._messageListHandler = new cy(), t3._messageRemindHandler = new Ay(h2(t3)), t3._convGroupHandler = new Gy(h2(t3)), t3.singlyLinkedList = new Cy(100), t3._pagingStatus = Bp.NOT_START, t3._pagingTimeStamp = 0, t3._pagingStartIndex = 0, t3._pagingPinnedTimeStamp = 0, t3._pagingPinnedStartIndex = 0, t3._conversationMap = /* @__PURE__ */ new Map(), t3._tmpGroupList = [], t3._tmpGroupAtTipsList = [], t3._peerReadTimeMap = /* @__PURE__ */ new Map(), t3._completedMap = /* @__PURE__ */ new Map(), t3._roamingMessageKeyAndTimeMap = /* @__PURE__ */ new Map(), t3._roamingMessageSequenceMap = /* @__PURE__ */ new Map(), t3._remoteGroupReadSequenceMap = /* @__PURE__ */ new Map(), t3._convTotalUnreadCount = 0, t3._initListeners(), t3;
      }
      return a2(r3, [{ key: "_initListeners", value: function() {
        var e4 = this.getInnerEmitterInstance();
        e4.on(ly, this._initLocalConversationList, this), e4.on(py, this._onProfileUpdated, this);
      } }, { key: "onCheckTimer", value: function(e4) {
        e4 % 60 == 0 && this._messageListHandler.traversal();
      } }, { key: "_initLocalConversationList", value: function() {
        var e4 = this, t3 = new G_(P_.GET_CONVERSATION_LIST_IN_STORAGE);
        wl.log("".concat(this._className, "._initLocalConversationList."));
        var n4 = "", o3 = this._getStorageConversationList(), r4 = this.isIntl();
        if (o3) {
          for (var a3 = o3.length, s3 = 0; s3 < a3; s3++) {
            var i3 = o3[s3];
            if (i3) {
              if (i3.conversationID === "".concat(gr.CONV_C2C, "@TLS#ERROR") || i3.conversationID === "".concat(gr.CONV_C2C, "@TLS#NOT_FOUND"))
                continue;
              if (i3.groupProfile) {
                var u3 = i3.groupProfile.type;
                if (Id(u3))
                  continue;
              }
            }
            this._conversationMap.set(o3[s3].conversationID, new Ny(o3[s3], r4));
          }
          this.emitConversationUpdate(true, false), n4 = "count:".concat(a3);
        } else
          n4 = "count:0";
        t3.setNetworkType(this.getNetworkType()).setMessage(n4).end(), this.getModule(qg) || this.triggerReady(), this.ready(function() {
          e4._tmpGroupList.length > 0 && (e4.updateConversationGroupProfile(e4._tmpGroupList), e4._tmpGroupList.length = 0);
        }), this.syncConversationList();
      } }, { key: "onMessageSent", value: function(e4) {
        this._onSendOrReceiveMessage({ conversationOptionsList: e4.conversationOptionsList, isInstantMessage: true });
      } }, { key: "onNewMessage", value: function(e4) {
        this._onSendOrReceiveMessage(e4);
      } }, { key: "_onSendOrReceiveMessage", value: function(e4) {
        var t3 = this, n4 = e4.conversationOptionsList, o3 = e4.isInstantMessage, r4 = void 0 === o3 || o3, a3 = e4.isUnreadC2CMessage, s3 = void 0 !== a3 && a3, i3 = e4.updateUnreadCount, u3 = void 0 === i3 || i3;
        this._isReady ? 0 !== n4.length && (this._getC2CPeerReadTime(n4), this._updateLocalConversationList({ conversationOptionsList: n4, isInstantMessage: r4, isUnreadC2CMessage: s3, isFromGetConversations: false, updateUnreadCount: u3 }), this._setStorageConversationList(), n4.filter(function(e5) {
          return e5.type === gr.CONV_TOPIC;
        }).length > 0 || this.emitConversationUpdate()) : this.ready(function() {
          t3._onSendOrReceiveMessage(e4);
        });
      } }, { key: "updateConversationGroupProfile", value: function(e4) {
        var t3 = this;
        if (!ed(e4) || 0 !== e4.length)
          if (0 !== this._conversationMap.size) {
            var n4 = false;
            e4.forEach(function(e5) {
              var o3 = "GROUP".concat(e5.groupID);
              if (t3._conversationMap.has(o3)) {
                n4 = true;
                var r4 = t3._conversationMap.get(o3);
                r4.groupProfile = JSON.parse(JSON.stringify(e5)), r4.lastMessage.lastSequence < e5.nextMessageSeq && (r4.lastMessage.lastSequence = e5.nextMessageSeq - 1), r4.subType || (r4.subType = e5.type);
              }
            }), n4 && this.emitConversationUpdate(true, false);
          } else
            this._tmpGroupList = e4;
      } }, { key: "_updateConversationUserProfile", value: function(e4) {
        var t3 = this;
        e4.data.forEach(function(e5) {
          var n4 = "C2C".concat(e5.userID);
          t3._conversationMap.has(n4) && (t3._conversationMap.get(n4).userProfile = e5);
        }), this.emitConversationUpdate(true, false);
      } }, { key: "onMessageRevoked", value: function(e4) {
        var t3 = this;
        if (0 !== e4.length) {
          var n4 = null, o3 = false, r4 = [];
          e4.forEach(function(e5) {
            (n4 = t3._conversationMap.get(e5.conversationID)) && (n4.type === gr.CONV_TOPIC ? r4.push(e5) : (n4.reduceUnreadCount() && (o3 = true), n4.isLastMessageRevoked({ sequence: e5.sequence, time: e5.time }) && (n4.setLastMessageRevoked(true), n4.setLastMessageRevoker(e5.revoker), o3 = true)));
          }), this.getModule(Kg).onMessageRevoked(r4), o3 && (this.emitConversationUpdate(true, false), this.emitTotalUnreadMessageCountUpdate());
        }
      } }, { key: "isLastMessageRevoked", value: function(e4) {
        var t3 = false, n4 = e4.conversationID, o3 = e4.sequence, r4 = e4.time, a3 = this._conversationMap.get(n4);
        a3 && (t3 = a3.type === gr.CONV_TOPIC ? this.getModule(Kg).isLastMessageRevoked({ topicID: n4.replace(gr.CONV_GROUP, ""), sequence: o3 }) : a3.isLastMessageRevoked({ sequence: o3, time: r4 }));
        return wl.log("".concat(this._className, ".isLastMessageRevoked options:").concat(JSON.stringify(e4), " ret:").concat(t3)), t3;
      } }, { key: "onMessageDeleted", value: function(e4) {
        var t3 = this;
        if (0 !== e4.length) {
          var n4 = null;
          e4.forEach(function(e5) {
            (n4 = t3._messageListHandler.getLocalMessage(e5.conversationID, e5.ID)) && (n4.isDeleted = true), e5 !== n4 && (e5.isDeleted = true);
          });
          for (var o3 = e4[0].conversationID, r4 = this._messageListHandler.getLocalMessageList(o3), a3 = {}, s3 = r4.length - 1; s3 >= 0; s3--)
            if (!r4[s3].isDeleted) {
              a3 = r4[s3];
              break;
            }
          var i3 = this._conversationMap.get(o3);
          if (i3) {
            var u3 = false;
            i3.lastMessage.lastSequence === a3.sequence && i3.lastMessage.lastTime === a3.time || (Wd(a3) && (a3 = void 0), i3.updateLastMessage(a3), i3.type !== gr.CONV_TOPIC && (u3 = true), wl.log("".concat(this._className, ".onMessageDeleted. update conversationID:").concat(o3, " with lastMessage:"), i3.lastMessage)), o3.startsWith(gr.CONV_C2C) && this.updateUnreadCount(o3), u3 && this.emitConversationUpdate(true, false);
          }
        }
      } }, { key: "onMessageModified", value: function(e4) {
        var t3 = e4.conversationType, n4 = e4.from, o3 = e4.to, r4 = e4.time, a3 = e4.sequence, s3 = e4.elements, i3 = e4.cloudCustomData, u3 = e4.messageVersion, c3 = this.getMyUserID(), l3 = "".concat(t3).concat(o3);
        o3 === c3 && t3 === gr.CONV_C2C && (l3 = "".concat(t3).concat(n4));
        var d3 = this._messageListHandler.onMessageModified(l3, e4), p3 = d3.isUpdated, g3 = d3.message;
        true === p3 && this.emitOuterEvent(pr.MESSAGE_MODIFIED, [g3]);
        var h3 = this._isTopicConversation(l3);
        if (wl.log("".concat(this._className, ".onMessageModified isUpdated:").concat(p3, " isTopicMessage:").concat(h3, " from:").concat(n4, " to:").concat(o3)), h3) {
          this.getModule(Kg).onMessageModified(e4);
        } else {
          var f3 = this._conversationMap.get(l3);
          if (f3) {
            var _3 = f3.lastMessage;
            wl.debug("".concat(this._className.onMessageModified, " lastMessage:"), JSON.stringify(_3), "options:", JSON.stringify(e4)), _3 && _3.lastTime === r4 && _3.lastSequence === a3 && _3.version !== u3 && (_3.type = s3[0].type, _3.payload = s3[0].content, _3.messageForShow = qd(_3.type, _3.payload, this.isIntl()), _3.cloudCustomData = i3, _3.version = u3, this.emitConversationUpdate(true, false));
          }
        }
        return g3;
      } }, { key: "onNewGroupAtTips", value: function(e4) {
        var n4 = this, o3 = e4.dataList, r4 = null;
        o3.forEach(function(e5) {
          e5.groupAtTips ? r4 = e5.groupAtTips : e5.elements ? r4 = t2(t2({}, e5.elements), {}, { sync: true }) : e5.groupAtType && (r4 = t2(t2({}, e5), {}, { sync: true })), r4.__random = e5.random, r4.__sequence = e5.clientSequence, n4._tmpGroupAtTipsList.push(r4);
        }), wl.debug("".concat(this._className, ".onNewGroupAtTips isReady:").concat(this._isReady), this._tmpGroupAtTipsList), this._isReady && this._handleGroupAtTipsList();
      } }, { key: "_handleGroupAtTipsList", value: function() {
        var e4 = this;
        if (0 !== this._tmpGroupAtTipsList.length) {
          var t3 = false;
          this._tmpGroupAtTipsList.forEach(function(n4) {
            var o3 = n4.groupID, r4 = n4.from, a3 = n4.topicID, s3 = void 0 === a3 ? void 0 : a3, i3 = n4.sync, u3 = void 0 !== i3 && i3;
            if (r4 !== e4.getMyUserID())
              if (td(s3)) {
                var c3 = e4._conversationMap.get("".concat(gr.CONV_GROUP).concat(o3));
                c3 && (c3.updateGroupAtInfoList(n4), t3 = true);
              } else {
                var l3 = e4._conversationMap.get("".concat(gr.CONV_GROUP).concat(s3));
                if (l3) {
                  l3.updateGroupAtInfoList(n4);
                  var d3 = e4.getModule(Kg), p3 = l3.groupAtInfoList;
                  d3.onConversationProxy({ topicID: s3, groupAtInfoList: p3 });
                }
                if (Wd(l3) && u3)
                  e4.updateTopicConversation([{ conversationID: "".concat(gr.CONV_GROUP).concat(s3), type: gr.CONV_TOPIC }]), e4._conversationMap.get("".concat(gr.CONV_GROUP).concat(s3)).updateGroupAtInfoList(n4);
              }
          }), t3 && this.emitConversationUpdate(true, false), this._tmpGroupAtTipsList.length = 0;
        }
      } }, { key: "_getC2CPeerReadTime", value: function(e4) {
        var t3 = this, n4 = [];
        if (e4.forEach(function(e5) {
          t3._conversationMap.has(e5.conversationID) || e5.type !== gr.CONV_C2C || n4.push(e5.conversationID.replace(gr.CONV_C2C, ""));
        }), n4.length > 0) {
          wl.debug("".concat(this._className, "._getC2CPeerReadTime userIDList:").concat(n4));
          var o3 = this.getModule(qg);
          o3 && o3.getRemotePeerReadTime(n4);
        }
      } }, { key: "_getStorageConversationList", value: function() {
        return this.getModule(Wg).getItem("conversationMap");
      } }, { key: "_setStorageConversationList", value: function() {
        var e4 = this.getLocalConversationList().filter(function(e5) {
          return e5.type === gr.CONV_C2C || e5.type === gr.CONV_GROUP && e5.lastMessage.type !== gr.MSG_GRP_TIP;
        }).slice(0, 20).map(function(e5) {
          return { conversationID: e5.conversationID, type: e5.type, subType: e5.subType, lastMessage: e5.lastMessage, groupProfile: e5.groupProfile, userProfile: e5.userProfile };
        });
        this.getModule(Wg).setItem("conversationMap", e4);
      } }, { key: "emitConversationUpdate", value: function() {
        var e4 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n4 = this.getLocalConversationList();
        if (t3) {
          var o3 = this.getModule(xg);
          o3 && o3.updateGroupLastMessage(n4);
        }
        e4 && this.emitOuterEvent(pr.CONVERSATION_LIST_UPDATED);
      } }, { key: "getLocalConversationList", value: function() {
        return v2(this._conversationMap.values()).filter(function(e4) {
          return e4.type !== gr.CONV_TOPIC;
        });
      } }, { key: "getLocalConversation", value: function(e4) {
        return this._conversationMap.get(e4);
      } }, { key: "hasLocalConversation", value: function(e4) {
        return this._conversationMap.has(e4);
      } }, { key: "getLocalOldestMessage", value: function(e4) {
        return this._messageListHandler.getLocalOldestMessage(e4);
      } }, { key: "syncConversationList", value: function() {
        var e4 = this, t3 = new G_(P_.SYNC_CONVERSATION_LIST);
        return this._pagingStatus === Bp.NOT_START && this._conversationMap.clear(), this._pagingGetConversationList().then(function(n4) {
          return e4._pagingStatus = Bp.RESOLVED, e4._setStorageConversationList(), e4._handleC2CPeerReadTime(), e4._patchConversationProperties(), t3.setMessage(e4._conversationMap.size).setNetworkType(e4.getNetworkType()).end(), n4;
        }).catch(function(n4) {
          return e4._pagingStatus = Bp.REJECTED, t3.setMessage(e4._pagingTimeStamp), e4.probeNetwork().then(function(e5) {
            var o3 = m2(e5, 2), r4 = o3[0], a3 = o3[1];
            t3.setError(n4, r4, a3).end();
          }), YM(n4);
        });
      } }, { key: "_patchConversationProperties", value: function() {
        var e4 = this, t3 = Date.now(), n4 = this.checkAndPatchRemark(), o3 = this._messageRemindHandler.getC2CMessageRemindType(), r4 = this.getModule(xg).getGroupList();
        Promise.all([n4, o3, r4]).then(function() {
          var n5 = Date.now() - t3;
          wl.log("".concat(e4._className, "._patchConversationProperties ok. cost ").concat(n5, " ms")), e4.emitConversationUpdate(true, false), e4.emitTotalUnreadMessageCountUpdate();
        });
      } }, { key: "_pagingGetConversationList", value: function() {
        var e4 = this, t3 = "".concat(this._className, "._pagingGetConversationList");
        return wl.log("".concat(t3, " timeStamp:").concat(this._pagingTimeStamp, " startIndex:").concat(this._pagingStartIndex) + " pinnedTimeStamp:".concat(this._pagingPinnedTimeStamp, " pinnedStartIndex:").concat(this._pagingPinnedStartIndex)), this._pagingStatus = Bp.PENDING, this.request({ protocolName: Fh, requestData: { fromAccount: this.getMyUserID(), timeStamp: this._pagingTimeStamp, startIndex: this._pagingStartIndex, pinnedTimeStamp: this._pagingPinnedTimeStamp, pinnedStartIndex: this._pagingPinnedStartIndex, orderType: 1 } }).then(function(n4) {
          var o3 = n4.data, r4 = o3.completeFlag, a3 = o3.conversations, s3 = void 0 === a3 ? [] : a3, i3 = o3.timeStamp, u3 = o3.startIndex, c3 = o3.pinnedTimeStamp, l3 = o3.pinnedStartIndex, d3 = o3.groupItem;
          if (wl.log("".concat(t3, " ok. completeFlag:").concat(r4, " count:").concat(s3.length, " isReady:").concat(e4._isReady)), e4._convGroupHandler.onConvGroupListSynced(d3), s3.length > 0) {
            var p3 = e4._getConversationOptions(s3);
            e4._updateLocalConversationList({ conversationOptionsList: p3, isFromGetConversations: true }), e4.isLoggedIn() && e4.emitConversationUpdate();
          }
          if (!e4._isReady) {
            if (!e4.isLoggedIn())
              return WM();
            e4.triggerReady();
          }
          return e4._pagingTimeStamp = i3, e4._pagingStartIndex = u3, e4._pagingPinnedTimeStamp = c3, e4._pagingPinnedStartIndex = l3, 1 !== r4 ? e4._pagingGetConversationList() : (e4._handleGroupAtTipsList(), e4._convGroupHandler.getRemoteConvGroupList(), WM());
        }).catch(function(n4) {
          throw e4.isLoggedIn() && (e4._isReady || (wl.warn("".concat(t3, " failed. error:"), n4), e4.triggerReady())), n4;
        });
      } }, { key: "_updateLocalConversationList", value: function(e4) {
        var t3, n4 = e4.isFromGetConversations, o3 = e4.isInstantMessage, r4 = Date.now();
        t3 = this._getTmpConversationListMapping(e4), this._conversationMap = new Map(this._sortConversationList([].concat(v2(t3.toBeUpdatedConversationList), v2(this._conversationMap)))), n4 || (this._updateUserOrGroupProfile(t3.newConversationList), o3 && this.emitTotalUnreadMessageCountUpdate()), wl.debug("".concat(this._className, "._updateLocalConversationList cost ").concat(Date.now() - r4, " ms"));
      } }, { key: "_getTmpConversationListMapping", value: function(e4) {
        for (var t3 = e4.conversationOptionsList, n4 = e4.isFromGetConversations, o3 = e4.isInstantMessage, r4 = e4.isUnreadC2CMessage, a3 = void 0 !== r4 && r4, s3 = e4.updateUnreadCount, i3 = [], u3 = [], c3 = this.getModule(xg), l3 = this.getModule(Vg), d3 = this.isIntl(), p3 = 0, g3 = t3.length; p3 < g3; p3++) {
          var h3 = new Ny(t3[p3], d3), f3 = h3.conversationID;
          if (f3 !== "".concat(gr.CONV_C2C, "@TLS#ERROR") && f3 !== "".concat(gr.CONV_C2C, "@TLS#NOT_FOUND"))
            if (this._conversationMap.has(f3)) {
              var _3 = this._conversationMap.get(f3), m3 = ["unreadCount", "allowType", "adminForbidType", "payload", "isPinned"];
              false === o3 && m3.push("lastMessage");
              var v3 = t3[p3].lastMessage, M3 = !td(v3);
              M3 || t3[p3].type === gr.CONV_TOPIC || this._onLastMessageNotExist(t3[p3]), td(o3) && M3 && null === _3.lastMessage.payload && (_3.lastMessage.payload = v3.payload), Wd(_3.lastMessage.revoker) || (_3.lastMessage.revoker = null), cd(_3, h3, m3, [null, void 0, "", 0, NaN]), true === s3 && _3.updateUnreadCount({ nextUnreadCount: h3.unreadCount, isFromGetConversations: n4, isUnreadC2CMessage: a3 }), o3 && M3 && (v3.payload && (_3.lastMessage.payload = v3.payload), _3.type === gr.CONV_GROUP && (_3.lastMessage.nameCard = v3.nameCard, _3.lastMessage.nick = v3.nick)), M3 && _3.lastMessage.cloudCustomData !== v3.cloudCustomData && (_3.lastMessage.cloudCustomData = v3.cloudCustomData || ""), this._conversationMap.delete(f3), i3.push([f3, _3]);
            } else {
              if (h3.type === gr.CONV_GROUP && c3) {
                var y3 = h3.groupProfile.groupID, I3 = c3.getLocalGroupProfile(y3);
                I3 && (h3.groupProfile = I3, true === s3 && h3.updateUnreadCount({ nextUnreadCount: 0 }));
              } else if (h3.type === gr.CONV_C2C) {
                var T3 = f3.replace(gr.CONV_C2C, "");
                l3 && l3.isMyFriend(T3) && (h3.remark = l3.getFriendRemark(T3));
              }
              u3.push(h3), i3.push([f3, h3]);
            }
        }
        var C3 = this.getModule(Kg);
        return i3.forEach(function(e5) {
          if (e5[1].type === gr.CONV_TOPIC) {
            var t4 = e5[1], n5 = t4.conversationID, o4 = t4.unreadCount, r5 = t4.groupAtInfoList;
            C3.onConversationProxy({ topicID: n5.replace(gr.CONV_GROUP, ""), unreadCount: o4, groupAtInfoList: Wd(r5) ? void 0 : r5 });
          }
        }), { toBeUpdatedConversationList: i3, newConversationList: u3 };
      } }, { key: "_onLastMessageNotExist", value: function(e4) {
        new G_(P_.LAST_MESSAGE_NOT_EXIST).setMessage("".concat(JSON.stringify(e4))).setNetworkType(this.getNetworkType()).end();
      } }, { key: "_sortConversationList", value: function(e4) {
        var t3 = [], n4 = [];
        return e4.forEach(function(e5) {
          true === e5[1].isPinned ? t3.push(e5) : n4.push(e5);
        }), t3.sort(function(e5, t4) {
          return t4[1].lastMessage.lastTime - e5[1].lastMessage.lastTime;
        }).concat(n4.sort(function(e5, t4) {
          return t4[1].lastMessage.lastTime - e5[1].lastMessage.lastTime;
        }));
      } }, { key: "_sortConversationListAndEmitEvent", value: function() {
        this._conversationMap = new Map(this._sortConversationList(v2(this._conversationMap))), this.emitConversationUpdate(true, false);
      } }, { key: "_updateUserOrGroupProfile", value: function(e4) {
        var t3 = this;
        if (0 !== e4.length) {
          var n4 = [], o3 = [], r4 = this.getModule(Fg), a3 = this.getModule(xg);
          e4.forEach(function(e5) {
            if (e5.type === gr.CONV_C2C)
              n4.push(e5.toAccount);
            else if (e5.type === gr.CONV_GROUP) {
              var t4 = e5.toAccount;
              a3.hasLocalGroup(t4) ? e5.groupProfile = a3.getLocalGroupProfile(t4) : o3.push(t4);
            }
          }), wl.log("".concat(this._className, "._updateUserOrGroupProfile c2cUserIDList:").concat(n4, " groupIDList:").concat(o3)), n4.length > 0 && r4.getUserProfile({ userIDList: n4 }).then(function(e5) {
            var n5 = e5.data;
            ed(n5) ? n5.forEach(function(e6) {
              t3._conversationMap.get("C2C".concat(e6.userID)).userProfile = e6;
            }) : t3._conversationMap.get("C2C".concat(n5.userID)).userProfile = n5;
          }), o3.length > 0 && a3.getGroupProfileAdvance({ groupIDList: o3, responseFilter: { groupBaseInfoFilter: ["Type", "Name", "FaceUrl"] } }).then(function(e5) {
            e5.data.successGroupList.forEach(function(e6) {
              var n5 = "GROUP".concat(e6.groupID);
              if (t3._conversationMap.has(n5)) {
                var o4 = t3._conversationMap.get(n5);
                cd(o4.groupProfile, e6, [], [null, void 0, "", 0, NaN]), !o4.subType && e6.type && (o4.subType = e6.type);
              }
            });
          });
        }
      } }, { key: "_getConversationOptions", value: function(e4) {
        var n4 = this, o3 = [], r4 = e4.filter(function(e5) {
          var t3 = e5.type, n5 = e5.userID;
          return 1 === t3 && "@TLS#NOT_FOUND" !== n5 && "@TLS#ERROR" !== n5 || 2 === t3;
        }), a3 = this.getMyUserID(), s3 = r4.map(function(e5) {
          if (td(e5.lastMsg) && (e5.lastMsg = { elements: [] }), 1 === e5.type) {
            var r5 = { userID: e5.userID, nick: e5.peerNick, avatar: e5.peerAvatar };
            return o3.push(r5), { conversationID: "C2C".concat(e5.userID), type: "C2C", lastMessage: { lastTime: e5.time, lastSequence: e5.sequence, fromAccount: e5.lastC2CMsgFromAccount, messageForShow: e5.messageShow, type: e5.lastMsg.elements[0] ? e5.lastMsg.elements[0].type : null, payload: e5.lastMsg.elements[0] ? n4._amendLayersOverLimitProperty(e5.lastMsg.elements[0].content) : null, cloudCustomData: e5.lastMsg.cloudCustomData || "", isRevoked: 8 === e5.lastMessageFlag, onlineOnlyFlag: false, nick: "", nameCard: "", version: 0, isPeerRead: e5.lastC2CMsgFromAccount === a3 && e5.time <= e5.c2cPeerReadTime, revoker: e5.lastMsg.revokerInfo ? e5.lastMsg.revokerInfo.revoker : null }, userProfile: new Iy(r5), peerReadTime: e5.c2cPeerReadTime, isPinned: 1 === e5.isPinned, messageRemindType: "", customData: e5.customMark || "", markList: Vd(e5.standardMark), conversationGroupList: n4._convGroupHandler.getConvGroupListByID(e5.contactGroupId) };
          }
          return { conversationID: "GROUP".concat(e5.groupID), type: "GROUP", lastMessage: t2(t2({ lastTime: e5.time, lastSequence: e5.messageReadSeq + e5.unreadCount, fromAccount: e5.msgGroupFromAccount, messageForShow: e5.messageShow }, n4._patchTypeAndPayload(e5)), {}, { cloudCustomData: e5.lastMsg.cloudCustomData || "", isRevoked: 2 === e5.lastMessageFlag, onlineOnlyFlag: false, nick: e5.senderNick || "", nameCard: e5.senderNameCard || "", revoker: e5.lastMsg.revokerInfo ? e5.lastMsg.revokerInfo.revoker : null }), groupProfile: new Sy({ groupID: e5.groupID, name: e5.groupNick, avatar: e5.groupImage }), unreadCount: e5.unreadCount, peerReadTime: 0, isPinned: 1 === e5.isPinned, messageRemindType: "", version: 0, customData: e5.customMark || "", markList: Vd(e5.standardMark), conversationGroupList: n4._convGroupHandler.getConvGroupListByID(e5.contactGroupId) };
        });
        o3.length > 0 && this.getModule(Fg).onConversationsProfileUpdated(o3);
        return s3;
      } }, { key: "_patchTypeAndPayload", value: function(e4) {
        var n4 = e4.lastMsg, o3 = n4.event, r4 = void 0 === o3 ? void 0 : o3, a3 = n4.elements, s3 = void 0 === a3 ? [] : a3, i3 = n4.groupTips, u3 = void 0 === i3 ? {} : i3;
        if (!td(r4) && !Wd(u3)) {
          var c3 = new bM(u3);
          c3.setElement({ type: gr.MSG_GRP_TIP, content: t2(t2({}, u3.elements), {}, { groupProfile: u3.groupProfile }) });
          var l3 = JSON.parse(JSON.stringify(c3.payload));
          return c3 = null, { type: gr.MSG_GRP_TIP, payload: l3 };
        }
        return { type: s3[0] ? s3[0].type : null, payload: s3[0] ? this._amendLayersOverLimitProperty(s3[0].content) : null };
      } }, { key: "_amendLayersOverLimitProperty", value: function(e4) {
        var t3 = e4.layersOverLimit;
        return 0 === t3 ? e4.layersOverLimit = false : 1 === t3 && (e4.layersOverLimit = true), e4;
      } }, { key: "getLocalMessageList", value: function(e4) {
        return this._messageListHandler.getLocalMessageList(e4);
      } }, { key: "deleteLocalMessage", value: function(e4) {
        e4 instanceof bM && this._messageListHandler.remove(e4);
      } }, { key: "onConversationDeleted", value: function(e4) {
        var t3 = this;
        wl.log("".concat(this._className, ".onConversationDeleted")), ed(e4) && e4.forEach(function(e5) {
          var n4 = e5.type, o3 = e5.userID, r4 = e5.groupID, a3 = "";
          1 === n4 ? a3 = "".concat(gr.CONV_C2C).concat(o3) : 2 === n4 && (a3 = "".concat(gr.CONV_GROUP).concat(r4)), t3.deleteLocalConversation(a3);
        });
      } }, { key: "onConversationPinned", value: function(e4) {
        var t3 = this;
        if (ed(e4)) {
          var n4 = false;
          e4.forEach(function(e5) {
            var o3, r4 = e5.type, a3 = e5.userID, s3 = e5.groupID;
            1 === r4 ? o3 = t3.getLocalConversation("".concat(gr.CONV_C2C).concat(a3)) : 2 === r4 && (o3 = t3.getLocalConversation("".concat(gr.CONV_GROUP).concat(s3))), o3 && (wl.log("".concat(t3._className, ".onConversationPinned conversationID:").concat(o3.conversationID, " isPinned:").concat(o3.isPinned)), o3.isPinned || (o3.isPinned = true, n4 = true));
          }), n4 && this._sortConversationListAndEmitEvent();
        }
      } }, { key: "onConversationUnpinned", value: function(e4) {
        var t3 = this;
        if (ed(e4)) {
          var n4 = false;
          e4.forEach(function(e5) {
            var o3, r4 = e5.type, a3 = e5.userID, s3 = e5.groupID;
            1 === r4 ? o3 = t3.getLocalConversation("".concat(gr.CONV_C2C).concat(a3)) : 2 === r4 && (o3 = t3.getLocalConversation("".concat(gr.CONV_GROUP).concat(s3))), o3 && (wl.log("".concat(t3._className, ".onConversationUnpinned conversationID:").concat(o3.conversationID, " isPinned:").concat(o3.isPinned)), o3.isPinned && (o3.isPinned = false, n4 = true));
          }), n4 && this._sortConversationListAndEmitEvent();
        }
      } }, { key: "getMessageList", value: function(e4) {
        var t3 = this, n4 = e4.conversationID, o3 = e4.nextReqMessageID, r4 = e4.count, a3 = "".concat(this._className, ".getMessageList"), s3 = this.getLocalConversation(n4), i3 = "";
        if (s3 && s3.groupProfile && (i3 = s3.groupProfile.type), Id(i3))
          return wl.log("".concat(a3, " not available in avchatroom. conversationID:").concat(n4)), WM({ messageList: [], nextReqMessageID: "", isCompleted: true });
        (td(r4) || r4 > 15) && (r4 = 15), !o3 && this._isNotInCommunity(n4) && (this._messageListHandler.removeByConversationID(n4), this._completedMap.delete(n4), this._roamingMessageSequenceMap.delete(n4));
        var u3 = this._computeRemainingCount({ conversationID: n4, nextReqMessageID: o3 }), c3 = this._completedMap.has(n4);
        if (wl.log("".concat(a3, " conversationID:").concat(n4, " nextReqMessageID:").concat(o3) + " remainingCount:".concat(u3, " count:").concat(r4, " isCompleted:").concat(c3)), this._needGetHistory({ conversationID: n4, remainingCount: u3, count: r4 }))
          return this.getHistoryMessages({ conversationID: n4, nextReqMessageID: o3, count: 20 }).then(function(e5) {
            var o4 = e5.nextReqID, r5 = e5.storedMessageList, s4 = t3._completedMap.has(n4), i4 = r5;
            u3 > 0 && (i4 = t3._messageListHandler.getLocalMessageList(n4).slice(0, r5.length + u3));
            var c4 = { nextReqMessageID: s4 ? "" : o4, messageList: i4, isCompleted: s4 };
            return wl.log("".concat(a3, " ret.nextReqMessageID:").concat(c4.nextReqMessageID, " ret.isCompleted:").concat(c4.isCompleted, " ret.length:").concat(i4.length)), wM(c4);
          });
        this.modifyMessageList(n4);
        var l3 = this._getMessageListFromMemory({ conversationID: n4, nextReqMessageID: o3, count: r4 });
        return WM(l3);
      } }, { key: "_getMessageListFromMemory", value: function(e4) {
        var t3 = e4.conversationID, n4 = e4.nextReqMessageID, o3 = e4.count, r4 = "".concat(this._className, "._getMessageListFromMemory"), a3 = this._messageListHandler.getLocalMessageList(t3), s3 = a3.length, i3 = 0, u3 = { isCompleted: false, nextReqMessageID: "", messageList: [] };
        return n4 ? (i3 = a3.findIndex(function(e5) {
          return e5.ID === n4;
        })) > o3 ? (u3.messageList = a3.slice(i3 - o3, i3), u3.nextReqMessageID = a3[i3 - o3].ID) : (u3.messageList = a3.slice(0, i3), u3.isCompleted = true) : s3 > o3 ? (i3 = s3 - o3, u3.messageList = a3.slice(i3, s3), u3.nextReqMessageID = a3[i3].ID) : (u3.messageList = a3.slice(0, s3), u3.isCompleted = true), wl.log("".concat(r4, " conversationID:").concat(t3) + " ret.nextReqMessageID:".concat(u3.nextReqMessageID, " ret.isCompleted:").concat(u3.isCompleted, " ret.length:").concat(u3.messageList.length)), u3;
      } }, { key: "getMessageListHopping", value: function(e4) {
        var t3 = e4.conversationID, n4 = e4.sequence, o3 = e4.time, r4 = e4.count, a3 = e4.direction, s3 = void 0 === a3 ? 0 : a3;
        if ((td(r4) || r4 > 15) && (r4 = 15), t3.startsWith(gr.CONV_C2C)) {
          var i3 = this.getModule(qg), u3 = t3.replace(gr.CONV_C2C, "");
          return i3.getRoamingMessagesHopping({ peerAccount: u3, time: o3, count: r4, direction: s3 });
        }
        if (t3.startsWith(gr.CONV_GROUP)) {
          var c3 = this.getModule(xg), l3 = t3.replace(gr.CONV_GROUP, "");
          return c3.getRoamingMessagesHopping({ groupID: l3, sequence: n4, count: r4, direction: s3 });
        }
      } }, { key: "_computeRemainingCount", value: function(e4) {
        var t3 = e4.conversationID, n4 = e4.nextReqMessageID, o3 = this._messageListHandler.getLocalMessageList(t3), r4 = o3.length;
        if (!n4)
          return r4;
        var a3 = 0;
        return Ed(t3) ? a3 = o3.findIndex(function(e5) {
          return e5.ID === n4;
        }) : Sd(t3) && (a3 = -1 !== n4.indexOf("-") ? o3.findIndex(function(e5) {
          return e5.ID === n4;
        }) : o3.findIndex(function(e5) {
          return e5.sequence === n4;
        })), -1 === a3 && (a3 = 0), a3;
      } }, { key: "_getMessageListSize", value: function(e4) {
        return this._messageListHandler.getLocalMessageList(e4).length;
      } }, { key: "_needGetHistory", value: function(e4) {
        var t3 = e4.conversationID, n4 = e4.remainingCount, o3 = e4.count, r4 = this.getLocalConversation(t3), a3 = "";
        return r4 && r4.groupProfile && (a3 = r4.groupProfile.type), !Dd(t3) && !Id(a3) && (!(Sd(t3) && this._isPagingGetGroupListCompleted() && this._getLocalGroupCount() <= 4e3 && !this._hasLocalGroup(t3) && !this._isTopicConversation(t3)) && (n4 <= o3 && !this._completedMap.has(t3)));
      } }, { key: "_isTopicConversation", value: function(e4) {
        var t3 = e4.replace(gr.CONV_GROUP, "");
        return Cd(t3);
      } }, { key: "getHistoryMessages", value: function(e4) {
        var t3 = e4.conversationID, n4 = e4.count;
        if (t3 === gr.CONV_SYSTEM)
          return WM();
        var o3 = 15;
        n4 > 20 && (o3 = 20);
        var r4 = null;
        if (Ed(t3)) {
          var a3 = this._roamingMessageKeyAndTimeMap.has(t3);
          return (r4 = this.getModule(qg)) ? r4.getRoamingMessage({ conversationID: t3, peerAccount: t3.replace(gr.CONV_C2C, ""), count: o3, lastMessageTime: a3 ? this._roamingMessageKeyAndTimeMap.get(t3).lastMessageTime : 0, messageKey: a3 ? this._roamingMessageKeyAndTimeMap.get(t3).messageKey : "" }) : YM({ code: dh.CANNOT_FIND_MODULE });
        }
        if (Sd(t3)) {
          if (!(r4 = this.getModule(xg)))
            return YM({ code: dh.CANNOT_FIND_MODULE });
          var s3 = null;
          this._conversationMap.has(t3) && (s3 = this._conversationMap.get(t3).lastMessage);
          var i3 = 0;
          s3 && (i3 = s3.lastSequence);
          var u3 = this._roamingMessageSequenceMap.get(t3);
          return r4.getRoamingMessage({ conversationID: t3, groupID: t3.replace(gr.CONV_GROUP, ""), count: o3, sequence: u3 || i3 });
        }
        return WM();
      } }, { key: "patchConversationLastMessage", value: function(e4) {
        var t3 = this.getLocalConversation(e4);
        if (t3) {
          var n4 = t3.lastMessage, o3 = n4.messageForShow, r4 = n4.payload;
          if (Wd(o3) || Wd(r4)) {
            var a3 = this._messageListHandler.getLocalMessageList(e4);
            if (0 === a3.length)
              return;
            var s3 = a3[a3.length - 1];
            wl.log("".concat(this._className, ".patchConversationLastMessage conversationID:").concat(e4, " payload:"), s3.payload), t3.updateLastMessage(s3);
          }
        }
      } }, { key: "onRoamingMessage", value: function() {
        var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], n4 = arguments.length > 1 ? arguments[1] : void 0, o3 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], r4 = n4.startsWith(gr.CONV_C2C) ? gr.CONV_C2C : gr.CONV_GROUP, a3 = null, s3 = [], i3 = [], u3 = 0, c3 = e4.length, l3 = null, d3 = r4 === gr.CONV_GROUP, p3 = this.getModule(zg), g3 = function() {
          u3 = d3 ? e4.length - 1 : 0, c3 = d3 ? 0 : e4.length;
        }, h3 = function() {
          d3 ? --u3 : ++u3;
        }, f3 = function() {
          return d3 ? u3 >= c3 : u3 < c3;
        };
        for (g3(); f3(); h3())
          if (d3 && 1 === e4[u3].sequence && o3 && this.setCompleted(n4), 1 !== e4[u3].isPlaceMessage)
            if ((a3 = new bM(e4[u3])).to = e4[u3].to, r4 !== gr.CONV_GROUP || td(e4[u3].topicID) || (a3.to = e4[u3].topicID), a3.isSystemMessage = !!e4[u3].isSystemMessage, a3.conversationType = r4, 4 === e4[u3].event ? l3 = { type: gr.MSG_GRP_TIP, content: t2(t2({}, e4[u3].elements), {}, { groupProfile: e4[u3].groupProfile }) } : (e4[u3].elements = p3.parseElements(e4[u3].elements, e4[u3].from), l3 = e4[u3].elements), d3 || a3.setNickAndAvatar({ nick: e4[u3].nick, avatar: e4[u3].avatar }), Wd(l3)) {
              var _3 = new G_(P_.EMPTY_MESSAGE_BODY);
              _3.setMessage("from:".concat(a3.from, " to:").concat(a3.to, " sequence:").concat(a3.sequence, " event:").concat(e4[u3].event)), _3.setNetworkType(this.getNetworkType()).setLevel("warning").end();
            } else
              a3.setElement(l3), a3.reInitialize(this.getMyUserID()), s3.push(a3);
        return g3 = h3 = f3 = null, o3 ? (this._messageListHandler.unshift(s3, i3), s3 = null, i3) : (i3 = null, s3);
      } }, { key: "findMessage", value: function(e4) {
        return this._messageListHandler.findMessage(e4);
      } }, { key: "_isNotInCommunity", value: function(e4) {
        var t3 = false;
        if (e4.startsWith(gr.CONV_GROUP) && this._isTopicConversation(e4)) {
          var n4 = Fd(e4.replace(gr.CONV_GROUP, ""));
          this.getModule(xg).hasLocalGroup(n4) || (t3 = true);
        }
        return t3;
      } }, { key: "deleteTopicRoamingMessageInfo", value: function(e4) {
        var t3 = this;
        Td({ groupID: e4 }) && this._messageListHandler.getTopicConversationIDList(e4).forEach(function(e5) {
          t3._messageListHandler.removeByConversationID(e5), t3._completedMap.delete(e5), t3._roamingMessageSequenceMap.delete(e5);
        });
      } }, { key: "deleteGroupRomaingMessageInfo", value: function(e4) {
        var t3 = "".concat(gr.CONV_GROUP).concat(e4);
        this._messageListHandler.removeByConversationID(t3), this._completedMap.delete(t3), this._roamingMessageSequenceMap.delete(t3);
      } }, { key: "setMessageRead", value: function(e4) {
        var t3 = e4.conversationID, n4 = this.getLocalConversation(t3);
        if (wl.log("".concat(this._className, ".setMessageRead conversationID:").concat(t3, " unreadCount:").concat(n4 ? n4.unreadCount : 0)), !n4)
          return WM();
        if (n4.type !== gr.CONV_GROUP && n4.type !== gr.CONV_TOPIC || Wd(n4.groupAtInfoList) || this.deleteGroupAtTips(t3), 0 === n4.unreadCount)
          return WM();
        if (n4.type === gr.CONV_GROUP && !this._hasLocalGroup(t3))
          return 0 !== n4.unreadCount && (n4.unreadCount = 0, this.emitConversationUpdate(true, false)), WM();
        var o3 = this._messageListHandler.getLocalLastMessage(t3), r4 = n4.lastMessage.lastTime;
        o3 && r4 < o3.time && (r4 = o3.time);
        var a3 = n4.lastMessage.lastSequence;
        if (o3 && a3 < o3.sequence && (a3 = o3.sequence), n4.type === gr.CONV_TOPIC && td(o3)) {
          var s3 = this.getModule(Kg), i3 = t3.replace(gr.CONV_GROUP, ""), u3 = Fd(i3), c3 = s3.getLocalTopic(u3, i3);
          c3 && (a3 = c3.nextMessageSeq - 1);
        }
        var l3 = null;
        switch (n4.type) {
          case gr.CONV_C2C:
            return (l3 = this.getModule(qg)) ? l3.setMessageRead({ conversationID: t3, lastMessageTime: r4 }) : YM({ code: dh.CANNOT_FIND_MODULE });
          case gr.CONV_GROUP:
          case gr.CONV_TOPIC:
            return (l3 = this.getModule(xg)) ? l3.setMessageRead({ conversationID: t3, lastMessageSeq: a3 }) : YM({ code: dh.CANNOT_FIND_MODULE });
          case gr.CONV_SYSTEM:
            return n4.unreadCount = 0, this.emitConversationUpdate(true, false), WM();
          default:
            return WM();
        }
      } }, { key: "setAllMessageRead", value: function() {
        var e4 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n4 = "".concat(this._className, ".setAllMessageRead");
        t3.scope || (t3.scope = gr.READ_ALL_MSG), wl.log("".concat(n4, " options:"), t3);
        var o3 = this._createSetAllMessageReadPack(t3);
        if (0 === o3.readAllC2CMessage && 0 === o3.groupMessageReadInfoList.length)
          return WM();
        var r4 = new G_(P_.SET_ALL_MESSAGE_READ);
        return this.request({ protocolName: gf, requestData: o3 }).then(function(n5) {
          var o4 = n5.data, a3 = e4._handleAllMessageRead(o4);
          return r4.setMessage("scope:".concat(t3.scope, " failureGroups:").concat(JSON.stringify(a3))).setNetworkType(e4.getNetworkType()).end(), WM();
        }).catch(function(t4) {
          return e4.probeNetwork().then(function(e5) {
            var n5 = m2(e5, 2), o4 = n5[0], a3 = n5[1];
            r4.setError(t4, o4, a3).end();
          }), wl.warn("".concat(n4, " failed. error:"), t4), YM({ code: t4 && t4.code ? t4.code : dh.MESSAGE_UNREAD_ALL_FAIL, message: t4 && t4.message ? t4.message : void 0 });
        });
      } }, { key: "setConversationCustomData", value: function(e4) {
        return this._convGroupHandler.setConvCustomData(e4);
      } }, { key: "markConversation", value: function(e4) {
        return this._convGroupHandler.markConversation(e4);
      } }, { key: "getConversationGroupList", value: function() {
        return this._convGroupHandler.getLocalConvGroupList();
      } }, { key: "createConversationGroup", value: function(e4) {
        return this._convGroupHandler.createConvGroup(e4);
      } }, { key: "deleteConversationGroup", value: function(e4) {
        return this._convGroupHandler.deleteConvGroup(e4);
      } }, { key: "renameConversationGroup", value: function(e4) {
        return this._convGroupHandler.renameConvGroup(e4);
      } }, { key: "addConversationsToGroup", value: function(e4) {
        return this._convGroupHandler.addConvsToGroup(e4);
      } }, { key: "deleteConversationsFromGroup", value: function(e4) {
        return this._convGroupHandler.deleteConvsFromGroup(e4);
      } }, { key: "onConversationMarkUpdated", value: function(e4) {
        this._convGroupHandler.onConvMarkUpdated(e4);
      } }, { key: "onConversationGroupCreated", value: function(e4) {
        this._convGroupHandler.onConvGroupCreated(e4);
      } }, { key: "onConversationGroupDeleted", value: function(e4) {
        this._convGroupHandler.onConvGroupDeleted(e4);
      } }, { key: "onConversationGroupNameUpdated", value: function(e4) {
        this._convGroupHandler.onConvGroupNameUpdated(e4);
      } }, { key: "onConversationInGroupUpdated", value: function(e4) {
        this._convGroupHandler.onConvInGroupUpdated(e4);
      } }, { key: "onConversationAddedToOrDeletedFromGroup", value: function(e4) {
        this._convGroupHandler.onConvAddedToOrDeletedFromGroup(e4);
      } }, { key: "_getConversationLastMessageSequence", value: function(e4) {
        var t3 = this._messageListHandler.getLocalLastMessage(e4.conversationID), n4 = e4.lastMessage.lastSequence;
        return t3 && n4 < t3.sequence && (n4 = t3.sequence), n4;
      } }, { key: "_getConversationLastMessageTime", value: function(e4) {
        var t3 = this._messageListHandler.getLocalLastMessage(e4.conversationID), n4 = e4.lastMessage.lastTime;
        return t3 && n4 < t3.time && (n4 = t3.time), n4;
      } }, { key: "_createSetAllMessageReadPack", value: function(e4) {
        var t3, n4 = { readAllC2CMessage: 0, groupMessageReadInfoList: [] }, o3 = e4.scope, r4 = E2(this._conversationMap);
        try {
          for (r4.s(); !(t3 = r4.n()).done; ) {
            var a3 = m2(t3.value, 2)[1];
            if (a3.unreadCount > 0) {
              if (a3.type === gr.CONV_C2C && 0 === n4.readAllC2CMessage) {
                if (o3 === gr.READ_ALL_MSG)
                  n4.readAllC2CMessage = 1;
                else if (o3 === gr.READ_ALL_C2C_MSG) {
                  n4.readAllC2CMessage = 1;
                  break;
                }
              } else if (a3.type === gr.CONV_GROUP && (o3 === gr.READ_ALL_GROUP_MSG || o3 === gr.READ_ALL_MSG)) {
                var s3 = this._getConversationLastMessageSequence(a3);
                n4.groupMessageReadInfoList.push({ groupID: a3.groupProfile.groupID, messageSequence: s3 });
              }
            }
          }
        } catch (i3) {
          r4.e(i3);
        } finally {
          r4.f();
        }
        return n4;
      } }, { key: "onPushedAllMessageRead", value: function(e4) {
        this._handleAllMessageRead(e4);
      } }, { key: "_handleAllMessageRead", value: function(e4) {
        var t3 = e4.groupMessageReadInfoList, n4 = e4.readAllC2CMessage, o3 = this._parseGroupReadInfo(t3);
        return this._updateAllConversationUnreadCount({ readAllC2CMessage: n4 }) >= 1 && (this.emitConversationUpdate(true, false), this.emitTotalUnreadMessageCountUpdate()), o3;
      } }, { key: "_parseGroupReadInfo", value: function(e4) {
        var t3 = [];
        if (e4 && e4.length)
          for (var n4 = 0, o3 = e4.length; n4 < o3; n4++) {
            var r4 = e4[n4], a3 = r4.groupID, s3 = r4.sequence, i3 = r4.retCode, u3 = r4.lastMessageSeq;
            td(i3) ? this._remoteGroupReadSequenceMap.set(a3, u3) : (this._remoteGroupReadSequenceMap.set(a3, s3), 0 !== i3 && t3.push("".concat(a3, "-").concat(s3, "-").concat(i3)));
          }
        return t3;
      } }, { key: "_updateAllConversationUnreadCount", value: function(e4) {
        var t3, n4 = e4.readAllC2CMessage, o3 = 0, r4 = E2(this._conversationMap);
        try {
          for (r4.s(); !(t3 = r4.n()).done; ) {
            var a3 = m2(t3.value, 2), s3 = a3[0], i3 = a3[1];
            if (i3.unreadCount >= 1) {
              if (1 === n4 && i3.type === gr.CONV_C2C) {
                var u3 = this._getConversationLastMessageTime(i3);
                this.updateIsReadAfterReadReport({ conversationID: s3, lastMessageTime: u3 });
              } else if (i3.type === gr.CONV_GROUP) {
                var c3 = s3.replace(gr.CONV_GROUP, "");
                if (this._remoteGroupReadSequenceMap.has(c3)) {
                  var l3 = this._remoteGroupReadSequenceMap.get(c3), d3 = this._getConversationLastMessageSequence(i3);
                  this.updateIsReadAfterReadReport({ conversationID: s3, remoteReadSequence: l3 }), d3 >= l3 && this._remoteGroupReadSequenceMap.delete(c3);
                }
              }
              this.updateUnreadCount(s3, false) && (o3 += 1);
            }
          }
        } catch (p3) {
          r4.e(p3);
        } finally {
          r4.f();
        }
        return o3;
      } }, { key: "isRemoteRead", value: function(e4) {
        var t3 = e4.conversationID, n4 = e4.sequence, o3 = t3.replace(gr.CONV_GROUP, ""), r4 = false;
        if (this._remoteGroupReadSequenceMap.has(o3)) {
          var a3 = this._remoteGroupReadSequenceMap.get(o3);
          n4 <= a3 && (r4 = true, wl.log("".concat(this._className, ".isRemoteRead conversationID:").concat(t3, " messageSequence:").concat(n4, " remoteReadSequence:").concat(a3))), n4 >= a3 + 10 && this._remoteGroupReadSequenceMap.delete(o3);
        }
        return r4;
      } }, { key: "updateIsReadAfterReadReport", value: function(e4) {
        var t3 = e4.conversationID, n4 = e4.lastMessageSeq, o3 = e4.lastMessageTime, r4 = this._messageListHandler.getLocalMessageList(t3);
        if (0 !== r4.length) {
          for (var a3, s3 = r4.length - 1; s3 >= 0; s3--)
            if (a3 = r4[s3], !(o3 && a3.time > o3 || n4 && a3.sequence > n4)) {
              if ("in" === a3.flow && a3.isRead)
                break;
              a3.setIsRead(true);
            }
        }
      } }, { key: "updateUnreadCount", value: function(e4) {
        var t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n4 = false, o3 = this.getLocalConversation(e4), r4 = this._messageListHandler.getLocalMessageList(e4);
        if (o3) {
          var a3 = o3.unreadCount, s3 = r4.filter(function(e5) {
            return !e5.isRead && !e5._onlineOnlyFlag && !e5.isDeleted;
          }).length;
          if (a3 !== s3 && (o3.unreadCount = s3, n4 = true, wl.log("".concat(this._className, ".updateUnreadCount from ").concat(a3, " to ").concat(s3, ", conversationID:").concat(e4)), true === t3 && (this.emitConversationUpdate(true, false), this.emitTotalUnreadMessageCountUpdate())), n4 && o3.type === gr.CONV_TOPIC) {
            var i3 = o3.unreadCount, u3 = this.getModule(Kg), c3 = e4.replace(gr.CONV_GROUP, "");
            u3.onConversationProxy({ topicID: c3, unreadCount: i3 });
          }
          return n4;
        }
      } }, { key: "clearGroupAtInfoList", value: function(e4) {
        var t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n4 = this.getLocalConversation(e4);
        if (n4 && n4.groupAtInfoList.length > 0) {
          if (n4.clearGroupAtInfoList(), wl.log("".concat(this._className, ".clearGroupAtInfoList conversationID:").concat(e4)), n4.type === gr.CONV_TOPIC) {
            var o3 = n4.groupAtInfoList, r4 = this.getModule(Kg), a3 = e4.replace(gr.CONV_GROUP, "");
            r4.onConversationProxy({ topicID: a3, groupAtInfoList: o3 });
          }
          true === t3 && this.emitConversationUpdate(true, false);
        }
      } }, { key: "updateReadReceiptInfo", value: function(e4) {
        var t3 = this, n4 = e4.userID, o3 = void 0 === n4 ? void 0 : n4, r4 = e4.groupID, a3 = void 0 === r4 ? void 0 : r4, s3 = e4.readReceiptList;
        if (!Wd(s3)) {
          var i3 = [];
          if (td(o3)) {
            if (!td(a3)) {
              var u3 = "".concat(gr.CONV_GROUP).concat(a3);
              s3.forEach(function(e5) {
                var n5 = e5.tinyID, o4 = e5.clientTime, r5 = e5.random, s4 = e5.readCount, c4 = e5.unreadCount, l3 = "".concat(n5, "-").concat(o4, "-").concat(r5), d3 = t3._messageListHandler.getLocalMessage(u3, l3), p3 = { groupID: a3, messageID: l3, readCount: 0, unreadCount: 0 };
                d3 && (Jl(s4) && (d3.readReceiptInfo.readCount = s4, p3.readCount = s4), Jl(c4) && (d3.readReceiptInfo.unreadCount = c4, p3.unreadCount = c4), i3.push(p3));
              });
            }
          } else {
            var c3 = "".concat(gr.CONV_C2C).concat(o3);
            s3.forEach(function(e5) {
              var n5 = e5.tinyID, r5 = e5.clientTime, a4 = e5.random, s4 = "".concat(n5, "-").concat(r5, "-").concat(a4), u4 = t3._messageListHandler.getLocalMessage(c3, s4);
              if (u4) {
                u4.readReceiptInfo.isPeerRead = true;
                var l3 = { userID: o3, messageID: s4, isPeerRead: true };
                i3.push(l3);
              }
            });
          }
          i3.length > 0 && this.emitOuterEvent(pr.MESSAGE_READ_RECEIPT_RECEIVED, i3);
        }
      } }, { key: "recomputeGroupUnreadCount", value: function(e4) {
        var t3 = e4.conversationID, n4 = e4.count, o3 = this.getLocalConversation(t3);
        if (o3) {
          var r4 = o3.unreadCount, a3 = r4 - n4;
          a3 < 0 && (a3 = 0), o3.unreadCount = a3, wl.log("".concat(this._className, ".recomputeGroupUnreadCount from ").concat(r4, " to ").concat(a3, ", conversationID:").concat(t3));
        }
      } }, { key: "updateIsRead", value: function(e4) {
        var t3 = this.getLocalConversation(e4), n4 = this.getLocalMessageList(e4);
        if (t3 && 0 !== n4.length && !Dd(t3.type)) {
          for (var o3 = [], r4 = 0, a3 = n4.length; r4 < a3; r4++)
            "in" !== n4[r4].flow ? "out" !== n4[r4].flow || n4[r4].isRead || n4[r4].setIsRead(true) : o3.push(n4[r4]);
          var s3 = 0;
          if (t3.type === gr.CONV_C2C) {
            var i3 = o3.slice(-t3.unreadCount).filter(function(e5) {
              return e5.isRevoked;
            }).length;
            s3 = o3.length - t3.unreadCount - i3;
          } else
            s3 = o3.length - t3.unreadCount;
          for (var u3 = 0; u3 < s3 && !o3[u3].isRead; u3++)
            o3[u3].setIsRead(true);
        }
      } }, { key: "deleteGroupAtTips", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".deleteGroupAtTips");
        wl.log("".concat(n4));
        var o3 = this._conversationMap.get(e4);
        if (!o3)
          return Promise.resolve();
        var r4 = o3.groupAtInfoList;
        if (0 === r4.length)
          return Promise.resolve();
        var a3 = void 0;
        e4.startsWith(gr.CONV_GROUP) && (a3 = e4.replace(gr.CONV_GROUP, ""));
        var s3 = v2(r4);
        if ((Td({ groupID: a3 }) || Cd(a3)) && 0 === (s3 = r4.filter(function(e5) {
          return !e5.atTypeArray.includes(gr.CONV_AT_ALL);
        })).length)
          return this.clearGroupAtInfoList(e4, false), Promise.resolve();
        var i3 = this.getMyUserID();
        return this.request({ protocolName: Kh, requestData: { messageListToDelete: s3.map(function(e5) {
          return { from: e5.from, to: i3, messageSeq: e5.__sequence, messageRandom: e5.__random, groupID: td(e5.topicID) ? e5.groupID : e5.topicID };
        }) } }).then(function() {
          return wl.log("".concat(n4, " ok. count:").concat(r4.length)), t3.clearGroupAtInfoList(e4, false), Promise.resolve();
        }).catch(function(e5) {
          return wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "appendToMessageList", value: function(e4) {
        this._messageListHandler.pushIn(e4);
      } }, { key: "setMessageRandom", value: function(e4) {
        this.singlyLinkedList.set(e4.random);
      } }, { key: "deleteMessageRandom", value: function(e4) {
        this.singlyLinkedList.delete(e4.random);
      } }, { key: "pushIntoMessageList", value: function(e4, t3, n4) {
        return !(!this._messageListHandler.pushIn(t3, n4) || this._isMessageFromCurrentInstance(t3) && !n4) && (e4.push(t3), true);
      } }, { key: "_isMessageFromCurrentInstance", value: function(e4) {
        return this.singlyLinkedList.has(e4.random);
      } }, { key: "revoke", value: function(e4, t3, n4) {
        return this._messageListHandler.revoke(e4, t3, n4);
      } }, { key: "getPeerReadTime", value: function(e4) {
        return this._peerReadTimeMap.get(e4);
      } }, { key: "recordPeerReadTime", value: function(e4, t3) {
        this._peerReadTimeMap.has(e4) ? this._peerReadTimeMap.get(e4) < t3 && this._peerReadTimeMap.set(e4, t3) : this._peerReadTimeMap.set(e4, t3);
      } }, { key: "updateMessageIsPeerReadProperty", value: function(e4, t3) {
        if (e4.startsWith(gr.CONV_C2C) && t3 > 0) {
          var n4 = this._messageListHandler.updateMessageIsPeerReadProperty(e4, t3);
          if (n4.length > 0 && this.emitOuterEvent(pr.MESSAGE_READ_BY_PEER, n4), this._conversationMap.has(e4)) {
            var o3 = this._conversationMap.get(e4).lastMessage;
            Wd(o3) || o3.fromAccount === this.getMyUserID() && o3.lastTime <= t3 && !o3.isPeerRead && (o3.isPeerRead = true, this.emitConversationUpdate(true, false));
          }
        }
      } }, { key: "updateMessageIsModifiedProperty", value: function(e4) {
        this._messageListHandler.updateMessageIsModifiedProperty(e4);
      } }, { key: "setCompleted", value: function(e4) {
        wl.log("".concat(this._className, ".setCompleted. conversationID:").concat(e4)), this._completedMap.set(e4, true);
      } }, { key: "updateRoamingMessageKeyAndTime", value: function(e4, t3, n4) {
        this._roamingMessageKeyAndTimeMap.set(e4, { messageKey: t3, lastMessageTime: n4 });
      } }, { key: "updateRoamingMessageSequence", value: function(e4, t3) {
        this._roamingMessageSequenceMap.set(e4, t3);
      } }, { key: "getConversationList", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".getConversationList"), o3 = "pagingStatus:".concat(this._pagingStatus, ", local conversation count:").concat(this._conversationMap.size, ", options:").concat(e4);
        if (wl.log("".concat(n4, ". ").concat(o3)), this._pagingStatus === Bp.REJECTED) {
          var r4 = new G_(P_.GET_CONVERSATION_LIST);
          return r4.setMessage(o3), this.syncConversationList().then(function() {
            r4.setNetworkType(t3.getNetworkType()).end();
            var n5 = t3._getConversationList(e4);
            return wM({ conversationList: n5, isSyncCompleted: t3._isSyncCompleted() });
          }).catch(function(e5) {
            return t3.probeNetwork().then(function(t4) {
              var n5 = m2(t4, 2), o4 = n5[0], a4 = n5[1];
              r4.setError(e5, o4, a4).end();
            }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
          });
        }
        if (0 === this._conversationMap.size) {
          var a3 = new G_(P_.GET_CONVERSATION_LIST);
          return a3.setMessage(o3), this.syncConversationList().then(function() {
            a3.setNetworkType(t3.getNetworkType()).end();
            var n5 = t3._getConversationList(e4);
            return wM({ conversationList: n5, isSyncCompleted: t3._isSyncCompleted() });
          }).catch(function(e5) {
            return t3.probeNetwork().then(function(t4) {
              var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
              a3.setError(e5, o4, r5).end();
            }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
          });
        }
        var s3 = this._getConversationList(e4);
        return wl.log("".concat(n4, ". returned conversation count:").concat(s3.length)), WM({ conversationList: s3, isSyncCompleted: this._isSyncCompleted() });
      } }, { key: "_getConversationList", value: function(e4) {
        if (td(e4))
          return this.getLocalConversationList();
        if (ed(e4))
          return 0 === e4.length ? [] : this.getLocalConversationList().filter(function(t4) {
            return e4.includes(t4.conversationID);
          });
        if (Zl(e4)) {
          var t3 = e4.type, n4 = e4.markType, o3 = e4.groupName;
          return this.getLocalConversationList().filter(function(e5) {
            return (t3 !== gr.CONV_C2C && t3 !== gr.CONV_GROUP || e5.type === t3) && (!Xl(o3) || e5.conversationGroupList.includes(o3)) && (!Jl(n4) || e5.markList.includes(n4));
          });
        }
        return [];
      } }, { key: "_handleC2CPeerReadTime", value: function() {
        var e4, t3 = E2(this._conversationMap);
        try {
          for (t3.s(); !(e4 = t3.n()).done; ) {
            var n4 = m2(e4.value, 2), o3 = n4[0], r4 = n4[1];
            r4.type === gr.CONV_C2C && (wl.debug("".concat(this._className, "._handleC2CPeerReadTime conversationID:").concat(o3, " peerReadTime:").concat(r4.peerReadTime)), this.recordPeerReadTime(o3, r4.peerReadTime));
          }
        } catch (a3) {
          t3.e(a3);
        } finally {
          t3.f();
        }
      } }, { key: "_isPagingGetGroupListCompleted", value: function() {
        return this.getModule(xg).isPagingGetCompleted();
      } }, { key: "_getLocalGroupCount", value: function() {
        return this.getModule(xg).getLocalGroupList().length;
      } }, { key: "_hasLocalGroup", value: function(e4) {
        return this.getModule(xg).hasLocalGroup(e4.replace(gr.CONV_GROUP, ""));
      } }, { key: "getConversationProfile", value: function(e4) {
        var t3, n4 = this;
        if ((t3 = this._conversationMap.has(e4) ? this._conversationMap.get(e4) : new Ny({ conversationID: e4, type: e4.slice(0, 3) === gr.CONV_C2C ? gr.CONV_C2C : gr.CONV_GROUP }, this.isIntl()))._isInfoCompleted || t3.type === gr.CONV_SYSTEM)
          return WM({ conversation: t3 });
        if (Sd(e4) && !this._hasLocalGroup(e4))
          return WM({ conversation: t3 });
        var o3 = new G_(P_.GET_CONVERSATION_PROFILE), r4 = "".concat(this._className, ".getConversationProfile");
        return wl.log("".concat(r4, ". conversationID:").concat(e4, " remark:").concat(t3.remark, " lastMessage:"), t3.lastMessage), this._updateUserOrGroupProfileCompletely(t3).then(function(a3) {
          o3.setNetworkType(n4.getNetworkType()).setMessage("conversationID:".concat(e4, " unreadCount:").concat(a3.data.conversation.unreadCount)).end();
          var s3 = n4.getModule(Vg);
          if (s3 && t3.type === gr.CONV_C2C) {
            var i3 = e4.replace(gr.CONV_C2C, "");
            if (s3.isMyFriend(i3)) {
              var u3 = s3.getFriendRemark(i3);
              t3.remark !== u3 && (t3.remark = u3, wl.log("".concat(r4, ". conversationID:").concat(e4, " patch remark:").concat(t3.remark)));
            }
          }
          return wl.log("".concat(r4, " ok. conversationID:").concat(e4)), a3;
        }).catch(function(t4) {
          return n4.probeNetwork().then(function(n5) {
            var r5 = m2(n5, 2), a3 = r5[0], s3 = r5[1];
            o3.setError(t4, a3, s3).setMessage("conversationID:".concat(e4)).end();
          }), wl.error("".concat(r4, " failed. error:"), t4), YM(t4);
        });
      } }, { key: "_updateUserOrGroupProfileCompletely", value: function(e4) {
        var t3 = this;
        return e4.type === gr.CONV_C2C ? this.getModule(Fg).getUserProfile({ userIDList: [e4.toAccount] }).then(function(n4) {
          var o3 = n4.data;
          return 0 === o3.length ? YM(new KM({ code: dh.USER_OR_GROUP_NOT_FOUND })) : (e4.userProfile = o3[0], e4._isInfoCompleted = true, t3._unshiftConversation(e4), WM({ conversation: e4 }));
        }) : this.getModule(xg).getGroupProfile({ groupID: e4.toAccount }).then(function(n4) {
          return e4.groupProfile = n4.data.group, e4._isInfoCompleted = true, t3._unshiftConversation(e4), WM({ conversation: e4 });
        });
      } }, { key: "_unshiftConversation", value: function(e4) {
        e4 instanceof Ny && !this._conversationMap.has(e4.conversationID) && (this._conversationMap = new Map([[e4.conversationID, e4]].concat(v2(this._conversationMap))), this._setStorageConversationList(), this.emitConversationUpdate(true, false));
      } }, { key: "_onProfileUpdated", value: function(e4) {
        var t3 = this;
        e4.data.forEach(function(e5) {
          var n4 = e5.userID;
          if (n4 === t3.getMyUserID())
            t3._onMyProfileModified({ latestNick: e5.nick, latestAvatar: e5.avatar });
          else {
            var o3 = t3._conversationMap.get("".concat(gr.CONV_C2C).concat(n4));
            o3 && (o3.userProfile = e5);
          }
        });
      } }, { key: "_isSyncCompleted", value: function() {
        return this._pagingStatus === Bp.RESOLVED;
      } }, { key: "deleteConversation", value: function(e4) {
        var t3 = this, n4 = { fromAccount: this.getMyUserID(), toAccount: void 0, type: void 0, toGroupID: void 0 };
        if (!this._conversationMap.has(e4))
          return YM({ code: dh.CONVERSATION_NOT_FOUND });
        var o3 = this._conversationMap.get(e4).type;
        if (o3 === gr.CONV_C2C)
          n4.type = 1, n4.toAccount = e4.replace(gr.CONV_C2C, "");
        else {
          if (o3 !== gr.CONV_GROUP)
            return o3 === gr.CONV_SYSTEM ? (this.getModule(xg).deleteGroupSystemNotice({ messageList: this._messageListHandler.getLocalMessageList(e4) }), this.deleteLocalConversation(e4), WM({ conversationID: e4 })) : YM({ code: dh.CONVERSATION_UN_RECORDED_TYPE });
          if (!this._hasLocalGroup(e4))
            return this.deleteLocalConversation(e4), WM({ conversationID: e4 });
          n4.type = 2, n4.toGroupID = e4.replace(gr.CONV_GROUP, "");
        }
        var r4 = new G_(P_.DELETE_CONVERSATION);
        r4.setMessage("conversationID:".concat(e4));
        var a3 = "".concat(this._className, ".deleteConversation");
        return wl.log("".concat(a3, ". conversationID:").concat(e4)), this.setMessageRead({ conversationID: e4 }).then(function() {
          return t3.request({ protocolName: xh, requestData: n4 });
        }).then(function() {
          return r4.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(a3, " ok")), t3.deleteLocalConversation(e4), WM({ conversationID: e4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], a4 = n5[1];
            r4.setError(e5, o4, a4).end();
          }), wl.error("".concat(a3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "clearHistoryMessage", value: function(e4) {
        var t3 = this, n4 = { fromAccount: this.getMyUserID(), toAccount: void 0, type: void 0, toGroupID: void 0 };
        if (!this._conversationMap.has(e4))
          return YM({ code: dh.CONVERSATION_NOT_FOUND });
        var o3 = this._conversationMap.get(e4).type;
        if (o3 === gr.CONV_C2C)
          n4.type = 1, n4.toAccount = e4.replace(gr.CONV_C2C, "");
        else {
          if (o3 !== gr.CONV_GROUP)
            return o3 === gr.CONV_SYSTEM ? (this.getModule(xg).deleteGroupSystemNotice({ messageList: this._messageListHandler.getLocalMessageList(e4) }), WM({ conversationID: e4 })) : YM({ code: dh.CONVERSATION_UN_RECORDED_TYPE });
          n4.type = 2, n4.toGroupID = e4.replace(gr.CONV_GROUP, "");
        }
        var r4 = new G_(P_.CLEAR_HISTORY_MESSAGE);
        r4.setMessage("conversationID:".concat(e4));
        var a3 = "".concat(this._className, ".clearHistoryMessage");
        return wl.log("".concat(a3, ". conversationID:").concat(e4)), this.setMessageRead({ conversationID: e4 }).then(function() {
          return t3.request({ protocolName: Vh, requestData: n4 });
        }).then(function() {
          r4.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(a3, " ok")), t3._messageListHandler.removeByConversationID(e4), t3.setCompleted(e4);
          var n5 = t3.getLocalConversation(e4);
          return n5 && (n5.updateLastMessage(), t3.emitConversationUpdate(true, false)), WM({ conversationID: e4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], a4 = n5[1];
            r4.setError(e5, o4, a4).end();
          }), wl.error("".concat(a3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "pinConversation", value: function(e4) {
        var t3 = this, n4 = e4.conversationID, o3 = e4.isPinned;
        if (!this._conversationMap.has(n4))
          return YM({ code: dh.CONVERSATION_NOT_FOUND });
        var r4 = this.getLocalConversation(n4);
        if (r4.isPinned === o3)
          return WM({ conversationID: n4 });
        var a3 = new G_(P_.PIN_CONVERSATION);
        a3.setMessage("conversationID:".concat(n4, " isPinned:").concat(o3));
        var s3 = "".concat(this._className, ".pinConversation");
        wl.log("".concat(s3, ". conversationID:").concat(n4, " isPinned:").concat(o3));
        var i3 = null;
        return Ed(n4) ? i3 = { type: 1, toAccount: n4.replace(gr.CONV_C2C, "") } : Sd(n4) && (i3 = { type: 2, groupID: n4.replace(gr.CONV_GROUP, "") }), this.request({ protocolName: Bh, requestData: { fromAccount: this.getMyUserID(), operationType: true === o3 ? 1 : 2, itemList: [i3] } }).then(function() {
          return a3.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(s3, " ok")), r4.isPinned !== o3 && (r4.isPinned = o3, t3._sortConversationListAndEmitEvent()), wM({ conversationID: n4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            a3.setError(e5, o4, r5).end();
          }), wl.error("".concat(s3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "setMessageRemindType", value: function(e4) {
        return this._messageRemindHandler.set(e4);
      } }, { key: "patchMessageRemindType", value: function(e4) {
        var t3 = e4.ID, n4 = e4.isC2CConversation, o3 = e4.messageRemindType, r4 = false, a3 = this.getLocalConversation(n4 ? "".concat(gr.CONV_C2C).concat(t3) : "".concat(gr.CONV_GROUP).concat(t3));
        return a3 && a3.messageRemindType !== o3 && (a3.messageRemindType = o3, r4 = true), wl.debug("".concat(this._className, ".patchMessageRemindType options:"), e4, "ret:".concat(r4)), r4;
      } }, { key: "onC2CMessageRemindTypeSynced", value: function(e4) {
        var t3 = this;
        wl.debug("".concat(this._className, ".onC2CMessageRemindTypeSynced options:"), e4), e4.dataList.forEach(function(e5) {
          if (!Wd(e5.muteNotificationsSync)) {
            var n4, o3 = e5.muteNotificationsSync, r4 = o3.to, a3 = o3.updateSequence, s3 = o3.muteFlag;
            t3._messageRemindHandler.setUpdateSequence(a3), 0 === s3 ? n4 = gr.MSG_REMIND_ACPT_AND_NOTE : 1 === s3 ? n4 = gr.MSG_REMIND_DISCARD : 2 === s3 && (n4 = gr.MSG_REMIND_ACPT_NOT_NOTE);
            var i3 = 0;
            t3.patchMessageRemindType({ ID: r4, isC2CConversation: true, messageRemindType: n4 }) && (i3 += 1), wl.log("".concat(t3._className, ".onC2CMessageRemindTypeSynced updateCount:").concat(i3)), i3 >= 1 && t3.emitConversationUpdate(true, false);
          }
        });
      } }, { key: "onGroupMessageRemindTypeSynced", value: function(e4) {
        wl.debug("".concat(this._className, ".onGroupMessageRemindTypeSynced options:"), e4), this._messageRemindHandler.onGroupMessageRemindTypeUpdated(e4);
      } }, { key: "deleteLocalConversation", value: function(e4) {
        var t3 = this._conversationMap.has(e4);
        if (wl.log("".concat(this._className, ".deleteLocalConversation conversationID:").concat(e4, " has:").concat(t3)), t3) {
          this._conversationMap.delete(e4), this._roamingMessageKeyAndTimeMap.has(e4) && this._roamingMessageKeyAndTimeMap.delete(e4), this._roamingMessageSequenceMap.has(e4) && this._roamingMessageSequenceMap.delete(e4), this._setStorageConversationList(), this._messageListHandler.removeByConversationID(e4), this._completedMap.delete(e4);
          var n4 = !this._isTopicConversation(e4);
          this.emitConversationUpdate(n4, false);
        }
      } }, { key: "isMessageSentByCurrentInstance", value: function(e4) {
        return !(!this._messageListHandler.hasLocalMessage(e4.conversationID, e4.ID) && !this.singlyLinkedList.has(e4.random));
      } }, { key: "modifyMessageList", value: function(e4) {
        if (e4.startsWith(gr.CONV_C2C) && this._conversationMap.has(e4)) {
          var t3 = this._conversationMap.get(e4), n4 = Date.now();
          this._messageListHandler.modifyMessageSentByPeer({ conversationID: e4, latestNick: t3.userProfile.nick, latestAvatar: t3.userProfile.avatar });
          var o3 = this.getModule(Fg).getNickAndAvatarByUserID(this.getMyUserID());
          this._messageListHandler.modifyMessageSentByMe({ conversationID: e4, latestNick: o3.nick, latestAvatar: o3.avatar }), wl.log("".concat(this._className, ".modifyMessageList conversationID:").concat(e4, " cost ").concat(Date.now() - n4, " ms"));
        }
      } }, { key: "updateUserProfileSpecifiedKey", value: function(e4) {
        wl.log("".concat(this._className, ".updateUserProfileSpecifiedKey options:"), e4);
        var t3 = e4.conversationID, n4 = e4.nick, o3 = e4.avatar;
        if (this._conversationMap.has(t3)) {
          var r4 = this._conversationMap.get(t3).userProfile;
          Xl(n4) && r4.nick !== n4 && (r4.nick = n4), Xl(o3) && r4.avatar !== o3 && (r4.avatar = o3), this.emitConversationUpdate(true, false);
        }
      } }, { key: "_onMyProfileModified", value: function(e4) {
        var n4 = this, o3 = this.getLocalConversationList(), r4 = Date.now();
        o3.forEach(function(o4) {
          n4.modifyMessageSentByMe(t2({ conversationID: o4.conversationID }, e4));
        }), wl.log("".concat(this._className, "._onMyProfileModified. modify all messages sent by me, cost ").concat(Date.now() - r4, " ms"));
      } }, { key: "modifyMessageSentByMe", value: function(e4) {
        this._messageListHandler.modifyMessageSentByMe(e4);
      } }, { key: "getLatestMessageSentByMe", value: function(e4) {
        return this._messageListHandler.getLatestMessageSentByMe(e4);
      } }, { key: "modifyMessageSentByPeer", value: function(e4) {
        this._messageListHandler.modifyMessageSentByPeer(e4);
      } }, { key: "getLatestMessageSentByPeer", value: function(e4) {
        return this._messageListHandler.getLatestMessageSentByPeer(e4);
      } }, { key: "pushIntoNoticeResult", value: function(e4, t3) {
        return !(!this._messageListHandler.pushIn(t3) || this.singlyLinkedList.has(t3.random)) && (e4.push(t3), true);
      } }, { key: "getLocalLastMessage", value: function(e4) {
        return this._messageListHandler.getLocalLastMessage(e4);
      } }, { key: "checkAndPatchRemark", value: function() {
        var e4 = Promise.resolve();
        if (0 === this._conversationMap.size)
          return e4;
        var t3 = this.getModule(Vg);
        if (!t3)
          return e4;
        var n4 = v2(this._conversationMap.values()).filter(function(e5) {
          return e5.type === gr.CONV_C2C;
        });
        if (0 === n4.length)
          return e4;
        var o3 = 0;
        return n4.forEach(function(e5) {
          var n5 = e5.conversationID.replace(gr.CONV_C2C, "");
          if (t3.isMyFriend(n5)) {
            var r4 = t3.getFriendRemark(n5);
            e5.remark !== r4 && (e5.remark = r4, o3 += 1);
          }
        }), wl.log("".concat(this._className, ".checkAndPatchRemark. c2c conversation count:").concat(n4.length, ", patched count:").concat(o3)), e4;
      } }, { key: "updateTopicConversation", value: function(e4) {
        this._updateLocalConversationList({ conversationOptionsList: e4, isFromGetConversations: true });
      } }, { key: "sendReadReceipt", value: function(e4) {
        var t3 = e4[0], n4 = null;
        return t3.conversationType === gr.CONV_C2C ? n4 = this._moduleManager.getModule(qg) : t3.conversationType === gr.CONV_GROUP && (n4 = this._moduleManager.getModule(xg)), n4 ? n4.sendReadReceipt(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "getReadReceiptList", value: function(e4) {
        var t3 = e4[0], n4 = null;
        return t3.conversationType === gr.CONV_C2C ? n4 = this._moduleManager.getModule(qg) : t3.conversationType === gr.CONV_GROUP && (n4 = this._moduleManager.getModule(xg)), n4 ? n4.getReadReceiptList(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "getLastMessageTime", value: function(e4) {
        var t3 = this.getLocalConversation(e4);
        return t3 ? t3.lastMessage.lastTime : 0;
      } }, { key: "getTotalUnreadMessageCount", value: function() {
        var e4 = this.getLocalConversationList(), t3 = 0;
        return e4.forEach(function(e5) {
          e5.type !== gr.CONV_SYSTEM && ("" !== e5.messageRemindType && e5.messageRemindType !== gr.MSG_REMIND_ACPT_AND_NOTE || (t3 += e5.unreadCount));
        }), t3;
      } }, { key: "emitTotalUnreadMessageCountUpdate", value: function() {
        var e4 = this.getTotalUnreadMessageCount();
        this._convTotalUnreadCount !== e4 && (wl.log("".concat(this._className, ".emitTotalUnreadMessageCountUpdate from ").concat(this._convTotalUnreadCount, " to ").concat(e4)), this._convTotalUnreadCount = e4, this.emitOuterEvent(pr.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED));
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._pagingStatus = Bp.NOT_START, this._messageListHandler.reset(), this._messageRemindHandler.reset(), this._roamingMessageKeyAndTimeMap.clear(), this._roamingMessageSequenceMap.clear(), this.singlyLinkedList.reset(), this._peerReadTimeMap.clear(), this._completedMap.clear(), this._conversationMap.clear(), this._pagingTimeStamp = 0, this._pagingStartIndex = 0, this._pagingPinnedTimeStamp = 0, this._pagingPinnedStartIndex = 0, this._remoteGroupReadSequenceMap.clear(), this._convTotalUnreadCount = 0, this.resetReady();
      } }]), r3;
    }(hh), Uy = function() {
      function e3(t3) {
        o2(this, e3), this._groupModule = t3, this._className = "GroupTipsHandler", this._cachedGroupTipsMap = /* @__PURE__ */ new Map(), this._checkCountMap = /* @__PURE__ */ new Map(), this.MAX_CHECK_COUNT = 4, this._getTopicPendingMap = /* @__PURE__ */ new Map();
      }
      return a2(e3, [{ key: "onCheckTimer", value: function(e4) {
        e4 % 1 == 0 && this._cachedGroupTipsMap.size > 0 && this._checkCachedGroupTips();
      } }, { key: "_checkCachedGroupTips", value: function() {
        var e4 = this;
        this._cachedGroupTipsMap.forEach(function(t3, n3) {
          var o3 = e4._checkCountMap.get(n3), r3 = e4._groupModule.hasLocalGroup(n3);
          wl.log("".concat(e4._className, "._checkCachedGroupTips groupID:").concat(n3, " hasLocalGroup:").concat(r3, " checkCount:").concat(o3)), r3 ? (e4._notifyCachedGroupTips(n3), e4._checkCountMap.delete(n3), e4._groupModule.deleteUnjoinedAVChatRoom(n3)) : o3 >= e4.MAX_CHECK_COUNT ? (e4._deleteCachedGroupTips(n3), e4._checkCountMap.delete(n3)) : (o3++, e4._checkCountMap.set(n3, o3));
        });
      } }, { key: "onNewGroupTips", value: function(e4) {
        wl.debug("".concat(this._className, ".onReceiveGroupTips count:").concat(e4.dataList.length));
        var t3 = this.newGroupTipsStoredAndSummary(e4), n3 = t3.eventDataList, o3 = t3.result, r3 = t3.AVChatRoomMessageList;
        (r3.length > 0 && this._groupModule.onAVChatRoomMessage(r3), n3.length > 0) && (this._groupModule.updateNextMessageSeq(n3), this._groupModule.getModule(Hg).onNewMessage({ conversationOptionsList: n3, isInstantMessage: true }));
        o3.length > 0 && (this._groupModule.emitOuterEvent(pr.MESSAGE_RECEIVED, o3), this.handleMessageList(o3));
      } }, { key: "newGroupTipsStoredAndSummary", value: function(e4) {
        for (var n3 = this, o3 = e4.event, r3 = e4.dataList, a3 = null, s3 = [], i3 = [], u3 = {}, c3 = [], l3 = function(e5, l4) {
          var d4 = vd(r3[e5]);
          if (6 === o3) {
            if (n3._groupModule.isGroupAttributesUpdatedNotice(d4))
              return "continue";
            if (n3._groupModule.isGroupCountersNotice(d4))
              return "continue";
          }
          var p4 = d4.groupProfile, g3 = p4.groupID, h3 = p4.communityType, f3 = void 0 === h3 ? 0 : h3, _3 = p4.topicID, m3 = void 0 === _3 ? void 0 : _3, v3 = p4.invisible, M3 = void 0, y3 = n3._groupModule.isMessageFromTopic(f3, m3);
          if (y3) {
            M3 = gr.CONV_TOPIC, d4.to = m3;
            var I3 = n3._groupModule.getModule(Kg);
            I3.hasLocalTopic(g3, m3) || n3._getTopicPendingMap.has(m3) || (n3._getTopicPendingMap.set(m3, 1), I3.getTopicList({ groupID: g3, topicIDList: [m3] }).finally(function() {
              n3._getTopicPendingMap.delete(m3);
            }));
          }
          var T3 = n3._groupModule.hasLocalGroup(g3);
          if (!T3 && n3._groupModule.isUnjoinedAVChatRoom(g3))
            return "continue";
          if (!T3 && !y3)
            return n3._cacheGroupTipsAndProbe({ groupID: g3, event: o3, item: d4 }), "continue";
          if (n3._groupModule.isMessageFromOrToAVChatroom(g3))
            return d4.event = o3, c3.push(d4), "continue";
          if (d4.currentUser = n3._groupModule.getMyUserID(), d4.conversationType = gr.CONV_GROUP, (a3 = new bM(d4)).setElement({ type: gr.MSG_GRP_TIP, content: t2(t2({}, d4.elements), {}, { groupProfile: d4.groupProfile }) }), a3.isSystemMessage = false, 1 === v3)
            return n3._qualityStat(a3), "continue";
          var C3 = n3._groupModule.getModule(Hg), E3 = a3, S3 = E3.conversationID, D3 = E3.sequence;
          if (6 === o3)
            a3._onlineOnlyFlag = true, i3.push(a3);
          else if (!C3.pushIntoNoticeResult(i3, a3))
            return "continue";
          if (n3._groupModule.isMessageFromCommunityOfTopic(f3, m3))
            return "continue";
          if (6 === o3 && C3.getLocalConversation(S3))
            return "continue";
          6 !== o3 && n3._qualityStat(a3);
          var N3 = C3.isRemoteRead({ conversationID: S3, sequence: D3 });
          if (td(u3[S3])) {
            var A3 = 0;
            "in" === a3.flow && (a3._isExcludedFromUnreadCount || a3._onlineOnlyFlag || N3 || (A3 = 1)), u3[S3] = s3.push({ conversationID: S3, unreadCount: A3, type: td(M3) ? a3.conversationType : M3, subType: a3.conversationSubType, lastMessage: a3._isExcludedFromLastMessage ? "" : a3 }) - 1;
          } else {
            var k3 = u3[S3];
            s3[k3].type = a3.conversationType, s3[k3].subType = a3.conversationSubType, s3[k3].lastMessage = a3._isExcludedFromLastMessage ? "" : a3, "in" === a3.flow && (a3._isExcludedFromUnreadCount || a3._onlineOnlyFlag || N3 || s3[k3].unreadCount++);
          }
        }, d3 = 0, p3 = r3.length; d3 < p3; d3++)
          l3(d3);
        return { eventDataList: s3, result: i3, AVChatRoomMessageList: c3 };
      } }, { key: "_qualityStat", value: function(e4) {
        this._groupModule.getModule(ah).addMessageSequence({ key: D_, message: e4 });
      } }, { key: "handleMessageList", value: function(e4) {
        var t3 = this;
        e4.forEach(function(e5) {
          switch (e5.payload.operationType) {
            case 1:
              t3._onNewMemberComeIn(e5);
              break;
            case 2:
              t3._onMemberQuit(e5);
              break;
            case 3:
              t3._onMemberKickedOut(e5);
              break;
            case 4:
              t3._onMemberSetAdmin(e5);
              break;
            case 5:
              t3._onMemberCancelledAdmin(e5);
              break;
            case 6:
              t3._onGroupProfileModified(e5);
              break;
            case 7:
              t3._onMemberInfoModified(e5);
              break;
            case 8:
              t3._onTopicProfileUpdated(e5);
              break;
            default:
              wl.warn("".concat(t3._className, ".handleMessageList unknown operationType:").concat(e5.payload.operationType));
          }
        });
      } }, { key: "_onNewMemberComeIn", value: function(e4) {
        var t3 = e4.payload, n3 = t3.memberNum, o3 = t3.groupProfile.groupID, r3 = this._groupModule.getLocalGroupProfile(o3);
        r3 && Jl(n3) && r3.memberCount !== n3 && (r3.memberCount = n3, this._updateConversationGroupProfile(r3));
      } }, { key: "_onMemberQuit", value: function(e4) {
        var t3 = e4.payload, n3 = t3.memberNum, o3 = t3.groupProfile.groupID, r3 = this._groupModule.getLocalGroupProfile(o3);
        r3 && Jl(n3) && r3.memberCount !== n3 && (r3.memberCount = n3, this._updateConversationGroupProfile(r3)), this._groupModule.getModule(Bg).deleteLocalGroupMembers(o3, e4.payload.userIDList);
      } }, { key: "_onMemberKickedOut", value: function(e4) {
        var t3 = e4.payload, n3 = t3.memberNum, o3 = t3.groupProfile.groupID, r3 = this._groupModule.getLocalGroupProfile(o3);
        r3 && Jl(n3) && r3.memberCount !== n3 && (r3.memberCount = n3, this._updateConversationGroupProfile(r3)), this._groupModule.getModule(Bg).deleteLocalGroupMembers(o3, e4.payload.userIDList);
      } }, { key: "_updateConversationGroupProfile", value: function(e4) {
        this._groupModule.getModule(Hg).updateConversationGroupProfile([e4]);
      } }, { key: "_onMemberSetAdmin", value: function(e4) {
        var t3 = e4.payload.groupProfile.groupID, n3 = e4.payload.userIDList, o3 = this._groupModule.getModule(Bg);
        n3.forEach(function(e5) {
          var n4 = o3.getLocalGroupMemberInfo(t3, e5);
          n4 && n4.updateRole(gr.GRP_MBR_ROLE_ADMIN);
        });
      } }, { key: "_onMemberCancelledAdmin", value: function(e4) {
        var t3 = e4.payload.groupProfile.groupID, n3 = e4.payload.userIDList, o3 = this._groupModule.getModule(Bg);
        n3.forEach(function(e5) {
          var n4 = o3.getLocalGroupMemberInfo(t3, e5);
          n4 && n4.updateRole(gr.GRP_MBR_ROLE_MEMBER);
        });
      } }, { key: "_onGroupProfileModified", value: function(e4) {
        var t3 = this, n3 = e4.payload, o3 = n3.newGroupProfile, r3 = n3.groupProfile.groupID, a3 = this._groupModule.getLocalGroupProfile(r3);
        Object.keys(o3).forEach(function(e5) {
          switch (e5) {
            case "ownerID":
              t3._ownerChanged(a3, o3);
              break;
            case "muteAllMembers":
              a3.muteAllMembers = o3.muteAllMembers;
              break;
            case "joinOption":
              a3.joinOption = o3.joinOption;
              break;
            default:
              a3[e5] = o3[e5];
          }
        });
        var s3 = !a3.isSupportTopic;
        this._groupModule.emitGroupListUpdate(true, s3);
      } }, { key: "_ownerChanged", value: function(e4, t3) {
        var n3 = e4.groupID, o3 = this._groupModule.getLocalGroupProfile(n3), r3 = this._groupModule.getMyUserID();
        if (r3 === t3.ownerID) {
          o3.updateGroup({ selfInfo: { role: gr.GRP_MBR_ROLE_OWNER } });
          var a3 = this._groupModule.getModule(Bg), s3 = a3.getLocalGroupMemberInfo(n3, r3), i3 = this._groupModule.getLocalGroupProfile(n3).ownerID, u3 = a3.getLocalGroupMemberInfo(n3, i3);
          s3 && s3.updateRole(gr.GRP_MBR_ROLE_OWNER), u3 && u3.updateRole(gr.GRP_MBR_ROLE_MEMBER);
        }
      } }, { key: "_onMemberInfoModified", value: function(e4) {
        var t3 = e4.to, n3 = e4.payload, o3 = n3.groupProfile, r3 = n3.memberList, a3 = o3.groupID;
        Cd(t3) && this._updateTopicMuteTime(e4);
        var s3 = this._groupModule.getModule(Bg);
        r3.forEach(function(e5) {
          var t4 = s3.getLocalGroupMemberInfo(a3, e5.userID);
          t4 && Jl(e5.muteTime) && t4.updateMuteUntil(e5.muteTime);
        });
      } }, { key: "_updateTopicMuteTime", value: function(e4) {
        var t3 = e4.to, n3 = e4.payload, o3 = n3.groupProfile, r3 = n3.memberList, a3 = void 0 === r3 ? [] : r3, s3 = this._groupModule.getModule(Kg), i3 = o3.groupID, u3 = s3.getLocalTopic(i3, t3);
        if (u3) {
          for (var c3 = false, l3 = 0; l3 < a3.length; l3++) {
            var d3 = a3[l3];
            if (d3.userID === this._groupModule.getMyUserID() && d3.muteTime >= 0) {
              u3.updateSelfInfo({ muteTime: d3.muteTime }), c3 = true;
              break;
            }
          }
          c3 && this._groupModule.emitOuterEvent(pr.TOPIC_UPDATED, { groupID: i3, topic: u3 });
        }
      } }, { key: "_onTopicProfileUpdated", value: function(e4) {
        var n3 = e4.payload, o3 = n3.groupProfile.groupID, r3 = n3.newTopicInfo;
        this._groupModule.getModule(Kg).onTopicProfileUpdated(t2({ groupID: o3, topicID: e4.to }, r3));
      } }, { key: "_cacheGroupTips", value: function(e4, t3) {
        this._cachedGroupTipsMap.has(e4) || this._cachedGroupTipsMap.set(e4, []), this._cachedGroupTipsMap.get(e4).push(t3);
      } }, { key: "_deleteCachedGroupTips", value: function(e4) {
        this._cachedGroupTipsMap.has(e4) && this._cachedGroupTipsMap.delete(e4);
      } }, { key: "_notifyCachedGroupTips", value: function(e4) {
        var t3 = this, n3 = this._cachedGroupTipsMap.get(e4) || [];
        n3.forEach(function(e5) {
          t3.onNewGroupTips(e5);
        }), this._deleteCachedGroupTips(e4), wl.log("".concat(this._className, "._notifyCachedGroupTips groupID:").concat(e4, " count:").concat(n3.length));
      } }, { key: "_cacheGroupTipsAndProbe", value: function(e4) {
        var t3 = this, n3 = e4.groupID, o3 = e4.event, r3 = e4.item;
        this._cacheGroupTips(n3, { event: o3, dataList: [r3] }), this._groupModule.getGroupSimplifiedInfo(n3).then(function(e5) {
          e5.type === gr.GRP_AVCHATROOM ? t3._groupModule.hasLocalGroup(n3) ? t3._notifyCachedGroupTips(n3) : t3._groupModule.setUnjoinedAVChatRoom(n3) : (t3._groupModule.updateGroupMap([e5]), t3._notifyCachedGroupTips(n3));
        }), this._checkCountMap.has(n3) || this._checkCountMap.set(n3, 0), wl.log("".concat(this._className, "._cacheGroupTipsAndProbe groupID:").concat(n3));
      } }, { key: "reset", value: function() {
        this._cachedGroupTipsMap.clear(), this._checkCountMap.clear(), this._getTopicPendingMap.clear();
      } }]), e3;
    }(), by = function() {
      function e3(t3) {
        o2(this, e3), this._groupModule = t3, this._className = "CommonGroupHandler", this.tempConversationList = null, this._cachedGroupMessageMap = /* @__PURE__ */ new Map(), this._checkCountMap = /* @__PURE__ */ new Map(), this.MAX_CHECK_COUNT = 4, this._getTopicPendingMap = /* @__PURE__ */ new Map(), this._isPagingGetCompleted = false, t3.getInnerEmitterInstance().once(ly, this._initGroupList, this);
      }
      return a2(e3, [{ key: "onCheckTimer", value: function(e4) {
        e4 % 1 == 0 && this._cachedGroupMessageMap.size > 0 && this._checkCachedGroupMessage();
      } }, { key: "_checkCachedGroupMessage", value: function() {
        var e4 = this;
        this._cachedGroupMessageMap.forEach(function(t3, n3) {
          var o3 = e4._checkCountMap.get(n3), r3 = e4._groupModule.hasLocalGroup(n3);
          wl.log("".concat(e4._className, "._checkCachedGroupMessage groupID:").concat(n3, " hasLocalGroup:").concat(r3, " checkCount:").concat(o3)), r3 ? (e4._notifyCachedGroupMessage(n3), e4._checkCountMap.delete(n3), e4._groupModule.deleteUnjoinedAVChatRoom(n3)) : o3 >= e4.MAX_CHECK_COUNT ? (e4._deleteCachedGroupMessage(n3), e4._checkCountMap.delete(n3)) : (o3++, e4._checkCountMap.set(n3, o3));
        });
      } }, { key: "_initGroupList", value: function() {
        var e4 = this;
        wl.log("".concat(this._className, "._initGroupList"));
        var t3 = new G_(P_.GET_GROUP_LIST_IN_STORAGE), n3 = this._groupModule.getStorageGroupList();
        if (ed(n3) && n3.length > 0) {
          n3.forEach(function(t4) {
            e4._groupModule.initGroupMap(t4);
          }), this._groupModule.emitGroupListUpdate(true, false);
          var o3 = this._groupModule.getLocalGroupList().length;
          t3.setNetworkType(this._groupModule.getNetworkType()).setMessage("group count:".concat(o3)).end();
        } else
          t3.setNetworkType(this._groupModule.getNetworkType()).setMessage("group count:0").end();
        wl.log("".concat(this._className, "._initGroupList ok"));
      } }, { key: "handleUpdateGroupLastMessage", value: function(e4) {
        var n3 = "".concat(this._className, ".handleUpdateGroupLastMessage");
        if (wl.log("".concat(n3, " conversation count:").concat(e4.length, ", local group count:").concat(this._groupModule.getLocalGroupList().length)), 0 !== this._groupModule.getGroupMap().size) {
          for (var o3, r3, a3, s3 = false, i3 = 0, u3 = e4.length; i3 < u3; i3++)
            (o3 = e4[i3]).type === gr.CONV_GROUP && (r3 = o3.conversationID.split(/^GROUP/)[1], (a3 = this._groupModule.getLocalGroupProfile(r3)) && (a3.lastMessage = t2({}, o3.lastMessage), s3 = true));
          s3 && (this._groupModule.sortLocalGroupList(), this._groupModule.emitGroupListUpdate(true, false));
        } else
          this.tempConversationList = e4;
      } }, { key: "onNewGroupMessage", value: function(e4) {
        wl.debug("".concat(this._className, ".onNewGroupMessage count:").concat(e4.dataList.length));
        var t3 = this._newGroupMessageStoredAndSummary(e4), n3 = t3.conversationOptionsList, o3 = t3.messageList, r3 = t3.AVChatRoomMessageList;
        (r3.length > 0 && this._groupModule.onAVChatRoomMessage(r3), this._groupModule.filterModifiedMessage(o3), n3.length > 0) && (this._groupModule.updateNextMessageSeq(n3), this._groupModule.getModule(Hg).onNewMessage({ conversationOptionsList: n3, isInstantMessage: e4.isInstantMessage || true, updateUnreadCount: e4.updateUnreadCount || true }));
        var a3 = this._groupModule.filterUnmodifiedMessage(o3);
        a3.length > 0 && this._groupModule.emitOuterEvent(pr.MESSAGE_RECEIVED, a3), o3.length = 0;
      } }, { key: "_newGroupMessageStoredAndSummary", value: function(e4) {
        var t3 = this, n3 = e4.dataList, o3 = e4.event, r3 = e4.isInstantMessage, a3 = null, s3 = [], i3 = [], u3 = [], c3 = {}, l3 = this._groupModule.getModule(zg), d3 = n3.length;
        d3 > 1 && n3.sort(function(e5, t4) {
          return e5.sequence - t4.sequence;
        });
        for (var p3 = function(e5) {
          var d4 = vd(n3[e5]), p4 = d4.groupProfile, g4 = p4.groupID, h3 = p4.communityType, f3 = void 0 === h3 ? 0 : h3, _3 = p4.topicID, m3 = void 0 === _3 ? void 0 : _3, v3 = p4.invisible, M3 = void 0, y3 = t3._groupModule.isMessageFromTopic(f3, m3);
          if (y3) {
            M3 = gr.CONV_TOPIC, d4.to = m3;
            var I3 = t3._groupModule.getModule(Kg);
            I3.hasLocalTopic(g4, m3) || t3._getTopicPendingMap.has(m3) || (t3._getTopicPendingMap.set(m3, 1), I3.getTopicList({ groupID: g4, topicIDList: [m3] }).finally(function() {
              t3._getTopicPendingMap.delete(m3);
            }));
          }
          var T3 = t3._groupModule.hasLocalGroup(g4);
          if (!T3 && t3._groupModule.isUnjoinedAVChatRoom(g4))
            return "continue";
          if (!T3 && !y3)
            return t3._cacheGroupMessageAndProbe({ groupID: g4, event: o3, item: d4 }), "continue";
          if (t3._groupModule.isMessageFromOrToAVChatroom(g4))
            return d4.event = o3, u3.push(d4), "continue";
          if (d4.currentUser = t3._groupModule.getMyUserID(), d4.conversationType = gr.CONV_GROUP, d4.isSystemMessage = !!d4.isSystemMessage, a3 = new bM(d4), d4.elements = l3.parseElements(d4.elements, d4.from), a3.setElement(d4.elements), 1 === v3)
            return t3._qualityStat(r3, a3), "continue";
          var C3 = 1 === n3[e5].isModified, E3 = t3._groupModule.getModule(Hg);
          if (E3.isMessageSentByCurrentInstance(a3) ? a3.isModified = C3 : C3 = false, 1 === d4.onlineOnlyFlag)
            a3._onlineOnlyFlag = true, E3.isMessageSentByCurrentInstance(a3) || i3.push(a3);
          else {
            if (t3._groupModule.isMessageFromCommunityOfTopic(f3, m3))
              return i3.push(a3), "continue";
            if (!E3.pushIntoMessageList(i3, a3, C3))
              return "continue";
            t3._qualityStat(r3, a3);
            var S3 = a3, D3 = S3.conversationID, N3 = S3.sequence, A3 = E3.isRemoteRead({ conversationID: D3, sequence: N3 });
            if (td(c3[D3])) {
              var k3 = 0;
              "in" === a3.flow && (a3._isExcludedFromUnreadCount || A3 || (k3 = 1)), c3[D3] = s3.push({ conversationID: D3, unreadCount: k3, type: td(M3) ? a3.conversationType : M3, subType: a3.conversationSubType, lastMessage: a3._isExcludedFromLastMessage ? "" : a3 }) - 1;
            } else {
              var R3 = c3[D3];
              s3[R3].type = td(M3) ? a3.conversationType : M3, s3[R3].subType = a3.conversationSubType, s3[R3].lastMessage = a3._isExcludedFromLastMessage ? "" : a3, "in" === a3.flow && (a3._isExcludedFromUnreadCount || A3 || s3[R3].unreadCount++);
            }
          }
        }, g3 = 0; g3 < d3; g3++)
          p3(g3);
        return { conversationOptionsList: s3, messageList: i3, AVChatRoomMessageList: u3 };
      } }, { key: "_qualityStat", value: function(e4, t3) {
        var n3 = this._groupModule.getModule(ah);
        n3.addMessageSequence({ key: D_, message: t3 }), e4 && t3.clientTime > 0 && n3.addMessageDelay(t3.clientTime);
      } }, { key: "onGroupMessageRevoked", value: function(e4) {
        var t3 = this._groupModule.getModule(Hg), n3 = [], o3 = null, r3 = true;
        e4.dataList.forEach(function(e5) {
          var a3 = e5.elements.revokedInfos;
          td(a3) || a3.forEach(function(e6) {
            var a4 = Wd(e6.topicID) ? "GROUP".concat(e6.groupID) : "GROUP".concat(e6.topicID);
            o3 = t3.revoke(a4, e6.sequence, e6.random);
            var s3 = e6.revokerInfo && e6.revokerInfo.revoker;
            if (o3)
              o3.revoker = s3, n3.push(o3);
            else {
              var i3 = { conversationID: a4, to: e6.topicID || "", sequence: e6.sequence, time: e6.time, revoker: s3 };
              t3.isLastMessageRevoked(i3) && (n3.push(i3), r3 = false);
            }
          });
        }), 0 !== n3.length && (t3.onMessageRevoked(n3), true === r3 && (wl.log("".concat(this._className, ".onGroupMessageRevoked count:").concat(n3.length)), this._groupModule.emitOuterEvent(pr.MESSAGE_REVOKED, n3)));
      } }, { key: "_groupListTreeShaking", value: function(e4) {
        for (var t3 = new Map(v2(this._groupModule.getGroupMap())), n3 = 0, o3 = e4.length; n3 < o3; n3++)
          t3.delete(e4[n3].groupID);
        this._groupModule.hasJoinedAVChatRoom() && this._groupModule.getJoinedAVChatRoom().forEach(function(e5) {
          t3.delete(e5);
        });
        this._groupModule.getGroupMap().forEach(function(e5, n4) {
          e5.isSupportTopic && t3.delete(n4);
        });
        for (var r3 = v2(t3.keys()), a3 = 0, s3 = r3.length; a3 < s3; a3++)
          this._groupModule.deleteGroup(r3[a3]);
      } }, { key: "getGroupList", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, ".getGroupList"), o3 = new G_(P_.GET_GROUP_LIST);
        wl.log("".concat(n3));
        var r3 = { introduction: "Introduction", notification: "Notification", createTime: "CreateTime", ownerID: "Owner_Account", lastInfoTime: "LastInfoTime", memberNum: "MemberNum", maxMemberNum: "MaxMemberNum", joinOption: "ApplyJoinOption", muteAllMembers: "ShutUpAllMember" }, a3 = ["Type", "Name", "FaceUrl", "NextMsgSeq", "LastMsgTime", "AtInfoList", "LastRecallTime"], s3 = [];
        e4 && e4.groupProfileFilter && e4.groupProfileFilter.forEach(function(e5) {
          r3[e5] && a3.push(r3[e5]);
        });
        var i3 = (e4 || {}).isGroupWithTopicOnly, u3 = void 0 !== i3 && i3;
        return this._pagingGetGroupList({ limit: 50, offset: 0, groupBaseInfoFilter: a3, groupList: s3, isGroupWithTopicOnly: u3 }).then(function() {
          wl.log("".concat(n3, " ok. count:").concat(s3.length, " isGroupWithTopicOnly:").concat(u3)), u3 || t3._groupListTreeShaking(s3), t3._groupModule.updateGroupMap(s3);
          var e5 = t3._groupModule.getLocalGroupList().length;
          o3.setNetworkType(t3._groupModule.getNetworkType()).setMessage("remote count:".concat(s3.length, ", after tree shaking, local count:").concat(e5, ", isGroupWithTopicOnly:").concat(u3)).end(), t3.tempConversationList && (t3.handleUpdateGroupLastMessage(t3.tempConversationList), t3.tempConversationList = null), t3._groupModule.patchGroupMessageRemindType(), t3._groupModule.recomputeUnreadCount(), t3._groupModule.emitGroupListUpdate(true, !u3);
          var r4 = t3._groupModule.getLocalGroupList();
          if (u3) {
            var a4 = r4.filter(function(e6) {
              return true === e6.isSupportTopic;
            });
            return wM({ groupList: a4 });
          }
          return t3._isPagingGetCompleted = true, wM({ groupList: r4 });
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), r4 = n4[0], a4 = n4[1];
            o3.setError(e5, r4, a4).end();
          }), wl.error("".concat(n3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "isPagingGetCompleted", value: function() {
        return this._isPagingGetCompleted;
      } }, { key: "_pagingGetGroupList", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, "._pagingGetGroupList"), o3 = e4.isCommunityRelay, r3 = void 0 !== o3 && o3, a3 = e4.isGroupWithTopicOnly, s3 = void 0 !== a3 && a3, i3 = e4.limit, u3 = e4.offset, c3 = e4.groupBaseInfoFilter, l3 = e4.groupList;
        if (s3)
          return this._pagingGetGroupListWithTopic({ limit: i3, offset: u3, groupBaseInfoFilter: c3, groupList: l3 });
        var d3 = new G_(P_.PAGING_GET_GROUP_LIST);
        return this._groupModule.request({ protocolName: Qh, requestData: { type: r3 ? gr.GRP_COMMUNITY : void 0, memberAccount: this._groupModule.getMyUserID(), limit: i3, offset: u3, responseFilter: { groupBaseInfoFilter: c3, selfInfoFilter: ["Role", "JoinTime", "MsgFlag", "MsgSeq"] } } }).then(function(e5) {
          var o4 = e5.data, a4 = o4.groups, s4 = void 0 === a4 ? [] : a4, p3 = o4.totalCount;
          l3.push.apply(l3, v2(s4)), t3._handleGroupAtInfoWithoutTopic(r3, s4);
          var g3 = u3 + i3, h3 = !(p3 > g3), f3 = "offset:".concat(u3, " totalCount:").concat(p3, " isCompleted:").concat(h3, " ") + "currentCount:".concat(l3.length, " isCommunityRelay:").concat(r3);
          return d3.setNetworkType(t3._groupModule.getNetworkType()).setMessage("".concat(f3)).end(), r3 || h3 ? !r3 && h3 ? (wl.log("".concat(n3, " start to get community list")), u3 = 0, t3._pagingGetGroupList({ limit: i3, offset: u3, groupBaseInfoFilter: c3, groupList: l3, isCommunityRelay: true })) : r3 && !h3 ? (u3 = g3, t3._pagingGetGroupList({ limit: i3, offset: u3, groupBaseInfoFilter: c3, groupList: l3, isCommunityRelay: true })) : (wl.log("".concat(n3, " ok. totalCount:").concat(l3.length)), wM({ groupList: l3 })) : (u3 = g3, t3._pagingGetGroupList({ limit: i3, offset: u3, groupBaseInfoFilter: c3, groupList: l3 }));
        }).catch(function(e5) {
          return 11e3 !== e5.code && t3._groupModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], a4 = n4[1];
            d3.setMessage("isCommunityRelay:".concat(r3)).setError(e5, o4, a4).end();
          }), r3 ? (11e3 === e5.code && (d3 = null, wl.log("".concat(n3, " ok. community unavailable"))), WM({ groupList: l3 })) : YM(e5);
        });
      } }, { key: "_pagingGetGroupListWithTopic", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, "._pagingGetGroupListWithTopic"), o3 = e4.limit, r3 = e4.offset, a3 = e4.groupBaseInfoFilter, s3 = e4.groupList, i3 = new G_(P_.PAGING_GET_GROUP_LIST_WITH_TOPIC);
        return this._groupModule.request({ protocolName: Qh, requestData: { type: gr.GRP_COMMUNITY, memberAccount: this._groupModule.getMyUserID(), limit: o3, offset: r3, responseFilter: { groupBaseInfoFilter: a3, selfInfoFilter: ["Role", "JoinTime", "MsgFlag", "MsgSeq"] }, isSupportTopic: 1 } }).then(function(e5) {
          var u3 = e5.data, c3 = u3.groups, l3 = void 0 === c3 ? [] : c3, d3 = u3.totalCount;
          s3.push.apply(s3, v2(l3));
          var p3 = r3 + o3, g3 = !(d3 > p3), h3 = "offset:".concat(r3, " totalCount:").concat(d3, " isCompleted:").concat(g3, " ") + "currentCount:".concat(s3.length);
          return i3.setNetworkType(t3._groupModule.getNetworkType()).setMessage("".concat(h3)).end(), g3 ? (wl.log("".concat(n3, " ok. totalCount:").concat(s3.length)), wM({ groupList: s3 })) : (r3 = p3, t3._pagingGetGroupListWithTopic({ limit: o3, offset: r3, groupBaseInfoFilter: a3, groupList: s3 }));
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            i3.setError(e5, o4, r4).end();
          }), YM(e5);
        });
      } }, { key: "_cacheGroupMessage", value: function(e4, t3) {
        this._cachedGroupMessageMap.has(e4) || this._cachedGroupMessageMap.set(e4, []), this._cachedGroupMessageMap.get(e4).push(t3);
      } }, { key: "_deleteCachedGroupMessage", value: function(e4) {
        this._cachedGroupMessageMap.has(e4) && this._cachedGroupMessageMap.delete(e4);
      } }, { key: "_notifyCachedGroupMessage", value: function(e4) {
        var t3 = this, n3 = this._cachedGroupMessageMap.get(e4) || [];
        n3.forEach(function(e5) {
          t3.onNewGroupMessage(e5);
        }), this._deleteCachedGroupMessage(e4), wl.log("".concat(this._className, "._notifyCachedGroupMessage groupID:").concat(e4, " count:").concat(n3.length));
      } }, { key: "_cacheGroupMessageAndProbe", value: function(e4) {
        var t3 = this, n3 = e4.groupID, o3 = e4.event, r3 = e4.item;
        this._cacheGroupMessage(n3, { event: o3, dataList: [r3] }), this._groupModule.getGroupSimplifiedInfo(n3).then(function(e5) {
          e5.type === gr.GRP_AVCHATROOM ? t3._groupModule.hasLocalGroup(n3) ? t3._notifyCachedGroupMessage(n3) : t3._groupModule.setUnjoinedAVChatRoom(n3) : (t3._groupModule.updateGroupMap([e5]), t3._notifyCachedGroupMessage(n3));
        }), this._checkCountMap.has(n3) || this._checkCountMap.set(n3, 0), wl.log("".concat(this._className, "._cacheGroupMessageAndProbe groupID:").concat(n3));
      } }, { key: "_handleGroupAtInfoWithoutTopic", value: function(e4, n3) {
        var o3 = this;
        e4 && 0 !== n3.length && n3.forEach(function(e5) {
          var n4 = e5.groupID, r3 = e5.groupAtInfoList, a3 = [];
          td(r3) || (r3.forEach(function(e6) {
            a3.push(t2(t2({}, e6), {}, { groupID: n4 }));
          }), o3._groupModule.getModule(Hg).onNewGroupAtTips({ dataList: a3 }));
        });
      } }, { key: "reset", value: function() {
        this._cachedGroupMessageMap.clear(), this._checkCountMap.clear(), this._getTopicPendingMap.clear(), this._isPagingGetCompleted = false, this._groupModule.getInnerEmitterInstance().once(ly, this._initGroupList, this);
      } }]), e3;
    }(), wy = 1, Fy = 2, qy = 3, xy = 4, Vy = 5, By = function() {
      function e3(t3) {
        o2(this, e3), this._groupModule = t3, this._className = "GroupAttributesHandler", this._groupAttributesMap = /* @__PURE__ */ new Map(), this.CACHE_EXPIRE_TIME = 3e4, this._groupModule.getInnerEmitterInstance().on(dy, this._onCloudConfigUpdated, this);
      }
      return a2(e3, [{ key: "_onCloudConfigUpdated", value: function() {
        var e4 = this._groupModule.getCloudConfig("grp_attr_cache_time");
        td(e4) || (this.CACHE_EXPIRE_TIME = Number(e4));
      } }, { key: "updateLocalMainSequenceOnReconnected", value: function() {
        this._groupAttributesMap.forEach(function(e4) {
          e4.localMainSequence = 0;
        });
      } }, { key: "isGroupAttributesUpdatedNotice", value: function(e4) {
        var t3 = e4.to, n3 = e4.elements.newGroupProfile, o3 = !td(n3) && !Wd(n3.groupAttributeOption);
        return o3 && this._onGroupAttributesUpdated({ groupID: t3, groupAttributeOption: n3.groupAttributeOption }), o3;
      } }, { key: "_onGroupAttributesUpdated", value: function(e4) {
        var t3 = this, n3 = e4.groupID, o3 = e4.groupAttributeOption, r3 = o3.mainSequence, a3 = o3.isWithChangedAttributeInfo, s3 = o3.groupAttributeList, i3 = void 0 === s3 ? [] : s3, u3 = o3.operationType;
        if (wl.log("".concat(this._className, ".onGroupAttributesUpdated. ") + "groupID:".concat(n3, " isWithChangedAttributeInfo:").concat(a3, " operationType:").concat(u3)), !td(u3)) {
          if (1 === a3)
            return this._refreshCachedGroupAttributes({ groupID: n3, remoteMainSequence: r3, groupAttributeList: i3, operationType: u3 }), void this._emitGroupAttributesUpdated(n3);
          if (this._hasLocalGroupAttributes(n3)) {
            var c3 = this._getLocalGroupAttributes(n3).avChatRoomKey;
            this._getGroupAttributes({ groupID: n3, avChatRoomKey: c3 }).then(function() {
              t3._emitGroupAttributesUpdated(n3);
            });
          }
        }
      } }, { key: "initGroupAttributesCache", value: function(e4) {
        var t3 = e4.groupID, n3 = e4.avChatRoomKey, o3 = void 0 === n3 ? void 0 : n3;
        this._groupAttributesMap.set(t3, { lastUpdateTime: 0, localMainSequence: 0, remoteMainSequence: 0, attributes: /* @__PURE__ */ new Map(), avChatRoomKey: o3 }), wl.log("".concat(this._className, ".initGroupAttributesCache groupID:").concat(t3, " avChatRoomKey:").concat(o3));
      } }, { key: "initGroupAttributes", value: function(e4) {
        var t3 = this, n3 = e4.groupID, o3 = e4.groupAttributes, r3 = this._getLocalGroupAttributes(n3), a3 = r3.remoteMainSequence, s3 = r3.avChatRoomKey, i3 = new G_(P_.INIT_GROUP_ATTRIBUTES);
        return i3.setMessage("groupID:".concat(n3, " avChatRoomKey:").concat(s3, " mainSequence:").concat(a3)), this._groupModule.request({ protocolName: Df, requestData: { groupID: n3, avChatRoomKey: s3, mainSequence: a3, groupAttributeList: this._transformGroupAttributes(o3) } }).then(function(e5) {
          var r4 = e5.data, a4 = r4.mainSequence, s4 = v2(r4.groupAttributeList);
          return s4.forEach(function(e6) {
            e6.value = o3[e6.key];
          }), t3._refreshCachedGroupAttributes({ groupID: n3, remoteMainSequence: a4, groupAttributeList: s4, operationType: wy }), i3.setNetworkType(t3._groupModule.getNetworkType()).end(), wl.log("".concat(t3._className, ".initGroupAttributes ok. groupID:").concat(n3)), wM({ groupAttributes: o3 });
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            i3.setError(e5, o4, r4).end();
          }), YM(e5);
        });
      } }, { key: "setGroupAttributes", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, ".setGroupAttributes"), o3 = e4.groupID, r3 = e4.groupAttributes, a3 = this._getLocalGroupAttributes(o3), s3 = a3.remoteMainSequence, i3 = a3.avChatRoomKey, u3 = a3.attributes, c3 = this._transformGroupAttributes(r3);
        c3.forEach(function(e5) {
          var t4 = e5.key;
          e5.sequence = 0, u3.has(t4) && (e5.sequence = u3.get(t4).sequence);
        });
        var l3 = new G_(P_.SET_GROUP_ATTRIBUTES);
        return l3.setMessage("groupID:".concat(o3, "groupAttributes:").concat(JSON.stringify(r3))), wl.log("".concat(n3, ". groupID:").concat(o3, " mainSequence:").concat(s3)), this._groupModule.request({ protocolName: Nf, requestData: { groupID: o3, avChatRoomKey: i3, mainSequence: s3, groupAttributeList: c3 } }).then(function(e5) {
          var a4 = e5.data, s4 = a4.mainSequence, i4 = v2(a4.groupAttributeList);
          return i4.forEach(function(e6) {
            e6.value = r3[e6.key];
          }), t3._refreshCachedGroupAttributes({ groupID: o3, remoteMainSequence: s4, groupAttributeList: i4, operationType: Fy }), l3.setNetworkType(t3._groupModule.getNetworkType()).end(), wl.log("".concat(n3, " ok.")), wM({ groupAttributes: r3 });
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            l3.setError(e5, o4, r4).end();
          }), YM(e5);
        });
      } }, { key: "deleteGroupAttributes", value: function(e4) {
        var t3 = this, n3 = e4.groupID, o3 = e4.keyList, r3 = void 0 === o3 ? [] : o3, a3 = this._getLocalGroupAttributes(n3), s3 = a3.remoteMainSequence, i3 = a3.avChatRoomKey, u3 = a3.attributes, c3 = v2(u3.keys()), l3 = kf, d3 = qy, p3 = { groupID: n3, avChatRoomKey: i3, mainSequence: s3 }, g3 = [];
        r3.length > 0 && (c3 = [], l3 = Af, d3 = xy, r3.forEach(function(e5) {
          var t4 = 0;
          u3.has(e5) && (t4 = u3.get(e5).sequence, c3.push(e5)), g3.push({ key: e5, sequence: t4 });
        }), p3.groupAttributeList = g3);
        var h3 = new G_(P_.DELETE_GROUP_ATTRIBUTES);
        return h3.setMessage("groupID:".concat(n3, " mainSequence:").concat(s3, " keyList:").concat(r3, " protocolName:").concat(l3)), this._groupModule.request({ protocolName: l3, requestData: p3 }).then(function(e5) {
          var o4 = e5.data.mainSequence;
          return t3._refreshCachedGroupAttributes({ groupID: n3, remoteMainSequence: o4, groupAttributeList: g3, operationType: d3 }), h3.setNetworkType(t3._groupModule.getNetworkType()).end(), wl.log("".concat(t3._className, ".deleteGroupAttributes ok. groupID:").concat(n3)), wM({ keyList: c3 });
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            h3.setError(e5, o4, r4).end();
          }), YM(e5);
        });
      } }, { key: "getGroupAttributes", value: function(e4) {
        var t3 = this, n3 = e4.groupID, o3 = this._getLocalGroupAttributes(n3), r3 = o3.avChatRoomKey, a3 = o3.lastUpdateTime, s3 = o3.localMainSequence, i3 = o3.remoteMainSequence, u3 = new G_(P_.GET_GROUP_ATTRIBUTES);
        if (u3.setMessage("groupID:".concat(n3, " localMainSequence:").concat(s3, " remoteMainSequence:").concat(i3, " keyList:").concat(e4.keyList)), Date.now() - a3 >= this.CACHE_EXPIRE_TIME || s3 < i3)
          return this._getGroupAttributes({ groupID: n3, avChatRoomKey: r3 }).then(function(o4) {
            u3.setMoreMessage("get attributes from remote. count:".concat(o4.length)).setNetworkType(t3._groupModule.getNetworkType()).end(), wl.log("".concat(t3._className, ".getGroupAttributes from remote. groupID:").concat(n3));
            var r4 = t3._getCachedAttributes(e4);
            return wM({ groupAttributes: r4 });
          }).catch(function(e5) {
            return t3._groupModule.probeNetwork().then(function(t4) {
              var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
              u3.setError(e5, o4, r4).end();
            }), YM(e5);
          });
        u3.setMoreMessage("get attributes from cache").setNetworkType(this._groupModule.getNetworkType()).end(), wl.log("".concat(this._className, ".getGroupAttributes from cache. groupID:").concat(n3));
        var c3 = this._getCachedAttributes(e4);
        return WM({ groupAttributes: c3 });
      } }, { key: "_getGroupAttributes", value: function(e4) {
        var n3 = this, o3 = 0;
        return td(e4.avChatRoomKey) || (o3 = 1), this._groupModule.request({ protocolName: Rf, requestData: t2(t2({}, e4), {}, { groupType: o3 }) }).then(function(t3) {
          var o4 = t3.data, r3 = o4.mainSequence, a3 = o4.groupAttributeList, s3 = v2(a3);
          return td(r3) || n3._refreshCachedGroupAttributes({ groupID: e4.groupID, remoteMainSequence: r3, groupAttributeList: s3, operationType: Vy }), wl.log("".concat(n3._className, "._getGroupAttributes ok. groupID:").concat(e4.groupID)), a3;
        }).catch(function(e5) {
          return YM(e5);
        });
      } }, { key: "_refreshCachedGroupAttributes", value: function(e4) {
        var t3 = e4.groupID, n3 = e4.remoteMainSequence, o3 = e4.groupAttributeList, r3 = e4.operationType;
        if (this._hasLocalGroupAttributes(t3)) {
          var a3 = this._getLocalGroupAttributes(t3), s3 = a3.localMainSequence;
          if (r3 === Vy || n3 - s3 == 1)
            a3.remoteMainSequence = n3, a3.localMainSequence = n3, a3.lastUpdateTime = Date.now(), this._updateCachedAttributes({ groupAttributes: a3, groupAttributeList: o3, operationType: r3 });
          else {
            if (s3 === n3)
              return;
            a3.remoteMainSequence = n3;
          }
          this._groupAttributesMap.set(t3, a3);
          var i3 = "operationType:".concat(r3, " localMainSequence:").concat(s3, " remoteMainSequence:").concat(n3);
          wl.log("".concat(this._className, "._refreshCachedGroupAttributes. ").concat(i3));
        }
      } }, { key: "_getCachedAttributes", value: function(e4) {
        var t3 = e4.groupID, n3 = e4.keyList, o3 = void 0 === n3 ? [] : n3, r3 = {};
        if (this._hasLocalGroupAttributes(t3)) {
          var a3 = this._getLocalGroupAttributes(t3).attributes;
          if (o3.length > 0)
            o3.forEach(function(e5) {
              a3.has(e5) && (r3[e5] = a3.get(e5).value);
            });
          else {
            var s3, i3 = E2(a3.keys());
            try {
              for (i3.s(); !(s3 = i3.n()).done; ) {
                var u3 = s3.value;
                r3[u3] = a3.get(u3).value;
              }
            } catch (c3) {
              i3.e(c3);
            } finally {
              i3.f();
            }
          }
        }
        return r3;
      } }, { key: "_updateCachedAttributes", value: function(e4) {
        var t3 = e4.groupAttributes, n3 = e4.groupAttributeList, o3 = e4.operationType;
        o3 !== qy ? o3 !== xy ? (o3 === wy && t3.attributes.clear(), n3.forEach(function(e5) {
          var n4 = e5.key, o4 = e5.value, r3 = e5.sequence;
          t3.attributes.set(n4, { value: o4, sequence: r3 });
        })) : n3.forEach(function(e5) {
          t3.attributes.delete(e5.key);
        }) : t3.attributes.clear();
      } }, { key: "_hasLocalGroupAttributes", value: function(e4) {
        return this._groupAttributesMap.has(e4);
      } }, { key: "_getLocalGroupAttributes", value: function(e4) {
        return this._hasLocalGroupAttributes(e4) || this.initGroupAttributesCache({ groupID: e4 }), this._groupAttributesMap.get(e4);
      } }, { key: "_transformGroupAttributes", value: function(e4) {
        var t3 = [];
        return Object.keys(e4).forEach(function(n3) {
          t3.push({ key: n3, value: e4[n3] });
        }), t3;
      } }, { key: "_emitGroupAttributesUpdated", value: function(e4) {
        var t3 = this._getCachedAttributes({ groupID: e4 });
        this._groupModule.emitOuterEvent(pr.GROUP_ATTRIBUTES_UPDATED, { groupID: e4, groupAttributes: t3 });
      } }, { key: "deleteLocalGroupAttributes", value: function(e4) {
        this._hasLocalGroupAttributes(e4) && this._groupAttributesMap.delete(e4);
      } }, { key: "reset", value: function() {
        this._groupAttributesMap.clear(), this.CACHE_EXPIRE_TIME = 3e4;
      } }]), e3;
    }(), Ky = "Set", Hy = "Increase", jy = "Decrease", Wy = function() {
      function e3(t3) {
        o2(this, e3), this._groupModule = t3, this._className = "GroupCountersHandler", this._groupCountersMap = /* @__PURE__ */ new Map(), this.EXPIRE_TIME = 3e4, this._groupModule.getInnerEmitterInstance().on(dy, this._onCloudConfigUpdated, this);
      }
      return a2(e3, [{ key: "_onCloudConfigUpdated", value: function() {
        var e4 = this._groupModule.getCloudConfig("grp_counter_expire_time");
        td(e4) || (this.EXPIRE_TIME = Number(e4));
      } }, { key: "isGroupCountersNotice", value: function(e4) {
        var t3 = e4.to, n3 = e4.elements.groupCounterInfo, o3 = false;
        return Wd(n3) || (this._onGroupCountersUpdated({ groupID: t3, groupCounterInfo: n3 }), o3 = true), o3;
      } }, { key: "_onGroupCountersUpdated", value: function(e4) {
        var t3 = this, n3 = e4.groupID;
        e4.groupCounterInfo.forEach(function(e5) {
          var o3 = e5.type, r3 = e5.groupCounterSeq, a3 = e5.counterList, s3 = void 0 === a3 ? [] : a3;
          0 !== o3 && 2 !== o3 || (t3._updateLocalGroupCounters({ groupID: n3, groupCounterSeq: r3, counterList: s3 }), s3.forEach(function(e6) {
            t3._groupModule.emitOuterEvent(pr.GROUP_COUNTER_UPDATED, { groupID: n3, key: e6.key, value: e6.value });
          })), 1 === o3 && t3._deleteLocalGroupCounters({ groupID: n3, groupCounterSeq: r3, counterList: s3 });
        }), wl.log("".concat(this._className, "._onGroupCountersUpdated groupID:").concat(n3));
      } }, { key: "initGroupCountersCache", value: function(e4) {
        var t3 = e4.groupID, n3 = e4.avChatRoomKey;
        this._groupCountersMap.set(t3, { lastUpdateTime: 0, groupCounterSeq: 0, counters: /* @__PURE__ */ new Map(), avChatRoomKey: n3 }), wl.log("".concat(this._className, ".initGroupCountersCache groupID:").concat(t3, " avChatRoomKey:").concat(n3));
      } }, { key: "setGroupCounters", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, ".setGroupCounters"), o3 = e4.groupID, r3 = e4.counters, a3 = this._convertObjectToList(r3), s3 = this._getLocalGroupCounters(o3).avChatRoomKey, i3 = "groupID:".concat(o3, " count:").concat(a3.length), u3 = new G_(P_.SET_GROUP_COUNTERS);
        return u3.setMessage("".concat(i3)), wl.log("".concat(n3, ". ").concat(i3)), this._updateGroupCounters({ groupID: o3, counterList: a3, avChatRoomKey: s3, mode: Ky }).then(function(e5) {
          return u3.end(), wl.log("".concat(n3, " ok.")), wM({ counters: e5 });
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            u3.setError(e5, o4, r4).end();
          }), wl.error("".concat(n3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "increaseGroupCounter", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, ".increaseGroupCounters"), o3 = e4.groupID, r3 = e4.key, a3 = e4.value, s3 = this._getLocalGroupCounters(o3).avChatRoomKey, i3 = "groupID:".concat(o3, " key:").concat(r3, " value:").concat(a3), u3 = new G_(P_.INCREASE_GROUP_COUNTER);
        u3.setMessage("".concat(i3)), wl.log("".concat(n3, ". ").concat(i3));
        var c3 = [{ key: r3, value: a3 }];
        return this._updateGroupCounters({ groupID: o3, counterList: c3, avChatRoomKey: s3, mode: Hy }).then(function(e5) {
          return u3.end(), wl.log("".concat(n3, " ok.")), wM({ counters: e5 });
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            u3.setError(e5, o4, r4).end();
          }), wl.error("".concat(n3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "decreaseGroupCounter", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, ".decreaseGroupCounter"), o3 = e4.groupID, r3 = e4.key, a3 = e4.value, s3 = this._getLocalGroupCounters(o3).avChatRoomKey, i3 = "groupID:".concat(o3, " key:").concat(r3, " value:").concat(a3), u3 = new G_(P_.DECREASE_GROUP_COUNTER);
        u3.setMessage("".concat(i3)), wl.log("".concat(n3, ". ").concat(i3));
        var c3 = [{ key: r3, value: a3 }];
        return this._updateGroupCounters({ groupID: o3, counterList: c3, avChatRoomKey: s3, mode: jy }).then(function(e5) {
          return u3.end(), wl.log("".concat(n3, " ok.")), wM({ counters: e5 });
        }).catch(function(e5) {
          return t3._groupModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            u3.setError(e5, o4, r4).end();
          }), wl.error("".concat(n3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "getGroupCounters", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, ".getGroupCounters"), o3 = e4.groupID, r3 = e4.keyList, a3 = void 0 === r3 ? [] : r3, s3 = this._getLocalGroupCounters(o3), i3 = s3.avChatRoomKey, u3 = s3.lastUpdateTime, c3 = new G_(P_.GET_GROUP_COUNTERS);
        if (c3.setMessage("groupID:".concat(o3)), Date.now() - u3 >= this.EXPIRE_TIME)
          return this._getRemoteGroupCounters({ groupID: o3, avChatRoomKey: i3 }).then(function(e5) {
            c3.setMoreMessage("from remote. count:".concat(e5.length)).end(), wl.log("".concat(n3, " from remote. groupID:").concat(o3));
            var r4 = t3._getLocalCounters(o3, a3);
            return wM({ counters: r4 });
          }).catch(function(e5) {
            return t3._groupModule.probeNetwork().then(function(t4) {
              var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
              c3.setError(e5, o4, r4).end();
            }), YM(e5);
          });
        c3.setMoreMessage("from cache").end(), wl.log("".concat(n3, " from cache. groupID:").concat(o3));
        var l3 = this._getLocalCounters(o3, a3);
        return WM({ counters: l3 });
      } }, { key: "_getRemoteGroupCounters", value: function(e4) {
        var n3 = this;
        return this._groupModule.request({ protocolName: Uf, requestData: t2({}, e4) }).then(function(t3) {
          var o3 = t3.data, r3 = o3.counterList, a3 = void 0 === r3 ? [] : r3, s3 = o3.groupCounterSeq;
          return n3._updateLocalGroupCounters({ groupID: e4.groupID, counterList: a3, groupCounterSeq: s3 }), wl.log("".concat(n3._className, "._getRemoteGroupCounters ok. groupID:").concat(e4.groupID)), a3;
        }).catch(function(e5) {
          return YM(e5);
        });
      } }, { key: "_convertObjectToList", value: function(e4) {
        var t3 = [];
        return Object.keys(e4).forEach(function(n3) {
          t3.push({ key: n3, value: e4[n3] });
        }), t3;
      } }, { key: "_updateGroupCounters", value: function(e4) {
        var n3 = "".concat(this._className, "._updateGroupCounters"), o3 = e4.groupID, r3 = e4.avChatRoomKey, a3 = e4.mode;
        return wl.log("".concat(n3, ". groupID:").concat(o3, " avChatRoomKey:").concat(r3, " mode:").concat(a3)), this._groupModule.request({ protocolName: Pf, requestData: t2({}, e4) }).then(function(e5) {
          wl.log("".concat(n3, " ok."));
          var t3 = e5.data.counterList, o4 = {};
          return (void 0 === t3 ? [] : t3).forEach(function(e6) {
            var t4 = e6.key, n4 = e6.value;
            o4[t4] = n4;
          }), o4;
        }).catch(function(e5) {
          return YM(e5);
        });
      } }, { key: "_hasLocalGroupCounters", value: function(e4) {
        return this._groupCountersMap.has(e4);
      } }, { key: "_getLocalGroupCounters", value: function(e4) {
        return this._hasLocalGroupCounters(e4) || this.initGroupCountersCache({ groupID: e4 }), this._groupCountersMap.get(e4);
      } }, { key: "_updateLocalGroupCounters", value: function(e4) {
        var t3 = e4.groupID, n3 = e4.counterList, o3 = void 0 === n3 ? [] : n3, r3 = e4.groupCounterSeq;
        if (this._hasLocalGroupCounters(t3)) {
          var a3 = this._getLocalGroupCounters(t3), s3 = a3.counters, i3 = a3.avChatRoomKey, u3 = a3.groupCounterSeq;
          if (r3 > 0 && r3 < u3)
            return;
          o3.forEach(function(e5) {
            var t4 = e5.key, n4 = e5.value;
            s3.set(t4, n4);
          }), this._groupCountersMap.set(t3, { lastUpdateTime: Date.now(), groupCounterSeq: r3, counters: s3, avChatRoomKey: i3 });
        }
      } }, { key: "_deleteLocalGroupCounters", value: function(e4) {
        var t3 = e4.groupID, n3 = e4.counterList, o3 = void 0 === n3 ? [] : n3, r3 = e4.groupCounterSeq;
        if (this._hasLocalGroupCounters(t3)) {
          var a3 = this._getLocalGroupCounters(t3), s3 = a3.counters, i3 = a3.avChatRoomKey;
          o3.forEach(function(e5) {
            s3.delete(e5.key);
          }), this._groupCountersMap.set(t3, { lastUpdateTime: Date.now(), groupCounterSeq: r3, counters: s3, avChatRoomKey: i3 });
        }
      } }, { key: "_getLocalCounters", value: function(e4, t3) {
        var n3 = {};
        if (!this._hasLocalGroupCounters(e4))
          return n3;
        var o3 = this._getLocalGroupCounters(e4).counters;
        if (t3.length > 0)
          t3.forEach(function(e5) {
            o3.has(e5) && (n3[e5] = o3.get(e5));
          });
        else {
          var r3, a3 = E2(o3.keys());
          try {
            for (a3.s(); !(r3 = a3.n()).done; ) {
              var s3 = r3.value;
              n3[s3] = o3.get(s3);
            }
          } catch (i3) {
            a3.e(i3);
          } finally {
            a3.f();
          }
        }
        return n3;
      } }, { key: "reset", value: function() {
        this._groupCountersMap.clear(), this.EXPIRE_TIME = 3e4;
      } }]), e3;
    }(), Yy = function() {
      function e3(t3) {
        o2(this, e3);
        var n3 = t3.manager, r3 = t3.groupID, a3 = t3.onInit, s3 = t3.onSuccess, i3 = t3.onFail;
        this._className = "Polling", this._manager = n3, this._groupModule = n3._groupModule, this._onInit = a3, this._onSuccess = s3, this._onFail = i3, this._groupID = r3, this._timeoutID = -1, this._isRunning = false, this._protocolName = If;
      }
      return a2(e3, [{ key: "start", value: function() {
        var e4 = this._groupModule.isLoggedIn();
        e4 || (this._protocolName = Tf), wl.log("".concat(this._className, ".start pollingInterval:").concat(this._manager.getPollingInterval(), " isLoggedIn:").concat(e4)), this._isRunning = true, this._request();
      } }, { key: "isRunning", value: function() {
        return this._isRunning;
      } }, { key: "_request", value: function() {
        var e4 = this, t3 = this._onInit(this._groupID);
        this._groupModule.request({ protocolName: this._protocolName, requestData: t3 }).then(function(t4) {
          e4._onSuccess(e4._groupID, t4), e4.isRunning() && (clearTimeout(e4._timeoutID), e4._timeoutID = setTimeout(e4._request.bind(e4), e4._manager.getPollingInterval()));
        }).catch(function(t4) {
          e4._onFail(e4._groupID, t4), e4.isRunning() && (clearTimeout(e4._timeoutID), e4._timeoutID = setTimeout(e4._request.bind(e4), e4._manager.MAX_POLLING_INTERVAL));
        });
      } }, { key: "stop", value: function() {
        wl.log("".concat(this._className, ".stop")), this._timeoutID > 0 && (clearTimeout(this._timeoutID), this._timeoutID = -1), this._isRunning = false;
      } }]), e3;
    }(), $y = { 3: true, 4: true, 5: true, 6: true, 17: true }, zy = function() {
      function e3(t3) {
        o2(this, e3), this._groupModule = t3, this._className = "AVChatRoomHandler", this._joinedGroupMap = /* @__PURE__ */ new Map(), this._pollingRequestInfoMap = /* @__PURE__ */ new Map(), this._pollingInstanceMap = /* @__PURE__ */ new Map(), this.sequencesLinkedList = new Cy(200), this.messageIDLinkedList = new Cy(100), this.receivedMessageCount = 0, this._reportMessageStackedCount = 0, this._onlineMemberCountMap = /* @__PURE__ */ new Map(), this.DEFAULT_EXPIRE_TIME = 60, this.DEFAULT_POLLING_INTERVAL = 300, this.MAX_POLLING_INTERVAL = 2e3, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL, this.DEFAULT_POLLING_NO_MESSAGE_COUNT = 20, this.DEFAULT_POLLING_INTERVAL_PLUS = 2e3, this._pollingNoMessageCount = 0, this._startBroadcastSeq = 1, this._broadcastMessageIDMap = /* @__PURE__ */ new Map();
      }
      return a2(e3, [{ key: "hasJoinedAVChatRoom", value: function() {
        return this._joinedGroupMap.size > 0;
      } }, { key: "checkJoinedAVChatRoomByID", value: function(e4) {
        return this._joinedGroupMap.has(e4);
      } }, { key: "getJoinedAVChatRoom", value: function() {
        return this._joinedGroupMap.size > 0 ? v2(this._joinedGroupMap.keys()) : null;
      } }, { key: "_updateRequestData", value: function(e4) {
        var n3 = this._pollingRequestInfoMap.get(e4);
        return e4 === v2(this._pollingInstanceMap.keys())[0] ? t2(t2({}, n3), {}, { startBroadcastSeq: this._startBroadcastSeq }) : t2({}, n3);
      } }, { key: "_handleSuccess", value: function(e4, t3) {
        var n3 = t3.data, o3 = n3.key, r3 = n3.nextSeq, a3 = n3.rspMsgList, s3 = n3.errorCode, i3 = n3.nextBroadcastSeq, u3 = n3.broadcastMessageList;
        if (0 !== s3) {
          var c3 = this._pollingRequestInfoMap.get(e4), l3 = new G_(P_.LONG_POLLING_AV_ERROR), d3 = c3 ? "".concat(c3.key, "-").concat(c3.startSeq) : "requestInfo is undefined";
          l3.setMessage("".concat(e4, "-").concat(d3, "-").concat(t3.errorInfo)).setCode(t3.errorCode).setNetworkType(this._groupModule.getNetworkType()).end(true);
        } else {
          if (!this.checkJoinedAVChatRoomByID(e4))
            return;
          Xl(o3) && Jl(r3) && this._pollingRequestInfoMap.set(e4, { key: o3, startSeq: r3 }), Jl(i3) && i3 > this._startBroadcastSeq && (this._startBroadcastSeq = i3), ed(a3) && a3.length > 0 ? (a3.forEach(function(e5) {
            e5.to = e5.groupID;
          }), this.onMessage(a3)) : (this._pollingNoMessageCount += 1, this._pollingNoMessageCount === this.DEFAULT_POLLING_NO_MESSAGE_COUNT && (this._pollingInterval = this.DEFAULT_POLLING_INTERVAL + this.DEFAULT_POLLING_INTERVAL_PLUS)), this._onBroadcastMessage(u3);
        }
      } }, { key: "_handleFailure", value: function(e4, t3) {
      } }, { key: "onMessage", value: function(e4) {
        if (ed(e4) && 0 !== e4.length) {
          0 !== this._pollingNoMessageCount && (this._pollingNoMessageCount = 0, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL);
          var t3 = null, n3 = [], o3 = this._getModule(Hg), r3 = this._getModule(ah), a3 = e4.length;
          a3 > 1 && e4.sort(function(e5, t4) {
            return e5.sequence - t4.sequence;
          });
          for (var s3 = this._getModule(jg), i3 = 0; i3 < a3; i3++)
            if ($y[e4[i3].event]) {
              if (6 === e4[i3].event) {
                if (this._groupModule.isGroupAttributesUpdatedNotice(e4[i3]))
                  continue;
                if (this._groupModule.isGroupCountersNotice(e4[i3]))
                  continue;
              }
              this.receivedMessageCount += 1, t3 = this.packMessage(e4[i3], e4[i3].event);
              var u3 = 1 === e4[i3].isModified, c3 = 1 === e4[i3].isHistoryMessage;
              if ((s3.isUnlimitedAVChatRoom() || !this.sequencesLinkedList.has(t3.sequence)) && !this.messageIDLinkedList.has(t3.ID)) {
                var l3 = t3.conversationID;
                if (this.receivedMessageCount % 50 == 0 ? this._getModule(th).detectFirstRound(l3, this.sequencesLinkedList.data()) : this.receivedMessageCount % 80 == 0 && this._getModule(th).detectSecondRound(l3, this.sequencesLinkedList.data()), null !== this.sequencesLinkedList.tail()) {
                  var d3 = this.sequencesLinkedList.tail().value, p3 = t3.sequence - d3;
                  p3 > 1 && p3 <= 20 ? this._getModule(th).onMessageMaybeLost(l3, d3 + 1, p3 - 1) : p3 < -1 && p3 >= -20 && this._getModule(th).onMessageMaybeLost(l3, t3.sequence + 1, Math.abs(p3) - 1);
                }
                this.sequencesLinkedList.set(t3.sequence), this.messageIDLinkedList.set(t3.ID);
                var g3 = false;
                if (this._isMessageSentByCurrentInstance(t3) ? u3 && (g3 = true, t3.isModified = u3, o3.updateMessageIsModifiedProperty(t3)) : g3 = true, g3) {
                  if (t3.conversationType === gr.CONV_SYSTEM && 5 === t3.payload.operationType && this._onGroupDismissed(t3.payload.groupProfile.groupID), !c3 && t3.conversationType !== gr.CONV_SYSTEM) {
                    var h3 = t3.conversationID.replace(gr.CONV_GROUP, "");
                    this._pollingInstanceMap.has(h3) ? this._groupModule.isLoggedIn() && r3.addMessageSequence({ key: A_, message: t3 }) : (t3.type !== gr.MSG_GRP_TIP && t3.clientTime > 0 && r3.addMessageDelay(t3.clientTime), r3.addMessageSequence({ key: N_, message: t3 }));
                  }
                  n3.push(t3);
                }
              }
            } else
              wl.warn("".concat(this._className, ".onMessage unknown event:").concat(e4[i3].event));
          if (0 !== n3.length) {
            this._groupModule.filterModifiedMessage(n3);
            var f3 = this.packConversationOption(n3);
            if (f3.length > 0)
              this._getModule(Hg).onNewMessage({ conversationOptionsList: f3, isInstantMessage: true });
            wl.debug("".concat(this._className, ".onMessage count:").concat(n3.length)), this._checkMessageStacked(n3);
            var _3 = this._groupModule.filterUnmodifiedMessage(n3);
            _3.length > 0 && this._groupModule.emitOuterEvent(pr.MESSAGE_RECEIVED, _3), n3.length = 0;
          }
        }
      } }, { key: "_onGroupDismissed", value: function(e4) {
        wl.log("".concat(this._className, "._onGroupDismissed groupID:").concat(e4)), this._groupModule.deleteLocalGroupAndConversation(e4), this.reset(e4);
      } }, { key: "_checkMessageStacked", value: function(e4) {
        var t3 = "".concat(this._className, "._checkMessageStacked"), n3 = e4.length;
        n3 >= 100 && (this._groupModule.isIntl() || wl.warn("".concat(t3, " \u76F4\u64AD\u7FA4\u6D88\u606F\u5806\u79EF\u6570:").concat(e4.length, '\uFF01\u53EF\u80FD\u4F1A\u5BFC\u81F4\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F\u6E32\u67D3\u65F6\u9047\u5230 "Dom limit exceeded" \u7684\u9519\u8BEF\uFF0C\u5EFA\u8BAE\u63A5\u5165\u4FA7\u6B64\u65F6\u53EA\u6E32\u67D3\u6700\u8FD1\u768410\u6761\u6D88\u606F')), this._reportMessageStackedCount < 5 && (new G_(P_.MESSAGE_STACKED).setNetworkType(this._groupModule.getNetworkType()).setMessage("count:".concat(n3, " groupID:").concat(v2(this._joinedGroupMap.keys()))).setLevel("warning").end(), this._reportMessageStackedCount += 1));
      } }, { key: "_isMessageSentByCurrentInstance", value: function(e4) {
        return !!this._getModule(Hg).isMessageSentByCurrentInstance(e4);
      } }, { key: "packMessage", value: function(e4, t3) {
        e4.currentUser = this._groupModule.getMyUserID(), e4.conversationType = 5 === t3 ? gr.CONV_SYSTEM : gr.CONV_GROUP, e4.isSystemMessage = !!e4.isSystemMessage;
        var n3 = new bM(e4), o3 = this.packElements(e4, t3);
        return n3.setElement(o3), n3;
      } }, { key: "packElements", value: function(e4, n3) {
        return 4 === n3 || 6 === n3 ? (this._updateMemberCountByGroupTips(e4), { type: gr.MSG_GRP_TIP, content: t2(t2({}, e4.elements), {}, { groupProfile: e4.groupProfile }) }) : 5 === n3 ? { type: gr.MSG_GRP_SYS_NOTICE, content: t2(t2({}, e4.elements), {}, { groupProfile: t2(t2({}, e4.groupProfile), {}, { groupID: e4.groupID }) }) } : this._getModule(zg).parseElements(e4.elements, e4.from);
      } }, { key: "packConversationOption", value: function(e4) {
        for (var t3 = /* @__PURE__ */ new Map(), n3 = 0; n3 < e4.length; n3++) {
          var o3 = e4[n3], r3 = o3.conversationID;
          if (t3.has(r3)) {
            var a3 = t3.get(r3);
            a3.lastMessage = o3, "in" === o3.flow && a3.unreadCount++;
          } else
            t3.set(r3, { conversationID: o3.conversationID, unreadCount: "out" === o3.flow ? 0 : 1, type: o3.conversationType, subType: o3.conversationSubType, lastMessage: o3 });
        }
        return v2(t3.values());
      } }, { key: "_updateMemberCountByGroupTips", value: function(e4) {
        var t3 = e4.groupProfile.groupID, n3 = e4.elements.onlineMemberInfo, o3 = void 0 === n3 ? void 0 : n3;
        if (!Wd(o3)) {
          var r3 = o3.onlineMemberNum, a3 = void 0 === r3 ? 0 : r3, s3 = o3.expireTime, i3 = void 0 === s3 ? this.DEFAULT_EXPIRE_TIME : s3, u3 = this._onlineMemberCountMap.get(t3) || {}, c3 = Date.now();
          Wd(u3) ? Object.assign(u3, { lastReqTime: 0, lastSyncTime: 0, latestUpdateTime: c3, memberCount: a3, expireTime: i3 }) : (u3.latestUpdateTime = c3, u3.memberCount = a3), wl.debug("".concat(this._className, "._updateMemberCountByGroupTips info:"), u3), this._onlineMemberCountMap.set(t3, u3);
        }
      } }, { key: "_onBroadcastMessage", value: function(e4) {
        if (!Wd(e4)) {
          for (var t3 = [], n3 = e4.length, o3 = null, r3 = 0; r3 < n3; r3++)
            $y[e4[r3].event] ? ((o3 = this.packMessage(e4[r3], e4[r3].event)).isBroadcastMessage = true, this._broadcastMessageIDMap.has(o3.ID) || (t3.push(o3), this._broadcastMessageIDMap.set(o3.ID, 1))) : wl.warn("".concat(this._className, "._onBroadcastMessage unknown event:").concat(e4[r3].event));
          t3.length > 0 && this._groupModule.emitOuterEvent(pr.MESSAGE_RECEIVED, t3);
        }
      } }, { key: "start", value: function(e4) {
        if (this._pollingInstanceMap.has(e4)) {
          var t3 = this._pollingInstanceMap.get(e4);
          t3.isRunning() || t3.start();
        } else {
          var n3 = new Yy({ manager: this, groupID: e4, onInit: this._updateRequestData.bind(this), onSuccess: this._handleSuccess.bind(this), onFail: this._handleFailure.bind(this) });
          n3.start(), this._pollingInstanceMap.set(e4, n3), wl.log("".concat(this._className, ".start groupID:").concat(e4));
        }
      } }, { key: "handleJoinResult", value: function(e4) {
        var t3 = this;
        return this._preCheck().then(function() {
          var n3 = e4.longPollingKey, o3 = e4.group, r3 = o3.groupID;
          return t3._joinedGroupMap.set(r3, o3), t3._groupModule.updateGroupMap([o3]), t3._groupModule.deleteUnjoinedAVChatRoom(r3), t3._groupModule.emitGroupListUpdate(true, false), td(n3) ? WM({ status: Kl, group: o3 }) : Promise.resolve();
        });
      } }, { key: "startRunLoop", value: function(e4) {
        var t3 = this;
        return this.handleJoinResult(e4).then(function() {
          var n3 = e4.longPollingKey, o3 = e4.group, r3 = e4.startSeq, a3 = void 0 === r3 ? 0 : r3, s3 = o3.groupID;
          return t3._pollingRequestInfoMap.set(s3, { key: n3, startSeq: a3 }), t3.start(s3), t3._groupModule.isLoggedIn() ? WM({ status: Kl, group: o3 }) : WM({ status: Kl });
        });
      } }, { key: "_preCheck", value: function() {
        if (this._getModule(jg).isUnlimitedAVChatRoom())
          return Promise.resolve();
        if (!this.hasJoinedAVChatRoom())
          return Promise.resolve();
        var e4 = m2(this._joinedGroupMap.entries().next().value, 2), t3 = e4[0], n3 = e4[1];
        if (this._groupModule.isLoggedIn()) {
          if (!(n3.selfInfo.role === gr.GRP_MBR_ROLE_OWNER || n3.ownerID === this._groupModule.getMyUserID()))
            return this._groupModule.quitGroup(t3);
          this._groupModule.deleteLocalGroupAndConversation(t3);
        } else
          this._groupModule.deleteLocalGroupAndConversation(t3);
        return this.reset(t3), Promise.resolve();
      } }, { key: "joinWithoutAuth", value: function(e4) {
        var t3 = this, n3 = e4.groupID, o3 = "".concat(this._className, ".joinWithoutAuth"), r3 = new G_(P_.JOIN_WITHOUT_AUTH);
        return this._groupModule.request({ protocolName: rf, requestData: e4 }).then(function(e5) {
          var a3 = e5.data.longPollingKey;
          if (t3._groupModule.probeNetwork().then(function(e6) {
            var t4 = m2(e6, 2), o4 = (t4[0], t4[1]);
            r3.setNetworkType(o4).setMessage("groupID:".concat(n3, " longPollingKey:").concat(a3)).end(true);
          }), td(a3))
            return YM({ code: dh.CANNOT_JOIN_NON_AVCHATROOM_WITHOUT_LOGIN });
          wl.log("".concat(o3, " ok. groupID:").concat(n3)), t3._getModule(Hg).setCompleted("".concat(gr.CONV_GROUP).concat(n3));
          var s3 = new Sy({ groupID: n3 });
          return t3.startRunLoop({ group: s3, longPollingKey: a3 }), wM({ status: Kl });
        }).catch(function(e5) {
          return wl.error("".concat(o3, " failed. groupID:").concat(n3, " error:"), e5), t3._groupModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), a3 = o4[0], s3 = o4[1];
            r3.setError(e5, a3, s3).setMessage("groupID:".concat(n3)).end(true);
          }), YM(e5);
        }).finally(function() {
          t3._groupModule.getModule(Yg).reportAtOnce();
        });
      } }, { key: "getGroupOnlineMemberCount", value: function(e4) {
        var t3 = this._onlineMemberCountMap.get(e4) || {}, n3 = Date.now();
        return Wd(t3) || n3 - t3.lastSyncTime > 1e3 * t3.expireTime && n3 - t3.latestUpdateTime > 1e4 && n3 - t3.lastReqTime > 3e3 ? (t3.lastReqTime = n3, this._onlineMemberCountMap.set(e4, t3), this._getGroupOnlineMemberCount(e4).then(function(e5) {
          return wM({ memberCount: e5.memberCount });
        }).catch(function(e5) {
          return YM(e5);
        })) : WM({ memberCount: t3.memberCount });
      } }, { key: "_getGroupOnlineMemberCount", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, "._getGroupOnlineMemberCount");
        return this._groupModule.request({ protocolName: Cf, requestData: { groupID: e4 } }).then(function(o3) {
          var r3 = t3._onlineMemberCountMap.get(e4) || {}, a3 = o3.data, s3 = a3.onlineMemberNum, i3 = void 0 === s3 ? 0 : s3, u3 = a3.expireTime, c3 = void 0 === u3 ? t3.DEFAULT_EXPIRE_TIME : u3;
          wl.log("".concat(n3, " ok. groupID:").concat(e4, " memberCount:").concat(i3, " expireTime:").concat(c3));
          var l3 = Date.now();
          return Wd(r3) && (r3.lastReqTime = l3), t3._onlineMemberCountMap.set(e4, Object.assign(r3, { lastSyncTime: l3, latestUpdateTime: l3, memberCount: i3, expireTime: c3 })), { memberCount: i3 };
        }).catch(function(o3) {
          return wl.warn("".concat(n3, " failed. error:"), o3), new G_(P_.GET_GROUP_ONLINE_MEMBER_COUNT).setCode(o3.code).setMessage("groupID:".concat(e4, " error:").concat(JSON.stringify(o3))).setNetworkType(t3._groupModule.getNetworkType()).end(), Promise.reject(o3);
        });
      } }, { key: "_getModule", value: function(e4) {
        return this._groupModule.getModule(e4);
      } }, { key: "setPollingInterval", value: function(e4) {
        td(e4) || (Jl(e4) ? this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = e4 : this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = parseInt(e4, 10));
      } }, { key: "setPollingIntervalPlus", value: function(e4) {
        td(e4) || (Jl(e4) ? this.DEFAULT_POLLING_INTERVAL_PLUS = e4 : this.DEFAULT_POLLING_INTERVAL_PLUS = parseInt(e4, 10));
      } }, { key: "setPollingNoMessageCount", value: function(e4) {
        td(e4) || (Jl(e4) ? this.DEFAULT_POLLING_NO_MESSAGE_COUNT = e4 : this.DEFAULT_POLLING_NO_MESSAGE_COUNT = parseInt(e4, 10));
      } }, { key: "getPollingInterval", value: function() {
        return this._pollingInterval;
      } }, { key: "onAVChatRoomMemberBanned", value: function(e4) {
        var t3 = e4.payload.groupProfile.groupID;
        wl.log("".concat(this._className, ".onAVChatRoomMemberBanned groupID:").concat(t3)), this._groupModule.deleteLocalGroupAndConversation(t3), this.reset(t3);
      } }, { key: "reset", value: function(e4) {
        if (e4) {
          wl.log("".concat(this._className, ".reset groupID:").concat(e4));
          var t3 = this._pollingInstanceMap.get(e4);
          t3 && t3.stop(), this._pollingInstanceMap.delete(e4), this._joinedGroupMap.delete(e4), this._pollingRequestInfoMap.delete(e4), this._onlineMemberCountMap.delete(e4);
        } else {
          wl.log("".concat(this._className, ".reset all"));
          var n3, o3 = E2(this._pollingInstanceMap.values());
          try {
            for (o3.s(); !(n3 = o3.n()).done; ) {
              n3.value.stop();
            }
          } catch (r3) {
            o3.e(r3);
          } finally {
            o3.f();
          }
          this._pollingInstanceMap.clear(), this._joinedGroupMap.clear(), this._pollingRequestInfoMap.clear(), this._onlineMemberCountMap.clear(), this._broadcastMessageIDMap.clear();
        }
        this.sequencesLinkedList.reset(), this.messageIDLinkedList.reset(), this.receivedMessageCount = 0, this._reportMessageStackedCount = 0, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = 300, this.DEFAULT_POLLING_NO_MESSAGE_COUNT = 20, this.DEFAULT_POLLING_INTERVAL_PLUS = 2e3, this._pollingNoMessageCount = 0;
      } }]), e3;
    }(), Jy = 1, Xy = 15, Qy = function() {
      function e3(t3) {
        o2(this, e3), this._groupModule = t3, this._className = "GroupSystemNoticeHandler", this.pendencyMap = /* @__PURE__ */ new Map();
      }
      return a2(e3, [{ key: "onNewGroupSystemNotice", value: function(e4) {
        var t3 = e4.dataList, n3 = e4.isSyncingEnded, o3 = e4.isInstantMessage;
        wl.debug("".concat(this._className, ".onReceiveSystemNotice count:").concat(t3.length));
        var r3 = this.newSystemNoticeStoredAndSummary({ notifiesList: t3, isInstantMessage: o3 }), a3 = r3.eventDataList, s3 = r3.result;
        a3.length > 0 && (this._groupModule.getModule(Hg).onNewMessage({ conversationOptionsList: a3, isInstantMessage: o3 }), this._onReceivedGroupSystemNotice({ result: s3, isInstantMessage: o3 }));
        o3 ? s3.length > 0 && this._groupModule.emitOuterEvent(pr.MESSAGE_RECEIVED, s3) : true === n3 && this._clearGroupSystemNotice();
      } }, { key: "newSystemNoticeStoredAndSummary", value: function(e4) {
        var n3 = e4.notifiesList, o3 = e4.isInstantMessage, r3 = null, a3 = n3.length, s3 = 0, i3 = [], u3 = { conversationID: gr.CONV_SYSTEM, unreadCount: 0, type: gr.CONV_SYSTEM, subType: null, lastMessage: null };
        for (s3 = 0; s3 < a3; s3++) {
          var c3 = n3[s3], l3 = c3.groupProfile, d3 = l3.communityType, p3 = void 0 === d3 ? 0 : d3, g3 = l3.topicID, h3 = void 0 === g3 ? void 0 : g3, f3 = c3.elements, _3 = f3.topicIDList, m3 = void 0 === _3 ? void 0 : _3, v3 = f3.operationType;
          if (!(2 !== p3 || Wd(h3) && Wd(m3))) {
            if ([17, 18, 20].includes(v3)) {
              this._handleTopicSystemNotice(c3);
              continue;
            }
            Wd(h3) || (c3.to = h3);
          }
          if (c3.elements.operationType !== Xy)
            c3.currentUser = this._groupModule.getMyUserID(), c3.conversationType = gr.CONV_SYSTEM, c3.conversationID = gr.CONV_SYSTEM, (r3 = new bM(c3)).setElement({ type: gr.MSG_GRP_SYS_NOTICE, content: t2(t2({}, c3.elements), {}, { groupProfile: t2({}, c3.groupProfile) }) }), r3.isSystemMessage = true, (1 === r3.sequence && 1 === r3.random || 2 === r3.sequence && 2 === r3.random) && (r3.sequence = pd(), r3.random = pd(), r3.generateMessageID(), wl.log("".concat(this._className, ".newSystemNoticeStoredAndSummary sequence and random maybe duplicated, regenerate. ID:").concat(r3.ID))), this._groupModule.getModule(Hg).pushIntoNoticeResult(i3, r3) && (o3 ? u3.unreadCount++ : r3.setIsRead(true), u3.subType = r3.conversationSubType);
        }
        return u3.lastMessage = i3[i3.length - 1], { eventDataList: i3.length > 0 ? [u3] : [], result: i3 };
      } }, { key: "_clearGroupSystemNotice", value: function() {
        var e4 = this;
        this._getPendencyList().then(function(t3) {
          t3.forEach(function(t4) {
            e4.pendencyMap.set("".concat(t4.from, "_").concat(t4.groupID, "_").concat(t4.to), t4);
          });
          var n3 = e4._groupModule.getModule(Hg).getLocalMessageList(gr.CONV_SYSTEM), o3 = [];
          n3.forEach(function(t4) {
            var n4 = t4.payload, r3 = n4.operatorID, a3 = n4.operationType, s3 = n4.groupProfile;
            if (a3 === Jy) {
              var i3 = "".concat(r3, "_").concat(s3.groupID, "_").concat(s3.to), u3 = e4.pendencyMap.get(i3);
              u3 && Jl(u3.handled) && 0 !== u3.handled && o3.push(t4);
            }
          }), e4.deleteGroupSystemNotice({ messageList: o3 });
        });
      } }, { key: "deleteGroupSystemNotice", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, ".deleteGroupSystemNotice");
        return ed(e4.messageList) && 0 !== e4.messageList.length ? (wl.log("".concat(n3, " ") + e4.messageList.map(function(e5) {
          return e5.ID;
        })), this._groupModule.request({ protocolName: yf, requestData: { messageListToDelete: e4.messageList.map(function(e5) {
          return { from: gr.CONV_SYSTEM, messageSeq: e5.clientSequence, messageRandom: e5.random };
        }) } }).then(function() {
          wl.log("".concat(n3, " ok"));
          var o3 = t3._groupModule.getModule(Hg);
          return e4.messageList.forEach(function(e5) {
            o3.deleteLocalMessage(e5);
          }), wM();
        }).catch(function(e5) {
          return wl.error("".concat(n3, " error:"), e5), YM(e5);
        })) : WM();
      } }, { key: "_getPendencyList", value: function(e4) {
        var t3 = this;
        return this._groupModule.request({ protocolName: Mf, requestData: { startTime: e4 && e4.startTime ? e4.startTime : 0, limit: e4 && e4.limit ? e4.limit : 10, handleAccount: this._groupModule.getMyUserID() } }).then(function(e5) {
          var n3 = e5.data.pendencyList;
          return 0 !== e5.data.nextStartTime ? t3._getPendencyList({ startTime: e5.data.nextStartTime }).then(function(e6) {
            return [].concat(v2(n3), v2(e6));
          }) : n3;
        });
      } }, { key: "getGroupApplicationList", value: function() {
        var e4 = this;
        return this._getPendencyList().then(function(t3) {
          var n3 = [];
          return t3.forEach(function(t4) {
            e4.pendencyMap.set("".concat(t4.from, "_").concat(t4.groupID, "_").concat(t4.to), t4), 0 === t4.handled && n3.push({ applicant: t4.from, applicantNick: t4.fromUserNickName, groupName: t4.groupName, groupID: t4.groupID, authentication: t4.authentication, messageKey: t4.time });
          }), WM({ applicationList: n3 });
        });
      } }, { key: "_onReceivedGroupSystemNotice", value: function(e4) {
        var t3 = this, n3 = e4.result;
        e4.isInstantMessage && n3.forEach(function(e5) {
          switch (e5.payload.operationType) {
            case 1:
              break;
            case 2:
              t3._onApplyGroupRequestAgreed(e5);
              break;
            case 3:
              break;
            case 4:
              t3._onMemberKicked(e5);
              break;
            case 5:
              t3._onGroupDismissed(e5);
              break;
            case 6:
              break;
            case 7:
              t3._onInviteGroup(e5);
              break;
            case 8:
              t3._onQuitGroup(e5);
              break;
            case 9:
              t3._onSetManager(e5);
              break;
            case 10:
              t3._onDeleteManager(e5);
              break;
            case 11:
            case 12:
            case 15:
              break;
            case 20:
              t3._onMessageRemindTypeSynced(e5);
              break;
            case 21:
              t3._groupModule.onAVChatRoomMemberBanned(e5);
          }
        });
      } }, { key: "_onApplyGroupRequestAgreed", value: function(e4) {
        var t3 = this, n3 = e4.payload.groupProfile.groupID;
        this._groupModule.hasLocalGroup(n3) || this._groupModule.getGroupProfile({ groupID: n3 }).then(function(e5) {
          var n4 = e5.data.group;
          if (n4) {
            t3._groupModule.updateGroupMap([n4]);
            var o3 = !n4.isSupportTopic;
            t3._groupModule.emitGroupListUpdate(true, o3);
          }
        });
      } }, { key: "_onMemberKicked", value: function(e4) {
        var t3 = e4.payload.groupProfile.groupID;
        this._groupModule.hasLocalGroup(t3) && this._groupModule.deleteLocalGroupAndConversation(t3);
      } }, { key: "_onGroupDismissed", value: function(e4) {
        var t3 = e4.payload.groupProfile.groupID;
        this._groupModule.hasLocalGroup(t3) && this._groupModule.deleteLocalGroupAndConversation(t3);
        var n3 = this._groupModule._AVChatRoomHandler;
        n3 && n3.checkJoinedAVChatRoomByID(t3) && n3.reset(t3);
      } }, { key: "_onInviteGroup", value: function(e4) {
        var t3 = this, n3 = e4.payload.groupProfile.groupID;
        this._groupModule.hasLocalGroup(n3) || this._groupModule.getGroupProfile({ groupID: n3 }).then(function(e5) {
          var n4 = e5.data.group;
          n4 && (t3._groupModule.updateGroupMap([n4]), t3._groupModule.emitGroupListUpdate());
        });
      } }, { key: "_onQuitGroup", value: function(e4) {
        var t3 = e4.payload.groupProfile.groupID;
        this._groupModule.hasLocalGroup(t3) && this._groupModule.deleteLocalGroupAndConversation(t3);
      } }, { key: "_onSetManager", value: function(e4) {
        var t3 = e4.payload.groupProfile, n3 = t3.to, o3 = t3.groupID, r3 = this._groupModule.getModule(Bg).getLocalGroupMemberInfo(o3, n3);
        r3 && r3.updateRole(gr.GRP_MBR_ROLE_ADMIN);
      } }, { key: "_onDeleteManager", value: function(e4) {
        var t3 = e4.payload.groupProfile, n3 = t3.to, o3 = t3.groupID, r3 = this._groupModule.getModule(Bg).getLocalGroupMemberInfo(o3, n3);
        r3 && r3.updateRole(gr.GRP_MBR_ROLE_MEMBER);
      } }, { key: "_onMessageRemindTypeSynced", value: function(e4) {
        var t3 = e4.payload.groupProfile.groupID, n3 = e4.payload.messageRemindType;
        this._groupModule.getModule(Hg).onGroupMessageRemindTypeSynced({ groupID: t3, messageRemindType: n3 });
      } }, { key: "_handleTopicSystemNotice", value: function(e4) {
        var t3 = e4.groupProfile, n3 = t3.groupID, o3 = t3.topicID, r3 = e4.elements, a3 = r3.operationType, s3 = r3.topicIDList, i3 = r3.messageRemindType, u3 = this._groupModule.getModule(Kg);
        17 === a3 ? u3.onTopicCreated({ groupID: n3, topicID: o3 }) : 18 === a3 ? u3.onTopicDeleted({ groupID: n3, topicIDList: s3 }) : 20 === a3 && u3.onTopicMessageRemindTypeUpdated({ groupID: n3, topicID: o3, messageRemindType: i3 });
      } }, { key: "reset", value: function() {
        this.pendencyMap.clear();
      } }]), e3;
    }(), Zy = ["relayFlag"], eI = function(e3) {
      i2(r3, e3);
      var n3 = _2(r3);
      function r3(e4) {
        var t3;
        return o2(this, r3), (t3 = n3.call(this, e4))._className = "GroupModule", t3._commonGroupHandler = null, t3._AVChatRoomHandler = null, t3._groupSystemNoticeHandler = null, t3._commonGroupHandler = new by(h2(t3)), t3._groupAttributesHandler = new By(h2(t3)), t3._groupCountersHandler = new Wy(h2(t3)), t3._AVChatRoomHandler = new zy(h2(t3)), t3._groupTipsHandler = new Uy(h2(t3)), t3._groupSystemNoticeHandler = new Qy(h2(t3)), t3.groupMap = /* @__PURE__ */ new Map(), t3._unjoinedAVChatRoomList = /* @__PURE__ */ new Map(), t3._receiptDetailCompleteMap = /* @__PURE__ */ new Map(), t3.getInnerEmitterInstance().on(dy, t3._onCloudConfigUpdated, h2(t3)), t3;
      }
      return a2(r3, [{ key: "_onCloudConfigUpdated", value: function() {
        var e4 = this.getCloudConfig("polling_interval"), t3 = this.getCloudConfig("polling_interval_plus"), n4 = this.getCloudConfig("polling_no_msg_count");
        this._AVChatRoomHandler && (wl.log("".concat(this._className, "._onCloudConfigUpdated pollingInterval:").concat(e4) + " pollingIntervalPlus:".concat(t3, " pollingNoMessageCount:").concat(n4)), this._AVChatRoomHandler.setPollingInterval(e4), this._AVChatRoomHandler.setPollingIntervalPlus(t3), this._AVChatRoomHandler.setPollingNoMessageCount(n4));
      } }, { key: "onCheckTimer", value: function(e4) {
        this.isLoggedIn() && (this._commonGroupHandler.onCheckTimer(e4), this._groupTipsHandler.onCheckTimer(e4));
      } }, { key: "guardForAVChatRoom", value: function(e4) {
        var t3 = this;
        if (e4.conversationType === gr.CONV_GROUP) {
          var n4 = Cd(e4.to) ? Fd(e4.to) : e4.to;
          return this.hasLocalGroup(n4) ? WM() : this.getGroupProfile({ groupID: n4 }).then(function(o3) {
            var r4 = o3.data.group.type;
            if (wl.log("".concat(t3._className, ".guardForAVChatRoom. groupID:").concat(n4, " type:").concat(r4)), r4 === gr.GRP_AVCHATROOM) {
              var a3 = dh.MESSAGE_SEND_FAIL_NOT_IN_AVCHATROOM, s3 = t3.isIntl() ? "".concat(gh[a3], ". See https://web.sdk.qcloud.com/im/doc/en/SDK.html#joinGroup") : "userID:".concat(e4.from, " \u672A\u52A0\u5165\u7FA4 groupID:").concat(n4, "\u3002\u53D1\u6D88\u606F\u524D\u5148\u4F7F\u7528 joinGroup \u63A5\u53E3\u7533\u8BF7\u52A0\u7FA4\uFF0C\u8BE6\u7EC6\u8BF7\u53C2\u8003 https://web.sdk.qcloud.com/im/doc/zh-cn/SDK.html#joinGroup");
              return wl.warn("".concat(t3._className, ".guardForAVChatRoom. ").concat(s3)), YM(new KM({ code: a3, message: s3, data: { message: e4 } }));
            }
            return WM();
          });
        }
        return WM();
      } }, { key: "checkJoinedAVChatRoomByID", value: function(e4) {
        return !!this._AVChatRoomHandler && this._AVChatRoomHandler.checkJoinedAVChatRoomByID(e4);
      } }, { key: "onNewGroupMessage", value: function(e4) {
        this._commonGroupHandler && this._commonGroupHandler.onNewGroupMessage(e4);
      } }, { key: "updateNextMessageSeq", value: function(e4) {
        var t3 = this;
        if (ed(e4)) {
          var n4 = this.getModule(Kg);
          e4.forEach(function(e5) {
            var o3 = e5.conversationID.replace(gr.CONV_GROUP, "");
            Cd(o3) && n4.updateLastMessage(o3, e5.lastMessage), t3.groupMap.has(o3) && (t3.groupMap.get(o3).nextMessageSeq = e5.lastMessage.sequence + 1);
          });
        }
      } }, { key: "onNewGroupTips", value: function(e4) {
        this._groupTipsHandler && this._groupTipsHandler.onNewGroupTips(e4);
      } }, { key: "onGroupMessageRevoked", value: function(e4) {
        this._commonGroupHandler && this._commonGroupHandler.onGroupMessageRevoked(e4);
      } }, { key: "onNewGroupSystemNotice", value: function(e4) {
        this._groupSystemNoticeHandler && this._groupSystemNoticeHandler.onNewGroupSystemNotice(e4);
      } }, { key: "onGroupMessageReadNotice", value: function(e4) {
        var t3 = this;
        e4.dataList.forEach(function(e5) {
          var n4 = e5.elements.groupMessageReadNotice;
          if (!td(n4)) {
            var o3 = t3.getModule(Hg);
            n4.forEach(function(e6) {
              var n5 = e6.groupID, r4 = e6.topicID, a3 = void 0 === r4 ? void 0 : r4, s3 = e6.lastMessageSeq;
              wl.debug("".concat(t3._className, ".onGroupMessageReadNotice groupID:").concat(n5, " lastMessageSeq:").concat(s3));
              var i3 = "".concat(gr.CONV_GROUP).concat(n5), u3 = true;
              Wd(a3) || (i3 = "".concat(gr.CONV_GROUP).concat(a3), u3 = false), o3.updateIsReadAfterReadReport({ conversationID: i3, lastMessageSeq: s3 }), o3.updateUnreadCount(i3, u3), o3.clearGroupAtInfoList(i3, u3);
            });
          }
        });
      } }, { key: "onReadReceiptList", value: function(e4) {
        var t3 = this;
        wl.debug("".concat(this._className, ".onReadReceiptList options:"), JSON.stringify(e4)), e4.dataList.forEach(function(e5) {
          var n4 = e5.groupProfile, o3 = e5.elements, r4 = n4.groupID, a3 = t3.getModule(Hg), s3 = o3.readReceiptList;
          a3.updateReadReceiptInfo({ groupID: r4, readReceiptList: s3 });
        });
      } }, { key: "onGroupMessageModified", value: function(e4) {
        wl.debug("".concat(this._className, ".onGroupMessageModified options:"), JSON.stringify(e4));
        var n4 = this.getModule(Hg);
        e4.dataList.forEach(function(e5) {
          n4.onMessageModified(t2(t2({}, e5), {}, { conversationType: gr.CONV_GROUP, to: e5.topicID ? e5.topicID : e5.groupID }));
        });
      } }, { key: "deleteGroupSystemNotice", value: function(e4) {
        this._groupSystemNoticeHandler && this._groupSystemNoticeHandler.deleteGroupSystemNotice(e4);
      } }, { key: "initGroupMap", value: function(e4) {
        this.groupMap.set(e4.groupID, new Sy(e4));
      } }, { key: "deleteGroup", value: function(e4) {
        this.groupMap.delete(e4);
      } }, { key: "updateGroupMap", value: function(e4) {
        var t3, n4 = this, o3 = this.getModule(Hg);
        e4.forEach(function(e5) {
          t3 = e5.groupID, n4.groupMap.has(t3) ? n4.groupMap.get(t3).updateGroup(e5) : (n4.groupMap.set(t3, new Sy(e5)), o3.deleteGroupRomaingMessageInfo(t3));
        });
        var r4, a3 = this.getMyUserID(), s3 = E2(this.groupMap);
        try {
          for (s3.s(); !(r4 = s3.n()).done; ) {
            var i3 = m2(r4.value, 2)[1];
            i3.selfInfo.userID = a3, "Owner" === i3.selfInfo.role && (i3.ownerID = a3);
          }
        } catch (u3) {
          s3.e(u3);
        } finally {
          s3.f();
        }
        this._setStorageGroupList();
      } }, { key: "getStorageGroupList", value: function() {
        return this.getModule(Wg).getItem("groupMap");
      } }, { key: "_setStorageGroupList", value: function() {
        var e4 = this.getLocalGroupList().filter(function(e5) {
          var t3 = e5.type;
          return !Id(t3);
        }).filter(function(e5) {
          return !e5.isSupportTopic;
        }).slice(0, 20).map(function(e5) {
          return { groupID: e5.groupID, name: e5.name, avatar: e5.avatar, type: e5.type };
        });
        this.getModule(Wg).setItem("groupMap", e4);
      } }, { key: "getGroupMap", value: function() {
        return this.groupMap;
      } }, { key: "getLocalGroupList", value: function() {
        return v2(this.groupMap.values());
      } }, { key: "getLocalGroupProfile", value: function(e4) {
        return this.groupMap.get(e4);
      } }, { key: "sortLocalGroupList", value: function() {
        var e4 = v2(this.groupMap).filter(function(e5) {
          var t3 = m2(e5, 2);
          t3[0];
          return !Wd(t3[1].lastMessage);
        });
        e4.sort(function(e5, t3) {
          return t3[1].lastMessage.lastTime - e5[1].lastMessage.lastTime;
        }), this.groupMap = new Map(v2(e4));
      } }, { key: "updateGroupLastMessage", value: function(e4) {
        this._commonGroupHandler && this._commonGroupHandler.handleUpdateGroupLastMessage(e4);
      } }, { key: "emitGroupListUpdate", value: function() {
        var e4 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n4 = this.getLocalGroupList();
        if (e4 && this.emitOuterEvent(pr.GROUP_LIST_UPDATED), t3) {
          var o3 = JSON.parse(JSON.stringify(n4)), r4 = this.getModule(Hg);
          r4.updateConversationGroupProfile(o3);
        }
      } }, { key: "patchGroupMessageRemindType", value: function() {
        var e4 = this.getLocalGroupList(), t3 = this.getModule(Hg), n4 = 0;
        e4.forEach(function(e5) {
          true === t3.patchMessageRemindType({ ID: e5.groupID, isC2CConversation: false, messageRemindType: e5.selfInfo.messageRemindType }) && (n4 += 1);
        }), wl.log("".concat(this._className, ".patchGroupMessageRemindType count:").concat(n4));
      } }, { key: "recomputeUnreadCount", value: function() {
        var e4 = this.getLocalGroupList(), t3 = this.getModule(Hg);
        e4.forEach(function(e5) {
          var n4 = e5.groupID, o3 = e5.selfInfo, r4 = o3.excludedUnreadSequenceList, a3 = o3.readedSequence;
          if (ed(r4)) {
            var s3 = 0;
            r4.forEach(function(t4) {
              t4 >= a3 && t4 <= e5.nextMessageSeq - 1 && (s3 += 1);
            }), s3 >= 1 && t3.recomputeGroupUnreadCount({ conversationID: "".concat(gr.CONV_GROUP).concat(n4), count: s3 });
          }
        });
      } }, { key: "getMyNameCardByGroupID", value: function(e4) {
        var t3 = this.getLocalGroupProfile(e4);
        return t3 ? t3.selfInfo.nameCard : "";
      } }, { key: "isPagingGetCompleted", value: function() {
        return !!this._commonGroupHandler && this._commonGroupHandler.isPagingGetCompleted();
      } }, { key: "getGroupList", value: function(e4) {
        return this._commonGroupHandler ? this._commonGroupHandler.getGroupList(e4) : WM();
      } }, { key: "getGroupProfile", value: function(e4) {
        var t3 = this, n4 = new G_(P_.GET_GROUP_PROFILE), o3 = "".concat(this._className, ".getGroupProfile"), r4 = e4.groupID, a3 = e4.groupCustomFieldFilter;
        wl.log("".concat(o3, " groupID:").concat(r4));
        var s3 = { groupIDList: [r4], responseFilter: { groupBaseInfoFilter: ["Type", "Name", "Introduction", "Notification", "FaceUrl", "Owner_Account", "CreateTime", "InfoSeq", "LastInfoTime", "LastMsgTime", "MemberNum", "MaxMemberNum", "ApplyJoinOption", "NextMsgSeq", "ShutUpAllMember"], groupCustomFieldFilter: a3, memberInfoFilter: ["Role", "JoinTime", "MsgSeq", "MsgFlag", "NameCard"] } };
        return this.getGroupProfileAdvance(s3).then(function(e5) {
          var a4, s4 = e5.data, i3 = s4.successGroupList, u3 = s4.failureGroupList;
          if (wl.log("".concat(o3, " ok")), u3.length > 0)
            return YM(u3[0]);
          (Id(i3[0].type) && !t3.hasLocalGroup(r4) ? a4 = new Sy(i3[0]) : (t3.updateGroupMap(i3), a4 = t3.getLocalGroupProfile(r4)), a4.isSupportTopic) || t3.getModule(Hg).updateConversationGroupProfile([a4]);
          return n4.setNetworkType(t3.getNetworkType()).setMessage("groupID:".concat(r4, " type:").concat(a4.type, " muteAllMembers:").concat(a4.muteAllMembers, " ownerID:").concat(a4.ownerID)).end(), wM({ group: a4 });
        }).catch(function(r5) {
          return t3.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), a4 = o4[0], s4 = o4[1];
            n4.setError(r5, a4, s4).setMessage("groupID:".concat(e4.groupID)).end();
          }), wl.error("".concat(o3, " failed. error:"), r5), YM(r5);
        });
      } }, { key: "getGroupProfileAdvance", value: function(e4) {
        var n4 = this, o3 = "".concat(this._className, ".getGroupProfileAdvance"), r4 = e4.groupIDList;
        ed(r4) && r4.length > 50 && (wl.warn("".concat(o3, " \u83B7\u53D6\u7FA4\u8D44\u6599\u7684\u6570\u91CF\u4E0D\u80FD\u8D85\u8FC750\u4E2A")), r4.length = 50);
        var a3 = [], s3 = [];
        r4.forEach(function(e5) {
          Td({ groupID: e5 }) ? s3.push(e5) : a3.push(e5);
        });
        var i3 = [];
        if (a3.length > 0) {
          var u3 = this._getGroupProfileAdvance(t2(t2({}, e4), {}, { groupIDList: a3 }));
          i3.push(u3);
        }
        if (s3.length > 0) {
          var c3 = this._getGroupProfileAdvance(t2(t2({}, e4), {}, { groupIDList: s3, relayFlag: a3.length > 0 }));
          i3.push(c3);
        }
        return Promise.all(i3).then(function(e5) {
          var t3 = [], n5 = [];
          return e5.forEach(function(e6) {
            t3.push.apply(t3, v2(e6.successGroupList)), n5.push.apply(n5, v2(e6.failureGroupList));
          }), wM({ successGroupList: t3, failureGroupList: n5 });
        }).catch(function(e5) {
          return wl.error("".concat(n4._className, "._getGroupProfileAdvance failed. error:"), e5), YM(e5);
        });
      } }, { key: "_getGroupProfileAdvance", value: function(e4) {
        var t3 = this, n4 = e4.relayFlag, o3 = void 0 !== n4 && n4, r4 = g2(e4, Zy);
        return this.request({ protocolName: Zh, requestData: r4 }).then(function(e5) {
          wl.log("".concat(t3._className, "._getGroupProfileAdvance ok."));
          var n5 = e5.data.groups;
          return { successGroupList: n5.filter(function(e6) {
            return td(e6.errorCode) || 0 === e6.errorCode;
          }), failureGroupList: n5.filter(function(e6) {
            return e6.errorCode && 0 !== e6.errorCode;
          }).map(function(e6) {
            return new KM({ code: e6.errorCode, message: e6.errorInfo, data: { groupID: e6.groupID } });
          }) };
        }).catch(function(t4) {
          return o3 && Td({ groupID: e4.groupIDList[0] }) ? { successGroupList: [], failureGroupList: [] } : YM(t4);
        });
      } }, { key: "createGroup", value: function(e4) {
        var n4 = this, o3 = "".concat(this._className, ".createGroup"), r4 = e4.type, a3 = e4.groupID;
        if (e4.name && false === this._filterProfanity("name", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        if (e4.introduction && false === this._filterProfanity("introduction", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        if (e4.notification && false === this._filterProfanity("notification", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        if (!["Public", "Private", "ChatRoom", "AVChatRoom", "Community"].includes(r4))
          return YM({ code: dh.ILLEGAL_GROUP_TYPE });
        if (!Td({ type: r4 })) {
          if (!Wd(a3) && Td({ groupID: a3 }))
            return YM({ code: dh.ILLEGAL_GROUP_ID });
          e4.isSupportTopic = void 0;
        }
        if (Id(r4) && !td(e4.memberList) && e4.memberList.length > 0 && (e4.memberList = void 0), yd(r4) || td(e4.joinOption) || (e4.joinOption = void 0), Td({ type: r4 })) {
          if (!Wd(a3) && !Td({ groupID: a3 }))
            return YM({ code: dh.ILLEGAL_GROUP_ID });
          e4.isSupportTopic = true === e4.isSupportTopic ? 1 : 0;
        }
        var s3 = new G_(P_.CREATE_GROUP);
        wl.log("".concat(o3, " options:"), e4);
        var i3 = null, u3 = [];
        return this.request({ protocolName: ef, requestData: t2(t2({}, e4), {}, { ownerID: this.getMyUserID(), webPushFlag: 1 }) }).then(function(r5) {
          var a4 = r5.data, c3 = a4.groupID, l3 = a4.overLimitUserIDList, d3 = void 0 === l3 ? [] : l3;
          if (i3 = c3, u3 = d3, s3.setNetworkType(n4.getNetworkType()).setMessage("groupType:".concat(e4.type, " groupID:").concat(c3, " overLimitUserIDList=").concat(d3)).end(), wl.log("".concat(o3, " ok groupID:").concat(c3, " overLimitUserIDList:"), d3), e4.type === gr.GRP_AVCHATROOM)
            return n4.getGroupProfile({ groupID: c3 });
          if (e4.type === gr.GRP_COMMUNITY && 1 === e4.isSupportTopic)
            return n4.getGroupProfile({ groupID: c3 });
          Wd(e4.memberList) || Wd(d3) || (e4.memberList = e4.memberList.filter(function(e5) {
            return -1 === d3.indexOf(e5.userID);
          })), n4.updateGroupMap([t2(t2({}, e4), {}, { groupID: c3 })]);
          var p3 = n4.getModule(bg), g3 = p3.createCustomMessage({ to: c3, conversationType: gr.CONV_GROUP, payload: { data: "group_create", extension: n4.isIntl() ? "".concat(n4.getMyUserID(), " created a group") : "".concat(n4.getMyUserID(), "\u521B\u5EFA\u7FA4\u7EC4") } });
          return p3.sendMessageInstance(g3), n4.emitGroupListUpdate(), n4.getGroupProfile({ groupID: c3 });
        }).then(function(e5) {
          var t3 = e5.data.group, n5 = t3.selfInfo, o4 = n5.nameCard, r5 = n5.joinTime;
          return t3.updateSelfInfo({ nameCard: o4, joinTime: r5, messageRemindType: gr.MSG_REMIND_ACPT_AND_NOTE, role: gr.GRP_MBR_ROLE_OWNER }), wM({ group: t3, overLimitUserIDList: u3 });
        }).catch(function(r5) {
          if (s3.setMessage("groupType:".concat(e4.type)), n4.probeNetwork().then(function(e5) {
            var t3 = m2(e5, 2), n5 = t3[0], o4 = t3[1];
            s3.setError(r5, n5, o4).end();
          }), 10010 === r5.code || 10007 === r5.code) {
            n4.updateGroupMap([t2(t2({}, e4), {}, { groupID: i3 })]);
            var a4 = n4.getLocalGroupProfile(i3);
            return wl.log("".concat(o3, " success, but failed to get group profile.")), wM({ group: a4, overLimitUserIDList: u3 });
          }
          return wl.error("".concat(o3, " failed. error:"), r5), YM(r5);
        });
      } }, { key: "dismissGroup", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".dismissGroup");
        if (this.hasLocalGroup(e4) && this.getLocalGroupProfile(e4).type === gr.GRP_WORK)
          return YM(new KM({ code: dh.CANNOT_DISMISS_WORK }));
        var o3 = new G_(P_.DISMISS_GROUP);
        return o3.setMessage("groupID:".concat(e4)), wl.log("".concat(n4, " groupID:").concat(e4)), this.request({ protocolName: tf, requestData: { groupID: e4 } }).then(function() {
          return o3.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(n4, " ok")), t3.deleteLocalGroupAndConversation(e4), t3.checkJoinedAVChatRoomByID(e4) && t3._AVChatRoomHandler.reset(e4), wM({ groupID: e4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), r4 = n5[0], a3 = n5[1];
            o3.setError(e5, r4, a3).end();
          }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "updateGroupProfile", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".updateGroupProfile");
        if (!this.hasLocalGroup(e4.groupID) || yd(this.getLocalGroupProfile(e4.groupID).type) || td(e4.joinOption) || (wl.warn("".concat(n4, " joinOption is unavailable for Work/Meeting/AVChatRoom/Community")), e4.joinOption = void 0), td(e4.muteAllMembers) || (e4.muteAllMembers ? e4.muteAllMembers = "On" : e4.muteAllMembers = "Off"), e4.name && false === this._filterProfanity("name", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        if (e4.introduction && false === this._filterProfanity("introduction", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        if (e4.notification && false === this._filterProfanity("notification", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        var o3 = new G_(P_.UPDATE_GROUP_PROFILE);
        return o3.setMessage(JSON.stringify(e4)), wl.log("".concat(n4, " groupID:").concat(e4.groupID)), this.request({ protocolName: nf, requestData: e4 }).then(function() {
          (o3.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(n4, " ok")), t3.hasLocalGroup(e4.groupID)) && (t3.groupMap.get(e4.groupID).updateGroup(e4), t3._setStorageGroupList());
          return wM({ group: t3.groupMap.get(e4.groupID) });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), r4 = n5[0], a3 = n5[1];
            o3.setError(e5, r4, a3).end();
          }), wl.log("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "_filterProfanity", value: function(e4, t3) {
        var n4 = this.getModule(uh);
        if (!n4)
          return true;
        var o3 = n4.filterText(t3[e4], Kc), r4 = o3.isAllowedToSend, a3 = o3.modifiedText;
        return true === r4 && (t3[e4] = a3, true);
      } }, { key: "joinGroup", value: function(e4) {
        var t3 = this, n4 = e4.groupID, o3 = e4.type, r4 = "".concat(this._className, ".joinGroup");
        if (o3 === gr.GRP_WORK)
          return YM({ code: dh.CANNOT_JOIN_WORK });
        if (this.deleteUnjoinedAVChatRoom(n4), this.hasLocalGroup(n4)) {
          if (!this.isLoggedIn())
            return WM({ status: gr.JOIN_STATUS_ALREADY_IN_GROUP });
          var a3 = new G_(P_.APPLY_JOIN_GROUP);
          return this.getGroupProfile({ groupID: n4 }).then(function() {
            return a3.setNetworkType(t3.getNetworkType()).setMessage("groupID:".concat(n4, " joinedStatus:").concat(gr.JOIN_STATUS_ALREADY_IN_GROUP)).end(), WM({ status: gr.JOIN_STATUS_ALREADY_IN_GROUP });
          }).catch(function(o4) {
            return a3.setNetworkType(t3.getNetworkType()).setMessage("groupID:".concat(n4, " unjoined")).end(), wl.warn("".concat(r4, " ").concat(n4, " was unjoined, now join!")), t3.groupMap.delete(n4), t3.applyJoinGroup(e4);
          });
        }
        return wl.log("".concat(r4, " groupID:").concat(n4)), this.isLoggedIn() ? this.applyJoinGroup(e4) : this._AVChatRoomHandler.joinWithoutAuth(e4);
      } }, { key: "applyJoinGroup", value: function(e4) {
        var n4 = this, o3 = "".concat(this._className, ".applyJoinGroup"), r4 = e4.groupID;
        if (!Wd(e4.applyMessage) && false === this._filterProfanity("applyMessage", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        var a3 = new G_(P_.APPLY_JOIN_GROUP), s3 = t2({}, e4), i3 = this.canIUse(wc.AVCHATROOM_HISTORY_MSG);
        return i3 && (s3.historyMessageFlag = 1), this.getModule(Hg).deleteTopicRoamingMessageInfo(r4), this.request({ protocolName: of, requestData: s3 }).then(function(e5) {
          var t3 = e5.data, s4 = t3.joinedStatus, u3 = t3.longPollingKey, c3 = t3.startSeq, l3 = t3.avChatRoomFlag, d3 = t3.avChatRoomKey, p3 = t3.messageList, g3 = "groupID:".concat(r4, " joinedStatus:").concat(s4, " longPollingKey:").concat(u3, " startSeq:").concat(c3) + " avChatRoomFlag:".concat(l3, " canGetAVChatRoomHistoryMessage:").concat(i3, ",") + " history message count:".concat(Wd(p3) ? 0 : p3.length);
          switch (a3.setNetworkType(n4.getNetworkType()).setMessage("".concat(g3)).end(), wl.log("".concat(o3, " ok. ").concat(g3)), s4) {
            case Hl:
              return wM({ status: Hl });
            case Kl:
              return n4.getGroupProfile({ groupID: r4 }).then(function(e6) {
                var t4, o4 = e6.data.group, a4 = { status: Kl, group: o4 };
                return 1 === l3 ? (n4.getModule(Hg).setCompleted("".concat(gr.CONV_GROUP).concat(r4)), n4._groupAttributesHandler.initGroupAttributesCache({ groupID: r4, avChatRoomKey: d3 }), n4._groupCountersHandler.initGroupCountersCache({ groupID: r4, avChatRoomKey: d3 }), (t4 = td(u3) ? n4._AVChatRoomHandler.handleJoinResult({ group: o4 }) : n4._AVChatRoomHandler.startRunLoop({ longPollingKey: u3, group: o4, startSeq: c3 })).then(function() {
                  n4._onAVChatRoomHistoryMessage(p3);
                }), t4) : (n4.emitGroupListUpdate(true, false), wM(a4));
              });
            default:
              var h3 = new KM({ code: dh.JOIN_GROUP_FAIL });
              return wl.error("".concat(o3, " failed. error:"), h3), YM(h3);
          }
        }).catch(function(e5) {
          return a3.setMessage("groupID:".concat(r4)), n4.probeNetwork().then(function(t3) {
            var n5 = m2(t3, 2), o4 = n5[0], r5 = n5[1];
            a3.setError(e5, o4, r5).end();
          }), wl.error("".concat(o3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "quitGroup", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".quitGroup");
        wl.log("".concat(n4, " groupID:").concat(e4));
        var o3 = this.checkJoinedAVChatRoomByID(e4);
        if (!o3 && !this.hasLocalGroup(e4))
          return YM({ code: dh.MEMBER_NOT_IN_GROUP });
        if (o3 && !this.isLoggedIn())
          return wl.log("".concat(n4, " anonymously ok. groupID:").concat(e4)), this.deleteLocalGroupAndConversation(e4), this._AVChatRoomHandler.reset(e4), WM({ groupID: e4 });
        var r4 = new G_(P_.QUIT_GROUP);
        return r4.setMessage("groupID:".concat(e4)), this.request({ protocolName: af, requestData: { groupID: e4 } }).then(function() {
          return r4.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(n4, " ok")), t3.deleteLocalGroupAndConversation(e4), o3 && t3._AVChatRoomHandler.reset(e4), t3._groupAttributesHandler.deleteLocalGroupAttributes(e4), wM({ groupID: e4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], a3 = n5[1];
            r4.setError(e5, o4, a3).end();
          }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "searchGroupByID", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".searchGroupByID"), o3 = { groupIDList: [e4] }, r4 = new G_(P_.SEARCH_GROUP_BY_ID);
        return r4.setMessage("groupID:".concat(e4)), wl.log("".concat(n4, " groupID:").concat(e4)), this.request({ protocolName: sf, requestData: o3 }).then(function(e5) {
          var o4 = e5.data.groupProfile;
          if (0 !== o4[0].errorCode)
            throw new KM({ code: o4[0].errorCode, message: o4[0].errorInfo });
          return r4.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(n4, " ok")), wM({ group: new Sy(o4[0]) });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], a3 = n5[1];
            r4.setError(e5, o4, a3).end();
          }), wl.warn("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "changeGroupOwner", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".changeGroupOwner");
        if (this.hasLocalGroup(e4.groupID) && this.getLocalGroupProfile(e4.groupID).type === gr.GRP_AVCHATROOM)
          return YM({ code: dh.CANNOT_CHANGE_OWNER_IN_AVCHATROOM });
        if (e4.newOwnerID === this.getMyUserID())
          return YM({ code: dh.CANNOT_CHANGE_OWNER_TO_SELF });
        var o3 = new G_(P_.CHANGE_GROUP_OWNER);
        return o3.setMessage("groupID:".concat(e4.groupID, " newOwnerID:").concat(e4.newOwnerID)), wl.log("".concat(n4, " groupID:").concat(e4.groupID)), this.request({ protocolName: uf, requestData: e4 }).then(function() {
          o3.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(n4, " ok"));
          var r4 = e4.groupID, a3 = e4.newOwnerID;
          t3.groupMap.get(r4).ownerID = a3;
          var s3 = t3.getModule(Bg).getLocalGroupMemberList(r4);
          if (s3 instanceof Map) {
            var i3 = s3.get(t3.getMyUserID());
            td(i3) || (i3.updateRole("Member"), t3.groupMap.get(r4).selfInfo.role = "Member");
            var u3 = s3.get(a3);
            td(u3) || u3.updateRole("Owner");
          }
          return t3.emitGroupListUpdate(true, false), wM({ group: t3.groupMap.get(r4) });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), r4 = n5[0], a3 = n5[1];
            o3.setError(e5, r4, a3).end();
          }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "getGroupApplicationList", value: function() {
        return this._groupSystemNoticeHandler.getGroupApplicationList();
      } }, { key: "handleGroupApplication", value: function(e4) {
        var t3, n4, o3, r4, a3 = this, s3 = "".concat(this._className, ".handleGroupApplication"), i3 = e4.handleAction, u3 = e4.handleMessage, c3 = e4.message, l3 = e4.application;
        c3 ? (t3 = c3.payload.operatorID, n4 = c3.payload.groupProfile.groupID, o3 = c3.payload.authentication, r4 = c3.payload.messageKey) : l3 && (t3 = l3.applicant, n4 = l3.groupID, o3 = l3.authentication, r4 = l3.messageKey);
        var d3 = new G_(P_.HANDLE_GROUP_APPLICATION);
        return d3.setMessage("groupID:".concat(n4)), wl.log("".concat(s3, " groupID:").concat(n4)), this.request({ protocolName: cf, requestData: { handleAction: i3, handleMessage: u3, applicant: t3, groupID: n4, authentication: o3, messageKey: r4 } }).then(function() {
          return d3.setNetworkType(a3.getNetworkType()).end(), wl.log("".concat(s3, " ok")), c3 && a3._groupSystemNoticeHandler.deleteGroupSystemNotice({ messageList: [e4.message] }), wM({ group: a3.getLocalGroupProfile(n4) });
        }).catch(function(e5) {
          return a3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            d3.setError(e5, o4, r5).end();
          }), wl.error("".concat(s3, " failed. error"), e5), YM(e5);
        });
      } }, { key: "handleGroupInvitation", value: function(e4) {
        var n4 = this, o3 = "".concat(this._className, ".handleGroupInvitation"), r4 = e4.message.payload, a3 = r4.groupProfile.groupID, s3 = r4.authentication, i3 = r4.messageKey, u3 = r4.operatorID, c3 = e4.handleAction, l3 = new G_(P_.HANDLE_GROUP_INVITATION);
        return l3.setMessage("groupID:".concat(a3, " inviter:").concat(u3, " handleAction:").concat(c3)), wl.log("".concat(o3, " groupID:").concat(a3, " inviter:").concat(u3, " handleAction:").concat(c3)), this.request({ protocolName: lf, requestData: t2(t2({}, e4), {}, { inviter: u3, groupID: a3, authentication: s3, messageKey: i3 }) }).then(function() {
          return l3.setNetworkType(n4.getNetworkType()).end(), wl.log("".concat(o3, " ok")), n4._groupSystemNoticeHandler.deleteGroupSystemNotice({ messageList: [e4.message] }), wM({ group: n4.getLocalGroupProfile(a3) });
        }).catch(function(e5) {
          return n4.probeNetwork().then(function(t3) {
            var n5 = m2(t3, 2), o4 = n5[0], r5 = n5[1];
            l3.setError(e5, o4, r5).end();
          }), wl.error("".concat(o3, " failed. error"), e5), YM(e5);
        });
      } }, { key: "getGroupOnlineMemberCount", value: function(e4) {
        return this._AVChatRoomHandler ? this._AVChatRoomHandler.checkJoinedAVChatRoomByID(e4) ? this._AVChatRoomHandler.getGroupOnlineMemberCount(e4) : WM({ memberCount: 0 }) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "hasLocalGroup", value: function(e4) {
        return this.groupMap.has(e4);
      } }, { key: "deleteLocalGroupAndConversation", value: function(e4) {
        var t3 = this.checkJoinedAVChatRoomByID(e4);
        (wl.log("".concat(this._className, ".deleteLocalGroupAndConversation isJoinedAVChatRoom:").concat(t3)), t3) && this.getModule(Hg).deleteLocalConversation("".concat(gr.CONV_GROUP).concat(e4));
        if (Td({ groupID: e4 })) {
          var n4 = this.getLocalGroupProfile(e4);
          if (n4 && true === n4.isSupportTopic)
            this.getModule(Kg).deleteTopicListInCommunity(e4);
        }
        this._deleteLocalGroup(e4), this.emitGroupListUpdate(true, false);
      } }, { key: "_deleteLocalGroup", value: function(e4) {
        this.groupMap.delete(e4), this.getModule(Bg).deleteGroupMemberList(e4), this._setStorageGroupList();
      } }, { key: "sendMessage", value: function(e4, t3) {
        if (ed(e4._receiverList) && e4._receiverList.length > 0 && !this.canIUse(wc.MSG_TO_SPECIFIED_GRP_MBR))
          return YM({ code: dh.CANNOT_USE_COMMERCIAL_ABILITY });
        var n4 = this.createGroupMessagePack(e4, t3);
        return this.request(n4);
      } }, { key: "createGroupMessagePack", value: function(e4, t3) {
        var n4 = null;
        t3 && t3.offlinePushInfo && (n4 = t3.offlinePushInfo);
        var o3 = "";
        Xl(e4.cloudCustomData) && e4.cloudCustomData.length > 0 && (o3 = e4.cloudCustomData);
        var r4 = [];
        if (Zl(t3) && Zl(t3.messageControlInfo)) {
          var a3 = t3.messageControlInfo, s3 = a3.excludedFromUnreadCount, i3 = a3.excludedFromLastMessage;
          true === s3 && r4.push("NoUnread"), true === i3 && r4.push("NoLastMsg");
        }
        var u3 = void 0;
        ed(e4._receiverList) && e4._receiverList.length > 0 && (u3 = e4._receiverList, e4._receiverList.length > 50 && (u3 = e4._receiverList.slice(0, 50), wl.warn("".concat(this._className, ".createGroupMessagePack receiverList must be less than or equal to 50."))));
        var c3 = this.isOnlineMessage(e4, t3) ? 1 : 0, l3 = e4.getGroupAtInfoList(), d3 = { fromAccount: this.getMyUserID(), groupID: e4.to, msgBody: e4.getElements(), cloudCustomData: o3, random: e4.random, priority: e4.priority, clientSequence: e4.clientSequence, groupAtInfo: e4.type !== gr.MSG_TEXT || Wd(l3) ? void 0 : l3, onlineOnlyFlag: c3, clientTime: e4.clientTime, offlinePushInfo: n4 ? { pushFlag: true === n4.disablePush ? 1 : 0, title: n4.title || "", desc: n4.description || "", ext: n4.extension || "", apnsInfo: { badgeMode: true === n4.ignoreIOSBadge ? 1 : 0, isVoipPush: this._isVoipPush(n4) }, androidInfo: { OPPOChannelID: n4.androidOPPOChannelID || "" } } : void 0, messageControlInfo: 0 === c3 ? r4 : void 0, needReadReceipt: true !== e4.needReadReceipt || this.isMessageFromOrToAVChatroom(e4.to) ? 0 : 1, receiverList: u3, isSupportExtension: true === e4.isSupportExtension ? 1 : 0 };
        return Cd(e4.to) && (d3.groupID = Fd(e4.to), d3.topicID = e4.to), { protocolName: Th, tjgID: this.generateTjgID(e4), requestData: d3 };
      } }, { key: "_isVoipPush", value: function(e4) {
        var t3 = void 0;
        return td(e4.disableVoipPush) || (t3 = false === e4.disableVoipPush ? 1 : 0), t3;
      } }, { key: "revokeMessage", value: function(e4) {
        var t3 = { groupID: e4.to, msgSeqList: [{ msgSeq: e4.sequence }] };
        return Cd(e4.to) && (t3.groupID = Fd(e4.to), t3.topicID = e4.to), this.request({ protocolName: df, requestData: t3 });
      } }, { key: "deleteMessage", value: function(e4) {
        var t3 = e4.to, n4 = e4.keyList;
        wl.log("".concat(this._className, ".deleteMessage groupID:").concat(t3, " count:").concat(n4.length));
        var o3 = { groupID: t3, deleter: this.getMyUserID(), keyList: n4 };
        return Cd(t3) && (o3.groupID = Fd(t3), o3.topicID = t3), this.request({ protocolName: Ef, requestData: o3 });
      } }, { key: "modifyRemoteMessage", value: function(e4) {
        var t3 = e4.to, n4 = e4.sequence, o3 = e4.payload, r4 = e4.type, a3 = e4.version, s3 = void 0 === a3 ? 0 : a3, i3 = e4.cloudCustomData, u3 = t3, c3 = void 0;
        Cd(t3) && (u3 = Fd(t3), c3 = t3);
        var l3 = void 0;
        return xd(r4) && (l3 = []).push({ type: r4, content: o3 }), this.request({ protocolName: Sf, requestData: { groupID: u3, topicID: c3, sequence: n4, version: s3, elements: l3, cloudCustomData: i3 } });
      } }, { key: "getRoamingMessage", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".getRoamingMessage"), o3 = e4.conversationID, r4 = e4.groupID, a3 = e4.sequence, s3 = new G_(P_.GET_GROUP_ROAMING_MESSAGES), i3 = 0, u3 = void 0;
        return Cd(r4) && (r4 = Fd(u3 = r4)), this._computeLastSequence({ groupID: r4, topicID: u3, sequence: a3 }).then(function(e5) {
          return i3 = e5, wl.log("".concat(n4, " groupID:").concat(r4, " startSequence:").concat(i3)), t3.request({ protocolName: hf, requestData: { groupID: r4, count: 21, sequence: i3, topicID: u3 } });
        }).then(function(e5) {
          var a4 = e5.data, c3 = a4.messageList, l3 = a4.complete, d3 = a4.invisibleSequenceList, p3 = void 0 === d3 ? [] : d3;
          td(c3) ? wl.log("".concat(n4, " ok. complete:").concat(l3, " but messageList is undefined!")) : wl.log("".concat(n4, " ok. complete:").concat(l3, " count:").concat(c3.length));
          var g3 = t3._getMinSequence(p3, c3) - 1;
          s3.setNetworkType(t3.getNetworkType()).setMessage("groupID:".concat(r4, " topicID:").concat(u3, " startSequence:").concat(i3, " complete:").concat(l3, " nextSequence:").concat(g3)).end();
          var h3 = t3.getModule(Hg), f3 = [];
          return Wd(c3) || (h3.updateRoamingMessageSequence(o3, g3), f3 = h3.onRoamingMessage(c3, o3), h3.updateIsRead(o3), h3.patchConversationLastMessage(o3)), 2 === l3 && (h3.setCompleted(o3), g3 = ""), wl.log("".concat(n4, " nextReqID:").concat(g3, ", stored message count:").concat(f3.length, ", invisible sequence count:").concat(p3.length)), { nextReqID: g3 + "", storedMessageList: f3 };
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], a4 = n5[1];
            s3.setError(e5, o4, a4).setMessage("groupID:".concat(r4, " topicID:").concat(u3, " startSequence:").concat(i3)).end();
          }), wl.warn("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "_getGroupIDOfMessage", value: function(e4) {
        return e4.conversationID.replace(gr.CONV_GROUP, "");
      } }, { key: "_getMinSequence", value: function(e4, t3) {
        var n4 = 0;
        Wd(t3) || (n4 = t3[t3.length - 1].sequence);
        var o3 = 0;
        Wd(e4) || (o3 = e4[e4.length - 1]);
        return wl.log("".concat(this._className, "._getMinSequence minVisibleSequence:").concat(n4, " minInvisibleSequence:").concat(o3)), o3 > 0 && o3 < n4 ? o3 : n4;
      } }, { key: "getReadReceiptList", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".getReadReceiptList"), o3 = this._getGroupIDOfMessage(e4[0]), r4 = this.getMyUserID(), a3 = e4.filter(function(e5) {
          return e5.from === r4 && true === e5.needReadReceipt;
        }).map(function(e5) {
          return { sequence: e5.sequence };
        });
        if (wl.log("".concat(n4, " groupID:").concat(o3, " sequenceList:").concat(JSON.stringify(a3))), 0 === a3.length)
          return WM({ messageList: e4 });
        var s3 = new G_(P_.GET_READ_RECEIPT);
        return s3.setMessage("groupID:".concat(o3)), this.request({ protocolName: ff, requestData: { groupID: o3, sequenceList: a3 } }).then(function(t4) {
          s3.end(), wl.log("".concat(n4, " ok"));
          var o4 = t4.data.readReceiptList;
          return ed(o4) && o4.forEach(function(t5) {
            e4.forEach(function(e5) {
              0 === t5.code && t5.sequence === e5.sequence && (e5.readReceiptInfo.readCount = t5.readCount, e5.readReceiptInfo.unreadCount = t5.unreadCount);
            });
          }), wM({ messageList: e4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            s3.setError(e5, o4, r5).end();
          }), wl.warn("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "sendReadReceipt", value: function(e4) {
        var t3 = this, n4 = this._getGroupIDOfMessage(e4[0]), o3 = new G_(P_.SEND_READ_RECEIPT);
        o3.setMessage("groupID:".concat(n4));
        var r4 = this.getMyUserID(), a3 = e4.filter(function(e5) {
          return e5.from !== r4 && true === e5.needReadReceipt;
        }).map(function(e5) {
          return { sequence: e5.sequence };
        });
        if (0 === a3.length)
          return YM({ code: dh.READ_RECEIPT_MESSAGE_LIST_EMPTY });
        var s3 = "".concat(this._className, ".sendReadReceipt");
        return wl.log("".concat(s3, ". sequenceList:").concat(JSON.stringify(a3))), this.request({ protocolName: _f, requestData: { groupID: n4, sequenceList: a3 } }).then(function(e5) {
          return o3.end(), wl.log("".concat(s3, " ok")), wM();
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), r5 = n5[0], a4 = n5[1];
            o3.setError(e5, r5, a4).end();
          }), wl.warn("".concat(s3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "getReadReceiptDetail", value: function(e4) {
        var t3 = this, n4 = e4.message, o3 = e4.filter, r4 = e4.cursor, a3 = e4.count, s3 = this._getGroupIDOfMessage(n4), i3 = n4.ID, u3 = n4.sequence, c3 = "".concat(this._className, ".getReadReceiptDetail"), l3 = this._receiptDetailCompleteMap.get(i3) || false, d3 = 0 !== o3 && 1 !== o3 ? 0 : o3, p3 = Xl(r4) ? r4 : "", g3 = !Jl(a3) || a3 <= 0 || a3 >= 100 ? 100 : a3, h3 = "groupID:".concat(s3, " sequence:").concat(u3, " cursor:").concat(p3, " filter:").concat(d3, " completeFlag:").concat(l3);
        wl.log("".concat(c3, " ").concat(h3));
        var f3 = { cursor: "", isCompleted: false, messageID: i3, unreadUserIDList: [], readUserIDList: [] }, _3 = new G_(P_.GET_READ_RECEIPT_DETAIL);
        return _3.setMessage(h3), this.request({ protocolName: vf, requestData: { groupID: s3, sequence: u3, flag: d3, cursor: p3, count: g3 } }).then(function(e5) {
          _3.end();
          var n5 = e5.data, o4 = n5.cursor, r5 = n5.isCompleted, a4 = n5.unreadUserIDList, s4 = n5.readUserIDList;
          return f3.cursor = o4, 1 === r5 && (f3.isCompleted = true, t3._receiptDetailCompleteMap.set(i3, true)), 0 === d3 ? f3.readUserIDList = s4.map(function(e6) {
            return e6.userID;
          }) : 1 === d3 && (f3.unreadUserIDList = a4.map(function(e6) {
            return e6.userID;
          })), wl.log("".concat(c3, " ok")), wM(f3);
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            _3.setError(e5, o4, r5).end();
          }), wl.warn("".concat(c3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "getRoamingMessagesHopping", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".getRoamingMessagesHopping"), o3 = new G_(P_.GET_GROUP_ROAMING_MESSAGES_HOPPING), r4 = e4.groupID, a3 = e4.count, s3 = e4.sequence, i3 = e4.direction, u3 = s3;
        1 === i3 && (u3 = s3 + a3 - 1);
        var c3 = void 0;
        Cd(r4) && (r4 = Fd(c3 = r4));
        var l3 = "".concat(c3 ? "topicID:".concat(c3) : "groupID:".concat(r4), " sequence:").concat(s3, " direction:").concat(i3);
        return wl.log("".concat(n4, " ").concat(l3)), this.request({ protocolName: hf, requestData: { groupID: r4, topicID: c3, count: a3, sequence: u3 } }).then(function(r5) {
          var a4 = r5.data, u4 = a4.messageList, c4 = a4.complete, d3 = "complete:".concat(c4, " count:").concat(u4 ? u4.length : 0);
          if (wl.log("".concat(n4, " ok. ").concat(d3)), o3.setNetworkType(t3.getNetworkType()).setMessage("".concat(l3, " ").concat(d3)).end(), 2 === c4 || Wd(u4)) {
            var p3 = t3._computeResult();
            return wM(p3);
          }
          var g3 = "".concat(gr.CONV_GROUP).concat(e4.groupID), h3 = t3.getModule(Hg).onRoamingMessage(u4, g3, false), f3 = t3._computeResult({ direction: i3, sequence: s3, remoteMessageList: u4, processedMessageList: h3 });
          return wM(f3);
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), i4 = n5[0], u4 = n5[1];
            o3.setError(e5, i4, u4).setMessage("groupID:".concat(r4, " sequence:").concat(s3, " count:").concat(a3)).end();
          }), wl.warn("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "_computeResult", value: function(e4) {
        var t3 = { messageList: [], isCompleted: false, nextMessageSeq: "" };
        if (td(e4))
          return t3.isCompleted = true, t3;
        var n4 = e4.direction, o3 = e4.sequence, r4 = e4.remoteMessageList, a3 = void 0 === r4 ? [] : r4, s3 = e4.processedMessageList, i3 = void 0 === s3 ? [] : s3, u3 = a3.length;
        return 1 === n4 ? (t3.nextMessageSeq = a3[0].sequence + 1, i3.forEach(function(e5) {
          e5.sequence >= o3 && t3.messageList.push(e5);
        }), 0 === t3.messageList.length && a3[0].sequence < o3 && (t3.isCompleted = true, t3.nextMessageSeq = ""), t3) : (t3.nextMessageSeq = a3[u3 - 1].sequence - 1, t3.messageList = v2(i3), 0 === t3.nextMessageSeq && (t3.isCompleted = true, t3.nextMessageSeq = ""), t3);
      } }, { key: "setMessageRead", value: function(e4) {
        var t3 = this, n4 = e4.conversationID, o3 = e4.lastMessageSeq, r4 = "".concat(this._className, ".setMessageRead");
        wl.log("".concat(r4, " conversationID:").concat(n4, " lastMessageSeq:").concat(o3)), Jl(o3) || wl.warn("".concat(r4, " \u8BF7\u52FF\u4FEE\u6539 Conversation.lastMessage.lastSequence\uFF0C\u5426\u5219\u53EF\u80FD\u4F1A\u5BFC\u81F4\u5DF2\u8BFB\u4E0A\u62A5\u7ED3\u679C\u4E0D\u51C6\u786E"));
        var a3 = new G_(P_.SET_GROUP_MESSAGE_READ);
        a3.setMessage("".concat(n4, "-").concat(o3));
        var s3 = n4.replace(gr.CONV_GROUP, ""), i3 = void 0;
        return Cd(s3) && (s3 = Fd(i3 = s3)), this.request({ protocolName: pf, requestData: { groupID: s3, topicID: i3, messageReadSeq: o3 } }).then(function() {
          a3.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(r4, " ok."));
          var e5 = t3.getModule(Hg);
          e5.updateIsReadAfterReadReport({ conversationID: n4, lastMessageSeq: o3 });
          var u3 = true;
          if (!td(i3)) {
            u3 = false;
            var c3 = t3.getModule(Kg).getLocalTopic(s3, i3);
            c3 && c3.updateSelfInfo({ readedSequence: o3 });
          }
          return e5.updateUnreadCount(n4, u3), wM();
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            a3.setError(e5, o4, r5).end();
          }), wl.log("".concat(r4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "_computeLastSequence", value: function(e4) {
        var t3 = e4.groupID, n4 = e4.topicID, o3 = void 0 === n4 ? void 0 : n4, r4 = e4.sequence;
        return r4 > 0 ? Promise.resolve(r4) : td(o3) || this.hasLocalGroup(t3) ? td(o3) ? this.getGroupLastSequence(t3) : this.getTopicLastSequence({ groupID: t3, topicID: o3 }) : Promise.resolve(0);
      } }, { key: "getGroupLastSequence", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".getGroupLastSequence"), o3 = new G_(P_.GET_GROUP_LAST_SEQUENCE), r4 = 0, a3 = "";
        if (this.hasLocalGroup(e4)) {
          var s3 = this.getLocalGroupProfile(e4), i3 = s3.lastMessage;
          if (i3.lastSequence > 0 && false === i3.onlineOnlyFlag)
            return r4 = i3.lastSequence, a3 = "got lastSequence:".concat(r4, " from local group profile[lastMessage.lastSequence]. groupID:").concat(e4), wl.log("".concat(n4, " ").concat(a3)), o3.setNetworkType(this.getNetworkType()).setMessage("".concat(a3)).end(), Promise.resolve(r4);
          if (s3.nextMessageSeq > 1)
            return r4 = s3.nextMessageSeq - 1, a3 = "got lastSequence:".concat(r4, " from local group profile[nextMessageSeq]. groupID:").concat(e4), wl.log("".concat(n4, " ").concat(a3)), o3.setNetworkType(this.getNetworkType()).setMessage("".concat(a3)).end(), Promise.resolve(r4);
        }
        var u3 = "GROUP".concat(e4), c3 = this.getModule(Hg).getLocalConversation(u3);
        if (c3 && c3.lastMessage.lastSequence && false === c3.lastMessage.onlineOnlyFlag)
          return r4 = c3.lastMessage.lastSequence, a3 = "got lastSequence:".concat(r4, " from local conversation profile[lastMessage.lastSequence]. groupID:").concat(e4), wl.log("".concat(n4, " ").concat(a3)), o3.setNetworkType(this.getNetworkType()).setMessage("".concat(a3)).end(), Promise.resolve(r4);
        var l3 = { groupIDList: [e4], responseFilter: { groupBaseInfoFilter: ["NextMsgSeq"] } };
        return this.getGroupProfileAdvance(l3).then(function(s4) {
          var i4 = s4.data.successGroupList;
          return Wd(i4) ? wl.log("".concat(n4, " successGroupList is empty. groupID:").concat(e4)) : (r4 = i4[0].nextMessageSeq - 1, a3 = "got lastSequence:".concat(r4, " from getGroupProfileAdvance. groupID:").concat(e4), wl.log("".concat(n4, " ").concat(a3))), o3.setNetworkType(t3.getNetworkType()).setMessage("".concat(a3)).end(), r4;
        }).catch(function(r5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), a4 = n5[0], s4 = n5[1];
            o3.setError(r5, a4, s4).setMessage("get lastSequence failed from getGroupProfileAdvance. groupID:".concat(e4)).end();
          }), wl.warn("".concat(n4, " failed. error:"), r5), YM(r5);
        });
      } }, { key: "getTopicLastSequence", value: function(e4) {
        var t3 = this, n4 = e4.groupID, o3 = e4.topicID, r4 = "".concat(this._className, ".getTopicLastSequence"), a3 = new G_(P_.GET_TOPIC_LAST_SEQUENCE), s3 = 0, i3 = "", u3 = this.getModule(Kg);
        return u3.hasLocalTopic(n4, o3) ? (s3 = u3.getLocalTopic(n4, o3).nextMessageSeq - 1, i3 = "get lastSequence:".concat(s3, " from local topic info[nextMessageSeq]. topicID:").concat(o3), wl.log("".concat(r4, " ").concat(i3)), a3.setNetworkType(this.getNetworkType()).setMessage("".concat(i3)).end(), Promise.resolve(s3)) : u3.getTopicList({ groupID: n4, topicIDList: [o3] }).then(function(e5) {
          var n5 = e5.data.successTopicList;
          return Wd(n5) ? wl.log("".concat(r4, " successTopicList is empty. topicID:").concat(o3)) : (s3 = n5[0].nextMessageSeq - 1, i3 = "get lastSequence:".concat(s3, " from getTopicList. topicID:").concat(o3), wl.log("".concat(r4, " ").concat(i3))), a3.setNetworkType(t3.getNetworkType()).setMessage("".concat(i3)).end(), s3;
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), r5 = n5[0], s4 = n5[1];
            a3.setError(e5, r5, s4).setMessage("get lastSequence failed from getTopicList. topicID:".concat(o3)).end();
          }), wl.warn("".concat(r4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "isMessageFromOrToAVChatroom", value: function(e4) {
        return !!this._AVChatRoomHandler && this._AVChatRoomHandler.checkJoinedAVChatRoomByID(e4);
      } }, { key: "hasJoinedAVChatRoom", value: function() {
        return this._AVChatRoomHandler ? this._AVChatRoomHandler.hasJoinedAVChatRoom() : 0;
      } }, { key: "getJoinedAVChatRoom", value: function() {
        return this._AVChatRoomHandler ? this._AVChatRoomHandler.getJoinedAVChatRoom() : [];
      } }, { key: "isOnlineMessage", value: function(e4, t3) {
        return !(!this._canIUseOnlineOnlyFlag(e4) || !t3 || true !== t3.onlineUserOnly);
      } }, { key: "_canIUseOnlineOnlyFlag", value: function(e4) {
        var t3 = this.getJoinedAVChatRoom();
        return !t3 || !t3.includes(e4.to) || e4.conversationType !== gr.CONV_GROUP;
      } }, { key: "_onAVChatRoomHistoryMessage", value: function(e4) {
        if (!Wd(e4)) {
          wl.log("".concat(this._className, "._onAVChatRoomHistoryMessage count:").concat(e4.length));
          var n4 = [];
          e4.forEach(function(e5) {
            n4.push(t2(t2({}, e5), {}, { isHistoryMessage: 1 }));
          }), this.onAVChatRoomMessage(n4);
        }
      } }, { key: "onAVChatRoomMessage", value: function(e4) {
        this._AVChatRoomHandler && this._AVChatRoomHandler.onMessage(e4);
      } }, { key: "onAVChatRoomMemberBanned", value: function(e4) {
        this._AVChatRoomHandler && this._AVChatRoomHandler.onAVChatRoomMemberBanned(e4);
      } }, { key: "getGroupSimplifiedInfo", value: function(e4) {
        var t3 = this, n4 = new G_(P_.GET_GROUP_SIMPLIFIED_INFO), o3 = { groupIDList: [e4], responseFilter: { groupBaseInfoFilter: ["Type", "Name"] } };
        return this.getGroupProfileAdvance(o3).then(function(o4) {
          var r4 = o4.data.successGroupList;
          return n4.setNetworkType(t3.getNetworkType()).setMessage("groupID:".concat(e4, " type:").concat(r4[0].type)).end(), r4[0];
        }).catch(function(o4) {
          t3.probeNetwork().then(function(t4) {
            var r4 = m2(t4, 2), a3 = r4[0], s3 = r4[1];
            n4.setError(o4, a3, s3).setMessage("groupID:".concat(e4)).end();
          });
        });
      } }, { key: "setUnjoinedAVChatRoom", value: function(e4) {
        this._unjoinedAVChatRoomList.set(e4, 1);
      } }, { key: "deleteUnjoinedAVChatRoom", value: function(e4) {
        this._unjoinedAVChatRoomList.has(e4) && this._unjoinedAVChatRoomList.delete(e4);
      } }, { key: "isUnjoinedAVChatRoom", value: function(e4) {
        return this._unjoinedAVChatRoomList.has(e4);
      } }, { key: "isGroupAttributesUpdatedNotice", value: function(e4) {
        return this._groupAttributesHandler.isGroupAttributesUpdatedNotice(e4);
      } }, { key: "updateLocalMainSequenceOnReconnected", value: function() {
        this._groupAttributesHandler.updateLocalMainSequenceOnReconnected();
      } }, { key: "initGroupAttributes", value: function(e4) {
        return this._groupAttributesHandler.initGroupAttributes(e4);
      } }, { key: "setGroupAttributes", value: function(e4) {
        return this._groupAttributesHandler.setGroupAttributes(e4);
      } }, { key: "deleteGroupAttributes", value: function(e4) {
        return this._groupAttributesHandler.deleteGroupAttributes(e4);
      } }, { key: "getGroupAttributes", value: function(e4) {
        return this._groupAttributesHandler.getGroupAttributes(e4);
      } }, { key: "isMessageFromTopic", value: function(e4, t3) {
        return 2 === e4 && !Wd(t3);
      } }, { key: "isMessageFromCommunityOfTopic", value: function(e4, t3) {
        return 2 === e4 && Wd(t3);
      } }, { key: "getMessageExtensions", value: function(e4, t3) {
        return wl.log("".concat(this._className, ".getMessageExtensions startSequence:").concat(t3)), this.request({ protocolName: Lf, requestData: { groupID: e4.to, messageSequence: e4.sequence, startSequence: t3 } });
      } }, { key: "modifyMessageExtensions", value: function(e4, t3) {
        var n4 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        return wl.log("".concat(this._className, ".modifyMessageExtensions operateType:").concat(n4)), this.request({ protocolName: Of, requestData: { groupID: e4.to, messageSequence: e4.sequence, extensionList: t3, operateType: n4 } });
      } }, { key: "getGroupNotify", value: function(e4) {
        var n4 = this;
        if (this.hasLocalGroup(e4)) {
          var o3 = this.getLocalGroupProfile(e4), r4 = o3.type, a3 = o3.isSupportTopic;
          if (!Id(r4) && !a3) {
            var s3 = "".concat(this._className, ".getGroupNotify"), i3 = this._getGroupLastRevokedTime(e4), u3 = 1e3 * Ol();
            wl.log("".concat(s3, " groupID:").concat(e4, " type:").concat(r4, " beginTime:").concat(i3, " endTime:").concat(u3)), this.request({ protocolName: Gf, requestData: { type: Td({ type: r4, groupID: e4 }) ? gr.GRP_COMMUNITY : void 0, groupID: e4, beginTime: i3, endTime: u3 } }).then(function(o4) {
              var r5 = o4.data, a4 = r5.nextRevokedTime, i4 = r5.notifyList;
              wl.log("".concat(s3, " ok. nextRevokedTime:").concat(a4));
              var u4 = { dataList: [{ elements: { revokedInfos: [] } }] };
              ed(i4) && i4.forEach(function(n5) {
                u4.dataList[0].elements.revokedInfos.push({ groupID: e4, sequence: n5.sequence, random: n5.random, revokerInfo: t2({}, n5.revokerInfo) });
              }), n4.onGroupMessageRevoked(u4), 0 !== a4 ? (n4._setGroupLastRevokedTime(e4, a4), n4.getGroupNotify(e4)) : n4._setGroupLastRevokedTime(e4, 1e3 * Ol());
            }).catch(function(e5) {
              wl.error("".concat(s3, " failed. error:"), e5);
            });
          }
        }
      } }, { key: "_getGroupLastRevokedTime", value: function(e4) {
        return this.hasLocalGroup(e4) ? this.getLocalGroupProfile(e4)._lastRevokedTime : 0;
      } }, { key: "_setGroupLastRevokedTime", value: function(e4, t3) {
        this.hasLocalGroup(e4) && (this.getLocalGroupProfile(e4)._lastRevokedTime = t3);
      } }, { key: "isGroupCountersNotice", value: function(e4) {
        return this._groupCountersHandler.isGroupCountersNotice(e4);
      } }, { key: "setGroupCounters", value: function(e4) {
        return this._groupCountersHandler.setGroupCounters(e4);
      } }, { key: "increaseGroupCounter", value: function(e4) {
        return this._groupCountersHandler.increaseGroupCounter(e4);
      } }, { key: "decreaseGroupCounter", value: function(e4) {
        return this._groupCountersHandler.decreaseGroupCounter(e4);
      } }, { key: "getGroupCounters", value: function(e4) {
        return this._groupCountersHandler.getGroupCounters(e4);
      } }, { key: "reset", value: function() {
        this.groupMap.clear(), this._unjoinedAVChatRoomList.clear(), this._receiptDetailCompleteMap.clear(), this._commonGroupHandler.reset(), this._groupSystemNoticeHandler.reset(), this._groupTipsHandler.reset(), this._groupAttributesHandler.reset(), this._groupCountersHandler.reset(), this._AVChatRoomHandler && this._AVChatRoomHandler.reset();
      } }]), r3;
    }(hh), tI = function() {
      function e3(t3) {
        o2(this, e3), this.userID = "", this.avatar = "", this.nick = "", this.role = "", this.joinTime = "", this.lastSendMsgTime = "", this.nameCard = "", this.muteUntil = 0, this.memberCustomField = [], this._initMember(t3);
      }
      return a2(e3, [{ key: "_initMember", value: function(e4) {
        this.updateMember(e4);
      } }, { key: "updateMember", value: function(e4) {
        var t3 = [null, void 0, "", 0, NaN];
        e4.memberCustomField && Md(this.memberCustomField, e4.memberCustomField), cd(this, e4, ["memberCustomField", "marks"], t3);
      } }, { key: "updateRole", value: function(e4) {
        ["Owner", "Admin", "Member"].indexOf(e4) < 0 || (this.role = e4);
      } }, { key: "updateMuteUntil", value: function(e4) {
        td(e4) || (this.muteUntil = Math.floor((Date.now() + 1e3 * e4) / 1e3));
      } }, { key: "updateNameCard", value: function(e4) {
        td(e4) || (this.nameCard = e4);
      } }, { key: "updateMemberCustomField", value: function(e4) {
        e4 && Md(this.memberCustomField, e4);
      } }]), e3;
    }(), nI = function(e3) {
      i2(r3, e3);
      var n3 = _2(r3);
      function r3(e4) {
        var t3;
        return o2(this, r3), (t3 = n3.call(this, e4))._className = "GroupMemberModule", t3.groupMemberListMap = /* @__PURE__ */ new Map(), t3.getInnerEmitterInstance().on(py, t3._onProfileUpdated, h2(t3)), t3;
      }
      return a2(r3, [{ key: "_onProfileUpdated", value: function(e4) {
        for (var t3 = this, n4 = e4.data, o3 = function(e5) {
          var o4 = n4[e5];
          t3.groupMemberListMap.forEach(function(e6) {
            e6.has(o4.userID) && e6.get(o4.userID).updateMember({ nick: o4.nick, avatar: o4.avatar });
          });
        }, r4 = 0; r4 < n4.length; r4++)
          o3(r4);
      } }, { key: "deleteGroupMemberList", value: function(e4) {
        this.groupMemberListMap.delete(e4);
      } }, { key: "getGroupMemberList", value: function(e4) {
        var t3 = this, n4 = e4.groupID, o3 = e4.offset, r4 = void 0 === o3 ? 0 : o3, a3 = e4.count, s3 = void 0 === a3 ? 15 : a3, i3 = e4.filter, u3 = void 0 === i3 ? void 0 : i3, c3 = "".concat(this._className, ".getGroupMemberList"), l3 = this.getModule(xg), d3 = l3.hasLocalGroup(n4);
        if (wl.log("".concat(c3, " groupID:").concat(n4, " offset:").concat(r4, " count:").concat(s3, " hasLocalGroup:").concat(d3)), !d3)
          return WM({ memberList: [], offset: 0 });
        if (l3.getLocalGroupProfile(n4).type === gr.GRP_AVCHATROOM) {
          if (this.canIUse(wc.AVCHATROOM_MBR_LIST))
            return this._getAVChatRoomMemberList({ groupID: n4, offset: r4, filter: u3 });
          this.isIntl() || wl.warn("".concat(c3, " \u4ECE v2.22.0 \u8D77\uFF0CSDK \u652F\u6301\u83B7\u53D6\u76F4\u64AD\u7FA4\u5728\u7EBF\u6210\u5458\u5217\u8868\uFF0C\u8BF7\u5347\u7EA7\u65D7\u8230\u7248\u5957\u9910\u4E14\u524D\u5F80\u5373\u65F6\u901A\u4FE1 IM \u63A7\u5236\u53F0\uFF1Ahttps://console.cloud.tencent.com/im \u5F00\u542F\u5F00\u5173\u3002"));
        }
        var p3 = new G_(P_.GET_GROUP_MEMBER_LIST), g3 = 0, h3 = { groupID: n4, limit: s3 > 100 ? 100 : s3 };
        Td({ groupID: n4 }) ? h3.next = "".concat(r4) : (h3.offset = r4, g3 = r4 + s3);
        var f3 = [];
        return this.request({ protocolName: bf, requestData: h3 }).then(function(e5) {
          var o4 = e5.data, r5 = o4.members, a4 = o4.memberNum, s4 = o4.next, i4 = void 0 === s4 ? void 0 : s4;
          if (td(i4) || (g3 = Wd(i4) ? 0 : i4), !ed(r5) || 0 === r5.length)
            return g3 = 0, Promise.resolve([]);
          var u4 = t3.getModule(xg);
          return u4.hasLocalGroup(n4) && (u4.getLocalGroupProfile(n4).memberNum = a4), f3 = t3._updateLocalGroupMemberMap(n4, r5), t3.getModule(Fg).getUserProfile({ userIDList: r5.map(function(e6) {
            return e6.userID;
          }), tagList: [ql.NICK, ql.AVATAR] });
        }).then(function(e5) {
          var o4 = e5.data;
          if (!ed(o4) || 0 === o4.length)
            return WM({ memberList: [], offset: g3 });
          var a4 = o4.map(function(e6) {
            return { userID: e6.userID, nick: e6.nick, avatar: e6.avatar };
          });
          return t3._updateLocalGroupMemberMap(n4, a4), f3.length < s3 && (g3 = 0), p3.setNetworkType(t3.getNetworkType()).setMessage("groupID:".concat(n4, " offset:").concat(r4, " count:").concat(s3)).end(), wl.log("".concat(c3, " ok.")), wM({ memberList: f3, offset: g3 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            p3.setError(e5, o4, r5).end();
          }), wl.error("".concat(c3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "_getAVChatRoomMemberList", value: function(e4) {
        var t3 = this, n4 = e4.groupID, o3 = e4.offset, r4 = e4.filter, a3 = "".concat(this._className, "._getAVChatRoomMemberList"), s3 = new G_(P_.GET_AVCHATROOM_MEMBER_LIST);
        return s3.setMessage("groupID:".concat(n4, " offset:").concat(o3, " filter:").concat(r4)), this.request({ protocolName: wf, requestData: { groupID: n4, offset: o3, filter: r4 } }).then(function(e5) {
          var o4 = e5.data, r5 = o4.memberList, i3 = void 0 === r5 ? [] : r5, u3 = o4.offset, c3 = void 0 === u3 ? 0 : u3;
          s3.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(a3, " ok. member count:").concat(i3.length, ", next request timestamp:").concat(c3));
          var l3 = t3._updateLocalGroupMemberMap(n4, i3);
          return wM({ memberList: l3, offset: c3 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            s3.setError(e5, o4, r5).end();
          }), wl.error("".concat(a3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "getGroupMemberProfile", value: function(e4) {
        var n4 = this, o3 = "".concat(this._className, ".getGroupMemberProfile"), r4 = new G_(P_.GET_GROUP_MEMBER_PROFILE);
        r4.setMessage(e4.userIDList.length > 5 ? "userIDList.length:".concat(e4.userIDList.length) : "userIDList:".concat(e4.userIDList)), wl.log("".concat(o3, " groupID:").concat(e4.groupID, " userIDList:").concat(e4.userIDList.join(","))), e4.userIDList.length > 50 && (e4.userIDList = e4.userIDList.slice(0, 50));
        var a3 = e4.groupID, s3 = e4.userIDList;
        return this._getGroupMemberProfileAdvance(t2(t2({}, e4), {}, { userIDList: s3 })).then(function(e5) {
          var t3 = e5.data.members;
          return ed(t3) && 0 !== t3.length ? (n4._updateLocalGroupMemberMap(a3, t3), n4.getModule(Fg).getUserProfile({ userIDList: t3.map(function(e6) {
            return e6.userID;
          }), tagList: [ql.NICK, ql.AVATAR] })) : WM([]);
        }).then(function(e5) {
          var t3 = e5.data.map(function(e6) {
            return { userID: e6.userID, nick: e6.nick, avatar: e6.avatar };
          });
          n4._updateLocalGroupMemberMap(a3, t3);
          var o4 = s3.filter(function(e6) {
            return n4.hasLocalGroupMember(a3, e6);
          }).map(function(e6) {
            return n4.getLocalGroupMemberInfo(a3, e6);
          });
          return r4.setNetworkType(n4.getNetworkType()).end(), wM({ memberList: o4 });
        });
      } }, { key: "addGroupMember", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".addGroupMember"), o3 = e4.groupID, r4 = this.getModule(xg).getLocalGroupProfile(o3), a3 = r4.type, s3 = new G_(P_.ADD_GROUP_MEMBER);
        if (s3.setMessage("groupID:".concat(o3, " groupType:").concat(a3)), Id(a3)) {
          var i3 = new KM({ code: dh.CANNOT_ADD_MEMBER_IN_AVCHATROOM });
          return s3.setError(i3, true, this.getNetworkType()).end(), YM(i3);
        }
        return e4.userIDList = e4.userIDList.map(function(e5) {
          return { userID: e5 };
        }), wl.log("".concat(n4, " groupID:").concat(o3)), this.request({ protocolName: qf, requestData: e4 }).then(function(o4) {
          var a4 = o4.data.members;
          wl.log("".concat(n4, " ok"));
          var i4 = a4.filter(function(e5) {
            return 1 === e5.result;
          }).map(function(e5) {
            return e5.userID;
          }), u3 = a4.filter(function(e5) {
            return 0 === e5.result;
          }).map(function(e5) {
            return e5.userID;
          }), c3 = a4.filter(function(e5) {
            return 2 === e5.result;
          }).map(function(e5) {
            return e5.userID;
          }), l3 = a4.filter(function(e5) {
            return 4 === e5.result;
          }).map(function(e5) {
            return e5.userID;
          }), d3 = "groupID:".concat(e4.groupID, ", ") + "successUserIDList:".concat(i4, ", ") + "failureUserIDList:".concat(u3, ", ") + "existedUserIDList:".concat(c3, ", ") + "overLimitUserIDList:".concat(l3);
          return s3.setNetworkType(t3.getNetworkType()).setMoreMessage(d3).end(), 0 === i4.length ? wM({ successUserIDList: i4, failureUserIDList: u3, existedUserIDList: c3, overLimitUserIDList: l3 }) : (r4.memberCount += i4.length, t3._updateConversationGroupProfile(r4), wM({ successUserIDList: i4, failureUserIDList: u3, existedUserIDList: c3, overLimitUserIDList: l3, group: r4 }));
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            s3.setError(e5, o4, r5).end();
          }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "deleteGroupMember", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".deleteGroupMember"), o3 = e4.groupID, r4 = e4.userIDList, a3 = this.getModule(xg).getLocalGroupProfile(o3);
        if (td(a3))
          return YM({ code: dh.CANNOT_FIND_GROUP });
        if (Id(a3.type))
          return this.canIUse(wc.AVCHATROOM_BAN_MBR) ? this._banAVChatRoomMember(e4) : YM({ code: dh.CANNOT_USE_COMMERCIAL_ABILITY });
        var s3 = new G_(P_.DELETE_GROUP_MEMBER), i3 = "groupID:".concat(o3, " ").concat(r4.length > 5 ? "userIDList.length:".concat(r4.length) : "userIDList:".concat(r4));
        return s3.setMessage(i3), wl.log("".concat(n4, " groupID:").concat(o3, " userIDList:"), r4), this.request({ protocolName: xf, requestData: e4 }).then(function() {
          return s3.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(n4, " ok")), a3.memberCount -= 1, t3._updateConversationGroupProfile(a3), t3.deleteLocalGroupMembers(o3, r4), wM({ group: a3, userIDList: r4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            s3.setError(e5, o4, r5).end();
          }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "_updateConversationGroupProfile", value: function(e4) {
        this.getModule(Hg).updateConversationGroupProfile([e4]);
      } }, { key: "_banAVChatRoomMember", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, "._banAVChatRoomMember"), o3 = e4.groupID, r4 = e4.userIDList, a3 = "groupID:".concat(o3, " ").concat(r4.length > 5 ? "userIDList.length:".concat(r4.length) : "userIDList:".concat(r4)), s3 = new G_(P_.BAN_AVCHATROOM_MEMBER);
        s3.setMessage(a3), wl.log("".concat(n4, " groupID:").concat(o3, " userIDList:"), r4);
        var i3 = this.getModule(xg).getLocalGroupProfile(o3);
        return td(e4.duration) || 0 === e4.duration ? YM({ code: dh.BAN_DURATION_INVALID }) : this.request({ protocolName: Vf, requestData: e4 }).then(function() {
          return s3.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(n4, " ok")), t3.deleteLocalGroupMembers(o3, r4), wM({ group: i3, userIDList: r4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            s3.setError(e5, o4, r5).end();
          }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "setGroupMemberMuteTime", value: function(e4) {
        var t3 = this, n4 = e4.groupID, o3 = e4.userID, r4 = e4.muteTime, a3 = "".concat(this._className, ".setGroupMemberMuteTime");
        if (o3 === this.getMyUserID())
          return YM(new KM({ code: dh.CANNOT_MUTE_SELF }));
        wl.log("".concat(a3, " groupID:").concat(n4, " userID:").concat(o3));
        var s3 = new G_(P_.SET_GROUP_MEMBER_MUTE_TIME);
        return s3.setMessage("groupID:".concat(n4, " userID:").concat(o3, " muteTime:").concat(r4)), this.modifyGroupMemberInfo({ groupID: n4, userID: o3, muteTime: r4 }).then(function(e5) {
          s3.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(a3, " ok"));
          var o4 = t3.getModule(xg);
          return wM({ group: o4.getLocalGroupProfile(n4), member: e5 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            s3.setError(e5, o4, r5).end();
          }), wl.error("".concat(a3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "setGroupMemberRole", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".setGroupMemberRole"), o3 = e4.groupID, r4 = e4.userID, a3 = e4.role, s3 = this.getModule(xg).getLocalGroupProfile(o3);
        if (s3.selfInfo.role !== gr.GRP_MBR_ROLE_OWNER)
          return YM({ code: dh.NOT_OWNER });
        if ([gr.GRP_WORK, gr.GRP_AVCHATROOM].includes(s3.type))
          return YM({ code: dh.CANNOT_SET_MEMBER_ROLE_IN_WORK_AND_AVCHATROOM });
        var i3 = [gr.GRP_MBR_ROLE_ADMIN, gr.GRP_MBR_ROLE_MEMBER];
        if (Td({ groupID: o3 }) && i3.push(gr.GRP_MBR_ROLE_CUSTOM), i3.indexOf(a3) < 0)
          return YM({ code: dh.INVALID_MEMBER_ROLE });
        if (r4 === this.getMyUserID())
          return YM({ code: dh.CANNOT_SET_SELF_MEMBER_ROLE });
        var u3 = new G_(P_.SET_GROUP_MEMBER_ROLE);
        return u3.setMessage("groupID:".concat(o3, " userID:").concat(r4, " role:").concat(a3)), wl.log("".concat(n4, " groupID:").concat(o3, " userID:").concat(r4)), this.modifyGroupMemberInfo({ groupID: o3, userID: r4, role: a3 }).then(function(e5) {
          return u3.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(n4, " ok")), wM({ group: s3, member: e5 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            u3.setError(e5, o4, r5).end();
          }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "_filterProfanity", value: function(e4, t3) {
        var n4 = this.getModule(uh);
        if (!n4)
          return true;
        var o3 = n4.filterText(t3[e4], Hc), r4 = o3.isAllowedToSend, a3 = o3.modifiedText;
        return true === r4 && (t3[e4] = a3, true);
      } }, { key: "setGroupMemberNameCard", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".setGroupMemberNameCard");
        if (e4.nameCard && false === this._filterProfanity("nameCard", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        var o3 = e4.groupID, r4 = e4.userID, a3 = void 0 === r4 ? this.getMyUserID() : r4, s3 = e4.nameCard;
        wl.log("".concat(n4, " groupID:").concat(o3, " userID:").concat(a3));
        var i3 = new G_(P_.SET_GROUP_MEMBER_NAME_CARD);
        return i3.setMessage("groupID:".concat(o3, " userID:").concat(a3, " nameCard:").concat(s3)), this.modifyGroupMemberInfo({ groupID: o3, userID: a3, nameCard: s3 }).then(function(e5) {
          wl.log("".concat(n4, " ok")), i3.setNetworkType(t3.getNetworkType()).end();
          var r5 = t3.getModule(xg).getLocalGroupProfile(o3);
          return a3 === t3.getMyUserID() && r5 && r5.setSelfNameCard(s3), wM({ group: r5, member: e5 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            i3.setError(e5, o4, r5).end();
          }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "setGroupMemberCustomField", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".setGroupMemberCustomField"), o3 = e4.groupID, r4 = e4.userID, a3 = void 0 === r4 ? this.getMyUserID() : r4, s3 = e4.memberCustomField;
        wl.log("".concat(n4, " groupID:").concat(o3, " userID:").concat(a3));
        var i3 = new G_(P_.SET_GROUP_MEMBER_CUSTOM_FIELD);
        return i3.setMessage("groupID:".concat(o3, " userID:").concat(a3, " memberCustomField:").concat(JSON.stringify(s3))), this.modifyGroupMemberInfo({ groupID: o3, userID: a3, memberCustomField: s3 }).then(function(e5) {
          i3.setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(n4, " ok"));
          var r5 = t3.getModule(xg).getLocalGroupProfile(o3);
          return wM({ group: r5, member: e5 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            i3.setError(e5, o4, r5).end();
          }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "modifyGroupMemberInfo", value: function(e4) {
        var n4 = this, o3 = e4.groupID, r4 = e4.userID, a3 = void 0;
        return Cd(o3) && (o3 = Fd(a3 = o3)), this.request({ protocolName: Bf, requestData: t2(t2({}, e4), {}, { groupID: o3, topicID: a3 }) }).then(function() {
          if (n4.hasLocalGroupMember(o3, r4)) {
            var t3 = n4.getLocalGroupMemberInfo(o3, r4);
            return td(e4.muteTime) || t3.updateMuteUntil(e4.muteTime), td(e4.role) || t3.updateRole(e4.role), td(e4.nameCard) || t3.updateNameCard(e4.nameCard), td(e4.memberCustomField) || t3.updateMemberCustomField(e4.memberCustomField), t3;
          }
          return n4.getGroupMemberProfile({ groupID: o3, userIDList: [r4] }).then(function(e5) {
            return m2(e5.data.memberList, 1)[0];
          });
        });
      } }, { key: "markGroupMemberList", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".markGroupMemberList"), o3 = e4.groupID, r4 = e4.markType, a3 = e4.enableMark, s3 = e4.userIDList, i3 = void 0 === s3 ? [] : s3, u3 = "groupID:".concat(o3, " markType:").concat(r4, " enableMark:").concat(a3, " userIDList count: ").concat(i3.length);
        wl.log("".concat(n4, " ").concat(u3));
        var c3 = 2, l3 = [];
        true === a3 && (c3 = 1);
        var d3 = v2(i3);
        i3.length > 500 && (d3 = i3.slice(0, 500), wl.warn("".concat(n4, " ").concat(Hd(500)))), d3.forEach(function(e5) {
          l3.push({ userID: e5, markType: [r4] });
        }), d3 = null;
        var p3 = new G_(P_.MARK_GROUP_MEMBER_LIST);
        return p3.setMessage("".concat(u3)), this.request({ protocolName: Kf, requestData: { groupID: o3, operationType: c3, memberList: l3 } }).then(function(e5) {
          var o4 = e5.data.memberList, r5 = void 0 === o4 ? [] : o4, a4 = [], s4 = [];
          r5.length === i3.length ? a4.push.apply(a4, v2(i3)) : (r5.forEach(function(e6) {
            a4.push(e6.userID);
          }), i3.forEach(function(e6) {
            a4.includes(e6) || s4.push(e6);
          }));
          var u4 = "success count:".concat(a4.length, " fail count:").concat(s4.length);
          return p3.setNetworkType(t3.getNetworkType()).setMessage(u4).end(), wl.log("".concat(n4, " ok. ").concat(u4)), wM({ successUserIDList: a4, failureUserIDList: s4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            p3.setError(e5, o4, r5).end();
          }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "_getGroupMemberProfileAdvance", value: function(e4) {
        return this.request({ protocolName: Ff, requestData: t2(t2({}, e4), {}, { memberInfoFilter: e4.memberInfoFilter ? e4.memberInfoFilter : ["Role", "JoinTime", "NameCard", "ShutUpUntil"] }) });
      } }, { key: "_updateLocalGroupMemberMap", value: function(e4, t3) {
        var n4 = this;
        return ed(t3) && 0 !== t3.length ? t3.map(function(t4) {
          return n4.hasLocalGroupMember(e4, t4.userID) ? n4.getLocalGroupMemberInfo(e4, t4.userID).updateMember(t4) : n4.setLocalGroupMember(e4, new tI(t4)), n4.getLocalGroupMemberInfo(e4, t4.userID);
        }) : [];
      } }, { key: "deleteLocalGroupMembers", value: function(e4, t3) {
        var n4 = this.groupMemberListMap.get(e4);
        n4 && t3.forEach(function(e5) {
          n4.delete(e5);
        });
      } }, { key: "getLocalGroupMemberInfo", value: function(e4, t3) {
        return this.groupMemberListMap.has(e4) ? this.groupMemberListMap.get(e4).get(t3) : null;
      } }, { key: "setLocalGroupMember", value: function(e4, t3) {
        if (this.groupMemberListMap.has(e4))
          this.groupMemberListMap.get(e4).set(t3.userID, t3);
        else {
          var n4 = (/* @__PURE__ */ new Map()).set(t3.userID, t3);
          this.groupMemberListMap.set(e4, n4);
        }
      } }, { key: "getLocalGroupMemberList", value: function(e4) {
        return this.groupMemberListMap.get(e4);
      } }, { key: "hasLocalGroupMember", value: function(e4, t3) {
        return this.groupMemberListMap.has(e4) && this.groupMemberListMap.get(e4).has(t3);
      } }, { key: "hasLocalGroupMemberMap", value: function(e4) {
        return this.groupMemberListMap.has(e4);
      } }, { key: "reset", value: function() {
        this.groupMemberListMap.clear();
      } }]), r3;
    }(hh), oI = ["topicID", "topicName", "avatar", "introduction", "notification", "unreadCount", "muteAllMembers", "customData", "groupAtInfoList", "nextMessageSeq", "selfInfo"], rI = function(e3, t3) {
      return Wd(e3) ? { lastTime: 0, lastSequence: 0, fromAccount: "", payload: null, type: "", messageForShow: "", nick: "", version: 0, cloudCustomData: "", isRevoked: false, revoker: null } : { lastTime: e3.time || 0, lastSequence: e3.sequence || 0, fromAccount: e3.from || "", payload: e3.payload || null, type: e3.type || "", messageForShow: qd(e3.type, e3.payload, t3), nick: e3.nick || "", version: e3.version || 0, cloudCustomData: e3.cloudCustomData || "", isRevoked: e3.isRevoked || false, revoker: e3.revoker || null };
    }, aI = function() {
      function e3(t3, n3) {
        o2(this, e3), this.topicID = "", this.topicName = "", this.avatar = "", this.introduction = "", this.notification = "", this.unreadCount = 0, this.muteAllMembers = false, this.customData = "", this.groupAtInfoList = [], this.nextMessageSeq = 0, this.lastMessage = rI(t3.lastMessage, n3), this.selfInfo = { muteTime: 0, readedSequence: 0, messageRemindType: "", excludedUnreadSequenceList: void 0 }, this._initTopic(t3);
      }
      return a2(e3, [{ key: "_initTopic", value: function(e4) {
        for (var t3 in e4)
          oI.indexOf(t3) < 0 || ("selfInfo" === t3 ? this.updateSelfInfo(e4[t3]) : this[t3] = "muteAllMembers" === t3 ? 1 === e4[t3] : e4[t3]);
      } }, { key: "updateUnreadCount", value: function() {
        var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
        this.unreadCount = e4;
      } }, { key: "updateNextMessageSeq", value: function(e4) {
        this.nextMessageSeq = e4;
      } }, { key: "updateLastMessage", value: function(e4) {
        this.lastMessage = rI(e4);
      } }, { key: "updateGroupAtInfoList", value: function(e4) {
        this.groupAtInfoList = JSON.parse(JSON.stringify(e4));
      } }, { key: "updateTopic", value: function(e4) {
        td(e4.selfInfo) || this.updateSelfInfo(e4.selfInfo), td(e4.muteAllMembers) || (this.muteAllMembers = 1 === e4.muteAllMembers), cd(this, e4, ["groupID", "lastMessageTime", "selfInfo", "muteAllMembers", "lastMsg"]);
      } }, { key: "updateSelfInfo", value: function(e4) {
        return 0 !== cd(this.selfInfo, e4, [], [""]);
      } }, { key: "reduceUnreadCount", value: function() {
        return this.unreadCount >= 1 && (this.unreadCount -= 1, true);
      } }, { key: "isLastMessageRevoked", value: function(e4) {
        return e4.sequence === this.lastMessage.lastSequence;
      } }, { key: "setLastMessageRevoked", value: function(e4) {
        this.lastMessage.isRevoked = e4;
      } }, { key: "setLastMessageRevoker", value: function(e4) {
        this.lastMessage.revoker = e4;
      } }]), e3;
    }(), sI = function(e3) {
      i2(r3, e3);
      var n3 = _2(r3);
      function r3(e4) {
        var t3;
        return o2(this, r3), (t3 = n3.call(this, e4))._className = "TopicModule", t3._topicMap = /* @__PURE__ */ new Map(), t3._getTopicTimeMap = /* @__PURE__ */ new Map(), t3.TOPIC_CACHE_TIME = 300, t3.TOPIC_LAST_ACTIVE_TIME = 3600, t3.getInnerEmitterInstance().on(dy, t3._onCloudConfigUpdated, h2(t3)), t3;
      }
      return a2(r3, [{ key: "_onCloudConfigUpdated", value: function() {
        var e4 = this.getCloudConfig("topic_cache_time"), t3 = this.getCloudConfig("topic_last_active_time");
        td(e4) || (this.TOPIC_CACHE_TIME = Number(e4)), td(t3) || (this.TOPIC_LAST_ACTIVE_TIME = Number(t3));
      } }, { key: "onTopicCreated", value: function(e4) {
        var t3 = e4.groupID;
        this.resetGetTopicTime(t3), this.emitOuterEvent(pr.TOPIC_CREATED, e4);
      } }, { key: "onTopicDeleted", value: function(e4) {
        var t3 = this, n4 = e4.groupID, o3 = e4.topicIDList;
        (void 0 === o3 ? [] : o3).forEach(function(e5) {
          t3._deleteLocalTopic(n4, e5);
        }), this.emitOuterEvent(pr.TOPIC_DELETED, e4);
      } }, { key: "onTopicMessageRemindTypeUpdated", value: function(e4) {
        var t3 = e4.groupID, n4 = e4.topicID, o3 = e4.messageRemindType, r4 = this.getLocalTopic(t3, n4);
        if (r4) {
          var a3 = r4.updateSelfInfo({ messageRemindType: o3 });
          a3 && this.emitOuterEvent(pr.TOPIC_UPDATED, { groupID: t3, topic: r4 }), wl.debug("".concat(this._className, ".onTopicMessageRemindTypeUpdated topicID:").concat(n4) + " messageRemindType:".concat(o3, " isTopicUpdated:").concat(a3));
        }
      } }, { key: "onTopicProfileUpdated", value: function(e4) {
        var t3 = e4.groupID, n4 = e4.topicID, o3 = this.getLocalTopic(t3, n4);
        o3 && (o3.updateTopic(e4), this.emitOuterEvent(pr.TOPIC_UPDATED, { groupID: t3, topic: o3 }));
      } }, { key: "onConversationProxy", value: function(e4) {
        var t3 = e4.topicID, n4 = e4.unreadCount, o3 = e4.groupAtInfoList, r4 = Fd(t3), a3 = this.getLocalTopic(r4, t3), s3 = false;
        a3 && (td(n4) || a3.unreadCount === n4 || (a3.updateUnreadCount(n4), s3 = true), td(o3) || (a3.updateGroupAtInfoList(o3), s3 = true)), s3 && this.emitOuterEvent(pr.TOPIC_UPDATED, { groupID: r4, topic: a3 });
      } }, { key: "onMessageSent", value: function(e4) {
        var t3 = e4.groupID, n4 = e4.topicID, o3 = e4.lastMessage, r4 = this.getLocalTopic(t3, n4);
        r4 && (r4.nextMessageSeq += 1, r4.updateLastMessage(o3), this.emitOuterEvent(pr.TOPIC_UPDATED, { groupID: t3, topic: r4 }));
      } }, { key: "onMessageModified", value: function(e4) {
        var t3 = e4.to, n4 = e4.time, o3 = e4.sequence, r4 = e4.elements, a3 = e4.cloudCustomData, s3 = e4.messageVersion, i3 = Fd(t3), u3 = this.getLocalTopic(i3, t3);
        if (u3) {
          var c3 = u3.lastMessage;
          wl.debug("".concat(this._className, ".onMessageModified topicID:").concat(t3, " lastMessage:"), JSON.stringify(c3), "options:", JSON.stringify(e4)), c3 && (null === c3.payload || c3.lastTime === n4 && c3.lastSequence === o3 && c3.version !== s3) && (c3.type = r4[0].type, c3.payload = r4[0].content, c3.messageForShow = qd(c3.type, c3.payload, this.isIntl()), c3.cloudCustomData = a3, c3.version = s3, c3.lastSequence = o3, c3.lastTime = n4, this.emitOuterEvent(pr.TOPIC_UPDATED, { groupID: i3, topic: u3 }));
        }
      } }, { key: "onMessageRevoked", value: function(e4) {
        var t3 = this;
        if (0 !== e4.length) {
          var n4 = null, o3 = null, r4 = false;
          e4.forEach(function(e5) {
            var a3 = e5.to;
            o3 = Fd(a3), (n4 = t3.getLocalTopic(o3, a3)) && (n4.reduceUnreadCount() && (r4 = true), n4.isLastMessageRevoked(e5) && (n4.setLastMessageRevoked(true), n4.setLastMessageRevoker(e5.revoker), r4 = true));
          }), r4 && this.emitOuterEvent(pr.TOPIC_UPDATED, { groupID: o3, topic: n4 });
        }
      } }, { key: "isLastMessageRevoked", value: function(e4) {
        var t3 = e4.topicID, n4 = e4.sequence, o3 = Fd(t3), r4 = this.getLocalTopic(o3, t3), a3 = false;
        return r4 && (a3 = r4.isLastMessageRevoked({ sequence: n4 })), a3;
      } }, { key: "getJoinedCommunityList", value: function() {
        return this.getModule(xg).getGroupList({ isGroupWithTopicOnly: true }).then(function(e4) {
          var t3 = e4.data.groupList;
          return wM({ groupList: void 0 === t3 ? [] : t3 });
        }).catch(function(e4) {
          return YM(e4);
        });
      } }, { key: "createTopicInCommunity", value: function(e4) {
        var n4 = this, o3 = "".concat(this._className, ".createTopicInCommunity"), r4 = e4.topicID;
        if (!td(r4) && !Cd(r4))
          return YM({ code: dh.ILLEGAL_TOPIC_ID });
        if (e4.topicName && false === this._filterProfanity("topicName", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        if (e4.introduction && false === this._filterProfanity("introduction", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        if (e4.notification && false === this._filterProfanity("notification", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        var a3 = new G_(P_.CREATE_TOPIC);
        return this.request({ protocolName: s_, requestData: t2({}, e4) }).then(function(r5) {
          var s3 = r5.data.topicID;
          return a3.setMessage("topicID:".concat(s3)).setNetworkType(n4.getNetworkType()).end(), wl.log("".concat(o3, " ok")), n4._updateTopicMap([t2(t2({}, e4), {}, { topicID: s3 })]), wM({ topicID: s3 });
        }).catch(function(e5) {
          return n4.probeNetwork().then(function(t3) {
            var n5 = m2(t3, 2), o4 = n5[0], r5 = n5[1];
            a3.setError(e5, o4, r5).end();
          }), wl.error("".concat(o3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "deleteTopicFromCommunity", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".deleteTopicFromCommunity"), o3 = e4.groupID, r4 = e4.topicIDList, a3 = void 0 === r4 ? [] : r4, s3 = new G_(P_.DELETE_TOPIC);
        return s3.setMessage("groupID:".concat(o3, " topicIDList:").concat(a3)), this.request({ protocolName: i_, requestData: { groupID: o3, topicIDList: a3 } }).then(function(e5) {
          var n5 = e5.data.resultList, r5 = [], a4 = [];
          (void 0 === n5 ? [] : n5).forEach(function(e6) {
            var t4 = e6.topicID, n6 = e6.errorCode, o4 = e6.errorInfo;
            0 === n6 ? r5.push({ topicID: t4 }) : a4.push({ topicID: t4, code: n6, message: o4 });
          });
          var i3 = "success count:".concat(r5.length, ", fail count:").concat(a4.length);
          return s3.setMoreMessage("".concat(i3)).setNetworkType(t3.getNetworkType()).end(), wl.log("".concat(i3)), r5.forEach(function(e6) {
            t3._deleteLocalTopic(o3, e6.topicID);
          }), wM({ successTopicList: r5, failureTopicList: a4 });
        }).catch(function(e5) {
          return t3.probeNetwork().then(function(t4) {
            var n5 = m2(t4, 2), o4 = n5[0], r5 = n5[1];
            s3.setError(e5, o4, r5).end();
          }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "updateTopicProfile", value: function(e4) {
        var n4 = this, o3 = "".concat(this._className, ".updateTopicProfile");
        if (wl.log("".concat(o3, " options:"), e4), e4.topicName && false === this._filterProfanity("topicName", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        if (e4.introduction && false === this._filterProfanity("introduction", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        if (e4.notification && false === this._filterProfanity("notification", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        var r4 = new G_(P_.UPDATE_TOPIC_PROFILE);
        return r4.setMessage("groupID:".concat(e4.groupID, " topicID:").concat(e4.topicID)), td(e4.muteAllMembers) || (e4.muteAllMembers = true === e4.muteAllMembers ? "On" : "Off"), this.request({ protocolName: u_, requestData: t2({}, e4) }).then(function() {
          return r4.setNetworkType(n4.getNetworkType()).end(), wl.log("".concat(o3, " ok")), n4._updateTopicMap([e4]), wM({ topic: n4.getLocalTopic(e4.groupID, e4.topicID) });
        }).catch(function(e5) {
          return n4.probeNetwork().then(function(t3) {
            var n5 = m2(t3, 2), o4 = n5[0], a3 = n5[1];
            r4.setError(e5, o4, a3).end();
          }), wl.error("".concat(o3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "getTopicList", value: function(e4) {
        var n4 = this, o3 = "".concat(this._className, ".getTopicList"), r4 = e4.groupID, a3 = e4.topicIDList, s3 = void 0 === a3 ? [] : a3, i3 = 0 === s3.length, u3 = new G_(P_.GET_TOPIC_LIST);
        if (u3.setMessage("groupID:".concat(r4)), this._getTopicTimeMap.has(r4)) {
          var c3 = this._getTopicTimeMap.get(r4), l3 = c3.isGetAll, d3 = c3.time;
          if ((l3 || !l3 && !i3) && Date.now() - d3 < 1e3 * this.TOPIC_CACHE_TIME) {
            var p3 = this._getLocalTopicList(r4, s3);
            if (i3 || p3.length === s3.length)
              return u3.setNetworkType(this.getNetworkType()).setMoreMessage("from cache, topic count:".concat(p3.length)).end(), wl.log("".concat(o3, " groupID:").concat(r4, " from cache, topic count:").concat(p3.length)), WM({ successTopicList: p3, failureTopicList: [] });
          }
        }
        return this.request({ protocolName: c_, requestData: { groupID: r4, topicIDList: s3 } }).then(function(e5) {
          var a4 = e5.data.topicInfoList, s4 = [], c4 = [], l4 = [];
          (void 0 === a4 ? [] : a4).forEach(function(e6) {
            var n5 = e6.topic, o4 = e6.selfInfo, r5 = e6.errorCode, a5 = e6.errorInfo, i4 = n5.topicID;
            0 === r5 ? (s4.push(t2(t2({}, n5), {}, { selfInfo: o4 })), c4.push(i4)) : l4.push({ topicID: i4, code: r5, message: a5 });
          }), n4._updateTopicMap(s4), n4._handleTopicAtInfo(s4);
          var d4 = "success count:".concat(c4.length, ", fail count:").concat(l4.length);
          u3.setNetworkType(n4.getNetworkType()).setMoreMessage("".concat(d4)).end(), wl.log("".concat(o3, " groupID:").concat(r4, " from remote, ").concat(d4));
          var p4 = [];
          return Wd(c4) || (n4._getTopicTimeMap.set(r4, { time: Date.now(), isGetAll: i3 }), p4 = n4._getLocalTopicList(r4, c4)), wM({ successTopicList: p4, failureTopicList: l4 });
        }).catch(function(e5) {
          return n4.probeNetwork(e5).then(function(t3) {
            var n5 = m2(t3, 2), o4 = n5[0], r5 = n5[1];
            u3.setError(e5, o4, r5).end();
          }), wl.error("".concat(o3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "hasLocalTopic", value: function(e4, t3) {
        return !!this._topicMap.has(e4) && this._topicMap.get(e4).has(t3);
      } }, { key: "getLocalTopic", value: function(e4, t3) {
        var n4 = null;
        return this._topicMap.has(e4) && (n4 = this._topicMap.get(e4).get(t3)), n4;
      } }, { key: "_getLocalTopicList", value: function(e4) {
        var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], n4 = this._topicMap.get(e4), o3 = [];
        return n4 && (o3 = v2(n4.values())), 0 === t3.length ? o3 : o3.filter(function(e5) {
          return t3.includes(e5.topicID);
        });
      } }, { key: "_deleteLocalTopic", value: function(e4, t3) {
        this._topicMap.has(e4) && (this._topicMap.get(e4).delete(t3), wl.log("".concat(this._className, "._deleteLocalTopic groupID:").concat(e4, " topicID:").concat(t3)));
      } }, { key: "_updateTopicMap", value: function(e4) {
        var t3 = this, n4 = [];
        (e4.forEach(function(e5) {
          var o3 = e5.groupID, r4 = e5.topicID, a3 = null;
          t3._topicMap.has(o3) || t3._topicMap.set(o3, /* @__PURE__ */ new Map()), t3._topicMap.get(o3).has(r4) ? (a3 = t3._topicMap.get(o3).get(r4)).updateTopic(e5) : (t3._getTopicLastMessage(e5), a3 = new aI(e5, t3.isIntl()), t3._topicMap.get(o3).set(r4, a3));
          var s3 = t3._computeUnreadCount(a3);
          a3.updateUnreadCount(s3), n4.push({ conversationID: "".concat(gr.CONV_GROUP).concat(r4), type: gr.CONV_TOPIC, unreadCount: s3 });
        }), n4.length > 0) && this.getModule(Hg).updateTopicConversation(n4);
      } }, { key: "resetGetTopicTime", value: function(e4) {
        var t3 = this;
        td(e4) ? v2(this._getTopicTimeMap.keys()).forEach(function(e5) {
          t3._getTopicTimeMap.set(e5, 0);
        }) : this._getTopicTimeMap.set(e4, 0);
      } }, { key: "getTopicListOnReconnected", value: function() {
        var e4 = this, t3 = v2(this._topicMap.keys()), n4 = [];
        t3.forEach(function(t4) {
          var o3 = [];
          e4._getLocalTopicList(t4).forEach(function(t5) {
            var n5 = t5.lastMessage.lastTime, r4 = void 0 === n5 ? 0 : n5;
            Date.now() - 1e3 * r4 < 1e3 * e4.TOPIC_LAST_ACTIVE_TIME && o3.push(t5.topicID);
          }), o3.length > 0 && n4.push({ groupID: t4, topicIDList: o3 });
        }), wl.log("".concat(this._className, ".getTopicListOnReconnected. active community count:").concat(n4.length)), this._relayGetTopicList(n4);
      } }, { key: "_relayGetTopicList", value: function(e4) {
        var t3 = this;
        if (0 !== e4.length) {
          var n4 = e4.shift(), o3 = n4.topicIDList.length > 5 ? "topicIDList.length:".concat(n4.topicIDList.length) : "topicIDList:".concat(n4.topicIDList), r4 = new G_(P_.RELAY_GET_TOPIC_LIST);
          r4.setMessage(o3), wl.log("".concat(this._className, "._relayGetTopicList. ").concat(o3)), this.getTopicList(n4).then(function() {
            r4.setNetworkType(t3.getNetworkType()).end(), t3._relayGetTopicList(e4);
          }).catch(function(n5) {
            t3.probeNetwork().then(function(e5) {
              var t4 = m2(e5, 2), o4 = t4[0], a3 = t4[1];
              r4.setError(n5, o4, a3).end();
            }), t3._relayGetTopicList(e4);
          });
        }
      } }, { key: "_handleTopicAtInfo", value: function(e4) {
        var n4 = this;
        0 !== e4.length && e4.forEach(function(e5) {
          var o3 = e5.groupID, r4 = e5.topicID, a3 = e5.groupAtInfoList, s3 = [];
          td(a3) || (a3.forEach(function(e6) {
            s3.push(t2(t2({}, e6), {}, { groupID: o3, topicID: r4 }));
          }), n4.getModule(Hg).onNewGroupAtTips({ dataList: s3 }));
        });
      } }, { key: "_getTopicLastMessage", value: function(e4) {
        if (!td(e4.lastMsg)) {
          var t3 = { time: e4.lastMsg.time, sequence: e4.lastMsg.sequence, from: e4.lastMsg.from, payload: e4.lastMsg.elements[0] ? e4.lastMsg.elements[0].content : null, type: e4.lastMsg.elements[0] ? e4.lastMsg.elements[0].type : "", nick: e4.lastMsg.nick, version: e4.lastMsg.messageVersion, cloudCustomData: e4.lastMsg.cloudCustomData, isRevoked: 2 === e4.lastMsg.isPlaceMessage, revoker: Wd(e4.lastMsg.revokerInfo) ? null : e4.lastMsg.revokerInfo.revoker };
          e4.lastMessage = t3;
        }
      } }, { key: "deleteTopicListInCommunity", value: function(e4) {
        var t3 = this, n4 = this._getLocalTopicList(e4), o3 = this.getModule(Hg);
        n4.forEach(function(n5) {
          var r4 = n5.topicID;
          t3._deleteLocalTopic(e4, r4), t3._getTopicTimeMap.delete(e4), o3.deleteLocalConversation("".concat(gr.CONV_GROUP).concat(r4));
        });
      } }, { key: "_computeUnreadCount", value: function(e4) {
        var t3 = e4.selfInfo, n4 = t3.excludedUnreadSequenceList, o3 = t3.readedSequence, r4 = e4.nextMessageSeq - e4.selfInfo.readedSequence - 1;
        if (ed(n4)) {
          var a3 = 0;
          n4.forEach(function(t4) {
            t4 >= o3 && t4 <= e4.nextMessageSeq - 1 && (a3 += 1);
          }), a3 >= 1 && (r4 -= a3);
        }
        return r4 < 0 ? 0 : r4;
      } }, { key: "_filterProfanity", value: function(e4, t3) {
        var n4 = this.getModule(uh);
        if (!n4)
          return true;
        var o3 = n4.filterText(t3[e4], Kc), r4 = o3.isAllowedToSend, a3 = o3.modifiedText;
        return true === r4 && (t3[e4] = a3, true);
      } }, { key: "updateLastMessage", value: function(e4, t3) {
        var n4 = Fd(e4), o3 = this.getLocalTopic(n4, e4);
        if (o3) {
          var r4 = t3.sequence + 1;
          o3.updateNextMessageSeq(r4), o3.updateLastMessage(t3), this.emitOuterEvent(pr.TOPIC_UPDATED, { groupID: n4, topic: o3 });
        }
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._topicMap.clear(), this._getTopicTimeMap.clear(), this.TOPIC_CACHE_TIME = 300, this.TOPIC_LAST_ACTIVE_TIME = 3600;
      } }]), r3;
    }(hh), iI = function() {
      function e3(t3) {
        o2(this, e3), this._userModule = t3, this._className = "ProfileHandler", this.TAG = "profile", this.accountProfileMap = /* @__PURE__ */ new Map(), this.expirationTime = 864e5;
      }
      return a2(e3, [{ key: "setExpirationTime", value: function(e4) {
        this.expirationTime = e4;
      } }, { key: "getUserProfile", value: function(e4) {
        var t3 = this, n3 = e4.userIDList;
        e4.fromAccount = this._userModule.getMyAccount(), n3.length > 100 && (wl.warn("".concat(this._className, ".getUserProfile ").concat(Hd(100))), n3.length = 100);
        for (var o3, r3 = [], a3 = [], s3 = 0, i3 = n3.length; s3 < i3; s3++)
          o3 = n3[s3], this._userModule.isMyFriend(o3) && this._containsAccount(o3) ? a3.push(this._getProfileFromMap(o3)) : r3.push(o3);
        if (0 === r3.length)
          return WM(a3);
        e4.toAccount = r3;
        var u3 = e4.bFromGetMyProfile || false, c3 = [];
        e4.toAccount.forEach(function(e5) {
          c3.push({ toAccount: e5, standardSequence: 0, customSequence: 0 });
        }), e4.userItem = c3;
        var l3 = new G_(P_.GET_USER_PROFILE);
        return l3.setMessage(n3.length > 5 ? "userIDList.length:".concat(n3.length) : "userIDList:".concat(n3)), this._userModule.request({ protocolName: Ch, requestData: e4 }).then(function(e5) {
          l3.setNetworkType(t3._userModule.getNetworkType()).end(), wl.info("".concat(t3._className, ".getUserProfile ok"));
          var n4 = t3._handleResponse(e5).concat(a3);
          return wM(u3 ? n4[0] : n4);
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            l3.setError(e5, o4, r4).end();
          }), wl.error("".concat(t3._className, ".getUserProfile failed. error:"), e5), YM(e5);
        });
      } }, { key: "getMyProfile", value: function() {
        var e4 = this._userModule.getMyAccount();
        if (wl.log("".concat(this._className, ".getMyProfile myAccount:").concat(e4)), this._fillMap(), this._containsAccount(e4)) {
          var t3 = this._getProfileFromMap(e4);
          return wl.debug("".concat(this._className, ".getMyProfile from cache, myProfile:") + JSON.stringify(t3)), WM(t3);
        }
        return this.getUserProfile({ fromAccount: e4, userIDList: [e4], bFromGetMyProfile: true });
      } }, { key: "_handleResponse", value: function(e4) {
        for (var t3, n3, o3 = ud(), r3 = e4.data.userProfileItem, a3 = [], s3 = 0, i3 = r3.length; s3 < i3; s3++)
          "@TLS#NOT_FOUND" !== r3[s3].to && "" !== r3[s3].to && (t3 = r3[s3].to, n3 = this._updateMap(t3, this._getLatestProfileFromResponse(t3, r3[s3].profileItem)), a3.push(n3));
        return wl.log("".concat(this._className, "._handleResponse cost ").concat(ud() - o3, " ms")), a3;
      } }, { key: "_getLatestProfileFromResponse", value: function(e4, t3) {
        var n3 = {};
        if (n3.userID = e4, n3.profileCustomField = [], !Wd(t3))
          for (var o3 = 0, r3 = t3.length; o3 < r3; o3++)
            if (t3[o3].tag.indexOf("Tag_Profile_Custom") > -1)
              n3.profileCustomField.push({ key: t3[o3].tag, value: t3[o3].value });
            else
              switch (t3[o3].tag) {
                case ql.NICK:
                  n3.nick = t3[o3].value;
                  break;
                case ql.GENDER:
                  n3.gender = t3[o3].value;
                  break;
                case ql.BIRTHDAY:
                  n3.birthday = t3[o3].value;
                  break;
                case ql.LOCATION:
                  n3.location = t3[o3].value;
                  break;
                case ql.SELFSIGNATURE:
                  n3.selfSignature = t3[o3].value;
                  break;
                case ql.ALLOWTYPE:
                  n3.allowType = t3[o3].value;
                  break;
                case ql.LANGUAGE:
                  n3.language = t3[o3].value;
                  break;
                case ql.AVATAR:
                  n3.avatar = t3[o3].value;
                  break;
                case ql.MESSAGESETTINGS:
                  n3.messageSettings = t3[o3].value;
                  break;
                case ql.ADMINFORBIDTYPE:
                  n3.adminForbidType = t3[o3].value;
                  break;
                case ql.LEVEL:
                  n3.level = t3[o3].value;
                  break;
                case ql.ROLE:
                  n3.role = t3[o3].value;
                  break;
                default:
                  wl.warn("".concat(this._className, "._handleResponse unknown tag:"), t3[o3].tag, t3[o3].value);
              }
        return n3;
      } }, { key: "updateMyProfile", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, ".updateMyProfile");
        if (e4.nick && false === this._userModule.filterProfanity("nick", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        if (e4.selfSignature && false === this._userModule.filterProfanity("selfSignature", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        var o3 = new G_(P_.UPDATE_MY_PROFILE);
        o3.setMessage(JSON.stringify(e4));
        var r3 = new Iy().validate(e4);
        if (!r3.valid)
          return o3.setCode(dh.UPDATE_PROFILE_INVALID_PARAM).setMoreMessage("updateMyProfile info:".concat(r3.tips)).setNetworkType(this._userModule.getNetworkType()).end(), wl.error("".concat(n3, " info:").concat(r3.tips)), YM({ code: dh.UPDATE_PROFILE_INVALID_PARAM });
        var a3 = [];
        for (var s3 in e4)
          Object.prototype.hasOwnProperty.call(e4, s3) && ("profileCustomField" === s3 ? e4.profileCustomField.forEach(function(e5) {
            a3.push({ tag: e5.key, value: e5.value });
          }) : a3.push({ tag: ql[s3.toUpperCase()], value: e4[s3] }));
        if (0 === a3.length) {
          var i3 = new KM({ code: dh.UPDATE_PROFILE_NO_KEY });
          return o3.setError(i3, true, this._userModule.getNetworkType()).end(), wl.error("".concat(n3, " failed. error:"), i3), YM(i3);
        }
        return this._userModule.request({ protocolName: Eh, requestData: { fromAccount: this._userModule.getMyAccount(), profileItem: a3 } }).then(function(r4) {
          o3.setNetworkType(t3._userModule.getNetworkType()).end(), wl.info("".concat(n3, " ok"));
          var a4 = t3._updateMap(t3._userModule.getMyAccount(), e4);
          return t3._userModule.emitOuterEvent(pr.PROFILE_UPDATED, [a4]), WM(a4);
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), r4 = n4[0], a4 = n4[1];
            o3.setError(e5, r4, a4).end();
          }), wl.error("".concat(n3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "onProfileModified", value: function(e4) {
        var t3 = e4.dataList;
        if (!Wd(t3)) {
          var n3, o3, r3 = t3.length;
          wl.debug("".concat(this._className, ".onProfileModified count:").concat(r3, " dataList:"), e4.dataList);
          for (var a3 = [], s3 = 0; s3 < r3; s3++)
            n3 = t3[s3].userID, o3 = this._updateMap(n3, this._getLatestProfileFromResponse(n3, t3[s3].profileList)), a3.push(o3);
          a3.length > 0 && (this._userModule.emitInnerEvent(py, a3), this._userModule.emitOuterEvent(pr.PROFILE_UPDATED, a3));
        }
      } }, { key: "_fillMap", value: function() {
        if (0 === this.accountProfileMap.size) {
          for (var e4 = this._getCachedProfiles(), t3 = Date.now(), n3 = 0, o3 = e4.length; n3 < o3; n3++)
            t3 - e4[n3].lastUpdatedTime < this.expirationTime && this.accountProfileMap.set(e4[n3].userID, e4[n3]);
          wl.log("".concat(this._className, "._fillMap from cache, map.size:").concat(this.accountProfileMap.size));
        }
      } }, { key: "_updateMap", value: function(e4, t3) {
        var n3, o3 = Date.now();
        return this._containsAccount(e4) ? (n3 = this._getProfileFromMap(e4), t3.profileCustomField && Md(n3.profileCustomField, t3.profileCustomField), cd(n3, t3, ["profileCustomField"]), n3.lastUpdatedTime = o3) : (n3 = new Iy(t3), (this._userModule.isMyFriend(e4) || e4 === this._userModule.getMyAccount()) && (n3.lastUpdatedTime = o3, this.accountProfileMap.set(e4, n3))), this._flushMap(e4 === this._userModule.getMyAccount()), n3;
      } }, { key: "_flushMap", value: function(e4) {
        var t3 = v2(this.accountProfileMap.values()), n3 = this._userModule.getStorageModule();
        wl.debug("".concat(this._className, "._flushMap length:").concat(t3.length, " flushAtOnce:").concat(e4)), n3.setItem(this.TAG, t3, e4);
      } }, { key: "_containsAccount", value: function(e4) {
        return this.accountProfileMap.has(e4);
      } }, { key: "_getProfileFromMap", value: function(e4) {
        return this.accountProfileMap.get(e4);
      } }, { key: "_getCachedProfiles", value: function() {
        var e4 = this._userModule.getStorageModule().getItem(this.TAG);
        return Wd(e4) ? [] : e4;
      } }, { key: "onConversationsProfileUpdated", value: function(e4) {
        for (var t3, n3, o3, r3 = [], a3 = 0, s3 = e4.length; a3 < s3; a3++)
          n3 = (t3 = e4[a3]).userID, this._userModule.isMyFriend(n3) || (this._containsAccount(n3) ? (o3 = this._getProfileFromMap(n3), cd(o3, t3) > 0 && r3.push(n3)) : r3.push(t3.userID));
        0 !== r3.length && (wl.info("".concat(this._className, ".onConversationsProfileUpdated toAccountList:").concat(r3)), this.getUserProfile({ userIDList: r3 }));
      } }, { key: "getNickAndAvatarByUserID", value: function(e4) {
        if (this._containsAccount(e4)) {
          var t3 = this._getProfileFromMap(e4);
          return { nick: t3.nick, avatar: t3.avatar };
        }
        return { nick: "", avatar: "" };
      } }, { key: "reset", value: function() {
        this._flushMap(true), this.accountProfileMap.clear();
      } }]), e3;
    }(), uI = a2(function e3(t3) {
      o2(this, e3), Wd || (this.userID = t3.userID || "", this.timeStamp = t3.timeStamp || 0);
    }), cI = function() {
      function e3(t3) {
        o2(this, e3), this._userModule = t3, this._className = "BlacklistHandler", this._blacklistMap = /* @__PURE__ */ new Map(), this.startIndex = 0, this.maxLimited = 100, this.currentSequence = 0;
      }
      return a2(e3, [{ key: "getLocalBlacklist", value: function() {
        return v2(this._blacklistMap.keys());
      } }, { key: "getBlacklist", value: function() {
        var e4 = this, t3 = "".concat(this._className, ".getBlacklist"), n3 = { fromAccount: this._userModule.getMyAccount(), maxLimited: this.maxLimited, startIndex: 0, lastSequence: this.currentSequence }, o3 = new G_(P_.GET_BLACKLIST);
        return this._userModule.request({ protocolName: Sh, requestData: n3 }).then(function(n4) {
          var r3 = n4.data, a3 = r3.blackListItem, s3 = r3.currentSequence, i3 = Wd(a3) ? 0 : a3.length;
          o3.setNetworkType(e4._userModule.getNetworkType()).setMessage("count:".concat(i3)).end(), wl.info("".concat(t3, " ok")), e4.currentSequence = s3, e4._handleResponse(a3, true), e4._userModule.emitOuterEvent(pr.BLACKLIST_UPDATED, v2(e4._blacklistMap.keys()));
        }).catch(function(n4) {
          return e4._userModule.probeNetwork().then(function(e5) {
            var t4 = m2(e5, 2), r3 = t4[0], a3 = t4[1];
            o3.setError(n4, r3, a3).end();
          }), wl.error("".concat(t3, " failed. error:"), n4), YM(n4);
        });
      } }, { key: "addBlacklist", value: function(e4) {
        var t3 = this, n3 = new G_(P_.ADD_TO_BLACKLIST), o3 = "".concat(this._className, ".addBlacklist"), r3 = this._userModule.getMyAccount();
        if (1 === e4.userIDList.length && e4.userIDList[0] === r3) {
          var a3 = dh.CANNOT_ADD_SELF_TO_BLACKLIST, s3 = this._userModule.getErrorMessage(a3);
          n3.setCode(a3).setMessage(s3).setNetworkType(this._userModule.getNetworkType()).end();
          var i3 = new KM({ code: a3 });
          return wl.error("".concat(o3, " failed. error:"), i3), YM(i3);
        }
        return e4.userIDList.includes(r3) && (e4.userIDList = e4.userIDList.filter(function(e5) {
          return e5 !== r3;
        })), e4.fromAccount = this._userModule.getMyAccount(), e4.toAccount = e4.userIDList, this._userModule.request({ protocolName: Dh, requestData: e4 }).then(function(r4) {
          return n3.setNetworkType(t3._userModule.getNetworkType()).setMessage(e4.userIDList.length > 5 ? "userIDList.length:".concat(e4.userIDList.length) : "userIDList:".concat(e4.userIDList)).end(), wl.info("".concat(o3, " ok")), t3._handleResponse(r4.resultItem, true), wM(v2(t3._blacklistMap.keys()));
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var o4 = m2(t4, 2), r4 = o4[0], a4 = o4[1];
            n3.setError(e5, r4, a4).end();
          }), wl.error("".concat(o3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "_handleResponse", value: function(e4, t3) {
        if (!Wd(e4))
          for (var n3, o3, r3, a3 = 0, s3 = e4.length; a3 < s3; a3++)
            o3 = e4[a3].to, r3 = e4[a3].resultCode, (td(r3) || 0 === r3) && (t3 ? ((n3 = this._blacklistMap.has(o3) ? this._blacklistMap.get(o3) : new uI()).userID = o3, !Wd(e4[a3].addBlackTimeStamp) && (n3.timeStamp = e4[a3].addBlackTimeStamp), this._blacklistMap.set(o3, n3)) : this._blacklistMap.has(o3) && (n3 = this._blacklistMap.get(o3), this._blacklistMap.delete(o3)));
        wl.log("".concat(this._className, "._handleResponse total:").concat(this._blacklistMap.size, " bAdd:").concat(t3));
      } }, { key: "deleteBlacklist", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, ".deleteBlacklist"), o3 = new G_(P_.REMOVE_FROM_BLACKLIST);
        return e4.fromAccount = this._userModule.getMyAccount(), e4.toAccount = e4.userIDList, this._userModule.request({ protocolName: Nh, requestData: e4 }).then(function(r3) {
          return o3.setNetworkType(t3._userModule.getNetworkType()).setMessage(e4.userIDList.length > 5 ? "userIDList.length:".concat(e4.userIDList.length) : "userIDList:".concat(e4.userIDList)).end(), wl.info("".concat(n3, " ok")), t3._handleResponse(r3.data.resultItem, false), wM(v2(t3._blacklistMap.keys()));
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), r3 = n4[0], a3 = n4[1];
            o3.setError(e5, r3, a3).end();
          }), wl.error("".concat(n3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "onAccountDeleted", value: function(e4) {
        for (var t3, n3 = [], o3 = 0, r3 = e4.length; o3 < r3; o3++)
          t3 = e4[o3], this._blacklistMap.has(t3) && (this._blacklistMap.delete(t3), n3.push(t3));
        n3.length > 0 && (wl.log("".concat(this._className, ".onAccountDeleted count:").concat(n3.length, " userIDList:"), n3), this._userModule.emitOuterEvent(pr.BLACKLIST_UPDATED, v2(this._blacklistMap.keys())));
      } }, { key: "onAccountAdded", value: function(e4) {
        for (var t3, n3 = [], o3 = 0, r3 = e4.length; o3 < r3; o3++)
          t3 = e4[o3], this._blacklistMap.has(t3) || (this._blacklistMap.set(t3, new uI({ userID: t3 })), n3.push(t3));
        n3.length > 0 && (wl.log("".concat(this._className, ".onAccountAdded count:").concat(n3.length, " userIDList:"), n3), this._userModule.emitOuterEvent(pr.BLACKLIST_UPDATED, v2(this._blacklistMap.keys())));
      } }, { key: "reset", value: function() {
        this._blacklistMap.clear(), this.startIndex = 0, this.maxLimited = 100, this.currentSequence = 0;
      } }]), e3;
    }(), lI = function(e3) {
      var t3 = String(e3).replace(/[=]+$/, ""), n3 = "";
      if (t3.length % 4 == 1)
        return wl.warn("decodeBase64 failed: ".concat(e3, " to be decoded is not correctly encoded.")), "";
      for (var o3, r3, a3 = 0, s3 = 0; r3 = t3.charAt(s3++); ~r3 && (o3 = a3 % 4 ? 64 * o3 + r3 : r3, a3++ % 4) ? n3 += String.fromCharCode(255 & o3 >> (-2 * a3 & 6)) : 0)
        r3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(r3);
      try {
        return decodeURIComponent(escape(n3));
      } catch (BS) {
        return wl.warn("decodeBase64 failed: ".concat(e3, " to be decoded is not correctly encoded.")), "";
      }
    }, dI = function() {
      function e3(t3) {
        o2(this, e3), this._userModule = t3, this._className = "UserStatusHandler", this.MAX_QUERY_USER_COUNT = 500, this.MAX_SUBSCRIBE_USER_COUNT = 100, this.MAX_UNSUBSCRIBE_USER_COUNT = 100, this._userModule.getInnerEmitterInstance().on(dy, this._onCloudConfigUpdated, this);
      }
      return a2(e3, [{ key: "_onCloudConfigUpdated", value: function() {
        var e4 = this._userModule.getCloudConfig("status_query_count"), t3 = this._userModule.getCloudConfig("status_sub_count"), n3 = this._userModule.getCloudConfig("status_unsub_count");
        wl.log("".concat(this._className, "._onCloudConfigUpdated statusQueryCount:").concat(e4, " statusSubscribeCount:").concat(t3) + " statusUnsubscribeCount:".concat(n3)), td(e4) || (this.MAX_QUERY_USER_COUNT = parseInt(e4, 10)), td(e4) || (this.MAX_SUBSCRIBE_USER_COUNT = parseInt(t3, 10)), td(e4) || (this.MAX_UNSUBSCRIBE_USER_COUNT = parseInt(n3, 10));
      } }, { key: "onUserStatusUpdated", value: function(e4) {
        var t3 = e4.dataList, n3 = this._userModule.getMyUserID(), o3 = this._userModule.getModule(jg), r3 = t3.map(function(e5) {
          var t4 = e5.to, r4 = e5.statusType, a3 = e5.customStatus, s3 = lI(a3);
          return t4 === n3 && o3.setCustomStatus(s3), { userID: t4, statusType: r4, customStatus: s3 };
        });
        this._userModule.emitOuterEvent(pr.USER_STATUS_UPDATED, r3);
      } }, { key: "setSelfStatus", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, ".setSelfStatus");
        if (false === this._userModule.filterProfanity("customStatus", e4))
          return YM({ code: dh.PROFANITY_FOUND });
        var o3 = new G_(P_.SET_SELF_STATUS), r3 = e4.customStatus;
        return this._userModule.request({ protocolName: l_, requestData: { customStatus: r3 } }).then(function(e5) {
          return o3.setNetworkType(t3._userModule.getNetworkType()).setMessage("customStatus:".concat(r3)).end(), wl.log("".concat(n3, " ok. customStatus:").concat(r3)), t3._userModule.getModule(jg).setCustomStatus(r3), wM({ userID: t3._userModule.getMyUserID(), statusType: 1, customStatus: r3 });
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), r4 = n4[0], a3 = n4[1];
            o3.setError(e5, r4, a3).end();
          }), wl.error("".concat(n3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "getUserStatus", value: function(e4) {
        var t3 = this, n3 = "".concat(this._className, ".getUserStatus"), o3 = e4.userIDList, r3 = void 0 === o3 ? [] : o3, a3 = this._userModule.getMyUserID(), s3 = v2(r3), i3 = void 0, u3 = s3.indexOf(a3);
        if (u3 > -1) {
          s3.splice(u3, 1);
          var c3 = this._userModule.getModule(jg).getCustomStatus();
          i3 = { userID: a3, statusType: 1, customStatus: c3 };
        }
        if (0 === s3.length)
          return WM({ successUserList: [i3], failureUserList: [] });
        if (!this._userModule.canIUse(wc.USER_STATUS))
          return YM({ code: dh.CANNOT_USE_COMMERCIAL_ABILITY });
        s3.length > this.MAX_QUERY_USER_COUNT && (wl.warn("".concat(n3, " ").concat(Hd(this.MAX_QUERY_USER_COUNT))), s3 = r3.slice(0, this.MAX_QUERY_USER_COUNT));
        var l3 = new G_(P_.GET_USER_STATUS);
        return this._userModule.request({ protocolName: d_, requestData: { userIDList: s3 } }).then(function(e5) {
          var o4 = e5.data, a4 = o4.successUserList, s4 = void 0 === a4 ? [] : a4, u4 = o4.failureUserList, c4 = void 0 === u4 ? [] : u4, d3 = s4.map(function(e6) {
            var t4 = e6.userID, n4 = e6.statusType, o5 = e6.customStatus;
            return { userID: t4, statusType: n4, customStatus: lI(o5) };
          }), p3 = c4.map(function(e6) {
            var t4 = e6.userID, n4 = e6.invalidUserID, o5 = e6.errorCode, r4 = e6.errorInfo;
            return { userID: Wd(n4) ? t4 : n4, code: o5, message: r4 };
          });
          td(i3) || d3.unshift(i3);
          var g3 = "userID count:".concat(r3.length, ", success count:").concat(d3.length, ", fail count:").concat(p3.length);
          return l3.setNetworkType(t3._userModule.getNetworkType()).setMessage("".concat(g3)).end(), wl.log("".concat(n3, " ok. ").concat(g3, ".")), wM({ successUserList: d3, failureUserList: p3 });
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], a4 = n4[1];
            l3.setMessage("userID count:".concat(r3.length)).setError(e5, o4, a4).end();
          }), wl.error("".concat(n3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "subscribeUserStatus", value: function(e4) {
        var t3 = this;
        if (!this._userModule.canIUse(wc.USER_STATUS))
          return YM({ code: dh.CANNOT_USE_COMMERCIAL_ABILITY });
        var n3 = "".concat(this._className, ".subscribeUserStatus"), o3 = e4.userIDList, r3 = void 0 === o3 ? [] : o3, a3 = v2(r3);
        a3.length > this.MAX_SUBSCRIBE_USER_COUNT && (wl.warn("".concat(n3, " ").concat(Hd(this.MAX_SUBSCRIBE_USER_COUNT))), a3 = r3.slice(0, this.MAX_SUBSCRIBE_USER_COUNT));
        var s3 = new G_(P_.SUBSCRIBE_USER_STATUS), i3 = "userID count:".concat(r3.length);
        return wl.log("".concat(n3, " ").concat(i3)), this._userModule.request({ protocolName: p_, requestData: { userIDList: a3 } }).then(function(e5) {
          var o4 = e5.data.failureUserList, r4 = (void 0 === o4 ? [] : o4).map(function(e6) {
            var t4 = e6.userID, n4 = e6.invalidUserID, o5 = e6.errorCode, r5 = e6.errorInfo;
            return { userID: Wd(n4) ? t4 : n4, code: o5, message: r5 };
          });
          return s3.setNetworkType(t3._userModule.getNetworkType()).setMessage("".concat(i3, " fail count:").concat(r4.length)).end(), wl.log("".concat(n3, " ok. fail count:").concat(r4.length, ".")), wM({ failureUserList: r4 });
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            s3.setMessage("".concat(i3)).setError(e5, o4, r4).end();
          }), wl.error("".concat(n3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "unsubscribeUserStatus", value: function(e4) {
        var t3 = this;
        if (!this._userModule.canIUse(wc.USER_STATUS))
          return YM({ code: dh.CANNOT_USE_COMMERCIAL_ABILITY });
        var n3 = "".concat(this._className, ".unsubscribeUserStatus"), o3 = (e4 || {}).userIDList, r3 = void 0 === o3 ? [] : o3, a3 = v2(r3);
        r3.length > this.MAX_UNSUBSCRIBE_USER_COUNT && (wl.warn("".concat(n3, " ").concat(Hd(this.MAX_UNSUBSCRIBE_USER_COUNT))), a3 = r3.slice(0, this.MAX_UNSUBSCRIBE_USER_COUNT));
        var s3 = new G_(P_.UNSUBSCRIBE_USER_STATUS), i3 = "userID count:".concat(r3.length);
        wl.log("".concat(n3, " ").concat(i3));
        var u3 = { userIDList: a3 };
        return 0 === a3.length && (u3.userIDList = void 0, u3.unsubscribeAll = 1), this._userModule.request({ protocolName: g_, requestData: u3 }).then(function(e5) {
          var o4 = e5.data.failureUserList, r4 = (void 0 === o4 ? [] : o4).map(function(e6) {
            var t4 = e6.userID, n4 = e6.invalidUserID, o5 = e6.errorCode, r5 = e6.errorInfo;
            return { userID: Wd(n4) ? t4 : n4, code: o5, message: r5 };
          });
          return s3.setNetworkType(t3._userModule.getNetworkType()).setMessage("".concat(i3, " fail count:").concat(r4.length)).end(), wl.log("".concat(n3, " ok. fail count:").concat(r4.length, ".")), wM({ failureUserList: r4 });
        }).catch(function(e5) {
          return t3._userModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            s3.setMessage("".concat(i3)).setError(e5, o4, r4).end();
          }), wl.error("".concat(n3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "reset", value: function() {
        this.MAX_QUERY_USER_COUNT = 500, this.MAX_SUBSCRIBE_USER_COUNT = 100, this.MAX_UNSUBSCRIBE_USER_COUNT = 100;
      } }]), e3;
    }(), pI = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        return o2(this, n3), (r3 = t3.call(this, e4))._className = "UserModule", r3._profileHandler = new iI(h2(r3)), r3._blacklistHandler = new cI(h2(r3)), r3._userStatusHandler = new dI(h2(r3)), r3.getInnerEmitterInstance().on(ly, r3.onContextUpdated, h2(r3)), r3;
      }
      return a2(n3, [{ key: "onContextUpdated", value: function(e4) {
        this._profileHandler.getMyProfile(), this._blacklistHandler.getBlacklist();
      } }, { key: "onProfileModified", value: function(e4) {
        this._profileHandler.onProfileModified(e4);
      } }, { key: "onRelationChainModified", value: function(e4) {
        var t4 = e4.dataList;
        if (!Wd(t4)) {
          var n4 = [];
          t4.forEach(function(e5) {
            e5.blackListDelAccount && n4.push.apply(n4, v2(e5.blackListDelAccount));
          }), n4.length > 0 && this._blacklistHandler.onAccountDeleted(n4);
          var o3 = [];
          t4.forEach(function(e5) {
            e5.blackListAddAccount && o3.push.apply(o3, v2(e5.blackListAddAccount));
          }), o3.length > 0 && this._blacklistHandler.onAccountAdded(o3);
        }
      } }, { key: "onConversationsProfileUpdated", value: function(e4) {
        this._profileHandler.onConversationsProfileUpdated(e4);
      } }, { key: "getMyAccount", value: function() {
        return this.getMyUserID();
      } }, { key: "getMyProfile", value: function() {
        return this._profileHandler.getMyProfile();
      } }, { key: "getStorageModule", value: function() {
        return this.getModule(Wg);
      } }, { key: "filterProfanity", value: function(e4, t4) {
        var n4 = this.getModule(uh);
        if (!n4)
          return true;
        var o3 = n4.filterText(t4[e4], Bc), r3 = o3.isAllowedToSend, a3 = o3.modifiedText;
        return true === r3 && (t4[e4] = a3, true);
      } }, { key: "isMyFriend", value: function(e4) {
        var t4 = this.getModule(Vg);
        return !!t4 && t4.isMyFriend(e4);
      } }, { key: "getUserProfile", value: function(e4) {
        return this._profileHandler.getUserProfile(e4);
      } }, { key: "updateMyProfile", value: function(e4) {
        return this._profileHandler.updateMyProfile(e4);
      } }, { key: "getNickAndAvatarByUserID", value: function(e4) {
        return this._profileHandler.getNickAndAvatarByUserID(e4);
      } }, { key: "getLocalBlacklist", value: function() {
        var e4 = this._blacklistHandler.getLocalBlacklist();
        return WM(e4);
      } }, { key: "addBlacklist", value: function(e4) {
        return this._blacklistHandler.addBlacklist(e4);
      } }, { key: "deleteBlacklist", value: function(e4) {
        return this._blacklistHandler.deleteBlacklist(e4);
      } }, { key: "onUserStatusUpdated", value: function(e4) {
        this._userStatusHandler.onUserStatusUpdated(e4);
      } }, { key: "setSelfStatus", value: function(e4) {
        return this._userStatusHandler.setSelfStatus(e4);
      } }, { key: "getUserStatus", value: function(e4) {
        return this._userStatusHandler.getUserStatus(e4);
      } }, { key: "subscribeUserStatus", value: function(e4) {
        return this._userStatusHandler.subscribeUserStatus(e4);
      } }, { key: "unsubscribeUserStatus", value: function(e4) {
        return this._userStatusHandler.unsubscribeUserStatus(e4);
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._profileHandler.reset(), this._blacklistHandler.reset(), this._userStatusHandler.reset();
      } }]), n3;
    }(hh), gI = function() {
      function e3(t3, n3) {
        o2(this, e3), this._moduleManager = t3, this._isLoggedIn = false, this._SDKAppID = n3.SDKAppID, this._userID = n3.userID || "", this._userSig = n3.userSig || "", this._version = "2.26.1", this._a2Key = "", this._tinyID = "", this._customStatus = "", this._contentType = "json", this._unlimitedAVChatRoom = n3.unlimitedAVChatRoom, this._scene = n3.scene || "", this._oversea = n3.oversea, this._instanceID = n3.instanceID, this._statusInstanceID = 0, this._isDevMode = n3.devMode, this._proxyServer = n3.proxyServer;
      }
      return a2(e3, [{ key: "isLoggedIn", value: function() {
        return this._isLoggedIn;
      } }, { key: "isOversea", value: function() {
        return this._oversea;
      } }, { key: "isPrivateNetWork", value: function() {
        return this._proxyServer;
      } }, { key: "isDevMode", value: function() {
        return this._isDevMode;
      } }, { key: "isSingaporeSite", value: function() {
        return this._SDKAppID >= 2e7 && this._SDKAppID < 3e7 || this._SDKAppID >= 172e7 && this._SDKAppID < 173e7;
      } }, { key: "isKoreaSite", value: function() {
        return this._SDKAppID >= 3e7 && this._SDKAppID < 4e7 || this._SDKAppID >= 173e7 && this._SDKAppID < 174e7;
      } }, { key: "isGermanySite", value: function() {
        return this._SDKAppID >= 4e7 && this._SDKAppID < 5e7 || this._SDKAppID >= 174e7 && this._SDKAppID < 175e7;
      } }, { key: "isIndiaSite", value: function() {
        return this._SDKAppID >= 5e7 && this._SDKAppID < 6e7 || this._SDKAppID >= 175e7 && this._SDKAppID < 176e7;
      } }, { key: "isJapanSite", value: function() {
        return this._SDKAppID >= 6e7 && this._SDKAppID < 7e7 || this._SDKAppID >= 176e7 && this._SDKAppID < 177e7;
      } }, { key: "isUSASite", value: function() {
        return this._SDKAppID >= 7e7 && this._SDKAppID < 8e7 || this._SDKAppID >= 177e7 && this._SDKAppID < 178e7;
      } }, { key: "isIntl", value: function() {
        return Bd(this._SDKAppID);
      } }, { key: "isUnlimitedAVChatRoom", value: function() {
        return this._unlimitedAVChatRoom;
      } }, { key: "setUserID", value: function(e4) {
        this._userID = e4;
      } }, { key: "getUserID", value: function() {
        return this._userID;
      } }, { key: "setUserSig", value: function(e4) {
        this._userSig = e4;
      } }, { key: "getUserSig", value: function() {
        return this._userSig;
      } }, { key: "getSDKAppID", value: function() {
        return this._SDKAppID;
      } }, { key: "setTinyID", value: function(e4) {
        this._tinyID = e4, this._isLoggedIn = true;
      } }, { key: "getTinyID", value: function() {
        return this._tinyID;
      } }, { key: "setCustomStatus", value: function(e4) {
        this._customStatus = e4;
      } }, { key: "getCustomStatus", value: function() {
        return this._customStatus;
      } }, { key: "getScene", value: function() {
        return El ? window.tencent_cloud_im_csig_flutter_for_web_25F_cy : this._isTUIKit() ? "tuikit" : this._scene;
      } }, { key: "getInstanceID", value: function() {
        return this._instanceID;
      } }, { key: "getStatusInstanceID", value: function() {
        return this._statusInstanceID;
      } }, { key: "setStatusInstanceID", value: function(e4) {
        this._statusInstanceID = e4;
      } }, { key: "getVersion", value: function() {
        return this._version;
      } }, { key: "getA2Key", value: function() {
        return this._a2Key;
      } }, { key: "setA2Key", value: function(e4) {
        this._a2Key = e4;
      } }, { key: "getContentType", value: function() {
        return this._contentType;
      } }, { key: "getProxyServer", value: function() {
        return this._proxyServer;
      } }, { key: "_isTUIKit", value: function() {
        var e4 = false, t3 = false, n3 = false, o3 = false, r3 = [];
        tl && (r3 = Object.keys(ol)), nl && (r3 = el ? Object.keys(index$1) : Object.keys(window));
        for (var a3 = 0, s3 = r3.length; a3 < s3; a3++)
          if (r3[a3].toLowerCase().includes("uikit")) {
            e4 = true;
            break;
          }
        if (r3 = null, tl && !od(ol.createGamePortal) && !td(getApp())) {
          var i3 = getApp().globalData;
          Zl(i3) && true === i3.isTUIKit && (t3 = true);
        }
        true === this._moduleManager.getModule(Wg).getStorageSync("TIM_".concat(this._SDKAppID, "_isTUIKit")) && (n3 = true);
        var u3 = null;
        if ($c && !Jc && "undefined" == typeof index$1 && __wxConfig && (u3 = __wxConfig.pages), zc && "undefined" == typeof index$1 && __qqConfig && (u3 = __qqConfig.pages), ed(u3) && u3.length > 0) {
          for (var c3 = 0, l3 = u3.length; c3 < l3; c3++)
            if (u3[c3].toLowerCase().includes("tui")) {
              o3 = true;
              break;
            }
          u3 = null;
        }
        return e4 || t3 || n3 || o3;
      } }, { key: "reset", value: function() {
        this._isLoggedIn = false, this._userSig = "", this._a2Key = "", this._tinyID = "", this._customStatus = "", this._statusInstanceID = 0;
      } }]), e3;
    }(), hI = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        return o2(this, n3), (r3 = t3.call(this, e4))._className = "SignModule", r3._helloInterval = 120, r3._lastLoginTs = 0, r3._lastWsHelloTs = 0, r3._isWebUniapp = 0, gy.mixin(h2(r3)), r3;
      }
      return a2(n3, [{ key: "onCheckTimer", value: function(e4) {
        this.isLoggedIn() && e4 % this._helloInterval == 0 && this._hello();
      } }, { key: "login", value: function(e4) {
        if (this.isLoggedIn()) {
          var t4 = this.getMyUserID(), n4 = this.isIntl() ? "You have already logged in to account ".concat(t4, ". If you want to switch accounts, please call the logout interface, and then call the login interface") : "\u60A8\u5DF2\u7ECF\u767B\u5F55\u5E10\u53F7 ".concat(t4, " \uFF01\u5982\u9700\u5207\u6362\u5E10\u53F7\u767B\u5F55\uFF0C\u8BF7\u5148\u8C03\u7528 logout \u63A5\u53E3\u767B\u51FA\uFF0C\u518D\u8C03\u7528 login \u63A5\u53E3\u767B\u5F55\u3002");
          return wl.warn(n4), WM({ actionStatus: "OK", errorCode: 0, errorInfo: n4, repeatLogin: true });
        }
        if (Date.now() - this._lastLoginTs <= 15e3)
          return wl.warn(this.isIntl() ? "You are trying to login in to account ".concat(e4.userID, ", please do not login in again") : "\u60A8\u6B63\u5728\u5C1D\u8BD5\u767B\u5F55\u5E10\u53F7 ".concat(e4.userID, "\uFF01\u8BF7\u52FF\u91CD\u590D\u767B\u5F55\u3002")), YM({ code: dh.REPEAT_LOGIN });
        wl.log("".concat(this._className, ".login userID:").concat(e4.userID));
        var o3 = this._checkLoginInfo(e4);
        if (0 !== o3.code)
          return YM(o3);
        var r3 = this.getModule(jg), a3 = e4.userID, s3 = e4.userSig;
        return r3.setUserID(a3), r3.setUserSig(s3), this.getModule(Zg).updateProtocolConfig(), this._login();
      } }, { key: "_login", value: function() {
        var e4 = this, t4 = this.getModule(jg), n4 = t4.getScene(), o3 = 0, r3 = new G_(P_.LOGIN);
        r3.setMessage("".concat(n4)).setMoreMessage("identifier:".concat(this.getMyUserID())), el ? "tuikit" === n4 ? r3.setUIPlatform(4) : r3.setUIPlatform(3) : tl ? "tuikit" === n4 ? r3.setUIPlatform(12) : r3.setUIPlatform(11) : nl && (El ? "flutter_web_uikit" === n4 ? r3.setUIPlatform(21) : r3.setUIPlatform(20) : this._isReactUIKit() ? Cl ? r3.setUIPlatform(25) : r3.setUIPlatform(24) : Cl ? "tuikit" === n4 ? r3.setUIPlatform(17) : r3.setUIPlatform(16) : "tuikit" === n4 ? r3.setUIPlatform(14) : r3.setUIPlatform(13));
        var a3 = this.getModule(ih);
        if (a3.canIUseOfflinePush()) {
          this._isWebUniapp = a3.getUniAppPlatform();
          var s3 = this._getStatusInstanceID();
          t4.setStatusInstanceID(s3), this.getModule(Zg).updateProtocolConfig(), o3 = a3.getDeviceBrand();
        }
        return this._lastLoginTs = Date.now(), this.request({ protocolName: fh, requestData: { deviceBrand: o3, isWebUniapp: this._isWebUniapp } }).then(function(o4) {
          e4._lastLoginTs = 0;
          var a4 = Date.now(), s4 = null, i3 = o4.data, u3 = i3.a2Key, c3 = i3.tinyID, l3 = i3.helloInterval, d3 = i3.instanceID, p3 = i3.timeStamp, g3 = i3.customStatus, h3 = void 0 === g3 ? "" : g3;
          wl.log("".concat(e4._className, ".login ok. scene:").concat(n4, " helloInterval:").concat(l3, " instanceID:").concat(d3, " timeStamp:").concat(p3));
          var f3 = 1e3 * p3, _3 = a4 - r3.getStartTs(), m3 = f3 + parseInt(_3 / 2) - a4, v3 = r3.getStartTs() + m3;
          if (r3.start(v3), function(e5, t5) {
            Rl = t5;
            var n5 = new Date();
            n5.setTime(e5), wl.info("baseTime from server:".concat(n5, " offset:").concat(Rl));
          }(f3, m3), !c3)
            throw s4 = new KM({ code: dh.NO_TINYID }), r3.setError(s4, true, e4.getNetworkType()).end(), s4;
          if (!u3)
            throw s4 = new KM({ code: dh.NO_A2KEY }), r3.setError(s4, true, e4.getNetworkType()).end(), s4;
          var M3 = lI(h3);
          r3.setNetworkType(e4.getNetworkType()).setMoreMessage("helloInterval:".concat(l3, " instanceID:").concat(d3, " offset:").concat(m3, " customStatus:").concat(M3)).end(), t4.setA2Key(u3), t4.setTinyID(c3), t4.setStatusInstanceID(d3), t4.setCustomStatus(M3), e4.getModule(Zg).updateProtocolConfig(), e4.emitInnerEvent(ly), e4._helloInterval = l3, e4.triggerReady();
          var y3 = e4.getModule(ih);
          return y3.canIUseOfflinePush() && (index$1.setStorageSync("timUniAppInstanceID", d3), y3.init()), e4._fetchCloudControlConfig(), e4.getModule(uh).init(), o4;
        }).catch(function(t5) {
          return e4.probeNetwork().then(function(e5) {
            var n5 = m2(e5, 2), o4 = n5[0], a4 = n5[1];
            r3.setError(t5, o4, a4).end(true);
          }), e4._moduleManager.setNotReadyReason(dh.LOGIN_FAILED), wl.error("".concat(e4._className, ".login failed. error:"), t5), e4._lastLoginTs = 0, e4._moduleManager.onLoginFailed(), YM(t5);
        });
      } }, { key: "logout", value: function() {
        var e4 = this, t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
        if (!this.isLoggedIn())
          return YM({ code: dh.USER_NOT_LOGGED_IN });
        var n4 = new G_(P_.LOGOUT);
        return n4.setNetworkType(this.getNetworkType()).setMessage("identifier:".concat(this.getMyUserID())).end(true), wl.info("".concat(this._className, ".logout type:").concat(t4)), 0 === t4 && this._moduleManager.setNotReadyReason(dh.LOGGED_OUT), this.request({ protocolName: _h, requestData: { type: t4 } }).then(function() {
          return e4.resetReady(), WM({});
        }).catch(function(t5) {
          return wl.error("".concat(e4._className, "._logout error:"), t5), e4.resetReady(), WM({});
        });
      } }, { key: "_fetchCloudControlConfig", value: function() {
        this.getModule(nh).fetchConfig();
      } }, { key: "_getStatusInstanceID", value: function() {
        return index$1.getStorageSync("timUniAppInstanceID");
      } }, { key: "_hello", value: function() {
        var e4 = this;
        this._lastWsHelloTs = Date.now(), this.request({ protocolName: mh, requestData: { isWebUniapp: this._isWebUniapp } }).catch(function(t4) {
          wl.warn("".concat(e4._className, "._hello error:"), t4);
        });
      } }, { key: "getLastWsHelloTs", value: function() {
        return this._lastWsHelloTs;
      } }, { key: "_checkLoginInfo", value: function(e4) {
        var t4 = 0;
        return Wd(this.getModule(jg).getSDKAppID()) ? t4 = dh.NO_SDKAPPID : Wd(e4.userID) ? t4 = dh.NO_IDENTIFIER : Wd(e4.userSig) && (t4 = dh.NO_USERSIG), { code: t4 };
      } }, { key: "_isReactUIKit", value: function() {
        return nl && void 0 !== window.tencent_cloud_im_csig_react_uikit_23F_xa;
      } }, { key: "onMultipleAccountKickedOut", value: function(e4) {
        var t4 = this;
        new G_(P_.KICKED_OUT).setNetworkType(this.getNetworkType()).setMessage("type:".concat(gr.KICKED_OUT_MULT_ACCOUNT, " newInstanceInfo:").concat(JSON.stringify(e4))).end(true), wl.warn("".concat(this._className, ".onMultipleAccountKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e4), this.logout(1).then(function() {
          t4.emitOuterEvent(pr.KICKED_OUT, { type: gr.KICKED_OUT_MULT_ACCOUNT }), t4._moduleManager.setNotReadyReason(dh.KICKED_OUT_MULT_ACCOUNT), t4._moduleManager.reset();
        });
      } }, { key: "onMultipleDeviceKickedOut", value: function(e4) {
        var t4 = this;
        new G_(P_.KICKED_OUT).setNetworkType(this.getNetworkType()).setMessage("type:".concat(gr.KICKED_OUT_MULT_DEVICE, " newInstanceInfo:").concat(JSON.stringify(e4))).end(true), wl.warn("".concat(this._className, ".onMultipleDeviceKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e4), this.logout(1).then(function() {
          t4.emitOuterEvent(pr.KICKED_OUT, { type: gr.KICKED_OUT_MULT_DEVICE }), t4._moduleManager.setNotReadyReason(dh.KICKED_OUT_MULT_DEVICE), t4._moduleManager.reset();
        });
      } }, { key: "onUserSigExpired", value: function() {
        new G_(P_.KICKED_OUT).setNetworkType(this.getNetworkType()).setMessage(gr.KICKED_OUT_USERSIG_EXPIRED).end(true), wl.warn("".concat(this._className, ".onUserSigExpired: userSig \u7B7E\u540D\u8FC7\u671F\u88AB\u8E22\u4E0B\u7EBF")), 0 !== this.getModule(jg).getStatusInstanceID() && (this.emitOuterEvent(pr.KICKED_OUT, { type: gr.KICKED_OUT_USERSIG_EXPIRED }), this._moduleManager.setNotReadyReason(dh.KICKED_OUT_USERSIG_EXPIRED), this._moduleManager.reset());
      } }, { key: "onRestApiKickedOut", value: function(e4) {
        (new G_(P_.KICKED_OUT).setNetworkType(this.getNetworkType()).setMessage("type:".concat(gr.KICKED_OUT_REST_API, " newInstanceInfo:").concat(JSON.stringify(e4))).end(true), wl.warn("".concat(this._className, ".onRestApiKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e4), 0 !== this.getModule(jg).getStatusInstanceID()) && (this.emitOuterEvent(pr.KICKED_OUT, { type: gr.KICKED_OUT_REST_API }), this._moduleManager.setNotReadyReason(dh.KICKED_OUT_REST_API), this._moduleManager.reset(), this.getModule(eh).onRestApiKickedOut());
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this.resetReady(), this._helloInterval = 120, this._lastLoginTs = 0, this._lastWsHelloTs = 0, this._isWebUniapp = 0;
      } }]), n3;
    }(hh), fI = nt2.f;
    function _I() {
      return null;
    }
    nn({ target: "Object", stat: true, forced: Object.defineProperty !== fI, sham: !L2 }, { defineProperty: fI });
    var mI = function() {
      function e3(t3) {
        o2(this, e3), this._moduleManager = t3, this._className = "StorageModule", this._storageQueue = /* @__PURE__ */ new Map(), this._errorTolerantHandle();
      }
      return a2(e3, [{ key: "_errorTolerantHandle", value: function() {
        tl || !td(window) && this._canIUseCookies() || (this.getItem = _I, this.setItem = _I, this.removeItem = _I, this.clear = _I);
      } }, { key: "onCheckTimer", value: function(e4) {
        if (e4 % 20 == 0) {
          if (0 === this._storageQueue.size)
            return;
          this._doFlush();
        }
      } }, { key: "_doFlush", value: function() {
        try {
          var e4, t3 = E2(this._storageQueue);
          try {
            for (t3.s(); !(e4 = t3.n()).done; ) {
              var n3 = m2(e4.value, 2), o3 = n3[0], r3 = n3[1];
              this._setStorageSync(this._getKey(o3), r3);
            }
          } catch (a3) {
            t3.e(a3);
          } finally {
            t3.f();
          }
          this._storageQueue.clear();
        } catch (BS) {
          wl.warn("".concat(this._className, "._doFlush error:"), BS);
        }
      } }, { key: "_getPrefix", value: function() {
        var e4 = this._moduleManager.getModule(jg);
        return "TIM_".concat(e4.getSDKAppID(), "_").concat(e4.getUserID(), "_");
      } }, { key: "_getKey", value: function(e4) {
        return "".concat(this._getPrefix()).concat(e4);
      } }, { key: "getItem", value: function(e4) {
        var t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
        try {
          var n3 = t3 ? this._getKey(e4) : e4;
          return this.getStorageSync(n3);
        } catch (BS) {
          return wl.warn("".concat(this._className, ".getItem error:"), BS), {};
        }
      } }, { key: "setItem", value: function(e4, t3) {
        var n3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], o3 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];
        if (n3) {
          var r3 = o3 ? this._getKey(e4) : e4;
          this._setStorageSync(r3, t3);
        } else
          this._storageQueue.set(e4, t3);
      } }, { key: "clear", value: function() {
        try {
          tl ? ol.clearStorageSync() : this._canIUseCookies() && localStorage.clear();
        } catch (BS) {
          wl.warn("".concat(this._className, ".clear error:"), BS);
        }
      } }, { key: "removeItem", value: function(e4) {
        var t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
        try {
          var n3 = t3 ? this._getKey(e4) : e4;
          this._removeStorageSync(n3);
        } catch (BS) {
          wl.warn("".concat(this._className, ".removeItem error:"), BS);
        }
      } }, { key: "getSize", value: function(e4) {
        var t3 = this, n3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "b";
        try {
          var o3 = { size: 0, limitSize: 5242880, unit: n3 };
          if (Object.defineProperty(o3, "leftSize", { enumerable: true, get: function() {
            return o3.limitSize - o3.size;
          } }), tl && (o3.limitSize = 1024 * ol.getStorageInfoSync().limitSize), e4)
            o3.size = JSON.stringify(this.getItem(e4)).length + this._getKey(e4).length;
          else if (tl) {
            var r3 = ol.getStorageInfoSync(), a3 = r3.keys;
            a3.forEach(function(e5) {
              o3.size += JSON.stringify(t3.getStorageSync(e5)).length + t3._getKey(e5).length;
            });
          } else if (this._canIUseCookies())
            for (var s3 in localStorage)
              localStorage.hasOwnProperty(s3) && (o3.size += localStorage.getItem(s3).length + s3.length);
          return this._convertUnit(o3);
        } catch (BS) {
          wl.warn("".concat(this._className, " error:"), BS);
        }
      } }, { key: "_convertUnit", value: function(e4) {
        var t3 = {}, n3 = e4.unit;
        for (var o3 in t3.unit = n3, e4)
          "number" == typeof e4[o3] && ("kb" === n3.toLowerCase() ? t3[o3] = Math.round(e4[o3] / 1024) : "mb" === n3.toLowerCase() ? t3[o3] = Math.round(e4[o3] / 1024 / 1024) : t3[o3] = e4[o3]);
        return t3;
      } }, { key: "_setStorageSync", value: function(e4, t3) {
        tl ? Qc ? my.setStorageSync({ key: e4, data: t3 }) : ol.setStorageSync(e4, t3) : this._canIUseCookies() && localStorage.setItem(e4, JSON.stringify(t3));
      } }, { key: "getStorageSync", value: function(e4) {
        return tl ? Qc ? my.getStorageSync({ key: e4 }).data : ol.getStorageSync(e4) : this._canIUseCookies() ? JSON.parse(localStorage.getItem(e4)) : {};
      } }, { key: "_removeStorageSync", value: function(e4) {
        tl ? Qc ? my.removeStorageSync({ key: e4 }) : ol.removeStorageSync(e4) : this._canIUseCookies() && localStorage.removeItem(e4);
      } }, { key: "_canIUseCookies", value: function() {
        return navigator && navigator.cookieEnabled && localStorage;
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._doFlush();
      } }]), e3;
    }(), vI = function() {
      function e3(t3) {
        o2(this, e3), this._className = "SSOLogBody", this._report = [];
      }
      return a2(e3, [{ key: "pushIn", value: function(e4) {
        wl.debug("".concat(this._className, ".pushIn"), this._report.length, e4), this._report.push(e4);
      } }, { key: "backfill", value: function(e4) {
        var t3;
        ed(e4) && 0 !== e4.length && (wl.debug("".concat(this._className, ".backfill"), this._report.length, e4.length), (t3 = this._report).unshift.apply(t3, v2(e4)));
      } }, { key: "getLogsNumInMemory", value: function() {
        return this._report.length;
      } }, { key: "isEmpty", value: function() {
        return 0 === this._report.length;
      } }, { key: "_reset", value: function() {
        this._report.length = 0, this._report = [];
      } }, { key: "getLogsInMemory", value: function() {
        var e4 = this._report.slice();
        return this._reset(), e4;
      } }]), e3;
    }(), MI = function(e3) {
      var t3 = e3.getModule(jg);
      return { SDKType: 10, SDKAppID: t3.getSDKAppID(), SDKVersion: t3.getVersion(), tinyID: Number(t3.getTinyID()), userID: t3.getUserID(), platform: e3.getPlatform(), instanceID: t3.getInstanceID(), traceID: Ol() };
    }, yI = function(e3) {
      i2(r3, e3);
      var n3 = _2(r3);
      function r3(e4) {
        var t3;
        o2(this, r3), (t3 = n3.call(this, e4))._className = "EventStatModule", t3.TAG = "im-ssolog-event", t3._reportBody = new vI(), t3.MIN_THRESHOLD = 20, t3.MAX_THRESHOLD = 100, t3.WAITING_TIME = 6e4, t3.REPORT_LEVEL = [4, 5, 6], t3.REPORT_SDKAPPID_BLACKLIST = [], t3.REPORT_TINYID_WHITELIST = [], t3._lastReportTime = Date.now();
        var a3 = t3.getInnerEmitterInstance();
        return a3.on(ly, t3._onLoginSuccess, h2(t3)), a3.on(dy, t3._onCloudConfigUpdated, h2(t3)), t3;
      }
      return a2(r3, [{ key: "reportAtOnce", value: function() {
        wl.debug("".concat(this._className, ".reportAtOnce")), this._report();
      } }, { key: "_onLoginSuccess", value: function() {
        var e4 = this, t3 = this.getModule(Wg), n4 = t3.getItem(this.TAG, false);
        !Wd(n4) && od(n4.forEach) && (wl.log("".concat(this._className, "._onLoginSuccess get ssolog in storage, count:").concat(n4.length)), n4.forEach(function(t4) {
          e4._reportBody.pushIn(t4);
        }), t3.removeItem(this.TAG, false));
      } }, { key: "_onCloudConfigUpdated", value: function() {
        var e4 = this.getCloudConfig("evt_rpt_threshold"), t3 = this.getCloudConfig("evt_rpt_waiting"), n4 = this.getCloudConfig("evt_rpt_level"), o3 = this.getCloudConfig("evt_rpt_sdkappid_bl"), r4 = this.getCloudConfig("evt_rpt_tinyid_wl");
        td(e4) || (this.MIN_THRESHOLD = Number(e4)), td(t3) || (this.WAITING_TIME = Number(t3)), td(n4) || (this.REPORT_LEVEL = n4.split(",").map(function(e5) {
          return Number(e5);
        })), td(o3) || (this.REPORT_SDKAPPID_BLACKLIST = o3.split(",").map(function(e5) {
          return Number(e5);
        })), td(r4) || (this.REPORT_TINYID_WHITELIST = r4.split(","));
      } }, { key: "pushIn", value: function(e4) {
        e4 instanceof G_ && (e4.updateTimeStamp(), this._reportBody.pushIn(e4), this._reportBody.getLogsNumInMemory() >= this.MIN_THRESHOLD && this._report());
      } }, { key: "onCheckTimer", value: function() {
        Date.now() < this._lastReportTime + this.WAITING_TIME || this._reportBody.isEmpty() || this._report();
      } }, { key: "_filterLogs", value: function(e4) {
        var t3 = this, n4 = this.getModule(jg), o3 = n4.getSDKAppID(), r4 = n4.getTinyID();
        return bd(this.REPORT_SDKAPPID_BLACKLIST, o3) && !wd(this.REPORT_TINYID_WHITELIST, r4) ? [] : e4.filter(function(e5) {
          return t3.REPORT_LEVEL.includes(e5.level);
        });
      } }, { key: "_report", value: function() {
        var e4 = this;
        if (!this._reportBody.isEmpty()) {
          var n4 = this._reportBody.getLogsInMemory(), o3 = this._filterLogs(n4);
          if (0 !== o3.length) {
            var r4 = { header: MI(this), event: o3 };
            this.request({ protocolName: Yf, requestData: t2({}, r4) }).then(function() {
              e4._lastReportTime = Date.now();
            }).catch(function(t3) {
              wl.warn("".concat(e4._className, ".report failed. networkType:").concat(e4.getNetworkType(), " error:"), t3), e4._reportBody.backfill(n4), e4._reportBody.getLogsNumInMemory() > e4.MAX_THRESHOLD && e4._flushAtOnce();
            });
          } else
            this._lastReportTime = Date.now();
        }
      } }, { key: "_flushAtOnce", value: function() {
        var e4 = this.getModule(Wg), t3 = e4.getItem(this.TAG, false), n4 = this._reportBody.getLogsInMemory();
        if (Wd(t3))
          wl.log("".concat(this._className, "._flushAtOnce count:").concat(n4.length)), e4.setItem(this.TAG, n4, true, false);
        else {
          var o3 = n4.concat(t3);
          o3.length > this.MAX_THRESHOLD && (o3 = o3.slice(0, this.MAX_THRESHOLD)), wl.log("".concat(this._className, "._flushAtOnce count:").concat(o3.length)), e4.setItem(this.TAG, o3, true, false);
        }
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._lastReportTime = 0, this._report(), this.REPORT_SDKAPPID_BLACKLIST = [], this.REPORT_TINYID_WHITELIST = [];
      } }]), r3;
    }(hh), II = "none", TI = "online", CI = [dh.OVER_FREQUENCY_LIMIT, dh.OPEN_SERVICE_OVERLOAD_ERROR], EI = function() {
      function e3(t3) {
        o2(this, e3), this._moduleManager = t3, this._networkType = "", this._className = "NetMonitorModule", this.MAX_WAIT_TIME = 3e3, this._mpNetworkStatusCallback = null, this._webOnlineCallback = null, this._webOfflineCallback = null;
      }
      return a2(e3, [{ key: "start", value: function() {
        var e4 = this;
        tl ? (ol.getNetworkType({ success: function(t3) {
          e4._networkType = t3.networkType, t3.networkType === II ? wl.warn("".concat(e4._className, ".start no network, please check!")) : wl.info("".concat(e4._className, ".start networkType:").concat(t3.networkType));
        } }), this._mpNetworkStatusCallback = this._onNetworkStatusChange.bind(this), ol.onNetworkStatusChange(this._mpNetworkStatusCallback)) : (this._networkType = TI, this._webOnlineCallback = this._onWebOnline.bind(this), this._webOfflineCallback = this._onWebOffline.bind(this), window && (window.addEventListener("online", this._webOnlineCallback), window.addEventListener("offline", this._webOfflineCallback)));
      } }, { key: "_onWebOnline", value: function() {
        this._onNetworkStatusChange({ isConnected: true, networkType: TI });
      } }, { key: "_onWebOffline", value: function() {
        this._onNetworkStatusChange({ isConnected: false, networkType: II });
      } }, { key: "_onNetworkStatusChange", value: function(e4) {
        var t3 = e4.isConnected, n3 = e4.networkType, o3 = false;
        t3 ? (wl.info("".concat(this._className, "._onNetworkStatusChange previousNetworkType:").concat(this._networkType, " currentNetworkType:").concat(n3)), this._networkType !== n3 && (o3 = true, this._moduleManager.getModule(eh).reConnect(true))) : this._networkType !== n3 && (o3 = true, wl.warn("".concat(this._className, "._onNetworkStatusChange no network, please check!")), this._moduleManager.getModule(eh).offline());
        o3 && (new G_(P_.NETWORK_CHANGE).setMessage("isConnected:".concat(t3, " previousNetworkType:").concat(this._networkType, " networkType:").concat(n3)).end(), this._networkType = n3);
      } }, { key: "probe", value: function(e4) {
        var t3 = this;
        return !td(e4) && CI.includes(e4.code) ? Promise.resolve([true, this._networkType]) : new Promise(function(e5, n3) {
          tl ? ol.getNetworkType({ success: function(n4) {
            t3._networkType = n4.networkType, n4.networkType === II ? (wl.warn("".concat(t3._className, ".probe no network, please check!")), e5([false, n4.networkType])) : (wl.info("".concat(t3._className, ".probe networkType:").concat(n4.networkType)), e5([true, n4.networkType]));
          } }) : t3._networkType === II ? e5([false, II]) : e5([true, TI]);
        });
      } }, { key: "getNetworkType", value: function() {
        return this._networkType;
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), tl ? null !== this._mpNetworkStatusCallback && (ol.offNetworkStatusChange && (Zc || Jc ? ol.offNetworkStatusChange(this._mpNetworkStatusCallback) : ol.offNetworkStatusChange()), this._mpNetworkStatusCallback = null) : window && (null !== this._webOnlineCallback && (window.removeEventListener("online", this._webOnlineCallback), this._webOnlineCallback = null), null !== this._onWebOffline && (window.removeEventListener("offline", this._webOfflineCallback), this._webOfflineCallback = null));
      } }]), e3;
    }(), SI = D2(function(e3) {
      var t3 = Object.prototype.hasOwnProperty, n3 = "~";
      function o3() {
      }
      function r3(e4, t4, n4) {
        this.fn = e4, this.context = t4, this.once = n4 || false;
      }
      function a3(e4, t4, o4, a4, s4) {
        if ("function" != typeof o4)
          throw new TypeError("The listener must be a function");
        var i4 = new r3(o4, a4 || e4, s4), u3 = n3 ? n3 + t4 : t4;
        return e4._events[u3] ? e4._events[u3].fn ? e4._events[u3] = [e4._events[u3], i4] : e4._events[u3].push(i4) : (e4._events[u3] = i4, e4._eventsCount++), e4;
      }
      function s3(e4, t4) {
        0 == --e4._eventsCount ? e4._events = new o3() : delete e4._events[t4];
      }
      function i3() {
        this._events = new o3(), this._eventsCount = 0;
      }
      Object.create && (o3.prototype = /* @__PURE__ */ Object.create(null), new o3().__proto__ || (n3 = false)), i3.prototype.eventNames = function() {
        var e4, o4, r4 = [];
        if (0 === this._eventsCount)
          return r4;
        for (o4 in e4 = this._events)
          t3.call(e4, o4) && r4.push(n3 ? o4.slice(1) : o4);
        return Object.getOwnPropertySymbols ? r4.concat(Object.getOwnPropertySymbols(e4)) : r4;
      }, i3.prototype.listeners = function(e4) {
        var t4 = n3 ? n3 + e4 : e4, o4 = this._events[t4];
        if (!o4)
          return [];
        if (o4.fn)
          return [o4.fn];
        for (var r4 = 0, a4 = o4.length, s4 = new Array(a4); r4 < a4; r4++)
          s4[r4] = o4[r4].fn;
        return s4;
      }, i3.prototype.listenerCount = function(e4) {
        var t4 = n3 ? n3 + e4 : e4, o4 = this._events[t4];
        return o4 ? o4.fn ? 1 : o4.length : 0;
      }, i3.prototype.emit = function(e4, t4, o4, r4, a4, s4) {
        var i4 = n3 ? n3 + e4 : e4;
        if (!this._events[i4])
          return false;
        var u3, c3, l3 = this._events[i4], d3 = arguments.length;
        if (l3.fn) {
          switch (l3.once && this.removeListener(e4, l3.fn, void 0, true), d3) {
            case 1:
              return l3.fn.call(l3.context), true;
            case 2:
              return l3.fn.call(l3.context, t4), true;
            case 3:
              return l3.fn.call(l3.context, t4, o4), true;
            case 4:
              return l3.fn.call(l3.context, t4, o4, r4), true;
            case 5:
              return l3.fn.call(l3.context, t4, o4, r4, a4), true;
            case 6:
              return l3.fn.call(l3.context, t4, o4, r4, a4, s4), true;
          }
          for (c3 = 1, u3 = new Array(d3 - 1); c3 < d3; c3++)
            u3[c3 - 1] = arguments[c3];
          l3.fn.apply(l3.context, u3);
        } else {
          var p3, g3 = l3.length;
          for (c3 = 0; c3 < g3; c3++)
            switch (l3[c3].once && this.removeListener(e4, l3[c3].fn, void 0, true), d3) {
              case 1:
                l3[c3].fn.call(l3[c3].context);
                break;
              case 2:
                l3[c3].fn.call(l3[c3].context, t4);
                break;
              case 3:
                l3[c3].fn.call(l3[c3].context, t4, o4);
                break;
              case 4:
                l3[c3].fn.call(l3[c3].context, t4, o4, r4);
                break;
              default:
                if (!u3)
                  for (p3 = 1, u3 = new Array(d3 - 1); p3 < d3; p3++)
                    u3[p3 - 1] = arguments[p3];
                l3[c3].fn.apply(l3[c3].context, u3);
            }
        }
        return true;
      }, i3.prototype.on = function(e4, t4, n4) {
        return a3(this, e4, t4, n4, false);
      }, i3.prototype.once = function(e4, t4, n4) {
        return a3(this, e4, t4, n4, true);
      }, i3.prototype.removeListener = function(e4, t4, o4, r4) {
        var a4 = n3 ? n3 + e4 : e4;
        if (!this._events[a4])
          return this;
        if (!t4)
          return s3(this, a4), this;
        var i4 = this._events[a4];
        if (i4.fn)
          i4.fn !== t4 || r4 && !i4.once || o4 && i4.context !== o4 || s3(this, a4);
        else {
          for (var u3 = 0, c3 = [], l3 = i4.length; u3 < l3; u3++)
            (i4[u3].fn !== t4 || r4 && !i4[u3].once || o4 && i4[u3].context !== o4) && c3.push(i4[u3]);
          c3.length ? this._events[a4] = 1 === c3.length ? c3[0] : c3 : s3(this, a4);
        }
        return this;
      }, i3.prototype.removeAllListeners = function(e4) {
        var t4;
        return e4 ? (t4 = n3 ? n3 + e4 : e4, this._events[t4] && s3(this, t4)) : (this._events = new o3(), this._eventsCount = 0), this;
      }, i3.prototype.off = i3.prototype.removeListener, i3.prototype.addListener = i3.prototype.on, i3.prefixed = n3, i3.EventEmitter = i3, e3.exports = i3;
    }), DI = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        return o2(this, n3), (r3 = t3.call(this, e4))._className = "BigDataChannelModule", r3.FILETYPE = { SOUND: 2106, FILE: 2107, VIDEO: 2113 }, r3._bdh_download_server = "grouptalk.c2c.qq.com", r3._BDHBizID = 10001, r3._authKey = "", r3._expireTime = 0, r3.getInnerEmitterInstance().on(ly, r3._getAuthKey, h2(r3)), r3;
      }
      return a2(n3, [{ key: "_getAuthKey", value: function() {
        var e4 = this;
        this.isIntl() || this.request({ protocolName: yh }).then(function(t4) {
          t4.data.authKey && (e4._authKey = t4.data.authKey, e4._expireTime = parseInt(t4.data.expireTime));
        });
      } }, { key: "_isFromOlderVersion", value: function(e4) {
        return !(!e4.content || 2 === e4.content.downloadFlag);
      } }, { key: "parseElements", value: function(e4, t4) {
        if (!ed(e4) || !t4)
          return [];
        for (var n4 = [], o3 = null, r3 = 0; r3 < e4.length; r3++)
          o3 = e4[r3], this._needParse(o3) ? n4.push(this._parseElement(o3, t4)) : n4.push(e4[r3]);
        return n4;
      } }, { key: "_needParse", value: function(e4) {
        return !e4.cloudCustomData && !(!this._isFromOlderVersion(e4) || e4.type !== gr.MSG_AUDIO && e4.type !== gr.MSG_FILE && e4.type !== gr.MSG_VIDEO);
      } }, { key: "_parseElement", value: function(e4, t4) {
        switch (e4.type) {
          case gr.MSG_AUDIO:
            return this._parseAudioElement(e4, t4);
          case gr.MSG_FILE:
            return this._parseFileElement(e4, t4);
          case gr.MSG_VIDEO:
            return this._parseVideoElement(e4, t4);
        }
      } }, { key: "_parseAudioElement", value: function(e4, t4) {
        return e4.content.url = this._genAudioUrl(e4.content.uuid, t4), e4;
      } }, { key: "_parseFileElement", value: function(e4, t4) {
        return e4.content.url = this._genFileUrl(e4.content.uuid, t4, e4.content.fileName), e4;
      } }, { key: "_parseVideoElement", value: function(e4, t4) {
        return e4.content.url = this._genVideoUrl(e4.content.uuid, t4), e4;
      } }, { key: "_genAudioUrl", value: function(e4, t4) {
        if ("" === this._authKey)
          return wl.warn("".concat(this._className, "._genAudioUrl no authKey!")), "";
        var n4 = this.getModule(jg).getSDKAppID();
        return "https://".concat(this._bdh_download_server, "/asn.com/stddownload_common_file?authkey=").concat(this._authKey, "&bid=").concat(this._BDHBizID, "&subbid=").concat(n4, "&fileid=").concat(e4, "&filetype=").concat(this.FILETYPE.SOUND, "&openid=").concat(t4, "&ver=0");
      } }, { key: "_genFileUrl", value: function(e4, t4, n4) {
        if ("" === this._authKey)
          return wl.warn("".concat(this._className, "._genFileUrl no authKey!")), "";
        n4 || (n4 = "".concat(Math.floor(1e5 * Math.random()), "-").concat(Date.now()));
        var o3 = this.getModule(jg).getSDKAppID();
        return "https://".concat(this._bdh_download_server, "/asn.com/stddownload_common_file?authkey=").concat(this._authKey, "&bid=").concat(this._BDHBizID, "&subbid=").concat(o3, "&fileid=").concat(e4, "&filetype=").concat(this.FILETYPE.FILE, "&openid=").concat(t4, "&ver=0&filename=").concat(encodeURIComponent(n4));
      } }, { key: "_genVideoUrl", value: function(e4, t4) {
        if ("" === this._authKey)
          return wl.warn("".concat(this._className, "._genVideoUrl no authKey!")), "";
        var n4 = this.getModule(jg).getSDKAppID();
        return "https://".concat(this._bdh_download_server, "/asn.com/stddownload_common_file?authkey=").concat(this._authKey, "&bid=").concat(this._BDHBizID, "&subbid=").concat(n4, "&fileid=").concat(e4, "&filetype=").concat(this.FILETYPE.VIDEO, "&openid=").concat(t4, "&ver=0");
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._authKey = "", this.expireTime = 0;
      } }]), n3;
    }(hh), NI = ["requestSnapshotUrl"], AI = function(e3) {
      i2(r3, e3);
      var n3 = _2(r3);
      function r3(e4) {
        var t3;
        return o2(this, r3), (t3 = n3.call(this, e4))._className = "UploadModule", t3.TIMUploadPlugin = null, t3.timUploadPlugin = null, t3.COSSDK = null, t3._cosUploadMethod = null, t3.expiredTimeLimit = 600, t3.appid = 0, t3.bucketName = "", t3.ciUrl = "", t3.directory = "", t3.downloadUrl = "", t3.uploadUrl = "", t3.region = "ap-shanghai", t3.cos = null, t3.cosOptions = { secretId: "", secretKey: "", sessionToken: "", expiredTime: 0 }, t3.uploadFileType = "", t3.duration = 900, t3.tryCount = 0, t3.getInnerEmitterInstance().on(ly, t3._init, h2(t3)), t3;
      }
      return a2(r3, [{ key: "_init", value: function() {
        var e4 = "".concat(this._className, "._init"), t3 = this.getModule(Xg);
        if (this.TIMUploadPlugin = t3.getPlugin("tim-upload-plugin"), this.TIMUploadPlugin)
          this._initUploaderMethod();
        else {
          var n4 = tl ? "cos-wx-sdk" : "cos-js-sdk";
          this.COSSDK = t3.getPlugin(n4), this.COSSDK ? (this._getAuthorizationKey(), wl.warn("".concat(e4, " v2.9.2\u8D77\u63A8\u8350\u4F7F\u7528 tim-upload-plugin \u4EE3\u66FF ").concat(n4, "\uFF0C\u4E0A\u4F20\u66F4\u5FEB\u66F4\u5B89\u5168\u3002\u8BF7\u53C2\u8003 https://web.sdk.qcloud.com/im/doc/zh-cn/SDK.html#registerPlugin"))) : wl.warn("".concat(e4, " ").concat(this._getPluginUndetectedLog()));
        }
      } }, { key: "_getAuthorizationKey", value: function() {
        var e4 = this, t3 = new G_(P_.GET_COS_AUTH_KEY), n4 = Math.ceil(Date.now() / 1e3);
        this.request({ protocolName: Hf, requestData: { duration: this.expiredTimeLimit } }).then(function(o3) {
          var r4 = o3.data;
          wl.log("".concat(e4._className, "._getAuthorizationKey ok. data:"), r4);
          var a3 = r4.expiredTime - n4;
          t3.setMessage("requestId:".concat(r4.requestId, " requestTime:").concat(n4, " expiredTime:").concat(r4.expiredTime, " diff:").concat(a3, "s")).setNetworkType(e4.getNetworkType()).end(), !tl && r4.region && (e4.region = r4.region), e4.appid = r4.appid, e4.bucketName = r4.bucketName, e4.ciUrl = r4.ciUrl, e4.directory = r4.directory, e4.downloadUrl = r4.downloadUrl, e4.uploadUrl = r4.uploadUrl, e4.cosOptions = { secretId: r4.secretId, secretKey: r4.secretKey, sessionToken: r4.sessionToken, expiredTime: r4.expiredTime }, wl.log("".concat(e4._className, "._getAuthorizationKey ok. region:").concat(e4.region, " bucketName:").concat(e4.bucketName)), e4._initUploaderMethod();
        }).catch(function(n5) {
          e4.probeNetwork().then(function(e5) {
            var o3 = m2(e5, 2), r4 = o3[0], a3 = o3[1];
            t3.setError(n5, r4, a3).end();
          }), wl.warn("".concat(e4._className, "._getAuthorizationKey failed. error:"), n5);
        });
      } }, { key: "_getCosPreSigUrl", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, "._getCosPreSigUrl"), o3 = Math.ceil(Date.now() / 1e3), r4 = new G_(P_.GET_COS_PRE_SIG_URL);
        return this.request({ protocolName: jf, requestData: { fileType: e4.fileType, fileName: e4.fileName, uploadMethod: e4.uploadMethod, duration: e4.duration } }).then(function(e5) {
          t3.tryCount = 0;
          var a3 = e5.data || {}, s3 = a3.expiredTime - o3;
          return wl.log("".concat(n4, " ok. data:"), a3), r4.setMessage("requestId:".concat(a3.requestId, " expiredTime:").concat(a3.expiredTime, " diff:").concat(s3, "s")).setNetworkType(t3.getNetworkType()).end(), a3;
        }).catch(function(o4) {
          return -1 === o4.code && (o4.code = dh.COS_GET_SIG_FAIL), t3.probeNetwork().then(function(e5) {
            var t4 = m2(e5, 2), n5 = t4[0], a3 = t4[1];
            r4.setError(o4, n5, a3).end();
          }), wl.warn("".concat(n4, " failed. error:"), o4), t3.tryCount < 1 ? (t3.tryCount++, t3._getCosPreSigUrl(e4)) : (t3.tryCount = 0, YM({ code: dh.COS_GET_SIG_FAIL }));
        });
      } }, { key: "_initUploaderMethod", value: function() {
        var e4 = this;
        if (this.TIMUploadPlugin)
          return this.timUploadPlugin = new this.TIMUploadPlugin(), void (this._cosUploadMethod = function(t3, n4) {
            e4.timUploadPlugin.uploadFile(t3, n4);
          });
        this.appid && (this.cos = tl ? new this.COSSDK({ ForcePathStyle: true, getAuthorization: this._getAuthorization.bind(this) }) : new this.COSSDK({ getAuthorization: this._getAuthorization.bind(this) }), this._cosUploadMethod = tl ? function(t3, n4) {
          e4.cos.postObject(t3, n4);
        } : function(t3, n4) {
          e4.cos.uploadFiles(t3, n4);
        });
      } }, { key: "onCheckTimer", value: function(e4) {
        this.COSSDK && (this.TIMUploadPlugin || this.isLoggedIn() && e4 % 60 == 0 && Math.ceil(Date.now() / 1e3) >= this.cosOptions.expiredTime - 120 && this._getAuthorizationKey());
      } }, { key: "_getAuthorization", value: function(e4, t3) {
        t3({ TmpSecretId: this.cosOptions.secretId, TmpSecretKey: this.cosOptions.secretKey, XCosSecurityToken: this.cosOptions.sessionToken, ExpiredTime: this.cosOptions.expiredTime });
      } }, { key: "upload", value: function(e4) {
        if (true === e4.getRelayFlag())
          return Promise.resolve();
        var t3 = this.getModule(ah);
        switch (e4.type) {
          case gr.MSG_IMAGE:
            return t3.addTotalCount(S_), this._uploadImage(e4);
          case gr.MSG_FILE:
            return t3.addTotalCount(S_), this._uploadFile(e4);
          case gr.MSG_AUDIO:
            return t3.addTotalCount(S_), this._uploadAudio(e4);
          case gr.MSG_VIDEO:
            return t3.addTotalCount(S_), this._uploadVideo(e4);
          default:
            return Promise.resolve();
        }
      } }, { key: "_uploadImage", value: function(e4) {
        var n4 = this, o3 = this.getModule(bg), r4 = e4.getElements()[0], a3 = o3.getMessageOption(e4.clientSequence);
        return this.doUploadImage({ file: a3.payload.file, to: a3.to, onProgress: function(e5) {
          if (r4.updatePercent(e5), od(a3.onProgress))
            try {
              a3.onProgress(e5);
            } catch (t3) {
              return YM({ code: dh.MESSAGE_ONPROGRESS_FUNCTION_ERROR });
            }
        } }).then(function(o4) {
          var a4 = o4.location, s3 = o4.fileType, i3 = o4.fileSize, u3 = o4.width, c3 = o4.height, l3 = n4.isPrivateNetWork() ? a4 : md(a4);
          r4.updateImageFormat(s3);
          var d3 = Ld({ originUrl: l3, originWidth: u3, originHeight: c3, min: 198 }), p3 = Ld({ originUrl: l3, originWidth: u3, originHeight: c3, min: 720 });
          return r4.updateImageInfoArray([{ size: i3, url: l3, width: u3, height: c3 }, t2({}, p3), t2({}, d3)]), e4;
        });
      } }, { key: "_uploadFile", value: function(e4) {
        var t3 = this, n4 = this.getModule(bg), o3 = e4.getElements()[0], r4 = n4.getMessageOption(e4.clientSequence);
        return this.doUploadFile({ file: r4.payload.file, to: r4.to, onProgress: function(e5) {
          if (o3.updatePercent(e5), od(r4.onProgress))
            try {
              r4.onProgress(e5);
            } catch (t4) {
              return YM({ code: dh.MESSAGE_ONPROGRESS_FUNCTION_ERROR });
            }
        } }).then(function(n5) {
          var r5 = n5.location, a3 = t3.isPrivateNetWork() ? r5 : md(r5);
          return o3.updateFileUrl(a3), e4;
        });
      } }, { key: "_uploadAudio", value: function(e4) {
        var t3 = this, n4 = this.getModule(bg), o3 = e4.getElements()[0], r4 = n4.getMessageOption(e4.clientSequence);
        return this.doUploadAudio({ file: r4.payload.file, to: r4.to, onProgress: function(e5) {
          if (o3.updatePercent(e5), od(r4.onProgress))
            try {
              r4.onProgress(e5);
            } catch (t4) {
              return YM({ code: dh.MESSAGE_ONPROGRESS_FUNCTION_ERROR });
            }
        } }).then(function(n5) {
          var r5 = n5.location, a3 = t3.isPrivateNetWork() ? r5 : md(r5);
          return o3.updateAudioUrl(a3), e4;
        });
      } }, { key: "_uploadVideo", value: function(e4) {
        var t3 = this, n4 = this.getModule(bg), o3 = e4.getElements()[0], r4 = n4.getMessageOption(e4.clientSequence);
        return this.doUploadVideo({ file: r4.payload.file, to: r4.to, onProgress: function(e5) {
          if (o3.updatePercent(e5), od(r4.onProgress))
            try {
              r4.onProgress(e5);
            } catch (t4) {
              return YM({ code: dh.MESSAGE_ONPROGRESS_FUNCTION_ERROR });
            }
        } }).then(function(n5) {
          var r5 = n5.location, a3 = n5.snapshotInfo, s3 = t3.isPrivateNetWork() ? r5 : md(r5);
          return o3.updateVideoUrl(s3), Wd(a3) || o3.updateSnapshotInfo(a3), e4;
        });
      } }, { key: "doUploadImage", value: function(e4) {
        var t3 = this;
        if (!e4.file)
          return YM({ code: dh.MESSAGE_IMAGE_SELECT_FILE_FIRST });
        var n4 = this._checkImageType(e4.file);
        if (true !== n4)
          return n4;
        var o3 = this._checkImageSize(e4.file);
        if (true !== o3)
          return o3;
        var r4 = null;
        return this._setUploadFileType(_y), this.uploadByCOS(e4).then(function(e5) {
          return r4 = e5, t3.isPrivateNetWork() ? Ad(e5.location) : Ad("https://".concat(e5.location));
        }).then(function(e5) {
          return r4.width = e5.width, r4.height = e5.height, Promise.resolve(r4);
        });
      } }, { key: "_checkImageType", value: function(e4) {
        var t3 = "";
        return t3 = tl ? e4.url.slice(e4.url.lastIndexOf(".") + 1) : e4.files[0].name.slice(e4.files[0].name.lastIndexOf(".") + 1), hy.indexOf(t3.toLowerCase()) >= 0 || YM({ code: dh.MESSAGE_IMAGE_TYPES_LIMIT });
      } }, { key: "_checkImageSize", value: function(e4) {
        var t3 = 0;
        return 0 === (t3 = tl ? e4.size : e4.files[0].size) ? YM({ code: dh.MESSAGE_FILE_IS_EMPTY }) : t3 < 20971520 || YM({ code: dh.MESSAGE_IMAGE_SIZE_LIMIT });
      } }, { key: "doUploadFile", value: function(e4) {
        return e4.file ? e4.file.files[0].size > 104857600 ? YM({ code: dh.MESSAGE_FILE_SIZE_LIMIT }) : 0 === e4.file.files[0].size ? YM({ code: dh.MESSAGE_FILE_IS_EMPTY }) : (this._setUploadFileType(yy), this.uploadByCOS(e4)) : YM({ code: dh.MESSAGE_FILE_SELECT_FILE_FIRST });
      } }, { key: "doUploadVideo", value: function(e4) {
        return e4.file.videoFile.size > 104857600 ? YM({ code: dh.MESSAGE_VIDEO_SIZE_LIMIT }) : 0 === e4.file.videoFile.size ? YM({ code: dh.MESSAGE_FILE_IS_EMPTY }) : -1 === fy.indexOf(e4.file.videoFile.type) ? YM({ code: dh.MESSAGE_VIDEO_TYPES_LIMIT }) : (this._setUploadFileType(vy), tl ? this.handleVideoUpload({ file: e4.file.videoFile, onProgress: e4.onProgress }) : nl ? this.handleVideoUpload(e4) : void 0);
      } }, { key: "handleVideoUpload", value: function(e4) {
        var t3 = this;
        return new Promise(function(n4, o3) {
          t3.uploadByCOS(e4).then(function(e5) {
            n4(e5);
          }).catch(function() {
            t3.uploadByCOS(e4).then(function(e5) {
              n4(e5);
            }).catch(function() {
              o3(new KM({ code: dh.MESSAGE_VIDEO_UPLOAD_FAIL }));
            });
          });
        });
      } }, { key: "doUploadAudio", value: function(e4) {
        return e4.file ? e4.file.size > 20971520 ? YM({ code: dh.MESSAGE_AUDIO_SIZE_LIMIT }) : 0 === e4.file.size ? YM({ code: dh.MESSAGE_FILE_IS_EMPTY }) : (this._setUploadFileType(My), this.uploadByCOS(e4)) : YM({ code: dh.MESSAGE_AUDIO_UPLOAD_FAIL });
      } }, { key: "uploadByCOS", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, ".uploadByCOS");
        if (!od(this._cosUploadMethod))
          return wl.warn("".concat(n4, " ").concat(this._getPluginUndetectedLog())), YM({ code: dh.COS_UNDETECTED });
        if (this.timUploadPlugin)
          return this._uploadWithPreSigUrl(e4);
        var o3 = new G_(P_.UPLOAD), r4 = Date.now(), a3 = this._getFile(e4);
        return new Promise(function(s3, i3) {
          var u3 = tl ? t3._createCosOptionsWXMiniApp(e4) : t3._createCosOptionsWeb(e4), c3 = t3;
          t3._cosUploadMethod(u3, function(e5, u4) {
            var l3 = /* @__PURE__ */ Object.create(null);
            if (u4) {
              if (e5 || ed(u4.files) && u4.files[0].error) {
                var d3 = new KM({ code: dh.MESSAGE_FILE_UPLOAD_FAIL });
                return o3.setError(d3, true, t3.getNetworkType()).end(), wl.log("".concat(n4, " failed. error:"), u4.files[0].error), 403 === u4.files[0].error.statusCode && (wl.warn("".concat(n4, " failed. cos AccessKeyId was invalid, regain auth key!")), t3._getAuthorizationKey()), void i3(d3);
              }
              l3.fileName = a3.name, l3.fileSize = a3.size, l3.fileType = a3.type.slice(a3.type.indexOf("/") + 1).toLowerCase(), l3.location = tl ? u4.Location : u4.files[0].data.Location;
              var p3 = Date.now() - r4, g3 = c3._formatFileSize(a3.size), h3 = c3._formatSpeed(1e3 * a3.size / p3), f3 = "size:".concat(g3, " time:").concat(p3, "ms speed:").concat(h3);
              wl.log("".concat(n4, " success. name:").concat(a3.name, " ").concat(f3)), s3(l3);
              var _3 = t3.getModule(ah);
              return _3.addCost(S_, p3), _3.addFileSize(S_, a3.size), void o3.setNetworkType(t3.getNetworkType()).setMessage(f3).end();
            }
            var m3 = new KM({ code: dh.MESSAGE_FILE_UPLOAD_FAIL });
            o3.setError(m3, true, c3.getNetworkType()).end(), wl.warn("".concat(n4, " failed. error:"), e5), 403 === e5.statusCode && (wl.warn("".concat(n4, " failed. cos AccessKeyId was invalid, regain auth key!")), t3._getAuthorizationKey()), i3(m3);
          });
        });
      } }, { key: "_uploadWithPreSigUrl", value: function(e4) {
        var t3 = this, n4 = "".concat(this._className, "._uploadWithPreSigUrl"), o3 = this._getFile(e4);
        return this._createCosOptionsPreSigUrl(e4).then(function(e5) {
          return new Promise(function(r4, a3) {
            var s3 = new G_(P_.UPLOAD), i3 = e5.requestSnapshotUrl, u3 = void 0 === i3 ? void 0 : i3, c3 = g2(e5, NI), l3 = Date.now();
            t3._cosUploadMethod(c3, function(e6, i4) {
              var c4 = /* @__PURE__ */ Object.create(null);
              if (e6 || 403 === i4.statusCode)
                return s3.setError(new KM(e6), true, t3.getNetworkType()).end(), wl.log("".concat(n4, " failed, error:"), e6), void a3(new KM({ code: dh.MESSAGE_FILE_UPLOAD_FAIL }));
              var d3 = i4.data.location || "";
              t3.isPrivateNetWork() || 0 !== d3.indexOf("https://") && 0 !== d3.indexOf("http://") || (d3 = d3.split("//")[1]), c4.fileName = o3.name, c4.fileSize = o3.size, c4.fileType = o3.type.slice(o3.type.indexOf("/") + 1).toLowerCase(), c4.location = d3;
              var p3 = Date.now() - l3, g3 = t3._formatFileSize(o3.size), h3 = t3._formatSpeed(1e3 * o3.size / p3), f3 = "size:".concat(g3, ",time:").concat(p3, "ms,speed:").concat(h3, " res:").concat(JSON.stringify(i4.data));
              wl.log("".concat(n4, " success name:").concat(o3.name, ",").concat(f3)), s3.setNetworkType(t3.getNetworkType()).setMessage(f3).end();
              var _3 = t3.getModule(ah);
              if (_3.addCost(S_, p3), _3.addFileSize(S_, o3.size), !Wd(u3))
                return t3._getSnapshotInfoByUrl(u3).then(function(e7) {
                  c4.snapshotInfo = e7, r4(c4);
                });
              r4(c4);
            });
          });
        });
      } }, { key: "_getFile", value: function(e4) {
        var t3;
        return ed(e4.file.files) || (t3 = e4.file.files, "filelist" === ad(t3)) ? e4.file.files[0] : e4.file;
      } }, { key: "_formatFileSize", value: function(e4) {
        return e4 < 1024 ? e4 + "B" : e4 < 1048576 ? Math.floor(e4 / 1024) + "KB" : Math.floor(e4 / 1048576) + "MB";
      } }, { key: "_formatSpeed", value: function(e4) {
        return e4 <= 1048576 ? Ud(e4 / 1024, 1) + "KB/s" : Ud(e4 / 1048576, 1) + "MB/s";
      } }, { key: "_createCosOptionsWeb", value: function(e4) {
        var t3 = this._getFile(e4), n4 = t3.name, o3 = n4.slice(n4.lastIndexOf(".")), r4 = this._genFileName("".concat(pd(999999)).concat(o3));
        return { files: [{ Bucket: "".concat(this.bucketName, "-").concat(this.appid), Region: this.region, Key: "".concat(this.directory, "/").concat(r4), Body: t3 }], SliceSize: 1048576, onProgress: function(t4) {
          if ("function" == typeof e4.onProgress)
            try {
              e4.onProgress(t4.percent);
            } catch (n5) {
              wl.warn("onProgress callback error:", n5);
            }
        }, onFileFinish: function(e5, t4, n5) {
        } };
      } }, { key: "_createCosOptionsWXMiniApp", value: function(e4) {
        var t3 = this._getFile(e4), n4 = this._genFileName(t3.name), o3 = t3.url;
        return { Bucket: "".concat(this.bucketName, "-").concat(this.appid), Region: this.region, Key: "".concat(this.directory, "/").concat(n4), FilePath: o3, onProgress: function(t4) {
          if (wl.log(JSON.stringify(t4)), "function" == typeof e4.onProgress)
            try {
              e4.onProgress(t4.percent);
            } catch (n5) {
              wl.warn("onProgress callback error:", n5);
            }
        } };
      } }, { key: "_createCosOptionsPreSigUrl", value: function(e4) {
        var t3 = this, n4 = "", o3 = "", r4 = 0, a3 = this._getFile(e4);
        if (tl)
          n4 = this._genFileName(a3.name), o3 = a3.url, r4 = 1;
        else {
          var s3 = a3.name, i3 = s3.slice(s3.lastIndexOf("."));
          n4 = this._genFileName("".concat(pd(999999)).concat(i3)), o3 = a3, r4 = 0;
        }
        return this._getCosPreSigUrl({ fileType: this.uploadFileType, fileName: n4, uploadMethod: r4, duration: this.duration }).then(function(r5) {
          var a4 = r5.uploadUrl, s4 = r5.downloadUrl, i4 = r5.requestSnapshotUrl, u3 = void 0 === i4 ? void 0 : i4;
          return { url: a4, fileType: t3.uploadFileType, fileName: n4, resources: o3, downloadUrl: s4, requestSnapshotUrl: u3, onProgress: function(t4) {
            if ("function" == typeof e4.onProgress)
              try {
                e4.onProgress(t4.percent);
              } catch (n5) {
                wl.warn("onProgress callback error:", n5), wl.error(n5);
              }
          } };
        });
      } }, { key: "_genFileName", value: function(e4) {
        return "".concat(kd(), "-").concat(e4);
      } }, { key: "_setUploadFileType", value: function(e4) {
        this.uploadFileType = e4;
      } }, { key: "_getSnapshotInfoByUrl", value: function(e4) {
        var t3 = this, n4 = new G_(P_.GET_SNAPSHOT_INFO);
        return this.request({ protocolName: Wf, requestData: { platform: this.getPlatform(), coverName: this._genFileName(pd(99999)), requestSnapshotUrl: e4 } }).then(function(e5) {
          var t4 = (e5.data || {}).snapshotUrl;
          return n4.setMessage("snapshotUrl:".concat(t4)).end(), Wd(t4) ? {} : Ad(t4).then(function(e6) {
            return { snapshotUrl: t4, snapshotWidth: e6.width, snapshotHeight: e6.height };
          });
        }).catch(function(e5) {
          return wl.warn("".concat(t3._className, "._getSnapshotInfoByUrl failed. error:"), e5), n4.setCode(e5.errorCode).setMessage(e5.errorInfo).end(), {};
        });
      } }, { key: "_getPluginUndetectedLog", value: function() {
        return this.isIntl() ? "No upload plugin is detected. SDK can not send image/audio/video/file messages. See https://web.sdk.qcloud.com/im/doc/en/SDK.html#registerPlugin" : "\u672A\u68C0\u6D4B\u5230\u4E0A\u4F20\u63D2\u4EF6\uFF0CSDK \u5C06\u65E0\u6CD5\u53D1\u9001\u56FE\u7247\u3001\u97F3\u9891\u3001\u89C6\u9891\u3001\u6587\u4EF6\u7B49\u7C7B\u578B\u7684\u6D88\u606F\u3002\u8BF7\u53C2\u8003 https://web.sdk.qcloud.com/im/doc/zh-cn/SDK.html#registerPlugin";
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset"));
      } }]), r3;
    }(hh), kI = ["downloadKey", "pbDownloadKey", "messageList"], RI = function() {
      function e3(t3) {
        o2(this, e3), this._className = "MergerMessageHandler", this._messageModule = t3;
      }
      return a2(e3, [{ key: "uploadMergerMessage", value: function(e4, t3) {
        var n3 = this;
        wl.debug("".concat(this._className, ".uploadMergerMessage message:"), e4, "messageBytes:".concat(t3));
        var o3 = e4.payload.messageList, r3 = o3.length, a3 = new G_(P_.UPLOAD_MERGER_MESSAGE);
        return this._messageModule.request({ protocolName: Zf, requestData: { messageList: o3 } }).then(function(e5) {
          wl.debug("".concat(n3._className, ".uploadMergerMessage ok. response:"), e5.data);
          var o4 = e5.data, s3 = o4.pbDownloadKey, i3 = o4.downloadKey, u3 = { pbDownloadKey: s3, downloadKey: i3, messageNumber: r3 };
          return a3.setNetworkType(n3._messageModule.getNetworkType()).setMessage("".concat(r3, "-").concat(t3, "-").concat(i3)).end(), u3;
        }).catch(function(e5) {
          throw wl.warn("".concat(n3._className, ".uploadMergerMessage failed. error:"), e5), n3._messageModule.probeNetwork().then(function(t4) {
            var n4 = m2(t4, 2), o4 = n4[0], r4 = n4[1];
            a3.setError(e5, o4, r4).end();
          }), e5;
        });
      } }, { key: "downloadMergerMessage", value: function(e4) {
        var n3 = this;
        wl.debug("".concat(this._className, ".downloadMergerMessage message:"), e4);
        var o3 = e4.payload.downloadKey, r3 = new G_(P_.DOWNLOAD_MERGER_MESSAGE);
        return r3.setMessage("downloadKey:".concat(o3)), this._messageModule.request({ protocolName: e_, requestData: { downloadKey: o3 } }).then(function(o4) {
          if (wl.debug("".concat(n3._className, ".downloadMergerMessage ok. response:"), o4.data), od(e4.clearElement)) {
            var a3 = e4.payload, s3 = (a3.downloadKey, a3.pbDownloadKey, a3.messageList, g2(a3, kI));
            e4.clearElement(), e4.setElement({ type: e4.type, content: t2({ messageList: o4.data.messageList }, s3) });
          } else {
            var i3 = [];
            o4.data.messageList.forEach(function(e5) {
              if (!Wd(e5)) {
                var t3 = new GM(e5);
                i3.push(t3);
              }
            }), e4.payload.messageList = i3, e4.payload.downloadKey = "", e4.payload.pbDownloadKey = "";
          }
          return r3.setNetworkType(n3._messageModule.getNetworkType()).end(), e4;
        }).catch(function(e5) {
          throw wl.warn("".concat(n3._className, ".downloadMergerMessage failed. key:").concat(o3, " error:"), e5), n3._messageModule.probeNetwork().then(function(t3) {
            var n4 = m2(t3, 2), o4 = n4[0], a3 = n4[1];
            r3.setError(e5, o4, a3).end();
          }), e5;
        });
      } }, { key: "createMergerMessagePack", value: function(e4, t3, n3) {
        return e4.conversationType === gr.CONV_C2C ? this._createC2CMergerMessagePack(e4, t3, n3) : this._createGroupMergerMessagePack(e4, t3, n3);
      } }, { key: "_createC2CMergerMessagePack", value: function(e4, t3, n3) {
        var o3 = null;
        t3 && (t3.offlinePushInfo && (o3 = t3.offlinePushInfo), true === t3.onlineUserOnly && (o3 ? o3.disablePush = true : o3 = { disablePush: true }));
        var r3 = [];
        if (Zl(t3) && Zl(t3.messageControlInfo)) {
          var a3 = t3.messageControlInfo, s3 = a3.excludedFromUnreadCount, i3 = a3.excludedFromLastMessage;
          true === s3 && r3.push("NoUnread"), true === i3 && r3.push("NoLastMsg");
        }
        var u3 = "";
        Xl(e4.cloudCustomData) && e4.cloudCustomData.length > 0 && (u3 = e4.cloudCustomData);
        var c3 = n3.pbDownloadKey, l3 = n3.downloadKey, d3 = n3.messageNumber, p3 = e4.payload, g3 = p3.title, h3 = p3.abstractList, f3 = p3.compatibleText, _3 = this._messageModule.getModule(qg), m3 = _3 && _3.isOnlineMessage(e4, t3) ? 0 : void 0;
        return { protocolName: Ih, tjgID: this._messageModule.generateTjgID(e4), requestData: { fromAccount: this._messageModule.getMyUserID(), toAccount: e4.to, msgBody: [{ msgType: e4.type, msgContent: { pbDownloadKey: c3, downloadKey: l3, title: g3, abstractList: h3, compatibleText: f3, messageNumber: d3 } }], cloudCustomData: u3, clientTime: e4.clientTime, msgSeq: e4.sequence, msgRandom: e4.random, msgLifeTime: m3, offlinePushInfo: o3 ? { pushFlag: true === o3.disablePush ? 1 : 0, title: o3.title || "", desc: o3.description || "", ext: o3.extension || "", apnsInfo: { badgeMode: true === o3.ignoreIOSBadge ? 1 : 0 }, androidInfo: { OPPOChannelID: o3.androidOPPOChannelID || "" } } : void 0, messageControlInfo: 0 !== m3 ? r3 : void 0 } };
      } }, { key: "_createGroupMergerMessagePack", value: function(e4, t3, n3) {
        var o3 = null;
        t3 && t3.offlinePushInfo && (o3 = t3.offlinePushInfo);
        var r3 = [];
        if (Zl(t3) && Zl(t3.messageControlInfo)) {
          var a3 = t3.messageControlInfo, s3 = a3.excludedFromUnreadCount, i3 = a3.excludedFromLastMessage;
          true === s3 && r3.push("NoUnread"), true === i3 && r3.push("NoLastMsg");
        }
        var u3 = "";
        Xl(e4.cloudCustomData) && e4.cloudCustomData.length > 0 && (u3 = e4.cloudCustomData);
        var c3 = n3.pbDownloadKey, l3 = n3.downloadKey, d3 = n3.messageNumber, p3 = e4.payload, g3 = p3.title, h3 = p3.abstractList, f3 = p3.compatibleText, _3 = this._messageModule.getModule(xg), m3 = _3 && _3.isOnlineMessage(e4, t3) ? 1 : 0;
        return { protocolName: Th, tjgID: this._messageModule.generateTjgID(e4), requestData: { fromAccount: this._messageModule.getMyUserID(), groupID: e4.to, msgBody: [{ msgType: e4.type, msgContent: { pbDownloadKey: c3, downloadKey: l3, title: g3, abstractList: h3, compatibleText: f3, messageNumber: d3 } }], random: e4.random, priority: e4.priority, clientSequence: e4.clientSequence, groupAtInfo: void 0, cloudCustomData: u3, onlineOnlyFlag: m3, offlinePushInfo: o3 ? { pushFlag: true === o3.disablePush ? 1 : 0, title: o3.title || "", desc: o3.description || "", ext: o3.extension || "", apnsInfo: { badgeMode: true === o3.ignoreIOSBadge ? 1 : 0 }, androidInfo: { OPPOChannelID: o3.androidOPPOChannelID || "" } } : void 0, clientTime: e4.clientTime, needReadReceipt: true !== e4.needReadReceipt || _3.isMessageFromOrToAVChatroom(e4.to) ? 0 : 1, messageControlInfo: 0 === m3 ? r3 : void 0 } };
      } }]), e3;
    }(), OI = { ERR_SVR_COMM_SENSITIVE_TEXT: 80001, ERR_SVR_COMM_BODY_SIZE_LIMIT: 80002, OPEN_SERVICE_OVERLOAD_ERROR: 60022, ERR_SVR_MSG_PKG_PARSE_FAILED: 20001, ERR_SVR_MSG_INTERNAL_AUTH_FAILED: 20002, ERR_SVR_MSG_INVALID_ID: 20003, ERR_SVR_MSG_PUSH_DENY: 20006, ERR_SVR_MSG_IN_PEER_BLACKLIST: 20007, ERR_SVR_MSG_BOTH_NOT_FRIEND: 20009, ERR_SVR_MSG_NOT_PEER_FRIEND: 20010, ERR_SVR_MSG_NOT_SELF_FRIEND: 20011, ERR_SVR_MSG_SHUTUP_DENY: 20012, ERR_SVR_GROUP_INVALID_PARAMETERS: 10004, ERR_SVR_GROUP_PERMISSION_DENY: 10007, ERR_SVR_GROUP_NOT_FOUND: 10010, ERR_SVR_GROUP_INVALID_GROUPID: 10015, ERR_SVR_GROUP_REJECT_FROM_THIRDPARTY: 10016, ERR_SVR_GROUP_SHUTUP_DENY: 10017, MESSAGE_SEND_FAIL: 2100, OVER_FREQUENCY_LIMIT: 2996 }, LI = [dh.MESSAGE_ONPROGRESS_FUNCTION_ERROR, dh.MESSAGE_IMAGE_SELECT_FILE_FIRST, dh.MESSAGE_IMAGE_TYPES_LIMIT, dh.MESSAGE_FILE_IS_EMPTY, dh.MESSAGE_IMAGE_SIZE_LIMIT, dh.MESSAGE_FILE_SELECT_FILE_FIRST, dh.MESSAGE_FILE_SIZE_LIMIT, dh.MESSAGE_VIDEO_SIZE_LIMIT, dh.MESSAGE_VIDEO_TYPES_LIMIT, dh.MESSAGE_AUDIO_UPLOAD_FAIL, dh.MESSAGE_AUDIO_SIZE_LIMIT, dh.COS_UNDETECTED];
    function GI(e3) {
      var t3 = false;
      return Object.values(OI).includes(e3) && (t3 = true), (e3 >= 120001 && e3 <= 13e4 || e3 >= 10100 && e3 <= 10200) && (t3 = true), t3;
    }
    var PI, UI = function(e3) {
      i2(r3, e3);
      var n3 = _2(r3);
      function r3(e4) {
        var t3;
        return o2(this, r3), (t3 = n3.call(this, e4))._className = "MessageModule", t3._messageOptionsMap = /* @__PURE__ */ new Map(), t3._mergerMessageHandler = new RI(h2(t3)), t3;
      }
      return a2(r3, [{ key: "createTextMessage", value: function(e4) {
        var t3 = this.getMyUserID();
        e4.currentUser = t3, e4.senderTinyID = this.getMyTinyID();
        var n4 = new bM(e4), o3 = "string" == typeof e4.payload ? e4.payload : e4.payload.text, r4 = new x_({ text: o3 }), a3 = this._getNickAndAvatarByUserID(t3);
        return n4.setElement(r4), n4.setNickAndAvatar(a3), n4.setNameCard(this._getNameCardByGroupID(n4)), n4;
      } }, { key: "_fileUnsupportedWarning", value: function(e4) {
        this.isIntl() || wl.warn("\u5C0F\u7A0B\u5E8F\u73AF\u5883\u4E0B\u8C03\u7528 ".concat(e4, " \u63A5\u53E3\u65F6\uFF0Cpayload.file \u4E0D\u652F\u6301\u4F20\u5165 File \u5BF9\u8C61"));
      } }, { key: "createImageMessage", value: function(e4) {
        var t3 = this.getMyUserID();
        e4.currentUser = t3, e4.senderTinyID = this.getMyTinyID();
        var n4 = new bM(e4);
        if (tl) {
          var o3 = e4.payload.file;
          if (zl(o3))
            return void this._fileUnsupportedWarning("createImageMessage");
          var r4 = o3.tempFiles[0].path || o3.tempFiles[0].tempFilePath, a3 = { url: r4, name: r4.slice(r4.lastIndexOf("/") + 1), size: o3.tempFiles && o3.tempFiles[0].size || 1, type: r4.slice(r4.lastIndexOf(".") + 1).toLowerCase() };
          e4.payload.file = a3;
        } else if (nl) {
          if (zl(e4.payload.file)) {
            var s3 = e4.payload.file;
            e4.payload.file = { files: [s3] };
          } else if (Zl(e4.payload.file) && "undefined" != typeof index$1) {
            var i3 = e4.payload.file.tempFiles[0];
            e4.payload.file = { files: [i3] };
          }
        }
        var u3 = new mM({ imageFormat: Fl.UNKNOWN, uuid: this._generateUUID(), file: e4.payload.file }), c3 = this._getNickAndAvatarByUserID(t3);
        return n4.setElement(u3), n4.setNickAndAvatar(c3), n4.setNameCard(this._getNameCardByGroupID(n4)), this._messageOptionsMap.set(n4.clientSequence, e4), n4;
      } }, { key: "createAudioMessage", value: function(e4) {
        var t3 = e4.payload.file;
        if (tl) {
          var n4 = { url: t3.tempFilePath, name: t3.tempFilePath.slice(t3.tempFilePath.lastIndexOf("/") + 1), size: t3.fileSize, second: parseInt(t3.duration) / 1e3, type: t3.tempFilePath.slice(t3.tempFilePath.lastIndexOf(".") + 1).toLowerCase() };
          e4.payload.file = n4;
        }
        var o3 = this.getMyUserID();
        e4.currentUser = o3, e4.senderTinyID = this.getMyTinyID();
        var r4 = new bM(e4), a3 = new MM({ second: Math.floor(t3.duration / 1e3), size: t3.fileSize || t3.size, url: t3.tempFilePath, uuid: this._generateUUID() }), s3 = this._getNickAndAvatarByUserID(o3);
        return r4.setElement(a3), r4.setNickAndAvatar(s3), r4.setNameCard(this._getNameCardByGroupID(r4)), this._messageOptionsMap.set(r4.clientSequence, e4), r4;
      } }, { key: "createVideoMessage", value: function(e4) {
        var t3 = this.getMyUserID();
        e4.currentUser = t3, e4.senderTinyID = this.getMyTinyID(), e4.payload.file.thumbUrl = "https://web.sdk.qcloud.com/im/assets/images/transparent.png", e4.payload.file.thumbSize = 1668;
        var n4 = {};
        if (tl) {
          if (Qc)
            return void wl.warn("createVideoMessage \u4E0D\u652F\u6301\u5728\u652F\u4ED8\u5B9D\u5C0F\u7A0B\u5E8F\u73AF\u5883\u4E0B\u4F7F\u7528");
          if (zl(e4.payload.file))
            return void this._fileUnsupportedWarning("createVideoMessage");
          var o3 = e4.payload.file;
          ed(o3.tempFiles) && (o3 = o3.tempFiles[0]), n4.url = o3.tempFilePath, n4.name = o3.tempFilePath.slice(o3.tempFilePath.lastIndexOf("/") + 1), n4.size = o3.size, n4.second = o3.duration, n4.type = o3.tempFilePath.slice(o3.tempFilePath.lastIndexOf(".") + 1).toLowerCase();
        } else if (nl) {
          if (zl(e4.payload.file)) {
            var r4 = e4.payload.file;
            e4.payload.file.files = [r4];
          } else if (Zl(e4.payload.file) && "undefined" != typeof index$1) {
            var a3 = e4.payload.file.tempFile;
            e4.payload.file.files = [a3];
          }
          var s3 = e4.payload.file;
          n4.url = window.URL.createObjectURL(s3.files[0]), n4.name = s3.files[0].name, n4.size = s3.files[0].size, n4.second = s3.files[0].duration || 0, n4.type = s3.files[0].type.split("/")[1];
        }
        e4.payload.file.videoFile = n4;
        var i3 = new bM(e4), u3 = new OM({ videoFormat: n4.type, videoSecond: Ud(n4.second, 0), videoSize: n4.size, remoteVideoUrl: "", videoUrl: n4.url, videoUUID: this._generateUUID(), thumbUUID: this._generateUUID(), thumbWidth: e4.payload.file.width || 200, thumbHeight: e4.payload.file.height || 200, thumbUrl: e4.payload.file.thumbUrl, thumbSize: e4.payload.file.thumbSize, thumbFormat: e4.payload.file.thumbUrl.slice(e4.payload.file.thumbUrl.lastIndexOf(".") + 1).toLowerCase() }), c3 = this._getNickAndAvatarByUserID(t3);
        return i3.setElement(u3), i3.setNickAndAvatar(c3), i3.setNameCard(this._getNameCardByGroupID(i3)), this._messageOptionsMap.set(i3.clientSequence, e4), i3;
      } }, { key: "createCustomMessage", value: function(e4) {
        var t3 = this.getMyUserID();
        e4.currentUser = t3, e4.senderTinyID = this.getMyTinyID();
        var n4 = new bM(e4), o3 = new RM({ data: e4.payload.data, description: e4.payload.description, extension: e4.payload.extension }), r4 = this._getNickAndAvatarByUserID(t3);
        return n4.setElement(o3), n4.setNickAndAvatar(r4), n4.setNameCard(this._getNameCardByGroupID(n4)), n4;
      } }, { key: "createFaceMessage", value: function(e4) {
        var t3 = this.getMyUserID();
        e4.currentUser = t3, e4.senderTinyID = this.getMyTinyID();
        var n4 = new bM(e4), o3 = new vM(e4.payload), r4 = this._getNickAndAvatarByUserID(t3);
        return n4.setElement(o3), n4.setNickAndAvatar(r4), n4.setNameCard(this._getNameCardByGroupID(n4)), n4;
      } }, { key: "createMergerMessage", value: function(e4) {
        var t3 = this.getMyUserID();
        e4.currentUser = t3, e4.senderTinyID = this.getMyTinyID();
        var n4 = this._getNickAndAvatarByUserID(t3), o3 = new bM(e4), r4 = new PM(e4.payload);
        return o3.setElement(r4), o3.setNickAndAvatar(n4), o3.setNameCard(this._getNameCardByGroupID(o3)), o3.setRelayFlag(true), o3;
      } }, { key: "createForwardMessage", value: function(e4) {
        var t3 = e4.to, n4 = e4.conversationType, o3 = e4.priority, r4 = e4.payload, a3 = e4.needReadReceipt, s3 = e4.receiverList, i3 = this.getMyUserID(), u3 = this._getNickAndAvatarByUserID(i3);
        if (r4.type === gr.MSG_GRP_TIP)
          return YM({ code: dh.MESSAGE_FORWARD_TYPE_INVALID });
        var c3 = { to: t3, conversationType: n4, conversationID: "".concat(n4).concat(t3), priority: o3, isPlaceMessage: 0, status: Vp.UNSEND, currentUser: i3, senderTinyID: this.getMyTinyID(), cloudCustomData: e4.cloudCustomData || r4.cloudCustomData || "", needReadReceipt: a3, receiverList: s3, isSupportExtension: e4.isSupportExtension || false }, l3 = new bM(c3);
        return l3.setElement(r4.getElements()[0]), l3.setNickAndAvatar(u3), l3.setNameCard(this._getNameCardByGroupID(r4)), l3.setRelayFlag(true), l3;
      } }, { key: "downloadMergerMessage", value: function(e4) {
        return this._mergerMessageHandler.downloadMergerMessage(e4);
      } }, { key: "createFileMessage", value: function(e4) {
        if (tl) {
          var n4, o3 = "createFileMessage \u63A5\u53E3\u4E0D\u53EF\u7528\uFF01";
          if (!$c && !zc && !Zc)
            return void wl.warn("\u5C0F\u7A0B\u5E8F\u76EE\u524D\u4E0D\u652F\u6301\u9009\u62E9\u6587\u4EF6\uFF0C".concat(o3));
          var r4 = ol.getSystemInfoSync().SDKVersion;
          if ($c && Od(r4, n4 = "2.5.0") < 0)
            return void wl.warn("wx.chooseMessageFile \u9700\u8981\u57FA\u7840\u5E93".concat(n4, "\u6216\u66F4\u9AD8\u7248\u672C\uFF0C").concat(o3));
          if (zc && Od(r4, n4 = "1.18.0") < 0)
            return void wl.warn("qq.chooseMessageFile \u9700\u8981\u57FA\u7840\u5E93".concat(n4, "\u6216\u66F4\u9AD8\u7248\u672C\uFF0C").concat(o3));
        }
        if (nl || Zc) {
          if (zl(e4.payload.file)) {
            var a3 = e4.payload.file;
            e4.payload.file = { files: [a3] };
          } else if (Zl(e4.payload.file) && "undefined" != typeof index$1) {
            var s3 = e4.payload.file, i3 = s3.tempFiles, u3 = s3.files, c3 = null;
            ed(i3) ? c3 = i3[0] : ed(u3) && (c3 = u3[0]), e4.payload.file = { files: [c3] };
          }
        } else if ($c || zc) {
          var l3 = e4.payload.file.tempFiles, d3 = t2(t2({}, l3[0]), {}, { url: l3[0].path });
          e4.payload.file = { files: [d3] };
        }
        var p3 = this.getMyUserID();
        e4.currentUser = p3, e4.senderTinyID = this.getMyTinyID();
        var g3 = new bM(e4), h3 = new kM({ uuid: this._generateUUID(), file: e4.payload.file }), f3 = this._getNickAndAvatarByUserID(p3);
        return g3.setElement(h3), g3.setNickAndAvatar(f3), g3.setNameCard(this._getNameCardByGroupID(g3)), this._messageOptionsMap.set(g3.clientSequence, e4), g3;
      } }, { key: "createLocationMessage", value: function(e4) {
        var t3 = this.getMyUserID();
        e4.currentUser = t3, e4.senderTinyID = this.getMyTinyID();
        var n4 = new bM(e4), o3 = new LM(e4.payload), r4 = this._getNickAndAvatarByUserID(t3);
        return n4.setElement(o3), n4.setNickAndAvatar(r4), n4.setNameCard(this._getNameCardByGroupID(n4)), n4;
      } }, { key: "_onCannotFindModule", value: function() {
        return YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "sendMessageInstance", value: function(e4, t3) {
        var n4 = this;
        if (false === this.getModule(uh).filterMessage(e4))
          return this._onSendMessageFailed(e4, new KM({ code: dh.PROFANITY_FOUND }));
        var o3, r4 = null;
        switch (e4.conversationType) {
          case gr.CONV_C2C:
            if (!(r4 = this.getModule(qg)))
              return this._onCannotFindModule();
            break;
          case gr.CONV_GROUP:
            if (!(r4 = this.getModule(xg)))
              return this._onCannotFindModule();
            if (Td({ groupID: e4.to })) {
              var a3 = r4.getLocalGroupProfile(e4.to);
              if (a3 && a3.isSupportTopic)
                return YM({ code: dh.MESSAGE_SEND_GROUP_WITH_TOPIC_FAIL });
            }
            break;
          default:
            return YM({ code: dh.MESSAGE_SEND_INVALID_CONVERSATION_TYPE });
        }
        var s3 = this.getModule(Jg), i3 = this.getModule(xg);
        return s3.upload(e4).then(function() {
          n4._getSendMessageSpecifiedKey(e4) === E_ && n4.getModule(ah).addSuccessCount(S_);
          return i3.guardForAVChatRoom(e4).then(function() {
            if (!e4.isSendable())
              return YM({ code: dh.MESSAGE_FILE_URL_IS_EMPTY });
            n4._addSendMessageTotalCount(e4), o3 = Date.now();
            var a4 = function(e5) {
              var t4 = "utf-8";
              nl && document && (t4 = document.charset.toLowerCase());
              var n5, o4, r5 = 0;
              if (o4 = e5.length, "utf-8" === t4 || "utf8" === t4)
                for (var a5 = 0; a5 < o4; a5++)
                  (n5 = e5.codePointAt(a5)) <= 127 ? r5 += 1 : n5 <= 2047 ? r5 += 2 : n5 <= 65535 ? r5 += 3 : (r5 += 4, a5++);
              else if ("utf-16" === t4 || "utf16" === t4)
                for (var s4 = 0; s4 < o4; s4++)
                  (n5 = e5.codePointAt(s4)) <= 65535 ? r5 += 2 : (r5 += 4, s4++);
              else
                r5 = e5.replace(/[^\x00-\xff]/g, "aa").length;
              return r5;
            }(JSON.stringify(e4));
            return e4.type === gr.MSG_MERGER && a4 > 11264 ? n4._mergerMessageHandler.uploadMergerMessage(e4, a4).then(function(o4) {
              var r5 = n4._mergerMessageHandler.createMergerMessagePack(e4, t3, o4);
              return n4.request(r5);
            }) : (n4.getModule(Hg).setMessageRandom(e4), e4.conversationType === gr.CONV_C2C || e4.conversationType === gr.CONV_GROUP ? r4.sendMessage(e4, t3) : void 0);
          }).then(function(a4) {
            var s4 = a4.data, i4 = s4.time, u3 = s4.sequence, c3 = s4.readReceiptCode;
            Jl(c3) && 0 !== c3 && (new G_(P_.SEND_MESSAGE_WITH_RECEIPT).setMessage("from:".concat(e4.from, " to:").concat(e4.to, " sequence:").concat(u3, " readReceiptCode:").concat(c3)).end(), wl.warn("".concat(n4._className, ".sendMessageInstance readReceiptCode:").concat(c3, " message:").concat(BM[c3])));
            n4._addSendMessageSuccessCount(e4, o3), n4._messageOptionsMap.delete(e4.clientSequence);
            var l3 = n4.getModule(Hg);
            e4.status = Vp.SUCCESS, e4.time = i4;
            var d3 = false;
            if (e4.conversationType === gr.CONV_GROUP)
              e4.sequence = u3;
            else if (e4.conversationType === gr.CONV_C2C) {
              var p3 = l3.getLatestMessageSentByMe(e4.conversationID);
              if (p3) {
                var g3 = p3.nick, h3 = p3.avatar;
                g3 === e4.nick && h3 === e4.avatar || (d3 = true);
              }
            }
            if (d3 && l3.modifyMessageSentByMe({ conversationID: e4.conversationID, latestNick: e4.nick, latestAvatar: e4.avatar }), r4.isOnlineMessage(e4, t3))
              e4._onlineOnlyFlag = true;
            else {
              l3.appendToMessageList(e4);
              var f3 = e4;
              Zl(t3) && Zl(t3.messageControlInfo) && (true === t3.messageControlInfo.excludedFromLastMessage && (e4._isExcludedFromLastMessage = true, f3 = ""), true === t3.messageControlInfo.excludedFromUnreadCount && (e4._isExcludedFromUnreadCount = true));
              var _3 = e4.conversationType;
              if (Cd(e4.to))
                _3 = gr.CONV_TOPIC, n4.getModule(Kg).onMessageSent({ groupID: Fd(e4.to), topicID: e4.to, lastMessage: f3 });
              l3.onMessageSent({ conversationOptionsList: [{ conversationID: e4.conversationID, unreadCount: 0, type: _3, subType: e4.conversationSubType, lastMessage: f3 }] });
            }
            return e4.getRelayFlag() || "TIMImageElem" !== e4.type || Gd(e4.payload.imageInfoArray), wM({ message: e4 });
          });
        }).catch(function(t4) {
          return n4._onSendMessageFailed(e4, t4);
        });
      } }, { key: "_onSendMessageFailed", value: function(e4, t3) {
        e4.status = Vp.FAIL, this.getModule(Hg).deleteMessageRandom(e4), this._addSendMessageFailCountOnUser(e4, t3);
        var n4 = new G_(P_.SEND_MESSAGE);
        return n4.setMessage("tjg_id:".concat(this.generateTjgID(e4), " type:").concat(e4.type, " from:").concat(e4.from, " to:").concat(e4.to)), this.probeNetwork().then(function(e5) {
          var o3 = m2(e5, 2), r4 = o3[0], a3 = o3[1];
          n4.setError(t3, r4, a3).end();
        }), wl.error("".concat(this._className, "._onSendMessageFailed error:"), t3), YM(new KM({ code: t3 && t3.code ? t3.code : dh.MESSAGE_SEND_FAIL, message: t3 && t3.message ? t3.message : void 0, data: { message: e4 } }));
      } }, { key: "_getSendMessageSpecifiedKey", value: function(e4) {
        if ([gr.MSG_IMAGE, gr.MSG_AUDIO, gr.MSG_VIDEO, gr.MSG_FILE].includes(e4.type))
          return E_;
        if (e4.conversationType === gr.CONV_C2C)
          return I_;
        if (e4.conversationType === gr.CONV_GROUP) {
          var t3 = this.getModule(xg).getLocalGroupProfile(e4.to);
          if (!t3)
            return;
          var n4 = t3.type;
          return Id(n4) ? C_ : T_;
        }
      } }, { key: "_addSendMessageTotalCount", value: function(e4) {
        var t3 = this._getSendMessageSpecifiedKey(e4);
        t3 && this.getModule(ah).addTotalCount(t3);
      } }, { key: "_addSendMessageSuccessCount", value: function(e4, t3) {
        var n4 = Math.abs(Date.now() - t3), o3 = this._getSendMessageSpecifiedKey(e4);
        if (o3) {
          var r4 = this.getModule(ah);
          r4.addSuccessCount(o3), r4.addCost(o3, n4);
        }
      } }, { key: "_addSendMessageFailCountOnUser", value: function(e4, t3) {
        var n4, o3, r4 = t3.code, a3 = void 0 === r4 ? -1 : r4, s3 = this.getModule(ah), i3 = this._getSendMessageSpecifiedKey(e4);
        i3 === E_ && (n4 = a3, o3 = false, LI.includes(n4) && (o3 = true), o3) ? s3.addFailedCountOfUserSide(S_) : GI(a3) && i3 && s3.addFailedCountOfUserSide(i3);
      } }, { key: "resendMessage", value: function(e4) {
        return e4.isResend = true, e4.status = Vp.UNSEND, this.sendMessageInstance(e4);
      } }, { key: "revokeMessage", value: function(e4) {
        var t3 = this, n4 = null;
        if (e4.conversationType === gr.CONV_C2C) {
          if (!(n4 = this.getModule(qg)))
            return this._onCannotFindModule();
        } else if (e4.conversationType === gr.CONV_GROUP && !(n4 = this.getModule(xg)))
          return this._onCannotFindModule();
        var o3 = new G_(P_.REVOKE_MESSAGE);
        return o3.setMessage("tjg_id:".concat(this.generateTjgID(e4), " type:").concat(e4.type, " from:").concat(e4.from, " to:").concat(e4.to)), n4.revokeMessage(e4).then(function(n5) {
          var r4 = n5.data.recallRetList;
          if (!Wd(r4) && 0 !== r4[0].retCode) {
            var a3 = new KM({ code: r4[0].retCode, data: { message: e4 } });
            return o3.setCode(a3.code).setMoreMessage(a3.message).end(), YM(a3);
          }
          return wl.info("".concat(t3._className, ".revokeMessage ok. ID:").concat(e4.ID)), e4.isRevoked = true, o3.end(), t3.getModule(Hg).onMessageRevoked([e4]), wM({ message: e4 });
        }).catch(function(n5) {
          t3.probeNetwork().then(function(e5) {
            var t4 = m2(e5, 2), r5 = t4[0], a3 = t4[1];
            o3.setError(n5, r5, a3).end();
          });
          var r4 = new KM({ code: n5 && n5.code ? n5.code : dh.MESSAGE_REVOKE_FAIL, message: n5 && n5.message ? n5.message : void 0, data: { message: e4 } });
          return wl.warn("".concat(t3._className, ".revokeMessage failed. error:"), n5), YM(r4);
        });
      } }, { key: "deleteMessage", value: function(e4) {
        var t3 = this, n4 = null, o3 = e4[0], r4 = o3.conversationID, a3 = "", s3 = [], i3 = [];
        if (o3.conversationType === gr.CONV_C2C)
          n4 = this.getModule(qg), a3 = r4.replace(gr.CONV_C2C, ""), e4.forEach(function(e5) {
            e5 && e5.status === Vp.SUCCESS && e5.conversationID === r4 && (e5._onlineOnlyFlag || s3.push("".concat(e5.sequence, "_").concat(e5.random, "_").concat(e5.time)), i3.push(e5));
          });
        else if (o3.conversationType === gr.CONV_GROUP)
          n4 = this.getModule(xg), a3 = r4.replace(gr.CONV_GROUP, ""), e4.forEach(function(e5) {
            e5 && e5.status === Vp.SUCCESS && e5.conversationID === r4 && (e5._onlineOnlyFlag || s3.push("".concat(e5.sequence)), i3.push(e5));
          });
        else if (o3.conversationType === gr.CONV_SYSTEM)
          return YM({ code: dh.CANNOT_DELETE_GROUP_SYSTEM_NOTICE });
        if (!n4)
          return this._onCannotFindModule();
        if (0 === s3.length)
          return this._onMessageDeleted(i3);
        s3.length > 30 && (s3 = s3.slice(0, 30), i3 = i3.slice(0, 30));
        var u3 = new G_(P_.DELETE_MESSAGE);
        return u3.setMessage("to:".concat(a3, " count:").concat(s3.length)), n4.deleteMessage({ to: a3, keyList: s3 }).then(function(e5) {
          return u3.end(), wl.info("".concat(t3._className, ".deleteMessage ok")), t3._onMessageDeleted(i3);
        }).catch(function(e5) {
          t3.probeNetwork().then(function(t4) {
            var n6 = m2(t4, 2), o4 = n6[0], r5 = n6[1];
            u3.setError(e5, o4, r5).end();
          }), wl.warn("".concat(t3._className, ".deleteMessage failed. error:"), e5);
          var n5 = new KM({ code: e5 && e5.code ? e5.code : dh.MESSAGE_DELETE_FAIL, message: e5 && e5.message ? e5.message : void 0 });
          return YM(n5);
        });
      } }, { key: "_onMessageDeleted", value: function(e4) {
        return this.getModule(Hg).onMessageDeleted(e4), WM({ messageList: e4 });
      } }, { key: "translateText", value: function(e4) {
        var n4 = "".concat(this._className, ".translateText"), o3 = e4.sourceTextList, r4 = e4.sourceLanguage, a3 = e4.targetLanguage, s3 = new G_(P_.TRANSLATE_MESSAGE);
        return s3.setMessage("sourceLanguage:".concat(r4, " targetLanguage:").concat(a3)), this.request({ protocolName: v_, requestData: { sourceTextList: o3, source: r4 || "auto", target: a3, from: this.getMyTinyID(), SDKAppID: this.getSDKAppID() } }).then(function(e5) {
          var o4 = e5.data, r5 = o4.error, a4 = o4.requestID, i3 = o4.translatedTextList;
          if (0 === r5.code)
            return s3.end(), wl.info("".concat(n4, " ok. requestID:").concat(a4)), wM({ translatedTextList: i3 });
          throw t2(t2({}, r5), {}, { requestID: a4 });
        }).catch(function(e5) {
          return s3.setCode(e5.code).setMoreMessage(e5.requestID).end(), wl.warn("".concat(n4, " failed. error:"), e5), YM({ code: dh.TRANSLATE_TEXT_FAIL });
        });
      } }, { key: "modifyRemoteMessage", value: function(e4) {
        var t3 = this, n4 = null, o3 = e4.conversationType, r4 = e4.to;
        if (this.getModule(xg).isMessageFromOrToAVChatroom(r4))
          return YM({ code: dh.MESSAGE_MODIFY_DISABLED_IN_AVCHATROOM, data: { message: e4 } });
        if (false === this.getModule(uh).filterMessage(e4))
          return YM({ code: dh.PROFANITY_FOUND, data: { message: e4 } });
        o3 === gr.CONV_C2C ? n4 = this.getModule(qg) : o3 === gr.CONV_GROUP && (n4 = this.getModule(xg));
        var a3 = new G_(P_.MODIFY_MESSAGE);
        return a3.setMessage("to:".concat(r4)), n4.modifyRemoteMessage(e4).then(function(n5) {
          a3.end(), wl.info("".concat(t3._className, ".modifyRemoteMessage ok"));
          var o4 = t3._onModifyRemoteMessageResp(e4, n5.data);
          return wM({ message: o4 });
        }).catch(function(n5) {
          if (a3.setCode(n5.code).setMoreMessage(n5.message).end(), wl.warn("".concat(t3._className, ".modifyRemoteMessage failed. error:"), n5), 20027 === n5.code) {
            var o4 = t3._onModifyRemoteMessageResp(e4, n5.data);
            return YM({ code: dh.MESSAGE_MODIFY_CONFLICT, data: { message: o4 } });
          }
          return YM({ code: n5.code, message: n5.message, data: { message: e4 } });
        });
      } }, { key: "_onModifyRemoteMessageResp", value: function(e4, t3) {
        wl.debug("".concat(this._className, "._onModifyRemoteMessageResp options:"), t3);
        var n4 = e4.conversationType, o3 = e4.from, r4 = e4.to, a3 = e4.random, s3 = e4.sequence, i3 = e4.time, u3 = t3.elements, c3 = t3.messageVersion, l3 = t3.cloudCustomData, d3 = void 0 === l3 ? "" : l3;
        return this.getModule(Hg).onMessageModified({ conversationType: n4, from: o3, to: r4, time: i3, random: a3, sequence: s3, elements: u3, cloudCustomData: d3, messageVersion: c3 });
      } }, { key: "_generateUUID", value: function() {
        var e4 = this.getModule(jg);
        return "".concat(e4.getSDKAppID(), "-").concat(e4.getUserID(), "-").concat(function() {
          for (var e5 = "", t3 = 32; t3 > 0; --t3)
            e5 += gd[Math.floor(Math.random() * hd)];
          return e5;
        }());
      } }, { key: "getMessageOption", value: function(e4) {
        return this._messageOptionsMap.get(e4);
      } }, { key: "_getNickAndAvatarByUserID", value: function(e4) {
        return this.getModule(Fg).getNickAndAvatarByUserID(e4);
      } }, { key: "_getNameCardByGroupID", value: function(e4) {
        if (e4.conversationType === gr.CONV_GROUP) {
          var t3 = this.getModule(xg);
          if (t3)
            return t3.getMyNameCardByGroupID(e4.to);
        }
        return "";
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._messageOptionsMap.clear();
      } }]), r3;
    }(hh), bI = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        return o2(this, n3), (r3 = t3.call(this, e4))._className = "MessageExtensionModule", r3.messageExtensionMap = /* @__PURE__ */ new Map(), r3.globalSeqMap = /* @__PURE__ */ new Map(), r3.getMessageExtensionsMap = /* @__PURE__ */ new Map(), r3;
      }
      return a2(n3, [{ key: "onMessageExtensionNotify", value: function(e4) {
        var t4 = this, n4 = e4.dataList, o3 = n4.messageInfo, r3 = n4.operateType, a3 = n4.operateResultList, s3 = n4.tinyID, i3 = n4.globalSequence, u3 = o3.clientTime, c3 = o3.random, l3 = "".concat(s3, "-").concat(u3, "-").concat(c3), d3 = [], p3 = [];
        wl.log("".concat(this._className, ".onMessageExtensionNotify messageID:").concat(l3, " operateType:").concat(r3, " globalSequence:").concat(i3)), this._updateGlobalSequence(l3, i3);
        var g3 = false, h3 = false;
        a3.forEach(function(e5) {
          var n5 = e5.extensions, o4 = void 0 === n5 ? [] : n5, a4 = e5.clearSequence;
          if (1 === r3)
            g3 = true, o4.forEach(function(e6) {
              d3.push({ key: e6.key, value: e6.value });
            }), t4._updateLocalExtension(l3, o4);
          else if (2 === r3)
            h3 = true, o4.forEach(function(e6) {
              p3.push(e6.key);
            }), t4._updateLocalExtension(l3, o4);
          else if (3 === r3) {
            if (h3 = true, t4._hasLocalExtension(l3))
              t4._getLocalExtension(l3).forEach(function(e6, t5) {
                e6.seq <= a4 && !Wd(e6.value) && p3.push(t5);
              });
            t4._clearLocalExtension(l3, a4);
          }
        }), g3 && this.emitOuterEvent(pr.MESSAGE_EXTENSIONS_UPDATED, { messageID: l3, extensions: d3 }), h3 && this.emitOuterEvent(pr.MESSAGE_EXTENSIONS_DELETED, { messageID: l3, keyList: p3 });
      } }, { key: "setMessageExtensions", value: function(e4, t4) {
        var n4 = this;
        if (!this.canIUse(wc.MSG_EXT))
          return YM({ code: dh.CANNOT_USE_COMMERCIAL_ABILITY });
        var o3 = "".concat(this._className, ".setMessageExtensions"), r3 = e4.ID, a3 = e4.conversationID, s3 = e4.sequence, i3 = e4.time, u3 = v2(t4);
        t4.length > 20 && (u3 = t4.slice(0, 20), wl.warn("".concat(o3, ". the length of extensions cannot exceed 20.")));
        var c3 = "conversationID:".concat(a3, " messageID:").concat(r3, " sequence:").concat(s3, " time:").concat(i3, " count:").concat(u3.length), l3 = new G_(P_.SET_MESSAGE_EXTENSIONS);
        return l3.setMessage(c3), wl.log("".concat(o3, " ").concat(c3)), this._modifyMessageExtensions(e4, u3).then(function(e5) {
          var t5 = e5.resultList, n5 = e5.successCount, r4 = e5.failureCount, a4 = "success count:".concat(n5, " fail count:").concat(r4);
          return l3.setMoreMessage(a4).end(), wl.log("".concat(o3, " ok. ").concat(a4)), wM({ extensions: t5 });
        }).catch(function(e5) {
          return n4.probeNetwork().then(function(t5) {
            var n5 = m2(t5, 2), o4 = n5[0], r4 = n5[1];
            l3.setError(e5, o4, r4).end();
          }), wl.error("".concat(o3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "getMessageExtensions", value: function(e4) {
        var t4 = this;
        if (!this.canIUse(wc.MSG_EXT))
          return YM({ code: dh.CANNOT_USE_COMMERCIAL_ABILITY });
        var n4 = "".concat(this._className, ".getMessageExtensions"), o3 = e4.ID, r3 = e4.conversationID, a3 = e4.sequence, s3 = e4.time, i3 = "conversationID:".concat(r3, " messageID:").concat(o3, " sequence:").concat(a3, " time:").concat(s3), u3 = new G_(P_.GET_MESSAGE_EXTENSIONS);
        u3.setMessage(i3), wl.log("".concat(n4, " ").concat(i3));
        var c3 = void 0;
        return this.getMessageExtensionsMap.has(o3) && (c3 = this._getGlobalSequence(o3)), this._getMessageExtensions(e4, c3).then(function(e5) {
          return u3.end(), wl.log("".concat(n4, " ok. total count:").concat(e5.length)), td(c3) && e5.length > 0 && t4.getMessageExtensionsMap.set(o3, 1), wM({ extensions: e5 });
        }).catch(function(e5) {
          return t4.probeNetwork().then(function(t5) {
            var n5 = m2(t5, 2), o4 = n5[0], r4 = n5[1];
            u3.setError(e5, o4, r4).end();
          }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "deleteMessageExtensions", value: function(e4, t4) {
        var n4 = this;
        if (!this.canIUse(wc.MSG_EXT))
          return YM({ code: dh.CANNOT_USE_COMMERCIAL_ABILITY });
        var o3 = "".concat(this._className, ".deleteMessageExtensions"), r3 = [], a3 = 3;
        Wd(t4) || (a3 = 2, t4.forEach(function(e5) {
          r3.push({ key: e5, value: "", seq: 0 });
        }));
        var s3 = e4.ID, i3 = e4.conversationID, u3 = e4.sequence, c3 = e4.time, l3 = "conversationID:".concat(i3, " messageID:").concat(s3, " sequence:").concat(u3, " time:").concat(c3, " operateType:").concat(a3), d3 = new G_(P_.DELETE_MESSAGE_EXTENSIONS);
        return d3.setMessage(l3), wl.log("".concat(o3, " ").concat(l3)), this._modifyMessageExtensions(e4, r3, a3).then(function(e5) {
          var t5 = e5.resultList, n5 = e5.successCount, r4 = e5.failureCount, s4 = "";
          return 2 === a3 && (s4 = "success count:".concat(n5, " fail count:").concat(r4)), d3.setMoreMessage("".concat(s4)).end(), wl.log("".concat(o3, " ok. ").concat(s4)), wM({ extensions: t5 });
        }).catch(function(e5) {
          return n4.probeNetwork().then(function(t5) {
            var n5 = m2(t5, 2), o4 = n5[0], r4 = n5[1];
            d3.setError(e5, o4, r4).end();
          }), wl.error("".concat(o3, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "_modifyMessageExtensions", value: function(e4, t4) {
        var n4 = this, o3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1, r3 = e4.conversationType, a3 = void 0;
        3 !== o3 && (a3 = this._getRequestExtensions(e4, t4));
        var s3 = null;
        switch (r3) {
          case gr.CONV_C2C:
            s3 = this.getModule(qg);
            break;
          case gr.CONV_GROUP:
            s3 = this.getModule(xg);
            break;
          default:
            return YM({ code: dh.CANNOT_FIND_MODULE });
        }
        return s3.modifyMessageExtensions(e4, a3, o3).then(function(t5) {
          var o4 = t5.data, r4 = o4.extensions, a4 = o4.seq, s4 = [], i3 = 0, u3 = 0, c3 = [];
          return (r4 = Wd(r4) ? [] : r4).forEach(function(e5) {
            var t6 = e5.errorCode, n5 = e5.extension, o5 = n5.key, r5 = n5.value, a5 = n5.seq;
            s4.push({ code: t6, key: o5, value: r5 }), 0 === t6 ? i3++ : u3++, c3.push({ key: o5, value: r5, seq: a5 });
          }), n4._updateGlobalSequence(e4.ID, a4), c3.length > 0 && (n4._updateLocalExtension(e4.ID, c3), c3 = null), { resultList: s4, successCount: i3, failureCount: u3 };
        }).catch(function(e5) {
          return YM(e5);
        });
      } }, { key: "_getRequestExtensions", value: function(e4, t4) {
        var n4 = [];
        if (this._hasLocalExtension(e4.ID)) {
          var o3 = this._getLocalExtension(e4.ID);
          return t4.forEach(function(e5) {
            var t5 = e5.key, r3 = e5.value, a3 = 0;
            o3.has(t5) && (a3 = o3.get(t5).seq), n4.push({ key: t5, value: r3, seq: a3 });
          }), n4;
        }
        return t4.forEach(function(e5) {
          var t5 = e5.key, o4 = e5.value;
          n4.push({ key: t5, value: o4, seq: 0 });
        }), n4;
      } }, { key: "_getMessageExtensions", value: function(e4, t4) {
        var n4 = this, o3 = "".concat(this._className, "._getMessageExtensions"), r3 = e4.ID, a3 = null;
        switch (e4.conversationType) {
          case gr.CONV_C2C:
            a3 = this.getModule(qg);
            break;
          case gr.CONV_GROUP:
            a3 = this.getModule(xg);
            break;
          default:
            return YM({ code: dh.CANNOT_FIND_MODULE });
        }
        return a3.getMessageExtensions(e4, t4).then(function(t5) {
          var a4 = t5.data, s3 = a4.extensions, i3 = a4.completeFlag, u3 = a4.globalSequence, c3 = a4.clearSequence;
          if (s3 = Wd(s3) ? [] : s3, wl.log("".concat(o3, " ok. completeFlag:").concat(i3, " globalSequence:").concat(u3, " clearSequence:").concat(c3, " count:").concat(s3.length)), n4._updateLocalExtension(r3, s3), n4._clearLocalExtension(r3, c3), n4._updateGlobalSequence(r3, u3), 1 !== i3) {
            var l3 = s3.slice(-1)[0].seq + 1;
            return n4._getMessageExtensions(e4, l3);
          }
          return n4._getLocalExtensions(r3);
        }).catch(function(e5) {
          return YM(e5);
        });
      } }, { key: "_hasLocalExtension", value: function(e4) {
        return this.messageExtensionMap.has(e4);
      } }, { key: "_getLocalExtension", value: function(e4) {
        return this.messageExtensionMap.get(e4);
      } }, { key: "_updateLocalExtension", value: function(e4, t4) {
        this._hasLocalExtension(e4) || this.messageExtensionMap.set(e4, /* @__PURE__ */ new Map());
        var n4 = this._getLocalExtension(e4);
        t4.forEach(function(e5) {
          var t5 = e5.key, o3 = e5.value, r3 = void 0 === o3 ? "" : o3, a3 = e5.seq;
          n4.set(t5, { value: r3, seq: a3 });
        });
      } }, { key: "_clearLocalExtension", value: function(e4, t4) {
        if (!(t4 <= 0) && this._hasLocalExtension(e4)) {
          var n4 = this._getLocalExtension(e4);
          n4.forEach(function(e5, o3) {
            e5.seq <= t4 && n4.delete(o3);
          });
        }
      } }, { key: "_getLocalExtensions", value: function(e4) {
        var t4 = [];
        this._hasLocalExtension(e4) && this._getLocalExtension(e4).forEach(function(e5, n4) {
          var o3 = e5.value;
          Wd(o3) || t4.push({ key: n4, value: o3 });
        });
        return t4;
      } }, { key: "_getGlobalSequence", value: function(e4) {
        return this.globalSeqMap.get(e4);
      } }, { key: "_updateGlobalSequence", value: function(e4, t4) {
        this.globalSeqMap.set(e4, t4);
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this.messageExtensionMap.clear(), this.globalSeqMap.clear(), this.getMessageExtensionsMap.clear();
      } }]), n3;
    }(hh), wI = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        return o2(this, n3), (r3 = t3.call(this, e4))._className = "ComboMessageModule", r3;
      }
      return a2(n3, [{ key: "sendMessage", value: function(e4) {
        var t4 = this, n4 = this._constructMessageInstance(e4);
        if (null === n4)
          return YM({ code: dh.MESSAGE_SEND_FAIL });
        this._addSendMessageTotalCount(n4);
        var o3 = Date.now();
        return this.getModule(Hg).setMessageRandom(n4), this._sendComboMessage(n4, e4).then(function(e5) {
          var r3 = e5.data, a3 = r3.time, s3 = r3.sequence, i3 = r3.readReceiptCode;
          Jl(i3) && 0 !== i3 && (new G_(P_.SEND_MESSAGE_WITH_RECEIPT).setMessage("from:".concat(n4.from, " to:").concat(n4.to, " sequence:").concat(s3, " readReceiptCode:").concat(i3)).end(), wl.warn("".concat(t4._className, ".sendMessage readReceiptCode:").concat(i3, " message:").concat(BM[i3])));
          t4._addSendMessageSuccessCount(n4, o3);
          var u3 = t4.getModule(Hg);
          n4.status = Vp.SUCCESS, n4.time = a3, n4.conversationType === gr.CONV_GROUP && (n4.sequence = s3), u3.appendToMessageList(n4);
          var c3 = n4;
          return true === n4._isExcludedFromLastMessage && (c3 = ""), u3.onMessageSent({ conversationOptionsList: [{ conversationID: n4.conversationID, unreadCount: 0, type: n4.conversationType, subType: n4.conversationSubType, lastMessage: c3 }] }), wM({ message: n4 });
        }).catch(function(e5) {
          return t4._onSendMessageFailed(n4, e5);
        });
      } }, { key: "_sendComboMessage", value: function(e4, t4) {
        var n4 = this._moduleManager.getModule(Zg), o3 = "";
        return e4.conversationType === gr.CONV_C2C && (o3 = "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.SEND_MESSAGE)), e4.conversationType === gr.CONV_GROUP && (o3 = "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.SEND_GROUP_MESSAGE)), n4.sendComboMessage({ servcmd: o3, data: t4 });
      } }, { key: "_constructMessageInstance", value: function(e4) {
        var t4 = null;
        try {
          var n4 = this.getMyUserID(), o3 = {};
          if (o3.senderTinyID = this.getMyTinyID(), o3.currentUser = n4, o3.from = e4.From_Account || n4, e4.GroupId ? (o3.conversationID = "".concat(gr.CONV_GROUP).concat(e4.GroupId), o3.conversationType = gr.CONV_GROUP, o3.to = e4.GroupId) : e4.To_Account && (o3.conversationID = "".concat(gr.CONV_C2C).concat(e4.To_Account), o3.conversationType = gr.CONV_C2C, o3.to = e4.To_Account), o3.time = e4.MsgTimeStamp || 0, o3.random = e4.Random || e4.MsgRandom || 0, o3.priority = e4.MsgPriority, Xl(e4.CloudCustomData) && e4.CloudCustomData.length > 0 && (o3.cloudCustomData = e4.CloudCustomData), ed(e4.SendMsgControl) && (o3.messageControlInfo = {}, e4.SendMsgControl.includes("NoUnread") && (o3.messageControlInfo.excludedFromUnreadCount = 1), e4.SendMsgControl.includes("NoLastMsg") && (o3.messageControlInfo.excludedFromLastMessage = 1)), o3.conversationType === gr.CONV_GROUP && ed(e4.To_Account) && e4.To_Account.length > 0) {
            var r3 = e4.To_Account;
            e4.To_Account.length > 50 && (r3 = e4.To_Account.slice(0, 50), wl.warn("".concat(this._className, "._constructMessageInstance To_Account must be less than or equal to 50."))), o3.receiverList = v2(r3), e4.To_Account = v2(r3);
          }
          1 !== e4.IsNeedReadReceipt && 1 !== e4.NeedReadReceipt || (o3.needReadReceipt = true), 1 === e4.SupportMessageExtension && (o3.isSupportExtension = true), (t4 = new bM(o3)).status = Vp.UNSEND, e4.MsgClientTime = t4.clientTime, t4.conversationType === gr.CONV_C2C && (e4.MsgSeq = t4.sequence);
          for (var a3, s3 = e4.MsgBody.length, i3 = 0; i3 < s3; i3++)
            "TIMTextElem" === (a3 = e4.MsgBody[i3]).MsgType ? t4.setTextElement(a3.MsgContent.Text) : "TIMCustomElem" === a3.MsgType ? t4.setCustomElement({ data: a3.MsgContent.Data || "", description: a3.MsgContent.Desc || "", extension: a3.MsgContent.Ext || "" }) : "TIMFaceElem" === a3.MsgType && t4.setFaceElement({ index: a3.MsgContent.Index, data: a3.MsgContent.Data });
          var u3 = t4.getElements();
          t4.payload = u3[0].content, t4.type = u3[0].type;
        } catch (BS) {
          t4 = null, wl.error("".concat(this._className, "._constructMessageInstance failed. error:"), BS);
        }
        return t4;
      } }, { key: "_onSendMessageFailed", value: function(e4, t4) {
        e4.status = Vp.FAIL, this.getModule(Hg).deleteMessageRandom(e4), this._addSendMessageFailCountOnUser(e4, t4);
        var n4 = new G_(P_.SEND_MESSAGE);
        return n4.setMessage("tjg_id:".concat(this.generateTjgID(e4), " type:").concat(e4.type, " from:").concat(e4.from, " to:").concat(e4.to)), this.probeNetwork().then(function(e5) {
          var o3 = m2(e5, 2), r3 = o3[0], a3 = o3[1];
          n4.setError(t4, r3, a3).end();
        }), wl.error("".concat(this._className, "._onSendMessageFailed error:"), t4), YM(new KM({ code: t4 && t4.code ? t4.code : dh.MESSAGE_SEND_FAIL, message: t4 && t4.message ? t4.message : void 0, data: { message: e4 } }));
      } }, { key: "_getSendMessageSpecifiedKey", value: function(e4) {
        if (e4.conversationType === gr.CONV_C2C)
          return I_;
        if (e4.conversationType === gr.CONV_GROUP) {
          var t4 = this.getModule(xg).getLocalGroupProfile(e4.to);
          if (!t4)
            return;
          var n4 = t4.type;
          return Id(n4) ? C_ : T_;
        }
      } }, { key: "_addSendMessageTotalCount", value: function(e4) {
        var t4 = this._getSendMessageSpecifiedKey(e4);
        t4 && this.getModule(ah).addTotalCount(t4);
      } }, { key: "_addSendMessageSuccessCount", value: function(e4, t4) {
        var n4 = Math.abs(Date.now() - t4), o3 = this._getSendMessageSpecifiedKey(e4);
        if (o3) {
          var r3 = this.getModule(ah);
          r3.addSuccessCount(o3), r3.addCost(o3, n4);
        }
      } }, { key: "_addSendMessageFailCountOnUser", value: function(e4, t4) {
        var n4 = t4.code, o3 = void 0 === n4 ? -1 : n4, r3 = this.getModule(ah), a3 = this._getSendMessageSpecifiedKey(e4);
        GI(o3) && a3 && r3.addFailedCountOfUserSide(a3);
      } }]), n3;
    }(hh), FI = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        return o2(this, n3), (r3 = t3.call(this, e4))._className = "PluginModule", r3.plugins = {}, r3;
      }
      return a2(n3, [{ key: "registerPlugin", value: function(e4) {
        var t4 = this;
        Object.keys(e4).forEach(function(n4) {
          t4.plugins[n4] = e4[n4];
        }), new G_(P_.REGISTER_PLUGIN).setMessage("".concat(Object.keys(e4))).end();
      } }, { key: "getPlugin", value: function(e4) {
        return this.plugins[e4];
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset"));
      } }]), n3;
    }(hh), qI = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        return o2(this, n3), (r3 = t3.call(this, e4))._className = "SyncUnreadMessageModule", r3._cookie = "", r3._onlineSyncFlag = false, r3.getInnerEmitterInstance().on(ly, r3._onLoginSuccess, h2(r3)), r3;
      }
      return a2(n3, [{ key: "_onLoginSuccess", value: function(e4) {
        this._startSync({ cookie: this._cookie, syncFlag: 0, isOnlineSync: 0 });
      } }, { key: "_startSync", value: function(e4) {
        var t4 = this, n4 = e4.cookie, o3 = e4.syncFlag, r3 = e4.isOnlineSync;
        wl.log("".concat(this._className, "._startSync cookie:").concat(n4, " syncFlag:").concat(o3, " isOnlineSync:").concat(r3)), this.request({ protocolName: Mh, requestData: { cookie: n4, syncFlag: o3, isOnlineSync: r3 } }).then(function(e5) {
          var n5 = e5.data, o4 = n5.cookie, r4 = n5.syncFlag, a3 = n5.eventArray, s3 = n5.messageList, i3 = n5.C2CRemainingUnreadList, u3 = n5.C2CPairUnreadList;
          if (t4._cookie = o4, Wd(o4))
            ;
          else if (0 === r4 || 1 === r4) {
            if (a3)
              t4.getModule(Zg).onMessage({ head: {}, body: { eventArray: a3, isInstantMessage: t4._onlineSyncFlag, isSyncingEnded: false } });
            t4.getModule(qg).onNewC2CMessage({ dataList: s3, isInstantMessage: false, C2CRemainingUnreadList: i3, C2CPairUnreadList: u3 }), t4._startSync({ cookie: o4, syncFlag: r4, isOnlineSync: 0 });
          } else if (2 === r4) {
            if (a3)
              t4.getModule(Zg).onMessage({ head: {}, body: { eventArray: a3, isInstantMessage: t4._onlineSyncFlag, isSyncingEnded: true } });
            t4.getModule(qg).onNewC2CMessage({ dataList: s3, isInstantMessage: t4._onlineSyncFlag, C2CRemainingUnreadList: i3, C2CPairUnreadList: u3 });
          }
        }).catch(function(e5) {
          wl.error("".concat(t4._className, "._startSync failed. error:"), e5);
        });
      } }, { key: "startOnlineSync", value: function() {
        wl.log("".concat(this._className, ".startOnlineSync")), this._onlineSyncFlag = true, this._startSync({ cookie: this._cookie, syncFlag: 0, isOnlineSync: 1 });
      } }, { key: "startSyncOnReconnected", value: function() {
        wl.log("".concat(this._className, ".startSyncOnReconnected.")), this._onlineSyncFlag = true, this._startSync({ cookie: this._cookie, syncFlag: 0, isOnlineSync: 0 });
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._onlineSyncFlag = false, this._cookie = "";
      } }]), n3;
    }(hh), xI = { request: { toAccount: "To_Account", fromAccount: "From_Account", to: "To_Account", from: "From_Account", groupID: "GroupId", groupAtUserID: "GroupAt_Account", extension: "Ext", data: "Data", description: "Desc", elements: "MsgBody", sizeType: "Type", downloadFlag: "Download_Flag", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", videoUrl: "", imageUrl: "URL", fileUrl: "Url", uuid: "UUID", priority: "MsgPriority", receiverUserID: "To_Account", receiverGroupID: "GroupId", messageSender: "SenderId", messageReceiver: "ReceiverId", nick: "From_AccountNick", avatar: "From_AccountHeadurl", messageNumber: "MsgNum", pbDownloadKey: "PbMsgKey", downloadKey: "JsonMsgKey", applicationType: "PendencyType", userIDList: "To_Account", groupNameList: "GroupName", userID: "To_Account", groupAttributeList: "GroupAttr", mainSequence: "AttrMainSeq", avChatRoomKey: "BytesKey", attributeControl: "AttrControl", sequence: "seq", messageControlInfo: "SendMsgControl", updateSequence: "UpdateSeq", clientTime: "MsgClientTime", sequenceList: "MsgSeqList", topicID: "TopicId", customData: "CustomString", isSupportTopic: "SupportTopic", isWebUniapp: "is_web_uniapp", isSupportExtension: "SupportMessageExtension", messageSequence: "MsgSeq", messageKey: "MsgKey", startSequence: "startSeq" }, response: { MsgPriority: "priority", ThumbUUID: "thumbUUID", VideoUUID: "videoUUID", Download_Flag: "downloadFlag", GroupId: "groupID", Member_Account: "userID", MsgList: "messageList", SyncFlag: "syncFlag", To_Account: "to", From_Account: "from", MsgSeq: "sequence", MsgRandom: "random", MsgTime: "time", MsgTimeStamp: "time", MsgContent: "content", MsgBody: "elements", From_AccountNick: "nick", From_AccountHeadurl: "avatar", GroupWithdrawInfoArray: "revokedInfos", GroupReadInfoArray: "groupMessageReadNotice", LastReadMsgSeq: "lastMessageSeq", WithdrawC2cMsgNotify: "c2cMessageRevokedNotify", C2cWithdrawInfoArray: "revokedInfos", C2cReadedReceipt: "c2cMessageReadReceipt", ReadC2cMsgNotify: "c2cMessageReadNotice", LastReadTime: "peerReadTime", MsgRand: "random", MsgType: "type", MsgShow: "messageShow", NextMsgSeq: "nextMessageSeq", FaceUrl: "avatar", ProfileDataMod: "profileModify", Profile_Account: "userID", ValueBytes: "value", ValueNum: "value", NoticeSeq: "noticeSequence", NotifySeq: "notifySequence", MsgFrom_AccountExtraInfo: "messageFromAccountExtraInformation", Operator_Account: "operatorID", OpType: "operationType", ReportType: "operationType", UserId: "userID", User_Account: "userID", List_Account: "userIDList", MsgOperatorMemberExtraInfo: "operatorInfo", MsgMemberExtraInfo: "memberInfoList", ImageUrl: "avatar", NickName: "nick", MsgGroupNewInfo: "newGroupProfile", MsgAppDefinedData: "groupCustomField", Owner_Account: "ownerID", GroupFaceUrl: "avatar", GroupIntroduction: "introduction", GroupNotification: "notification", GroupApplyJoinOption: "joinOption", MsgKey: "messageKey", GroupInfo: "groupProfile", ShutupTime: "muteTime", Desc: "description", Ext: "extension", GroupAt_Account: "groupAtUserID", MsgNum: "messageNumber", PbMsgKey: "pbDownloadKey", JsonMsgKey: "downloadKey", MsgModifiedFlag: "isModified", PendencyItem: "applicationItem", PendencyType: "applicationType", AddTime: "time", AddSource: "source", AddWording: "wording", ProfileImImage: "avatar", PendencyAdd: "friendApplicationAdded", FrienPencydDel_Account: "friendApplicationDeletedUserIDList", Peer_Account: "userID", GroupAttr: "groupAttributeList", GroupAttrAry: "groupAttributeList", AttrMainSeq: "mainSequence", seq: "sequence", GroupAttrOption: "groupAttributeOption", BytesChangedKeys: "changedKeyList", GroupAttrInfo: "groupAttributeList", GroupAttrSeq: "mainSequence", PushChangedAttrValFlag: "isWithChangedAttributeInfo", SubKeySeq: "sequence", Val: "value", MsgGroupFromCardName: "senderNameCard", MsgGroupFromNickName: "senderNick", C2cNick: "peerNick", C2cImage: "peerAvatar", SendMsgControl: "messageControlInfo", NoLastMsg: "excludedFromLastMessage", NoUnread: "excludedFromUnreadCount", UpdateSeq: "updateSequence", MuteNotifications: "muteFlag", MsgClientTime: "clientTime", TinyId: "tinyID", GroupMsgReceiptList: "readReceiptList", ReadNum: "readCount", UnreadNum: "unreadCount", TopicId: "topicID", MillionGroupFlag: "communityType", SupportTopic: "isSupportTopic", MsgTopicNewInfo: "newTopicInfo", ShutupAll: "muteAllMembers", CustomString: "customData", TopicFaceUrl: "avatar", TopicIntroduction: "introduction", TopicNotification: "notification", TopicIdArray: "topicIDList", MsgVersion: "messageVersion", C2cMsgModNotifys: "c2cMessageModified", GroupMsgModNotifys: "groupMessageModified", ApplyJoinOption: "joinOption", MsgFlag: "messageRemindType", AtInfoList: "groupAtInfoList", AtFlagList: "groupAtType", AtMsgSeq: "sequence", BanDuration: "duration", BanDescription: "reason", NotVisible: "invisible", BytesTag: "tag", BytesValue: "value", RptBytesValue: "value", LatestSeq: "globalSequence", ClearSeq: "clearSequence", SupportMessageExtension: "isSupportExtension", ExtensionList: "extensions", GroupCounter: "counterList", Revoker_Account: "revoker" }, ignoreKeyWord: ["C2C", "ID", "USP"] }, VI = St2.PROPER, BI = vn.trim;
    function KI(e3, t3) {
      if ("string" != typeof e3 && !Array.isArray(e3))
        throw new TypeError("Expected the input to be `string | string[]`");
      t3 = Object.assign({ pascalCase: false }, t3);
      var n3;
      return 0 === (e3 = Array.isArray(e3) ? e3.map(function(e4) {
        return e4.trim();
      }).filter(function(e4) {
        return e4.length;
      }).join("-") : e3.trim()).length ? "" : 1 === e3.length ? t3.pascalCase ? e3.toUpperCase() : e3.toLowerCase() : (e3 !== e3.toLowerCase() && (e3 = HI(e3)), e3 = e3.replace(/^[_.\- ]+/, "").toLowerCase().replace(/[_.\- ]+(\w|$)/g, function(e4, t4) {
        return t4.toUpperCase();
      }).replace(/\d+(\w|$)/g, function(e4) {
        return e4.toUpperCase();
      }), n3 = e3, t3.pascalCase ? n3.charAt(0).toUpperCase() + n3.slice(1) : n3);
    }
    nn({ target: "String", proto: true, forced: (PI = "trim", O2(function() {
      return !!pn2[PI]() || "\u200B\x85\u180E" !== "\u200B\x85\u180E"[PI]() || VI && pn2[PI].name !== PI;
    })) }, { trim: function() {
      return BI(this);
    } });
    var HI = function(e3) {
      for (var t3 = false, n3 = false, o3 = false, r3 = 0; r3 < e3.length; r3++) {
        var a3 = e3[r3];
        t3 && /[a-zA-Z]/.test(a3) && a3.toUpperCase() === a3 ? (e3 = e3.slice(0, r3) + "-" + e3.slice(r3), t3 = false, o3 = n3, n3 = true, r3++) : n3 && o3 && /[a-zA-Z]/.test(a3) && a3.toLowerCase() === a3 ? (e3 = e3.slice(0, r3 - 1) + "-" + e3.slice(r3 - 1), o3 = n3, n3 = false, t3 = true) : (t3 = a3.toLowerCase() === a3 && a3.toUpperCase() !== a3, o3 = n3, n3 = a3.toUpperCase() === a3 && a3.toLowerCase() !== a3);
      }
      return e3;
    };
    function jI(e3, t3) {
      var n3 = 0;
      return function e4(t4, o3) {
        if (++n3 > 100)
          return n3--, t4;
        if (ed(t4)) {
          var r3 = t4.map(function(t5) {
            return Ql(t5) ? e4(t5, o3) : t5;
          });
          return n3--, r3;
        }
        if (Ql(t4)) {
          var a3 = (s3 = t4, i3 = function(e5, t5) {
            if (!sd(t5))
              return false;
            if ((r4 = t5) !== KI(r4))
              for (var n4 = 0; n4 < xI.ignoreKeyWord.length && !t5.includes(xI.ignoreKeyWord[n4]); n4++)
                ;
            var r4;
            return td(o3[t5]) ? function(e6) {
              return "OPPOChannelID" === e6 ? e6 : e6[0].toUpperCase() + KI(e6).slice(1);
            }(t5) : o3[t5];
          }, u3 = /* @__PURE__ */ Object.create(null), Object.keys(s3).forEach(function(e5) {
            var t5 = i3(s3[e5], e5);
            t5 && (u3[t5] = s3[e5]);
          }), u3);
          return a3 = Nd(a3, function(t5, n4) {
            return ed(t5) || Ql(t5) ? e4(t5, o3) : t5;
          }), n3--, a3;
        }
        var s3, i3, u3;
      }(e3, t3);
    }
    function WI(e3, t3) {
      if (ed(e3))
        return e3.map(function(e4) {
          return Ql(e4) ? WI(e4, t3) : e4;
        });
      if (Ql(e3)) {
        var n3 = (o3 = e3, r3 = function(e4, n4) {
          return td(t3[n4]) ? KI(n4) : t3[n4];
        }, a3 = {}, Object.keys(o3).forEach(function(e4) {
          a3[r3(o3[e4], e4)] = o3[e4];
        }), a3);
        return n3 = Nd(n3, function(e4) {
          return ed(e4) || Ql(e4) ? WI(e4, t3) : e4;
        });
      }
      var o3, r3, a3;
    }
    var YI = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView, $I = R2.RangeError, zI = function(e3) {
      if (void 0 === e3)
        return 0;
      var t3 = kt2(e3), n3 = Pt2(t3);
      if (t3 !== n3)
        throw $I("Wrong length or index");
      return n3;
    }, JI = R2.Array, XI = Math.abs, QI = Math.pow, ZI = Math.floor, eT = Math.log, tT = Math.LN2, nT = function(e3, t3, n3) {
      var o3, r3, a3, s3 = JI(n3), i3 = 8 * n3 - t3 - 1, u3 = (1 << i3) - 1, c3 = u3 >> 1, l3 = 23 === t3 ? QI(2, -24) - QI(2, -77) : 0, d3 = e3 < 0 || 0 === e3 && 1 / e3 < 0 ? 1 : 0, p3 = 0;
      for ((e3 = XI(e3)) != e3 || Infinity === e3 ? (r3 = e3 != e3 ? 1 : 0, o3 = u3) : (o3 = ZI(eT(e3) / tT), e3 * (a3 = QI(2, -o3)) < 1 && (o3--, a3 *= 2), (e3 += o3 + c3 >= 1 ? l3 / a3 : l3 * QI(2, 1 - c3)) * a3 >= 2 && (o3++, a3 /= 2), o3 + c3 >= u3 ? (r3 = 0, o3 = u3) : o3 + c3 >= 1 ? (r3 = (e3 * a3 - 1) * QI(2, t3), o3 += c3) : (r3 = e3 * QI(2, c3 - 1) * QI(2, t3), o3 = 0)); t3 >= 8; )
        s3[p3++] = 255 & r3, r3 /= 256, t3 -= 8;
      for (o3 = o3 << t3 | r3, i3 += t3; i3 > 0; )
        s3[p3++] = 255 & o3, o3 /= 256, i3 -= 8;
      return s3[--p3] |= 128 * d3, s3;
    }, oT = function(e3, t3) {
      var n3, o3 = e3.length, r3 = 8 * o3 - t3 - 1, a3 = (1 << r3) - 1, s3 = a3 >> 1, i3 = r3 - 7, u3 = o3 - 1, c3 = e3[u3--], l3 = 127 & c3;
      for (c3 >>= 7; i3 > 0; )
        l3 = 256 * l3 + e3[u3--], i3 -= 8;
      for (n3 = l3 & (1 << -i3) - 1, l3 >>= -i3, i3 += t3; i3 > 0; )
        n3 = 256 * n3 + e3[u3--], i3 -= 8;
      if (0 === l3)
        l3 = 1 - s3;
      else {
        if (l3 === a3)
          return n3 ? NaN : c3 ? -Infinity : Infinity;
        n3 += QI(2, t3), l3 -= s3;
      }
      return (c3 ? -1 : 1) * n3 * QI(2, l3 - t3);
    }, rT = function(e3) {
      for (var t3 = De2(this), n3 = Ut(t3), o3 = arguments.length, r3 = Lt(o3 > 1 ? arguments[1] : void 0, n3), a3 = o3 > 2 ? arguments[2] : void 0, s3 = void 0 === a3 ? n3 : Lt(a3, n3); s3 > r3; )
        t3[r3++] = e3;
      return t3;
    }, aT = Kt.f, sT = nt2.f, iT = St2.PROPER, uT = St2.CONFIGURABLE, cT = It2.get, lT = It2.set, dT = R2.ArrayBuffer, pT = dT, gT = pT && pT.prototype, hT = R2.DataView, fT = hT && hT.prototype, _T = Object.prototype, mT = R2.Array, vT = R2.RangeError, MT = H2(rT), yT = H2([].reverse), IT = nT, TT = oT, CT = function(e3) {
      return [255 & e3];
    }, ET = function(e3) {
      return [255 & e3, e3 >> 8 & 255];
    }, ST = function(e3) {
      return [255 & e3, e3 >> 8 & 255, e3 >> 16 & 255, e3 >> 24 & 255];
    }, DT = function(e3) {
      return e3[3] << 24 | e3[2] << 16 | e3[1] << 8 | e3[0];
    }, NT = function(e3) {
      return IT(e3, 23, 4);
    }, AT = function(e3) {
      return IT(e3, 52, 8);
    }, kT = function(e3, t3) {
      sT(e3.prototype, t3, { get: function() {
        return cT(this)[t3];
      } });
    }, RT = function(e3, t3, n3, o3) {
      var r3 = zI(n3), a3 = cT(e3);
      if (r3 + t3 > a3.byteLength)
        throw vT("Wrong index");
      var s3 = cT(a3.buffer).bytes, i3 = r3 + a3.byteOffset, u3 = ui(s3, i3, i3 + t3);
      return o3 ? u3 : yT(u3);
    }, OT = function(e3, t3, n3, o3, r3, a3) {
      var s3 = zI(n3), i3 = cT(e3);
      if (s3 + t3 > i3.byteLength)
        throw vT("Wrong index");
      for (var u3 = cT(i3.buffer).bytes, c3 = s3 + i3.byteOffset, l3 = o3(+r3), d3 = 0; d3 < t3; d3++)
        u3[c3 + d3] = l3[a3 ? d3 : t3 - d3 - 1];
    };
    if (YI) {
      var LT = iT && "ArrayBuffer" !== dT.name;
      if (O2(function() {
        dT(1);
      }) && O2(function() {
        new dT(-1);
      }) && !O2(function() {
        return new dT(), new dT(1.5), new dT(NaN), LT && !uT;
      }))
        LT && uT && ot2(dT, "name", "ArrayBuffer");
      else {
        (pT = function(e3) {
          return Li(this, gT), new dT(zI(e3));
        }).prototype = gT;
        for (var GT, PT = aT(dT), UT = 0; PT.length > UT; )
          (GT = PT[UT++]) in pT || ot2(pT, GT, dT[GT]);
        gT.constructor = pT;
      }
      tr && Ko(fT) !== _T && tr(fT, _T);
      var bT = new hT(new pT(2)), wT = H2(fT.setInt8);
      bT.setInt8(0, 2147483648), bT.setInt8(1, 2147483649), !bT.getInt8(0) && bT.getInt8(1) || Ai(fT, { setInt8: function(e3, t3) {
        wT(this, e3, t3 << 24 >> 24);
      }, setUint8: function(e3, t3) {
        wT(this, e3, t3 << 24 >> 24);
      } }, { unsafe: true });
    } else
      gT = (pT = function(e3) {
        Li(this, gT);
        var t3 = zI(e3);
        lT(this, { bytes: MT(mT(t3), 0), byteLength: t3 }), L2 || (this.byteLength = t3);
      }).prototype, fT = (hT = function(e3, t3, n3) {
        Li(this, fT), Li(e3, gT);
        var o3 = cT(e3).byteLength, r3 = kt2(t3);
        if (r3 < 0 || r3 > o3)
          throw vT("Wrong offset");
        if (r3 + (n3 = void 0 === n3 ? o3 - r3 : Pt2(n3)) > o3)
          throw vT("Wrong length");
        lT(this, { buffer: e3, byteLength: n3, byteOffset: r3 }), L2 || (this.buffer = e3, this.byteLength = n3, this.byteOffset = r3);
      }).prototype, L2 && (kT(pT, "byteLength"), kT(hT, "buffer"), kT(hT, "byteLength"), kT(hT, "byteOffset")), Ai(fT, { getInt8: function(e3) {
        return RT(this, 1, e3)[0] << 24 >> 24;
      }, getUint8: function(e3) {
        return RT(this, 1, e3)[0];
      }, getInt16: function(e3) {
        var t3 = RT(this, 2, e3, arguments.length > 1 ? arguments[1] : void 0);
        return (t3[1] << 8 | t3[0]) << 16 >> 16;
      }, getUint16: function(e3) {
        var t3 = RT(this, 2, e3, arguments.length > 1 ? arguments[1] : void 0);
        return t3[1] << 8 | t3[0];
      }, getInt32: function(e3) {
        return DT(RT(this, 4, e3, arguments.length > 1 ? arguments[1] : void 0));
      }, getUint32: function(e3) {
        return DT(RT(this, 4, e3, arguments.length > 1 ? arguments[1] : void 0)) >>> 0;
      }, getFloat32: function(e3) {
        return TT(RT(this, 4, e3, arguments.length > 1 ? arguments[1] : void 0), 23);
      }, getFloat64: function(e3) {
        return TT(RT(this, 8, e3, arguments.length > 1 ? arguments[1] : void 0), 52);
      }, setInt8: function(e3, t3) {
        OT(this, 1, e3, CT, t3);
      }, setUint8: function(e3, t3) {
        OT(this, 1, e3, CT, t3);
      }, setInt16: function(e3, t3) {
        OT(this, 2, e3, ET, t3, arguments.length > 2 ? arguments[2] : void 0);
      }, setUint16: function(e3, t3) {
        OT(this, 2, e3, ET, t3, arguments.length > 2 ? arguments[2] : void 0);
      }, setInt32: function(e3, t3) {
        OT(this, 4, e3, ST, t3, arguments.length > 2 ? arguments[2] : void 0);
      }, setUint32: function(e3, t3) {
        OT(this, 4, e3, ST, t3, arguments.length > 2 ? arguments[2] : void 0);
      }, setFloat32: function(e3, t3) {
        OT(this, 4, e3, NT, t3, arguments.length > 2 ? arguments[2] : void 0);
      }, setFloat64: function(e3, t3) {
        OT(this, 8, e3, AT, t3, arguments.length > 2 ? arguments[2] : void 0);
      } });
    zo(pT, "ArrayBuffer"), zo(hT, "DataView");
    var FT = { ArrayBuffer: pT, DataView: hT }, qT = FT.ArrayBuffer, xT = FT.DataView, VT = xT.prototype, BT = H2(qT.prototype.slice), KT = H2(VT.getUint8), HT = H2(VT.setUint8), jT = O2(function() {
      return !new qT(2).slice(1, void 0).byteLength;
    });
    nn({ target: "ArrayBuffer", proto: true, unsafe: true, forced: jT }, { slice: function(e3, t3) {
      if (BT && void 0 === t3)
        return BT(Xe2(this), e3);
      for (var n3 = Xe2(this).byteLength, o3 = Lt(e3, n3), r3 = Lt(void 0 === t3 ? n3 : t3, n3), a3 = new (xi(this, qT))(Pt2(r3 - o3)), s3 = new xT(this), i3 = new xT(a3), u3 = 0; o3 < r3; )
        HT(i3, u3++, KT(s3, o3++));
      return a3;
    } });
    var WT, YT, $T, zT = nt2.f, JT = R2.Int8Array, XT = JT && JT.prototype, QT = R2.Uint8ClampedArray, ZT = QT && QT.prototype, eC = JT && Ko(JT), tC = XT && Ko(XT), nC = Object.prototype, oC = R2.TypeError, rC = we2("toStringTag"), aC = Le2("TYPED_ARRAY_TAG"), sC = Le2("TYPED_ARRAY_CONSTRUCTOR"), iC = YI && !!tr && "Opera" !== cn(R2.opera), uC = false, cC = { Int8Array: 1, Uint8Array: 1, Uint8ClampedArray: 1, Int16Array: 2, Uint16Array: 2, Int32Array: 4, Uint32Array: 4, Float32Array: 4, Float64Array: 8 }, lC = { BigInt64Array: 8, BigUint64Array: 8 }, dC = function(e3) {
      if (!te2(e3))
        return false;
      var t3 = cn(e3);
      return Ae2(cC, t3) || Ae2(lC, t3);
    };
    for (WT in cC)
      ($T = (YT = R2[WT]) && YT.prototype) ? ot2($T, sC, YT) : iC = false;
    for (WT in lC)
      ($T = (YT = R2[WT]) && YT.prototype) && ot2($T, sC, YT);
    if ((!iC || !ee2(eC) || eC === Function.prototype) && (eC = function() {
      throw oC("Incorrect invocation");
    }, iC))
      for (WT in cC)
        R2[WT] && tr(R2[WT], eC);
    if ((!iC || !tC || tC === nC) && (tC = eC.prototype, iC))
      for (WT in cC)
        R2[WT] && tr(R2[WT].prototype, tC);
    if (iC && Ko(ZT) !== tC && tr(ZT, tC), L2 && !Ae2(tC, rC))
      for (WT in uC = true, zT(tC, rC, { get: function() {
        return te2(this) ? this[aC] : void 0;
      } }), cC)
        R2[WT] && ot2(R2[WT], aC, WT);
    var pC = { NATIVE_ARRAY_BUFFER_VIEWS: iC, TYPED_ARRAY_CONSTRUCTOR: sC, TYPED_ARRAY_TAG: uC && aC, aTypedArray: function(e3) {
      if (dC(e3))
        return e3;
      throw oC("Target is not a typed array");
    }, aTypedArrayConstructor: function(e3) {
      if (ee2(e3) && (!tr || re2(eC, e3)))
        return e3;
      throw oC(_e2(e3) + " is not a typed array constructor");
    }, exportTypedArrayMethod: function(e3, t3, n3, o3) {
      if (L2) {
        if (n3)
          for (var r3 in cC) {
            var a3 = R2[r3];
            if (a3 && Ae2(a3.prototype, e3))
              try {
                delete a3.prototype[e3];
              } catch (BS) {
                try {
                  a3.prototype[e3] = t3;
                } catch (s3) {
                }
              }
          }
        tC[e3] && !n3 || Dt(tC, e3, n3 ? t3 : iC && XT[e3] || t3, o3);
      }
    }, exportTypedArrayStaticMethod: function(e3, t3, n3) {
      var o3, r3;
      if (L2) {
        if (tr) {
          if (n3) {
            for (o3 in cC)
              if ((r3 = R2[o3]) && Ae2(r3, e3))
                try {
                  delete r3[e3];
                } catch (BS) {
                }
          }
          if (eC[e3] && !n3)
            return;
          try {
            return Dt(eC, e3, n3 ? t3 : iC && eC[e3] || t3);
          } catch (BS) {
          }
        }
        for (o3 in cC)
          !(r3 = R2[o3]) || r3[e3] && !n3 || Dt(r3, e3, t3);
      }
    }, isView: function(e3) {
      if (!te2(e3))
        return false;
      var t3 = cn(e3);
      return "DataView" === t3 || Ae2(cC, t3) || Ae2(lC, t3);
    }, isTypedArray: dC, TypedArray: eC, TypedArrayPrototype: tC }, gC = pC.NATIVE_ARRAY_BUFFER_VIEWS, hC = R2.ArrayBuffer, fC = R2.Int8Array, _C = !gC || !O2(function() {
      fC(1);
    }) || !O2(function() {
      new fC(-1);
    }) || !ko(function(e3) {
      new fC(), new fC(null), new fC(1.5), new fC(e3);
    }, true) || O2(function() {
      return 1 !== new fC(new hC(2), 1, void 0).length;
    }), mC = Math.floor, vC = Number.isInteger || function(e3) {
      return !te2(e3) && isFinite(e3) && mC(e3) === e3;
    }, MC = R2.RangeError, yC = R2.RangeError, IC = function(e3, t3) {
      var n3 = function(e4) {
        var t4 = kt2(e4);
        if (t4 < 0)
          throw MC("The argument can't be less than 0");
        return t4;
      }(e3);
      if (n3 % t3)
        throw yC("Wrong offset");
      return n3;
    }, TC = pC.aTypedArrayConstructor, CC = function(e3) {
      var t3, n3, o3, r3, a3, s3, i3 = Fi(this), u3 = De2(e3), c3 = arguments.length, l3 = c3 > 1 ? arguments[1] : void 0, d3 = void 0 !== l3, p3 = yo(u3);
      if (p3 && !mo(p3))
        for (s3 = (a3 = To(u3, p3)).next, u3 = []; !(r3 = U2(s3, a3)).done; )
          u3.push(r3.value);
      for (d3 && c3 > 2 && (l3 = wn2(l3, arguments[2])), n3 = Ut(u3), o3 = new (TC(i3))(n3), t3 = 0; n3 > t3; t3++)
        o3[t3] = d3 ? l3(u3[t3], t3) : u3[t3];
      return o3;
    };
    D2(function(e3) {
      var t3 = Kt.f, n3 = Zn2.forEach, o3 = It2.get, r3 = It2.set, a3 = nt2.f, s3 = Ye2.f, i3 = Math.round, u3 = R2.RangeError, c3 = FT.ArrayBuffer, l3 = c3.prototype, d3 = FT.DataView, p3 = pC.NATIVE_ARRAY_BUFFER_VIEWS, g3 = pC.TYPED_ARRAY_CONSTRUCTOR, h3 = pC.TYPED_ARRAY_TAG, f3 = pC.TypedArray, _3 = pC.TypedArrayPrototype, m3 = pC.aTypedArrayConstructor, v3 = pC.isTypedArray, M3 = function(e4, t4) {
        m3(e4);
        for (var n4 = 0, o4 = t4.length, r4 = new e4(o4); o4 > n4; )
          r4[n4] = t4[n4++];
        return r4;
      }, y3 = function(e4, t4) {
        a3(e4, t4, { get: function() {
          return o3(this)[t4];
        } });
      }, I3 = function(e4) {
        var t4;
        return re2(l3, e4) || "ArrayBuffer" == (t4 = cn(e4)) || "SharedArrayBuffer" == t4;
      }, T3 = function(e4, t4) {
        return v3(e4) && !he2(t4) && t4 in e4 && vC(+t4) && t4 >= 0;
      }, C3 = function(e4, t4) {
        return t4 = Ve2(t4), T3(e4, t4) ? q2(2, e4[t4]) : s3(e4, t4);
      }, E3 = function(e4, t4, n4) {
        return t4 = Ve2(t4), !(T3(e4, t4) && te2(n4) && Ae2(n4, "value")) || Ae2(n4, "get") || Ae2(n4, "set") || n4.configurable || Ae2(n4, "writable") && !n4.writable || Ae2(n4, "enumerable") && !n4.enumerable ? a3(e4, t4, n4) : (e4[t4] = n4.value, e4);
      };
      L2 ? (p3 || (Ye2.f = C3, nt2.f = E3, y3(_3, "buffer"), y3(_3, "byteOffset"), y3(_3, "byteLength"), y3(_3, "length")), nn({ target: "Object", stat: true, forced: !p3 }, { getOwnPropertyDescriptor: C3, defineProperty: E3 }), e3.exports = function(e4, s4, l4) {
        var m4 = e4.match(/\d+$/)[0] / 8, y4 = e4 + (l4 ? "Clamped" : "") + "Array", T4 = "get" + e4, C4 = "set" + e4, E4 = R2[y4], S3 = E4, D3 = S3 && S3.prototype, N3 = {}, A3 = function(e5, t4) {
          a3(e5, t4, { get: function() {
            return function(e6, t5) {
              var n4 = o3(e6);
              return n4.view[T4](t5 * m4 + n4.byteOffset, true);
            }(this, t4);
          }, set: function(e6) {
            return function(e7, t5, n4) {
              var r4 = o3(e7);
              l4 && (n4 = (n4 = i3(n4)) < 0 ? 0 : n4 > 255 ? 255 : 255 & n4), r4.view[C4](t5 * m4 + r4.byteOffset, n4, true);
            }(this, t4, e6);
          }, enumerable: true });
        };
        p3 ? _C && (S3 = s4(function(e5, t4, n4, o4) {
          return Li(e5, D3), Fr(te2(t4) ? I3(t4) ? void 0 !== o4 ? new E4(t4, IC(n4, m4), o4) : void 0 !== n4 ? new E4(t4, IC(n4, m4)) : new E4(t4) : v3(t4) ? M3(S3, t4) : U2(CC, S3, t4) : new E4(zI(t4)), e5, S3);
        }), tr && tr(S3, f3), n3(t3(E4), function(e5) {
          e5 in S3 || ot2(S3, e5, E4[e5]);
        }), S3.prototype = D3) : (S3 = s4(function(e5, t4, n4, o4) {
          Li(e5, D3);
          var a4, s5, i4, l5 = 0, p4 = 0;
          if (te2(t4)) {
            if (!I3(t4))
              return v3(t4) ? M3(S3, t4) : U2(CC, S3, t4);
            a4 = t4, p4 = IC(n4, m4);
            var g4 = t4.byteLength;
            if (void 0 === o4) {
              if (g4 % m4)
                throw u3("Wrong length");
              if ((s5 = g4 - p4) < 0)
                throw u3("Wrong length");
            } else if ((s5 = Pt2(o4) * m4) + p4 > g4)
              throw u3("Wrong length");
            i4 = s5 / m4;
          } else
            i4 = zI(t4), a4 = new c3(s5 = i4 * m4);
          for (r3(e5, { buffer: a4, byteOffset: p4, byteLength: s5, length: i4, view: new d3(a4) }); l5 < i4; )
            A3(e5, l5++);
        }), tr && tr(S3, f3), D3 = S3.prototype = Un2(_3)), D3.constructor !== S3 && ot2(D3, "constructor", S3), ot2(D3, g3, S3), h3 && ot2(D3, h3, y4), N3[y4] = S3, nn({ global: true, forced: S3 != E4, sham: !p3 }, N3), "BYTES_PER_ELEMENT" in S3 || ot2(S3, "BYTES_PER_ELEMENT", m4), "BYTES_PER_ELEMENT" in D3 || ot2(D3, "BYTES_PER_ELEMENT", m4), Ri(y4);
      }) : e3.exports = function() {
      };
    })("Uint8", function(e3) {
      return function(t3, n3, o3) {
        return e3(this, t3, n3, o3);
      };
    });
    var EC = Math.min, SC = H2([].copyWithin || function(e3, t3) {
      var n3 = De2(this), o3 = Ut(n3), r3 = Lt(e3, o3), a3 = Lt(t3, o3), s3 = arguments.length > 2 ? arguments[2] : void 0, i3 = EC((void 0 === s3 ? o3 : Lt(s3, o3)) - a3, o3 - r3), u3 = 1;
      for (a3 < r3 && r3 < a3 + i3 && (u3 = -1, a3 += i3 - 1, r3 += i3 - 1); i3-- > 0; )
        a3 in n3 ? n3[r3] = n3[a3] : delete n3[r3], r3 += u3, a3 += u3;
      return n3;
    }), DC = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("copyWithin", function(e3, t3) {
      return SC(DC(this), e3, t3, arguments.length > 2 ? arguments[2] : void 0);
    });
    var NC = Zn2.every, AC = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("every", function(e3) {
      return NC(AC(this), e3, arguments.length > 1 ? arguments[1] : void 0);
    });
    var kC = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("fill", function(e3) {
      var t3 = arguments.length;
      return U2(rT, kC(this), e3, t3 > 1 ? arguments[1] : void 0, t3 > 2 ? arguments[2] : void 0);
    });
    var RC = pC.TYPED_ARRAY_CONSTRUCTOR, OC = pC.aTypedArrayConstructor, LC = function(e3) {
      return OC(xi(e3, e3[RC]));
    }, GC = function(e3, t3) {
      return function(e4, t4) {
        for (var n3 = 0, o3 = Ut(t4), r3 = new e4(o3); o3 > n3; )
          r3[n3] = t4[n3++];
        return r3;
      }(LC(e3), t3);
    }, PC = Zn2.filter, UC = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("filter", function(e3) {
      var t3 = PC(UC(this), e3, arguments.length > 1 ? arguments[1] : void 0);
      return GC(this, t3);
    });
    var bC = Zn2.find, wC = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("find", function(e3) {
      return bC(wC(this), e3, arguments.length > 1 ? arguments[1] : void 0);
    });
    var FC = Zn2.findIndex, qC = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("findIndex", function(e3) {
      return FC(qC(this), e3, arguments.length > 1 ? arguments[1] : void 0);
    });
    var xC = Zn2.forEach, VC = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("forEach", function(e3) {
      xC(VC(this), e3, arguments.length > 1 ? arguments[1] : void 0);
    });
    var BC = wt2.includes, KC = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("includes", function(e3) {
      return BC(KC(this), e3, arguments.length > 1 ? arguments[1] : void 0);
    });
    var HC = wt2.indexOf, jC = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("indexOf", function(e3) {
      return HC(jC(this), e3, arguments.length > 1 ? arguments[1] : void 0);
    });
    var WC = we2("iterator"), YC = R2.Uint8Array, $C = H2(Bs.values), zC = H2(Bs.keys), JC = H2(Bs.entries), XC = pC.aTypedArray, QC = pC.exportTypedArrayMethod, ZC = YC && YC.prototype, eE = !O2(function() {
      ZC[WC].call([1]);
    }), tE = !!ZC && ZC.values && ZC[WC] === ZC.values && "values" === ZC.values.name, nE = function() {
      return $C(XC(this));
    };
    QC("entries", function() {
      return JC(XC(this));
    }, eE), QC("keys", function() {
      return zC(XC(this));
    }, eE), QC("values", nE, eE || !tE, { name: "values" }), QC(WC, nE, eE || !tE, { name: "values" });
    var oE = pC.aTypedArray, rE = pC.exportTypedArrayMethod, aE = H2([].join);
    rE("join", function(e3) {
      return aE(oE(this), e3);
    });
    var sE = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("lastIndexOf", function(e3) {
      var t3 = arguments.length;
      return Ts2(AM, sE(this), t3 > 1 ? [e3, arguments[1]] : [e3]);
    });
    var iE = Zn2.map, uE = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("map", function(e3) {
      return iE(uE(this), e3, arguments.length > 1 ? arguments[1] : void 0, function(e4, t3) {
        return new (LC(e4))(t3);
      });
    });
    var cE = R2.TypeError, lE = function(e3) {
      return function(t3, n3, o3, r3) {
        ve2(n3);
        var a3 = De2(t3), s3 = J2(a3), i3 = Ut(a3), u3 = e3 ? i3 - 1 : 0, c3 = e3 ? -1 : 1;
        if (o3 < 2)
          for (; ; ) {
            if (u3 in s3) {
              r3 = s3[u3], u3 += c3;
              break;
            }
            if (u3 += c3, e3 ? u3 < 0 : i3 <= u3)
              throw cE("Reduce of empty array with no initial value");
          }
        for (; e3 ? u3 >= 0 : i3 > u3; u3 += c3)
          u3 in s3 && (r3 = n3(r3, s3[u3], u3, a3));
        return r3;
      };
    }, dE = { left: lE(false), right: lE(true) }, pE = dE.left, gE = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("reduce", function(e3) {
      var t3 = arguments.length;
      return pE(gE(this), e3, t3, t3 > 1 ? arguments[1] : void 0);
    });
    var hE = dE.right, fE = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("reduceRight", function(e3) {
      var t3 = arguments.length;
      return hE(fE(this), e3, t3, t3 > 1 ? arguments[1] : void 0);
    });
    var _E = pC.aTypedArray, mE = pC.exportTypedArrayMethod, vE = Math.floor;
    mE("reverse", function() {
      for (var e3, t3 = _E(this).length, n3 = vE(t3 / 2), o3 = 0; o3 < n3; )
        e3 = this[o3], this[o3++] = this[--t3], this[t3] = e3;
      return this;
    });
    var ME = R2.RangeError, yE = R2.Int8Array, IE = yE && yE.prototype, TE = IE && IE.set, CE = pC.aTypedArray, EE = pC.exportTypedArrayMethod, SE = !O2(function() {
      var e3 = new Uint8ClampedArray(2);
      return U2(TE, e3, { length: 1, 0: 3 }, 1), 3 !== e3[1];
    }), DE = SE && pC.NATIVE_ARRAY_BUFFER_VIEWS && O2(function() {
      var e3 = new yE(2);
      return e3.set(1), e3.set("2", 1), 0 !== e3[0] || 2 !== e3[1];
    });
    EE("set", function(e3) {
      CE(this);
      var t3 = IC(arguments.length > 1 ? arguments[1] : void 0, 1), n3 = De2(e3);
      if (SE)
        return U2(TE, this, n3, t3);
      var o3 = this.length, r3 = Ut(n3), a3 = 0;
      if (r3 + t3 > o3)
        throw ME("Wrong length");
      for (; a3 < r3; )
        this[t3 + a3] = n3[a3++];
    }, !SE || DE);
    var NE = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("slice", function(e3, t3) {
      for (var n3 = hr(NE(this), e3, t3), o3 = LC(this), r3 = 0, a3 = n3.length, s3 = new o3(a3); a3 > r3; )
        s3[r3] = n3[r3++];
      return s3;
    }, O2(function() {
      new Int8Array(1).slice();
    }));
    var AE = Zn2.some, kE = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("some", function(e3) {
      return AE(kE(this), e3, arguments.length > 1 ? arguments[1] : void 0);
    });
    var RE = R2.Array, OE = pC.aTypedArray, LE = pC.exportTypedArrayMethod, GE = R2.Uint16Array, PE = GE && H2(GE.prototype.sort), UE = !(!PE || O2(function() {
      PE(new GE(2), null);
    }) && O2(function() {
      PE(new GE(2), {});
    })), bE = !!PE && !O2(function() {
      if (le2)
        return le2 < 74;
      if (JM)
        return JM < 67;
      if (XM)
        return true;
      if (ZM)
        return ZM < 602;
      var e3, t3, n3 = new GE(516), o3 = RE(516);
      for (e3 = 0; e3 < 516; e3++)
        t3 = e3 % 4, n3[e3] = 515 - e3, o3[e3] = e3 - 2 * t3 + 3;
      for (PE(n3, function(e4, t4) {
        return (e4 / 4 | 0) - (t4 / 4 | 0);
      }), e3 = 0; e3 < 516; e3++)
        if (n3[e3] !== o3[e3])
          return true;
    });
    LE("sort", function(e3) {
      return void 0 !== e3 && ve2(e3), bE ? PE(this, e3) : gm(OE(this), function(e4) {
        return function(t3, n3) {
          return void 0 !== e4 ? +e4(t3, n3) || 0 : n3 != n3 ? -1 : t3 != t3 ? 1 : 0 === t3 && 0 === n3 ? 1 / t3 > 0 && 1 / n3 < 0 ? 1 : -1 : t3 > n3;
        };
      }(e3));
    }, !bE || UE);
    var wE = pC.aTypedArray;
    (0, pC.exportTypedArrayMethod)("subarray", function(e3, t3) {
      var n3 = wE(this), o3 = n3.length, r3 = Lt(e3, o3);
      return new (LC(n3))(n3.buffer, n3.byteOffset + r3 * n3.BYTES_PER_ELEMENT, Pt2((void 0 === t3 ? o3 : Lt(t3, o3)) - r3));
    });
    var FE = R2.Int8Array, qE = pC.aTypedArray, xE = pC.exportTypedArrayMethod, VE = [].toLocaleString, BE = !!FE && O2(function() {
      VE.call(new FE(1));
    });
    xE("toLocaleString", function() {
      return Ts2(VE, BE ? hr(qE(this)) : qE(this), hr(arguments));
    }, O2(function() {
      return [1, 2].toLocaleString() != new FE([1, 2]).toLocaleString();
    }) || !O2(function() {
      FE.prototype.toLocaleString.call([1, 2]);
    }));
    var KE = pC.exportTypedArrayMethod, HE = R2.Uint8Array, jE = HE && HE.prototype || {}, WE = [].toString, YE = H2([].join);
    O2(function() {
      WE.call({});
    }) && (WE = function() {
      return YE(this);
    });
    var $E = jE.toString != WE;
    KE("toString", WE, $E);
    var zE = R2.RangeError, JE = String.fromCharCode, XE = String.fromCodePoint, QE = H2([].join), ZE = !!XE && 1 != XE.length;
    nn({ target: "String", stat: true, forced: ZE }, { fromCodePoint: function(e3) {
      for (var t3, n3 = [], o3 = arguments.length, r3 = 0; o3 > r3; ) {
        if (t3 = +arguments[r3++], Lt(t3, 1114111) !== t3)
          throw zE(t3 + " is not a valid code point");
        n3[r3] = t3 < 65536 ? JE(t3) : JE(55296 + ((t3 -= 65536) >> 10), t3 % 1024 + 56320);
      }
      return QE(n3, "");
    } });
    var eS = String.fromCharCode, tS = function(e3) {
      var t3 = 0 | e3.charCodeAt(0);
      if (55296 <= t3)
        if (t3 < 56320) {
          var n3 = 0 | e3.charCodeAt(1);
          if (56320 <= n3 && n3 <= 57343) {
            if ((t3 = (t3 << 10) + n3 - 56613888 | 0) > 65535)
              return eS(240 | t3 >>> 18, 128 | t3 >>> 12 & 63, 128 | t3 >>> 6 & 63, 128 | 63 & t3);
          } else
            t3 = 65533;
        } else
          t3 <= 57343 && (t3 = 65533);
      return t3 <= 2047 ? eS(192 | t3 >>> 6, 128 | 63 & t3) : eS(224 | t3 >>> 12, 128 | t3 >>> 6 & 63, 128 | 63 & t3);
    }, nS = function(e3) {
      for (var t3 = void 0 === e3 ? "" : ("" + e3).replace(/[\x80-\uD7ff\uDC00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]?/g, tS), n3 = 0 | t3.length, o3 = new Uint8Array(n3), r3 = 0; r3 < n3; r3 = r3 + 1 | 0)
        o3[r3] = 0 | t3.charCodeAt(r3);
      return o3;
    }, oS = function(e3) {
      for (var t3 = new Uint8Array(e3), n3 = "", o3 = 0, r3 = t3.length; o3 < r3; ) {
        var a3 = t3[o3], s3 = 0, i3 = 0;
        if (a3 <= 127 ? (s3 = 0, i3 = 255 & a3) : a3 <= 223 ? (s3 = 1, i3 = 31 & a3) : a3 <= 239 ? (s3 = 2, i3 = 15 & a3) : a3 <= 244 && (s3 = 3, i3 = 7 & a3), r3 - o3 - s3 > 0)
          for (var u3 = 0; u3 < s3; )
            i3 = i3 << 6 | 63 & (a3 = t3[o3 + u3 + 1]), u3 += 1;
        else
          i3 = 65533, s3 = r3 - o3;
        n3 += String.fromCodePoint(i3), o3 += s3 + 1;
      }
      return n3;
    }, rS = function() {
      function e3(t3) {
        o2(this, e3), this._handler = t3;
        var n3 = t3.getURL();
        if (this._socket = null, this._workerSocket = null, this._id = pd(), this._handler.getIsWorkerEnabled()) {
          var r3 = URL.createObjectURL(new Blob([';let _socket = null;onmessage = function(event) {  if (event.data.cmd === "start") {    const url = event.data.url;    _socket = new WebSocket(url);    _socket.binaryType = "arraybuffer";    _socket.onopen = function() {      postMessage({ callback: "onOpen" });    };    _socket.onclose = function(e) {      postMessage({ callback: "onOpen", e: { code: e.code, reason: e.reason } });    };    _socket.onmessage = function(e) {      postMessage({ callback: "onMessage", data: e.data });    };    _socket.onerror = function(e) {      postMessage({ callback: "onError", e: { isTrusted: "true" } });    };  } else if (event.data.cmd === "sendMessage") {    if (_socket !== null) {      _socket.send(event.data.data);    }  } else if (event.data.cmd === "stop") {    if (_socket !== null) {      _socket.close(event.data.code);      _socket = null;    }  }};'], { type: "application/javascript; charset=utf-8" }));
          this._workerSocket = new Worker(r3);
          var a3 = this;
          this._workerSocket.onmessage = function(e4) {
            var t4 = e4.data, n4 = t4.callback, o3 = t4.e;
            "onOpen" === n4 ? a3._onOpen() : "onClose" === n4 ? a3._onClose(o3) : "onError" === n4 ? a3._onError(o3) : "onMessage" === n4 && a3._onMessage(e4.data);
          }, this._workerSocket.postMessage({ cmd: "start", id: this._id, url: n3 });
        } else
          tl ? Qc ? (ol.connectSocket({ url: n3, header: { "content-type": "application/json" } }), ol.onSocketClose(this._onClose.bind(this)), ol.onSocketOpen(this._onOpen.bind(this)), ol.onSocketMessage(this._onMessage.bind(this)), ol.onSocketError(this._onError.bind(this))) : (this._socket = ol.connectSocket({ url: n3, header: { "content-type": "application/json" }, complete: function() {
          } }), this._socket.onClose(this._onClose.bind(this)), this._socket.onOpen(this._onOpen.bind(this)), this._socket.onMessage(this._onMessage.bind(this)), this._socket.onError(this._onError.bind(this))) : nl && (this._socket = new WebSocket(n3), this._socket.binaryType = "arraybuffer", this._socket.onopen = this._onOpen.bind(this), this._socket.onmessage = this._onMessage.bind(this), this._socket.onclose = this._onClose.bind(this), this._socket.onerror = this._onError.bind(this));
        this._canIUseBinaryFrame = t3.canIUseBinaryFrame();
      }
      return a2(e3, [{ key: "getID", value: function() {
        return this._id;
      } }, { key: "_onOpen", value: function() {
        this._handler.onOpen({ id: this._id });
      } }, { key: "_onClose", value: function(e4) {
        this._handler.onClose({ id: this._id, e: e4 });
      } }, { key: "_onMessage", value: function(e4) {
        this._handler.onMessage({ data: this._canIUseBinaryFrame ? oS(e4.data) : e4.data });
      } }, { key: "_onError", value: function(e4) {
        this._handler.onError({ id: this._id, e: e4 });
      } }, { key: "setIsWorkerEnabled", value: function(e4) {
        this._isWorkerEnabled = true;
      } }, { key: "close", value: function(e4) {
        if (this._workerSocket && (this._workerSocket.postMessage({ cmd: "stop", code: e4 }), this._workerSocket.terminate(), this._workerSocket = null), Qc)
          return ol.offSocketClose(), ol.offSocketMessage(), ol.offSocketOpen(), ol.offSocketError(), void ol.closeSocket();
        this._socket && (tl ? (this._socket.onClose(function() {
        }), this._socket.onOpen(function() {
        }), this._socket.onMessage(function() {
        }), this._socket.onError(function() {
        })) : nl && (this._socket.onopen = null, this._socket.onmessage = null, this._socket.onclose = null, this._socket.onerror = null), Xc ? this._socket.close({ code: e4 }) : this._socket.close(e4), this._socket = null);
      } }, { key: "send", value: function(e4) {
        if (this._workerSocket)
          this._workerSocket.postMessage({ cmd: "sendMessage", data: this._canIUseBinaryFrame ? nS(e4.data).buffer : e4.data });
        else {
          if (Qc)
            return void ol.sendSocketMessage({ data: e4.data, fail: function() {
              e4.fail && e4.requestID && e4.fail(e4.requestID);
            } });
          this._socket && (tl ? this._socket.send({ data: this._canIUseBinaryFrame ? nS(e4.data).buffer : e4.data, fail: function() {
            e4.fail && e4.requestID && e4.fail(e4.requestID);
          } }) : nl && this._socket.send(this._canIUseBinaryFrame ? nS(e4.data).buffer : e4.data));
        }
      } }]), e3;
    }(), aS = 4e3, sS = 4001, iS = ["keyMap"], uS = ["keyMap"], cS = "connected", lS = "connecting", dS = "disconnected", pS = function() {
      function e3(t3) {
        o2(this, e3), this._channelModule = t3, this._className = "SocketHandler", this._promiseMap = /* @__PURE__ */ new Map(), this._readyState = dS, this._simpleRequestMap = /* @__PURE__ */ new Map(), this.MAX_SIZE = 100, this._startSequence = pd(), this._startTs = 0, this._reConnectFlag = false, this._nextPingTs = 0, this._reConnectCount = 0, this.MAX_RECONNECT_COUNT = 3, this._socketID = -1, this._random = 0, this._socket = null, this._url = "", this._onOpenTs = 0, this._canIUseBinaryFrame = true, this._isWorkerEnabled = true, this._setWebsocketHost(), this._initConnection();
      }
      return a2(e3, [{ key: "_setWebsocketHost", value: function() {
        var e4 = this._channelModule.getModule(jg), t3 = Ac;
        this._channelModule.isOversea() && (t3 = kc), e4.isSingaporeSite() ? t3 = Rc : e4.isKoreaSite() ? t3 = Oc : e4.isGermanySite() ? t3 = Lc : e4.isIndiaSite() ? t3 = Gc : e4.isJapanSite() ? t3 = Pc : e4.isUSASite() && (t3 = Uc), bc.HOST.setCurrent(t3);
      } }, { key: "_initConnection", value: function() {
        td(bc.HOST.CURRENT.BACKUP) || "" === this._url ? this._url = bc.HOST.CURRENT.DEFAULT : this._url === bc.HOST.CURRENT.DEFAULT ? this._url = bc.HOST.CURRENT.BACKUP : this._url === bc.HOST.CURRENT.BACKUP && (this._url = bc.HOST.CURRENT.DEFAULT);
        var e4 = this._channelModule.getModule(jg).getProxyServer();
        Wd(e4) || (this._url = e4), this._connect(), this._nextPingTs = 0;
      } }, { key: "onCheckTimer", value: function(e4) {
        e4 % 1 == 0 && this._checkPromiseMap();
      } }, { key: "_checkPromiseMap", value: function() {
        var e4 = this;
        0 !== this._promiseMap.size && this._promiseMap.forEach(function(t3, n3) {
          var o3 = t3.reject, r3 = t3.timestamp, a3 = 15e3;
          -1 !== n3.indexOf(fh) && (a3 = 9e4), Date.now() - r3 >= a3 && (wl.log("".concat(e4._className, "._checkPromiseMap request timeout, delete requestID:").concat(n3)), e4._promiseMap.delete(n3), o3(new KM({ code: dh.NETWORK_TIMEOUT })), e4._channelModule.onRequestTimeout(n3));
        });
      } }, { key: "onOpen", value: function(e4) {
        if ("" !== this._readyState) {
          this._onOpenTs = Date.now();
          var t3 = e4.id;
          this._socketID = t3;
          var n3 = Date.now() - this._startTs;
          wl.log("".concat(this._className, "._onOpen cost ").concat(n3, " ms. socketID:").concat(t3)), new G_(P_.WS_ON_OPEN).setMessage(n3).setCostTime(n3).setMoreMessage("socketID:".concat(t3)).end(), e4.id === this._socketID && (this._readyState = cS, this._reConnectCount = 0, this._resend(), true === this._reConnectFlag && (this._channelModule.onReconnected(), this._reConnectFlag = false), this._channelModule.onOpen());
        }
      } }, { key: "onClose", value: function(e4) {
        var t3 = new G_(P_.WS_ON_CLOSE), n3 = e4.id, o3 = e4.e, r3 = "sourceSocketID:".concat(n3, " currentSocketID:").concat(this._socketID, " code:").concat(o3.code, " reason:").concat(o3.reason), a3 = 0;
        0 !== this._onOpenTs && (a3 = Date.now() - this._onOpenTs), t3.setMessage(a3).setCostTime(a3).setMoreMessage(r3).setCode(o3.code).end(), wl.log("".concat(this._className, "._onClose ").concat(r3, " onlineTime:").concat(a3)), n3 === this._socketID && (this._readyState = dS, a3 < 1e3 ? this._channelModule.onReconnectFailed() : this._channelModule.onClose());
      } }, { key: "onError", value: function(e4) {
        var t3 = e4.id, n3 = e4.e, o3 = "sourceSocketID:".concat(t3, " currentSocketID:").concat(this._socketID);
        new G_(P_.WS_ON_ERROR).setMessage(n3.errMsg || ld(n3)).setMoreMessage(o3).setLevel("error").end(), wl.warn("".concat(this._className, "._onError"), n3, o3), t3 === this._socketID && (this._readyState = "", this._channelModule.onError());
      } }, { key: "onMessage", value: function(e4) {
        var t3;
        try {
          t3 = JSON.parse(e4.data);
        } catch (BS) {
          new G_(P_.JSON_PARSE_ERROR).setMessage(e4.data).end();
        }
        if (t3 && t3.head) {
          var n3 = this._getRequestIDFromHead(t3.head), o3 = t3.body;
          if (!n3.startsWith(bc.NAME.TUIROOM_SVR)) {
            var r3 = Pd(t3.head);
            o3 = WI(t3.body, this._getResponseKeyMap(r3));
          }
          if (wl.debug("".concat(this._className, ".onMessage ret:").concat(JSON.stringify(o3), " requestID:").concat(n3, " has:").concat(this._promiseMap.has(n3))), this._setNextPingTs(), this._promiseMap.has(n3)) {
            var a3 = this._promiseMap.get(n3), s3 = a3.resolve, i3 = a3.reject, u3 = a3.timestamp;
            return this._promiseMap.delete(n3), this._calcRTT(u3), void (o3.errorCode && 0 !== o3.errorCode ? (this._channelModule.onErrorCodeNotZero(o3), i3(new KM({ code: o3.errorCode, message: o3.errorInfo || "", data: n3.includes(Uh) || n3.includes(Sf) ? { elements: o3.elements, messageVersion: o3.messageVersion, cloudCustomData: o3.cloudCustomData } : void 0 }))) : s3(wM(o3)));
          }
          this._channelModule.onMessage({ head: t3.head, body: o3 });
        }
      } }, { key: "_calcRTT", value: function(e4) {
        var t3 = Date.now() - e4;
        this._channelModule.getModule(ah).addRTT(t3);
      } }, { key: "_connect", value: function() {
        this._startTs = Date.now(), this._onOpenTs = 0, this._socket = new rS(this), this._socketID = this._socket.getID(), this._readyState = lS, wl.log("".concat(this._className, "._connect isWorkerEnabled:").concat(this.getIsWorkerEnabled(), " socketID:").concat(this._socketID, " url:").concat(this.getURL())), new G_(P_.WS_CONNECT).setMessage("socketID:".concat(this._socketID, " url:").concat(this.getURL())).end();
      } }, { key: "getURL", value: function() {
        this._channelModule.isDevMode() && (this._canIUseBinaryFrame = false);
        var e4 = Rd();
        (Qc || $c && "windows" === e4 || Zc) && (this._canIUseBinaryFrame = false);
        var t3 = -1;
        "ios" === e4 ? t3 = dl || -1 : "android" === e4 && (t3 = gl || -1);
        var n3 = this._channelModule.getModule(jg), o3 = this._channelModule.getPlatform(), r3 = n3.getSDKAppID(), a3 = n3.getInstanceID();
        return this._canIUseBinaryFrame ? "".concat(this._url, "/binfo?sdkappid=").concat(r3, "&instanceid=").concat(a3, "&random=").concat(this._getRandom(), "&platform=").concat(o3, "&host=").concat(e4, "&version=").concat(t3) : "".concat(this._url, "/info?sdkappid=").concat(r3, "&instanceid=").concat(a3, "&random=").concat(this._getRandom(), "&platform=").concat(o3, "&host=").concat(e4, "&version=").concat(t3);
      } }, { key: "_closeConnection", value: function(e4) {
        wl.log("".concat(this._className, "._closeConnection socketID:").concat(this._socketID)), this._socket && (this._socket.close(e4), this._socketID = -1, this._socket = null, this._readyState = dS);
      } }, { key: "_resend", value: function() {
        var e4 = this;
        if (wl.log("".concat(this._className, "._resend reConnectFlag:").concat(this._reConnectFlag), "promiseMap.size:".concat(this._promiseMap.size, " simpleRequestMap.size:").concat(this._simpleRequestMap.size)), this._promiseMap.size > 0 && this._promiseMap.forEach(function(t4, n4) {
          var o4 = t4.uplinkData, r4 = t4.resolve, a4 = t4.reject;
          e4._promiseMap.set(n4, { resolve: r4, reject: a4, timestamp: Date.now(), uplinkData: o4 }), e4._execute(n4, o4);
        }), this._simpleRequestMap.size > 0) {
          var t3, n3 = E2(this._simpleRequestMap);
          try {
            for (n3.s(); !(t3 = n3.n()).done; ) {
              var o3 = m2(t3.value, 2), r3 = o3[0], a3 = o3[1];
              this._execute(r3, a3);
            }
          } catch (s3) {
            n3.e(s3);
          } finally {
            n3.f();
          }
          this._simpleRequestMap.clear();
        }
      } }, { key: "send", value: function(e4) {
        var t3 = this;
        e4.head.seq = this._getSequence(), e4.head.reqtime = Math.floor(Date.now() / 1e3);
        e4.keyMap;
        var n3 = g2(e4, iS), o3 = this._getRequestIDFromHead(e4.head), r3 = JSON.stringify(n3);
        return new Promise(function(e5, a3) {
          (t3._promiseMap.set(o3, { resolve: e5, reject: a3, timestamp: Date.now(), uplinkData: r3 }), wl.debug("".concat(t3._className, ".send uplinkData:").concat(JSON.stringify(n3), " requestID:").concat(o3, " readyState:").concat(t3._readyState)), t3._readyState !== cS) ? t3._reConnect() : (t3._execute(o3, r3), t3._channelModule.getModule(ah).addRequestCount());
        });
      } }, { key: "simplySend", value: function(e4) {
        e4.head.seq = this._getSequence(), e4.head.reqtime = Math.floor(Date.now() / 1e3);
        e4.keyMap;
        var t3 = g2(e4, uS), n3 = this._getRequestIDFromHead(e4.head), o3 = JSON.stringify(t3);
        this._readyState !== cS ? (this._simpleRequestMap.size < this.MAX_SIZE ? this._simpleRequestMap.set(n3, o3) : wl.log("".concat(this._className, ".simplySend. simpleRequestMap is full, drop request!")), this._reConnect()) : this._execute(n3, o3);
      } }, { key: "_execute", value: function(e4, t3) {
        this._socket.send({ data: t3, fail: tl ? this._onSendFail.bind(this) : void 0, requestID: e4 });
      } }, { key: "_onSendFail", value: function(e4) {
        wl.log("".concat(this._className, "._onSendFail requestID:").concat(e4));
      } }, { key: "_getSequence", value: function() {
        var e4;
        if (this._startSequence < 2415919103)
          return e4 = this._startSequence, this._startSequence += 1, 2415919103 === this._startSequence && (this._startSequence = pd()), e4;
      } }, { key: "_getRequestIDFromHead", value: function(e4) {
        return e4.servcmd + e4.seq;
      } }, { key: "_getResponseKeyMap", value: function(e4) {
        var n3 = this._channelModule.getKeyMap(e4);
        return t2(t2({}, xI.response), n3.response);
      } }, { key: "_reConnect", value: function() {
        this._readyState !== cS && this._readyState !== lS && this.forcedReconnect();
      } }, { key: "forcedReconnect", value: function() {
        var e4 = this;
        wl.log("".concat(this._className, ".forcedReconnect count:").concat(this._reConnectCount, " readyState:").concat(this._readyState)), this._reConnectFlag = true, this._resetRandom(), this._reConnectCount < this.MAX_RECONNECT_COUNT ? (this._reConnectCount += 1, this._closeConnection(sS), this._initConnection()) : (this._reConnectCount = 0, this._channelModule.probeNetwork().then(function(t3) {
          var n3 = m2(t3, 2), o3 = n3[0];
          n3[1];
          o3 ? (wl.warn("".concat(e4._className, ".forcedReconnect disconnected from wsserver but network is ok, continue...")), e4._closeConnection(sS), e4._initConnection()) : e4._channelModule.onReconnectFailed();
        }));
      } }, { key: "getReconnectFlag", value: function() {
        return this._reConnectFlag;
      } }, { key: "_setNextPingTs", value: function() {
        this._nextPingTs = Date.now() + 1e4;
      } }, { key: "getNextPingTs", value: function() {
        return this._nextPingTs;
      } }, { key: "isConnected", value: function() {
        return this._readyState === cS;
      } }, { key: "canIUseBinaryFrame", value: function() {
        return this._canIUseBinaryFrame;
      } }, { key: "setIsWorkerEnabled", value: function(e4) {
        wl.log("".concat(this._className, ".setIsWorkerEnabled flag:").concat(e4)), this._isWorkerEnabled = e4;
      } }, { key: "getIsWorkerEnabled", value: function() {
        return this._isWorkerEnabled && Tl;
      } }, { key: "_getRandom", value: function() {
        return 0 === this._random && (this._random = Math.random()), this._random;
      } }, { key: "_resetRandom", value: function() {
        this._random = 0;
      } }, { key: "close", value: function() {
        wl.log("".concat(this._className, ".close")), this._closeConnection(aS), this._promiseMap.clear(), this._startSequence = pd(), this._readyState = dS, this._simpleRequestMap.clear(), this._reConnectFlag = false, this._reConnectCount = 0, this._onOpenTs = 0, this._url = "", this._random = 0, this._canIUseBinaryFrame = true, this._isWorkerEnabled = true;
      } }]), e3;
    }(), gS = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        if (o2(this, n3), (r3 = t3.call(this, e4))._className = "ChannelModule", r3._socketHandler = new pS(h2(r3)), r3._probing = false, r3._isAppShowing = true, r3._previousState = gr.NET_STATE_CONNECTED, tl && "function" == typeof ol.onAppShow && "function" == typeof ol.onAppHide) {
          var a3 = r3._onAppHide.bind(h2(r3)), s3 = r3._onAppShow.bind(h2(r3));
          "function" == typeof ol.offAppHide && ol.offAppHide(a3), "function" == typeof ol.offAppShow && ol.offAppShow(s3), ol.onAppHide(a3), ol.onAppShow(s3);
        }
        return r3._timerForNotLoggedIn = -1, r3._timerForNotLoggedIn = setInterval(r3.onCheckTimer.bind(h2(r3)), 1e3), r3._fatalErrorFlag = false, r3;
      }
      return a2(n3, [{ key: "onCheckTimer", value: function(e4) {
        this._socketHandler && (this.isLoggedIn() ? (this._timerForNotLoggedIn > 0 && (clearInterval(this._timerForNotLoggedIn), this._timerForNotLoggedIn = -1), this._socketHandler.onCheckTimer(e4)) : this._socketHandler.onCheckTimer(1), this._checkNextPing());
      } }, { key: "onErrorCodeNotZero", value: function(e4) {
        this.getModule(Zg).onErrorCodeNotZero(e4);
      } }, { key: "onMessage", value: function(e4) {
        this.getModule(Zg).onMessage(e4);
      } }, { key: "send", value: function(e4) {
        return this._socketHandler ? this._previousState !== gr.NET_STATE_CONNECTED && e4.head.servcmd.includes(Yf) ? (this.reConnect(), this._sendLogViaHTTP(e4)) : this._socketHandler.send(e4) : Promise.reject();
      } }, { key: "_sendLogViaHTTP", value: function(e4) {
        var t4 = bc.HOST.CURRENT.STAT;
        return new Promise(function(n4, o3) {
          var r3 = "".concat(t4, "/v4/imopenstat/tim_web_report_v2?sdkappid=").concat(e4.head.sdkappid, "&reqtime=").concat(Date.now()), a3 = JSON.stringify(e4.body), s3 = "application/x-www-form-urlencoded;charset=UTF-8";
          if (tl)
            ol.request({ url: r3, data: a3, method: "POST", timeout: 3e3, header: { "content-type": s3 }, success: function() {
              n4();
            }, fail: function() {
              o3(new KM({ code: dh.NETWORK_ERROR }));
            } });
          else {
            var i3 = new XMLHttpRequest(), u3 = setTimeout(function() {
              i3.abort(), o3(new KM({ code: dh.NETWORK_TIMEOUT }));
            }, 3e3);
            i3.onreadystatechange = function() {
              4 === i3.readyState && (clearTimeout(u3), 200 === i3.status || 304 === i3.status ? n4() : o3(new KM({ code: dh.NETWORK_ERROR })));
            }, i3.open("POST", r3, true), i3.setRequestHeader("Content-type", s3), i3.send(a3);
          }
        });
      } }, { key: "simplySend", value: function(e4) {
        return this._socketHandler ? this._socketHandler.simplySend(e4) : Promise.reject();
      } }, { key: "onOpen", value: function() {
        this._ping();
      } }, { key: "onClose", value: function() {
        this._socketHandler && (this._socketHandler.getReconnectFlag() && this._emitNetStateChangeEvent(gr.NET_STATE_DISCONNECTED));
        this.reConnect();
      } }, { key: "onError", value: function() {
        tl && !Zc && (this.isIntl() || wl.error("".concat(this._className, ".onError \u4ECEv2.11.2\u8D77\uFF0CSDK \u652F\u6301\u4E86 WebSocket\uFF0C\u5982\u60A8\u672A\u6DFB\u52A0\u76F8\u5173\u53D7\u4FE1\u57DF\u540D\uFF0C\u8BF7\u5148\u6DFB\u52A0\uFF01(\u5982\u5DF2\u6DFB\u52A0\u8BF7\u5FFD\u7565)\uFF0C\u5347\u7EA7\u6307\u5F15: https://web.sdk.qcloud.com/im/doc/zh-cn/tutorial-02-upgradeguideline.html"))), this._emitNetStateChangeEvent(gr.NET_STATE_DISCONNECTED);
      } }, { key: "getKeyMap", value: function(e4) {
        return this.getModule(Zg).getKeyMap(e4);
      } }, { key: "_onAppHide", value: function() {
        this._isAppShowing = false;
      } }, { key: "_onAppShow", value: function() {
        this._isAppShowing = true;
      } }, { key: "onRequestTimeout", value: function(e4) {
      } }, { key: "onReconnected", value: function() {
        wl.log("".concat(this._className, ".onReconnected")), this.getModule(Zg).onReconnected(), this._emitNetStateChangeEvent(gr.NET_STATE_CONNECTED);
      } }, { key: "onReconnectFailed", value: function() {
        wl.log("".concat(this._className, ".onReconnectFailed")), this._emitNetStateChangeEvent(gr.NET_STATE_DISCONNECTED);
      } }, { key: "setIsWorkerEnabled", value: function(e4) {
        this._socketHandler && this._socketHandler.setIsWorkerEnabled(false);
      } }, { key: "offline", value: function() {
        this._emitNetStateChangeEvent(gr.NET_STATE_DISCONNECTED);
      } }, { key: "reConnect", value: function() {
        var e4 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], t4 = false;
        this._socketHandler && (t4 = this._socketHandler.getReconnectFlag());
        var n4 = "forcedFlag:".concat(e4, " fatalErrorFlag:").concat(this._fatalErrorFlag, " previousState:").concat(this._previousState, " reconnectFlag:").concat(t4);
        if (wl.log("".concat(this._className, ".reConnect ").concat(n4)), !this._fatalErrorFlag && this._socketHandler) {
          if (true === e4)
            this._socketHandler.forcedReconnect();
          else {
            if (this._previousState === gr.NET_STATE_CONNECTING && t4)
              return;
            this._socketHandler.forcedReconnect();
          }
          this._emitNetStateChangeEvent(gr.NET_STATE_CONNECTING);
        }
      } }, { key: "_emitNetStateChangeEvent", value: function(e4) {
        this._previousState !== e4 && (wl.log("".concat(this._className, "._emitNetStateChangeEvent from ").concat(this._previousState, " to ").concat(e4)), this._previousState = e4, this.emitOuterEvent(pr.NET_STATE_CHANGE, { state: e4 }));
      } }, { key: "_ping", value: function() {
        var e4 = this;
        if (true !== this._probing) {
          this._probing = true;
          var t4 = this.getModule(Zg).getProtocolData({ protocolName: $f });
          this.send(t4).then(function() {
            e4._probing = false;
          }).catch(function(t5) {
            if (wl.warn("".concat(e4._className, "._ping failed. error:"), t5), e4._probing = false, t5 && 60002 === t5.code)
              return new G_(P_.ERROR).setMessage("code:".concat(t5.code, " message:").concat(t5.message)).setNetworkType(e4.getModule($g).getNetworkType()).end(), e4._fatalErrorFlag = true, void e4._emitNetStateChangeEvent(gr.NET_STATE_DISCONNECTED);
            e4.probeNetwork().then(function(t6) {
              var n4 = m2(t6, 2), o3 = n4[0], r3 = n4[1];
              wl.log("".concat(e4._className, "._ping failed. probe network, isAppShowing:").concat(e4._isAppShowing, " online:").concat(o3, " networkType:").concat(r3)), o3 ? e4.reConnect() : e4._emitNetStateChangeEvent(gr.NET_STATE_DISCONNECTED);
            });
          });
        }
      } }, { key: "_checkNextPing", value: function() {
        this._socketHandler && (this._socketHandler.isConnected() && Date.now() >= this._socketHandler.getNextPingTs() && this._ping());
      } }, { key: "dealloc", value: function() {
        this._socketHandler && (this._socketHandler.close(), this._socketHandler = null), this._timerForNotLoggedIn > -1 && clearInterval(this._timerForNotLoggedIn);
      } }, { key: "onRestApiKickedOut", value: function() {
        this._socketHandler && (this._socketHandler.close(), this.reConnect(true));
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._previousState = gr.NET_STATE_CONNECTED, this._probing = false, this._fatalErrorFlag = false, this._timerForNotLoggedIn = setInterval(this.onCheckTimer.bind(this), 1e3);
      } }]), n3;
    }(hh), hS = ["a2", "tinyid"], fS = ["a2", "tinyid"], _S = function() {
      function e3(t3) {
        o2(this, e3), this._className = "ProtocolHandler", this._sessionModule = t3, this._configMap = /* @__PURE__ */ new Map(), this._fillConfigMap();
      }
      return a2(e3, [{ key: "_fillConfigMap", value: function() {
        this._configMap.clear();
        var e4 = this._sessionModule.genCommonHead(), n3 = this._sessionModule.genCosSpecifiedHead(), o3 = this._sessionModule.genSSOReportHead(), r3 = this._sessionModule.isIntl();
        this._configMap.set(fh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_STATUS, ".").concat(bc.CMD.LOGIN) }), body: { state: "Online", isWebUniapp: 0, deviceBrand: 0 }, keyMap: { request: { deviceBrand: "InstType" }, response: { InstId: "instanceID", HelloInterval: "helloInterval" } } };
        }(e4)), this._configMap.set(_h, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_STATUS, ".").concat(bc.CMD.LOGOUT) }), body: { type: 0 }, keyMap: { request: { type: "wslogout_type" } } };
        }(e4)), this._configMap.set(mh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_STATUS, ".").concat(bc.CMD.HELLO) }), body: { isWebUniapp: 0 }, keyMap: { response: { NewInstInfo: "newInstanceInfo" } } };
        }(e4)), this._configMap.set(vh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.STAT_SERVICE, ".").concat(bc.CMD.KICK_OTHER) }), body: {} };
        }(e4)), this._configMap.set(Hf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_COS_SIGN, ".").concat(bc.CMD.COS_SIGN) }), body: { cmd: "open_im_cos_svc", subCmd: "get_cos_token", duration: 300, version: 2 }, keyMap: { request: { userSig: "usersig", subCmd: "sub_cmd", cmd: "cmd", duration: "duration", version: "version" }, response: { expired_time: "expiredTime", bucket_name: "bucketName", session_token: "sessionToken", tmp_secret_id: "secretId", tmp_secret_key: "secretKey" } } };
        }(n3)), this._configMap.set(jf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.CUSTOM_UPLOAD, ".").concat(bc.CMD.COS_PRE_SIG) }), body: { fileType: void 0, fileName: void 0, uploadMethod: 0, duration: 900 }, keyMap: { request: { userSig: "usersig", fileType: "file_type", fileName: "file_name", uploadMethod: "upload_method" }, response: { expired_time: "expiredTime", request_id: "requestId", head_url: "headUrl", upload_url: "uploadUrl", download_url: "downloadUrl", ci_url: "ciUrl", snapshot_url: "requestSnapshotUrl" } } };
        }(n3)), this._configMap.set(Wf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.CUSTOM_UPLOAD, ".").concat(bc.CMD.VIDEO_COVER) }), body: { version: 1, platform: void 0, coverName: void 0, requestSnapshotUrl: void 0 }, keyMap: { request: { version: "version", platform: "platform", coverName: "cover_name", requestSnapshotUrl: "snapshot_url" }, response: { error_code: "errorCode", error_msg: "errorInfo", download_url: "snapshotUrl" } } };
        }(n3)), this._configMap.set(o_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_CONFIG_MANAGER, ".").concat(bc.CMD.FETCH_COMMERCIAL_CONFIG) }), body: { SDKAppID: 0 }, keyMap: { request: { SDKAppID: "uint32_sdkappid" }, response: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_purchase_bits: "purchaseBits", uint32_expired_time: "expiredTime" } } };
        }(e4)), this._configMap.set(r_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_CONFIG_MANAGER, ".").concat(bc.CMD.PUSHED_COMMERCIAL_CONFIG) }), body: {}, keyMap: { response: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_purchase_bits: "purchaseBits", uint32_expired_time: "expiredTime" } } };
        }(e4)), this._configMap.set(t_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_CONFIG_MANAGER, ".").concat(bc.CMD.FETCH_CLOUD_CONTROL_CONFIG) }), body: { SDKAppID: 0, version: 0 }, keyMap: { request: { SDKAppID: "uint32_sdkappid", version: "uint64_version" }, response: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_json_config: "cloudControlConfig", uint32_expired_time: "expiredTime", uint32_sdkappid: "SDKAppID", uint64_version: "version" } } };
        }(e4)), this._configMap.set(n_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_CONFIG_MANAGER, ".").concat(bc.CMD.PUSHED_CLOUD_CONTROL_CONFIG) }), body: {}, keyMap: { response: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_json_config: "cloudControlConfig", uint32_expired_time: "expiredTime", uint32_sdkappid: "SDKAppID", uint64_version: "version" } } };
        }(e4)), this._configMap.set(a_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OVERLOAD_PUSH, ".").concat(bc.CMD.OVERLOAD_NOTIFY) }), body: {}, keyMap: { response: { OverLoadServCmd: "overloadCommand", DelaySecs: "waitingTime" } } };
        }(e4)), this._configMap.set(Mh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.GET_MESSAGES) }), body: { cookie: "", syncFlag: 0, needAbstract: 1, isOnlineSync: 0 }, keyMap: { request: { fromAccount: "From_Account", toAccount: "To_Account", from: "From_Account", to: "To_Account", time: "MsgTimeStamp", sequence: "MsgSeq", random: "MsgRandom", elements: "MsgBody" }, response: { MsgList: "messageList", SyncFlag: "syncFlag", To_Account: "to", From_Account: "from", ClientSeq: "clientSequence", MsgSeq: "sequence", NoticeSeq: "noticeSequence", NotifySeq: "notifySequence", MsgRandom: "random", MsgTimeStamp: "time", MsgContent: "content", ToGroupId: "to", MsgKey: "messageKey", GroupTips: "groupTips", MsgBody: "elements", MsgType: "type", C2CRemainingUnreadCount: "C2CRemainingUnreadList", C2CPairUnreadCount: "C2CPairUnreadList" } } };
        }(e4)), r3 || (this._configMap.set(yh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.BIG_DATA_HALLWAY_AUTH_KEY) }), body: {} };
        }(e4)), this._configMap.set(m_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_MSG_AUDIT_MGR, ".").concat(bc.CMD.GET_RPOFANITY_LIST) }), body: { version: 0, deviceID: "", startIndex: void 0 }, keyMap: { request: { version: "uint64_version", deviceID: "str_device_id", startIndex: "uint64_start_index" }, response: { msg_cmd_error_code: "errorInfo", str_err_msg: "errorMessage", uint32_code: "errorCode", msg_scene_ctl_config: "filterConfig", uint64_c2c_custom_msg_flag: "c2c_custom_message", uint64_c2c_text_msg_flag: "c2c_text_message", uint64_group_custom_msg_flag: "group_custom_message", uint64_group_text_msg_flag: "group_text_message", uint64_group_info_flag: "group_profile", uint64_group_member_info_flag: "group_member_profile", uint64_relation_chain_flag: "sns", uint64_user_info_flag: "user_profile", rpt_msg_dirty_word: "lexicon", str_dirty_word: "profanity", str_replaced_content: "replacement", uint64_filter_type: "filterType", uint64_id: "id", uint64_word_type: "profanityType", uint64_complete_flag: "completeFlag", uint64_next_start_index: "nextStartIndex", uint64_version: "version", uint64_expired_time: "expiredTime" } } };
        }(e4))), this._configMap.set(Ih, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.SEND_MESSAGE) }), body: { fromAccount: "", toAccount: "", msgSeq: 0, msgRandom: 0, msgBody: [], cloudCustomData: void 0, nick: "", avatar: "", msgLifeTime: void 0, offlinePushInfo: { pushFlag: 0, title: "", desc: "", ext: "", apnsInfo: { badgeMode: 0, isVoipPush: void 0 }, androidInfo: { OPPOChannelID: "" } }, messageControlInfo: void 0, clientTime: void 0, needReadReceipt: 0, isSupportExtension: 0 }, keyMap: { request: { fromAccount: "From_Account", toAccount: "To_Account", msgTimeStamp: "MsgTimeStamp", msgSeq: "MsgSeq", msgRandom: "MsgRandom", msgBody: "MsgBody", count: "MaxCnt", lastMessageTime: "LastMsgTime", messageKey: "MsgKey", peerAccount: "Peer_Account", data: "Data", description: "Desc", extension: "Ext", type: "MsgType", content: "MsgContent", sizeType: "Type", uuid: "UUID", url: "", imageUrl: "URL", fileUrl: "Url", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", videoUrl: "", downloadFlag: "Download_Flag", nick: "From_AccountNick", avatar: "From_AccountHeadurl", from: "From_Account", time: "MsgTimeStamp", messageRandom: "MsgRandom", messageSequence: "MsgSeq", elements: "MsgBody", clientSequence: "ClientSeq", payload: "MsgContent", messageList: "MsgList", messageNumber: "MsgNum", abstractList: "AbstractList", messageBody: "MsgBody", needReadReceipt: "IsNeedReadReceipt" } } };
        }(e4)), this._configMap.set(Th, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.SEND_GROUP_MESSAGE) }), body: { fromAccount: "", groupID: "", random: 0, clientSequence: 0, priority: "", msgBody: [], cloudCustomData: void 0, onlineOnlyFlag: 0, offlinePushInfo: { pushFlag: 0, title: "", desc: "", ext: "", apnsInfo: { badgeMode: 0, isVoipPush: void 0 }, androidInfo: { OPPOChannelID: "" } }, groupAtInfo: [], messageControlInfo: void 0, clientTime: void 0, needReadReceipt: 0, topicID: void 0, receiverList: void 0, isSupportExtension: 0 }, keyMap: { request: { to: "GroupId", extension: "Ext", data: "Data", description: "Desc", random: "Random", sequence: "ReqMsgSeq", count: "ReqMsgNumber", type: "MsgType", priority: "MsgPriority", content: "MsgContent", elements: "MsgBody", sizeType: "Type", uuid: "UUID", url: "", imageUrl: "URL", fileUrl: "Url", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", videoUrl: "", downloadFlag: "Download_Flag", clientSequence: "ClientSeq", from: "From_Account", time: "MsgTimeStamp", messageRandom: "MsgRandom", messageSequence: "MsgSeq", payload: "MsgContent", messageList: "MsgList", messageNumber: "MsgNum", abstractList: "AbstractList", messageBody: "MsgBody", needReadReceipt: "NeedReadReceipt", receiverList: "To_Account" }, response: { MsgTime: "time", MsgSeq: "sequence" } } };
        }(e4)), this._configMap.set(Ah, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.REVOKE_C2C_MESSAGE) }), body: { msgInfo: { fromAccount: "", toAccount: "", msgTimeStamp: 0, msgSeq: 0, msgRandom: 0 } }, keyMap: { request: { msgInfo: "MsgInfo", msgTimeStamp: "MsgTimeStamp", msgSeq: "MsgSeq", msgRandom: "MsgRandom" } } };
        }(e4)), this._configMap.set(df, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.REVOKE_GROUP_MESSAGE) }), body: { groupID: "", msgSeqList: void 0, topicID: "" }, keyMap: { request: { msgSeqList: "MsgSeqList", msgSeq: "MsgSeq" } } };
        }(e4)), this._configMap.set(Lh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.GET_C2C_ROAM_MESSAGES) }), body: { peerAccount: "", count: 15, lastMessageTime: 0, messageKey: "", withRecalledMessage: 1, direction: 0 }, keyMap: { request: { messageKey: "MsgKey", peerAccount: "Peer_Account", count: "MaxCnt", lastMessageTime: "LastMsgTime", withRecalledMessage: "WithRecalledMsg", direction: "GetDirection" }, response: { LastMsgTime: "lastMessageTime", IsNeedReadReceipt: "needReadReceipt", IsPeerRead: "readReceiptSentByPeer" } } };
        }(e4)), this._configMap.set(Uh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.MODIFY_C2C_MESSAGE) }), body: { from: "", to: "", sequence: 0, random: 0, time: 0, version: 0, elements: void 0, cloudCustomData: void 0 }, keyMap: { request: { sequence: "MsgSeq", random: "MsgRandom", time: "MsgTime", version: "MsgVersion", type: "MsgType", content: "MsgContent" } } };
        }(e4)), this._configMap.set(hf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.GET_GROUP_ROAM_MESSAGES) }), body: { withRecalledMsg: 1, groupID: "", count: 15, sequence: "", topicID: void 0 }, keyMap: { request: { sequence: "ReqMsgSeq", count: "ReqMsgNumber", withRecalledMessage: "WithRecalledMsg" }, response: { Random: "random", MsgTime: "time", MsgSeq: "sequence", ReqMsgSeq: "sequence", RspMsgList: "messageList", IsPlaceMsg: "isPlaceMessage", IsSystemMsg: "isSystemMessage", ToGroupId: "to", EnumFrom_AccountType: "fromAccountType", EnumTo_AccountType: "toAccountType", GroupCode: "groupCode", MsgPriority: "priority", MsgBody: "elements", MsgType: "type", MsgContent: "content", IsFinished: "complete", Download_Flag: "downloadFlag", ClientSeq: "clientSequence", ThumbUUID: "thumbUUID", VideoUUID: "videoUUID", ToTopicId: "topicID", InvisibleMsgSeq: "invisibleSequenceList" } } };
        }(e4)), this._configMap.set(kh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.SET_C2C_MESSAGE_READ) }), body: { C2CMsgReaded: void 0 }, keyMap: { request: { lastMessageTime: "LastedMsgTime" } } };
        }(e4)), this._configMap.set(Rh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.SET_C2C_PEER_MUTE_NOTIFICATIONS) }), body: { userIDList: void 0, muteFlag: 0 }, keyMap: { request: { userIDList: "Peer_Account", muteFlag: "Mute_Notifications" } } };
        }(e4)), this._configMap.set(Oh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.GET_C2C_PEER_MUTE_NOTIFICATIONS) }), body: { updateSequence: 0 }, keyMap: { response: { MuteNotificationsList: "muteFlagList" } } };
        }(e4)), this._configMap.set(pf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.SET_GROUP_MESSAGE_READ) }), body: { groupID: void 0, messageReadSeq: void 0, topicID: void 0 }, keyMap: { request: { messageReadSeq: "MsgReadedSeq" } } };
        }(e4)), this._configMap.set(gf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.SET_ALL_MESSAGE_READ) }), body: { readAllC2CMessage: 0, groupMessageReadInfoList: [] }, keyMap: { request: { readAllC2CMessage: "C2CReadAllMsg", groupMessageReadInfoList: "GroupReadInfo", messageSequence: "MsgSeq" }, response: { C2CReadAllMsg: "readAllC2CMessage", GroupReadInfoArray: "groupMessageReadInfoList" } } };
        }(e4)), this._configMap.set(Ph, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.DELETE_C2C_MESSAGE) }), body: { fromAccount: "", to: "", keyList: void 0 }, keyMap: { request: { keyList: "MsgKeyList" } } };
        }(e4)), this._configMap.set(Ef, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.DELETE_GROUP_MESSAGE) }), body: { groupID: "", deleter: "", keyList: void 0, topicID: void 0 }, keyMap: { request: { deleter: "Deleter_Account", keyList: "Seqs" } } };
        }(e4)), this._configMap.set(v_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_TRANSLATE, ".").concat(bc.CMD.TRANSLATE_TEXT) }), body: { sourceTextList: void 0, SDKAppID: 0, from: 0, source: "", target: "" }, keyMap: { request: { sourceTextList: "SourceText", SDKAppID: "SdkAppId", from: "FromAccount" }, response: { TargetText: "translatedTextList", RequestId: "requestID", CmdErrorCode: "error", ErrorCode: "code", ErrorInfo: "message" } } };
        }(e4)), this._configMap.set(Sf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.MODIFY_GROUP_MESSAGE) }), body: { groupID: "", topicID: void 0, sequence: 0, version: 0, elements: void 0, cloudCustomData: void 0 }, keyMap: { request: { sequence: "MsgSeq", version: "MsgVersion", type: "MsgType", content: "MsgContent" } } };
        }(e4)), this._configMap.set(ff, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.GET_READ_RECEIPT) }), body: { groupID: "", sequenceList: void 0 }, keyMap: { request: { sequence: "MsgSeq" } } };
        }(e4)), this._configMap.set(mf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.SEND_C2C_READ_RECEIPT) }), body: { peerAccount: "", messageInfoList: void 0 }, keyMap: { request: { peerAccount: "Peer_Account", messageInfoList: "C2CMsgInfo", fromAccount: "From_Account", toAccount: "To_Account", sequence: "MsgSeq", random: "MsgRandom", time: "MsgTime", clientTime: "MsgClientTime" } } };
        }(e4)), this._configMap.set(_f, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.SEND_READ_RECEIPT) }), body: { groupID: "", sequenceList: void 0 }, keyMap: { request: { sequenceList: "MsgSeqList", sequence: "MsgSeq" } } };
        }(e4)), this._configMap.set(vf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.GET_READ_RECEIPT_DETAIL) }), body: { groupID: "", sequence: void 0, flag: 0, cursor: 0, count: 0 }, keyMap: { request: { sequence: "MsgSeq", count: "Num" }, response: { ReadList: "readUserIDList", Read_Account: "userID", UnreadList: "unreadUserIDList", Unread_Account: "userID", IsFinish: "isCompleted" } } };
        }(e4)), this._configMap.set(bh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM_MSG_EXT, ".").concat(bc.CMD.MODIFY_C2C_MESSAGE_EXTENSIONS) }), body: { from: void 0, to: void 0, messageKey: void 0, operateType: void 0, extensionList: void 0 } };
        }(e4)), this._configMap.set(wh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM_MSG_EXT, ".").concat(bc.CMD.GET_C2C_MESSAGE_EXTENSIONS) }), body: { from: void 0, to: void 0, messageKey: void 0, startSequence: void 0 } };
        }(e4)), this._configMap.set(Of, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM_MSG_EXT, ".").concat(bc.CMD.MODIFY_GROUP_MESSAGE_EXTENSIONS) }), body: { groupID: void 0, messageSequence: void 0, operateType: void 0, extensionList: void 0 } };
        }(e4)), this._configMap.set(Lf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM_MSG_EXT, ".").concat(bc.CMD.GET_GROUP_MESSAGE_EXTENSIONS) }), body: { groupID: void 0, messageSequence: void 0, startSequence: void 0 } };
        }(e4)), this._configMap.set(Gh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.GET_PEER_READ_TIME) }), body: { userIDList: void 0 }, keyMap: { request: { userIDList: "To_Account" }, response: { ReadTime: "peerReadTimeList" } } };
        }(e4)), this._configMap.set(qh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.RECENT_CONTACT, ".").concat(bc.CMD.GET_CONVERSATION_LIST) }), body: { fromAccount: void 0, count: 0 }, keyMap: { request: {}, response: { SessionItem: "conversations", ToAccount: "groupID", To_Account: "userID", UnreadMsgCount: "unreadCount", MsgGroupReadedSeq: "messageReadSeq", C2cPeerReadTime: "c2cPeerReadTime" } } };
        }(e4)), this._configMap.set(Fh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.RECENT_CONTACT, ".").concat(bc.CMD.PAGING_GET_CONVERSATION_LIST) }), body: { fromAccount: void 0, timeStamp: void 0, startIndex: void 0, pinnedTimeStamp: void 0, pinnedStartIndex: void 0, orderType: void 0, messageAssistFlag: 4, assistFlag: 15 }, keyMap: { request: { messageAssistFlag: "MsgAssistFlags", assistFlag: "AssistFlags", pinnedTimeStamp: "TopTimeStamp", pinnedStartIndex: "TopStartIndex" }, response: { SessionItem: "conversations", ToAccount: "groupID", To_Account: "userID", UnreadMsgCount: "unreadCount", MsgGroupReadedSeq: "messageReadSeq", C2cPeerReadTime: "c2cPeerReadTime", LastMsgFlags: "lastMessageFlag", TopFlags: "isPinned", TopTimeStamp: "pinnedTimeStamp", TopStartIndex: "pinnedStartIndex", GroupId: "convGroupID" } } };
        }(e4)), this._configMap.set(xh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.RECENT_CONTACT, ".").concat(bc.CMD.DELETE_CONVERSATION) }), body: { fromAccount: "", toAccount: void 0, type: 1, toGroupID: void 0, clearHistoryMessage: 1 }, keyMap: { request: { toGroupID: "ToGroupid", clearHistoryMessage: "ClearRamble" } } };
        }(e4)), this._configMap.set(Vh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.RECENT_CONTACT, ".").concat(bc.CMD.CLEAR_HISTORY_MESSAGE) }), body: { fromAccount: "", toAccount: void 0, type: 1, toGroupID: void 0 }, keyMap: { request: { toGroupID: "ToGroupid" } } };
        }(e4)), this._configMap.set(Bh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.RECENT_CONTACT, ".").concat(bc.CMD.PIN_CONVERSATION) }), body: { fromAccount: "", operationType: 1, itemList: void 0 }, keyMap: { request: { itemList: "RecentContactItem" } } };
        }(e4)), this._configMap.set(Kh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.DELETE_GROUP_AT_TIPS) }), body: { messageListToDelete: void 0 }, keyMap: { request: { messageListToDelete: "DelMsgList", messageSeq: "MsgSeq", messageRandom: "MsgRandom" } } };
        }(e4)), this._configMap.set(Hh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.RECENT_CONTACT, ".").concat(bc.CMD.MARK_CONVERSATION) }), body: { fromAccount: "", itemList: void 0 }, keyMap: { request: { itemList: "MarkItem", operationType: "OptType", groupID: "ToGroupId" }, response: { ToGroupId: "groupID", OptType: "operationType" } } };
        }(e4)), this._configMap.set(jh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.RECENT_CONTACT, ".").concat(bc.CMD.MARK_CONVERSATION) }), body: { fromAccount: "", itemList: void 0 }, keyMap: { request: { itemList: "MarkItem", operationType: "OptType", groupID: "ToGroupId" }, response: { ToGroupId: "groupID", OptType: "operationType" } } };
        }(e4)), this._configMap.set(Wh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.RECENT_CONTACT, ".").concat(bc.CMD.CREATE_CONVERSATION_GROUP) }), body: { fromAccount: "", itemList: void 0 }, keyMap: { request: { itemList: "GroupContactItem", groupID: "ToGroupId" }, response: { GroupId: "convGroupID", ToGroupId: "groupID", OptType: "operationType" } } };
        }(e4)), this._configMap.set(Yh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.RECENT_CONTACT, ".").concat(bc.CMD.DELETE_CONVERSATION_GROUP) }), body: { fromAccount: "", groupName: void 0 }, keyMap: { request: {}, response: { GroupId: "convGroupID" } } };
        }(e4)), this._configMap.set($h, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.RECENT_CONTACT, ".").concat(bc.CMD.UPDATE_CONVERSATION_GROUP) }), body: { fromAccount: "", updateType: void 0, updateGroup: void 0 }, keyMap: { request: { oldName: "OldGroupName", newName: "NewGroupName", groupID: "ToGroupId", operationType: "ContactOptType", groupName: "OldGroupName", updateItem: "ContactUpdateItem" }, response: { ContactOptType: "operationType", ToGroupId: "groupID", GroupId: "convGroupID" } } };
        }(e4)), this._configMap.set(zh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.RECENT_CONTACT, ".").concat(bc.CMD.UPDATE_CONVERSATION_GROUP) }), body: { fromAccount: "", updateType: void 0, updateGroup: { groupName: void 0, updateGroupType: void 0, updateItem: void 0 } }, keyMap: { request: {}, response: {} } };
        }(e4)), this._configMap.set(Jh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.RECENT_CONTACT, ".").concat(bc.CMD.UPDATE_CONVERSATION_GROUP) }), body: { fromAccount: "", updateType: void 0, updateGroup: void 0 }, keyMap: { request: {}, response: {} } };
        }(e4)), this._configMap.set(Xh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.RECENT_CONTACT, ".").concat(bc.CMD.GET_CONVERSATION_GROUP_LIST) }), body: { fromAccount: "", startTime: void 0, startIndex: void 0 }, keyMap: { request: {}, response: { GroupId: "convGroupID", ToGroupId: "groupID", OptType: "operationType", CustomMark: "customData", ContactGroupId: "convGroupIDList" } } };
        }(e4)), this._configMap.set(Ch, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.PROFILE, ".").concat(bc.CMD.PORTRAIT_GET) }), body: { fromAccount: "", userItem: [] }, keyMap: { request: { toAccount: "To_Account", standardSequence: "StandardSequence", customSequence: "CustomSequence" } } };
        }(e4)), this._configMap.set(Eh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.PROFILE, ".").concat(bc.CMD.PORTRAIT_SET) }), body: { fromAccount: "", profileItem: [{ tag: ql.NICK, value: "" }, { tag: ql.GENDER, value: "" }, { tag: ql.ALLOWTYPE, value: "" }, { tag: ql.AVATAR, value: "" }] }, keyMap: { request: { toAccount: "To_Account", standardSequence: "StandardSequence", customSequence: "CustomSequence" } } };
        }(e4)), this._configMap.set(Sh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.FRIEND, ".").concat(bc.CMD.GET_BLACKLIST) }), body: { fromAccount: "", startIndex: 0, maxLimited: 30, lastSequence: 0 }, keyMap: { response: { CurruentSequence: "currentSequence" } } };
        }(e4)), this._configMap.set(Dh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.FRIEND, ".").concat(bc.CMD.ADD_BLACKLIST) }), body: { fromAccount: "", toAccount: [] } };
        }(e4)), this._configMap.set(Nh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.FRIEND, ".").concat(bc.CMD.DELETE_BLACKLIST) }), body: { fromAccount: "", toAccount: [] } };
        }(e4)), this._configMap.set(l_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_STATUS, ".").concat(bc.CMD.SET_SELF_STATUS) }), body: { customStatus: "" }, keyMap: {} };
        }(e4)), this._configMap.set(d_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_STATUS, ".").concat(bc.CMD.GET_USER_STATUS) }), body: { userIDList: void 0 }, keyMap: { response: { UserStatusList: "successUserList", ErrorList: "failureUserList", To_Account: "userID", Invalid_Account: "invalidUserID", Status: "statusType" } } };
        }(e4)), this._configMap.set(p_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_STATUS, ".").concat(bc.CMD.SUBSCRIBE_USER_STATUS) }), body: { userIDList: void 0 }, keyMap: { response: { ErrorList: "failureUserList", To_Account: "userID", Invalid_Account: "invalidUserID" } } };
        }(e4)), this._configMap.set(g_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_STATUS, ".").concat(bc.CMD.UNSUBSCRIBE_USER_STATUS) }), body: { userIDList: void 0, unsubscribeAll: void 0 }, keyMap: { response: { ErrorList: "failureUserList", To_Account: "userID", Invalid_Account: "invalidUserID" } } };
        }(e4)), this._configMap.set(Qh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.GET_JOINED_GROUPS) }), body: { memberAccount: "", limit: void 0, offset: void 0, groupType: void 0, responseFilter: { groupBaseInfoFilter: void 0, selfInfoFilter: void 0 }, isSupportTopic: 0 }, keyMap: { request: { memberAccount: "Member_Account" }, response: { GroupIdList: "groups", NoUnreadSeqList: "excludedUnreadSequenceList", MsgSeq: "readedSequence", LastRecallTime: "_lastRevokedTime" } } };
        }(e4)), this._configMap.set(Zh, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.GET_GROUP_INFO) }), body: { groupIDList: void 0, responseFilter: { groupBaseInfoFilter: ["Type", "Name", "Introduction", "Notification", "FaceUrl", "Owner_Account", "CreateTime", "InfoSeq", "LastInfoTime", "LastMsgTime", "MemberNum", "MaxMemberNum", "ApplyJoinOption", "NextMsgSeq", "ShutUpAllMember"], groupCustomFieldFilter: void 0, memberInfoFilter: void 0, memberCustomFieldFilter: void 0 } }, keyMap: { request: { groupIDList: "GroupIdList", groupCustomField: "AppDefinedData", memberCustomField: "AppMemberDefinedData", groupCustomFieldFilter: "AppDefinedDataFilter_Group", memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember" }, response: { GroupIdList: "groups", AppDefinedData: "groupCustomField", AppMemberDefinedData: "memberCustomField", AppDefinedDataFilter_Group: "groupCustomFieldFilter", AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter", InfoSeq: "infoSequence", MemberList: "members", GroupInfo: "groups", ShutUpUntil: "muteUntil", ShutUpAllMember: "muteAllMembers" } } };
        }(e4)), this._configMap.set(ef, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.CREATE_GROUP) }), body: { type: void 0, name: void 0, groupID: void 0, ownerID: void 0, introduction: void 0, notification: void 0, maxMemberNum: void 0, joinOption: void 0, memberList: void 0, groupCustomField: void 0, memberCustomField: void 0, webPushFlag: 1, avatar: "", isSupportTopic: void 0 }, keyMap: { request: { ownerID: "Owner_Account", userID: "Member_Account", avatar: "FaceUrl", maxMemberNum: "MaxMemberCount", joinOption: "ApplyJoinOption", groupCustomField: "AppDefinedData", memberCustomField: "AppMemberDefinedData" }, response: { HugeGroupFlag: "avChatRoomFlag", OverJoinedGroupLimit_Account: "overLimitUserIDList" } } };
        }(e4)), this._configMap.set(tf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.DESTROY_GROUP) }), body: { groupID: void 0 } };
        }(e4)), this._configMap.set(nf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.MODIFY_GROUP_INFO) }), body: { groupID: void 0, name: void 0, introduction: void 0, notification: void 0, avatar: void 0, joinOption: void 0, groupCustomField: void 0, muteAllMembers: void 0 }, keyMap: { request: { groupCustomField: "AppDefinedData", muteAllMembers: "ShutUpAllMember", joinOption: "ApplyJoinOption", avatar: "FaceUrl" }, response: { AppDefinedData: "groupCustomField", ShutUpAllMember: "muteAllMembers" } } };
        }(e4)), this._configMap.set(of, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.APPLY_JOIN_GROUP) }), body: { groupID: void 0, applyMessage: void 0, userDefinedField: void 0, webPushFlag: 1, historyMessageFlag: void 0 }, keyMap: { request: { applyMessage: "ApplyMsg", historyMessageFlag: "HugeGroupHistoryMsgFlag" }, response: { HugeGroupFlag: "avChatRoomFlag", AVChatRoomKey: "avChatRoomKey", RspMsgList: "messageList", ToGroupId: "to" } } };
        }(e4)), this._configMap.set(rf, function(e5) {
          e5.a2, e5.tinyid;
          return { head: t2(t2({}, g2(e5, hS)), {}, { servcmd: "".concat(bc.NAME.BIG_GROUP_NO_AUTH, ".").concat(bc.CMD.APPLY_JOIN_GROUP) }), body: { groupID: void 0, applyMessage: void 0, userDefinedField: void 0, webPushFlag: 1 }, keyMap: { request: { applyMessage: "ApplyMsg" }, response: { HugeGroupFlag: "avChatRoomFlag" } } };
        }(e4)), this._configMap.set(af, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.QUIT_GROUP) }), body: { groupID: void 0 } };
        }(e4)), this._configMap.set(sf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.SEARCH_GROUP_BY_ID) }), body: { groupIDList: void 0, responseFilter: { groupBasePublicInfoFilter: ["Type", "Name", "Introduction", "Notification", "FaceUrl", "CreateTime", "Owner_Account", "LastInfoTime", "LastMsgTime", "NextMsgSeq", "MemberNum", "MaxMemberNum", "ApplyJoinOption"] } }, keyMap: { response: {} } };
        }(e4)), this._configMap.set(uf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.CHANGE_GROUP_OWNER) }), body: { groupID: void 0, newOwnerID: void 0 }, keyMap: { request: { newOwnerID: "NewOwner_Account" } } };
        }(e4)), this._configMap.set(cf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.HANDLE_APPLY_JOIN_GROUP) }), body: { groupID: void 0, applicant: void 0, handleAction: void 0, handleMessage: void 0, authentication: void 0, messageKey: void 0, userDefinedField: void 0 }, keyMap: { request: { applicant: "Applicant_Account", handleAction: "HandleMsg", handleMessage: "ApprovalMsg", messageKey: "MsgKey" } } };
        }(e4)), this._configMap.set(lf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.HANDLE_GROUP_INVITATION) }), body: { groupID: void 0, inviter: void 0, handleAction: void 0, handleMessage: void 0, authentication: void 0, messageKey: void 0, userDefinedField: void 0 }, keyMap: { request: { inviter: "Inviter_Account", handleAction: "HandleMsg", handleMessage: "ApprovalMsg", messageKey: "MsgKey" } } };
        }(e4)), this._configMap.set(Mf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.GET_GROUP_APPLICATION) }), body: { startTime: void 0, limit: void 0, handleAccount: void 0 }, keyMap: { request: { handleAccount: "Handle_Account" } } };
        }(e4)), this._configMap.set(yf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.DELETE_GROUP_SYSTEM_MESSAGE) }), body: { messageListToDelete: void 0 }, keyMap: { request: { messageListToDelete: "DelMsgList", messageSeq: "MsgSeq", messageRandom: "MsgRandom" } } };
        }(e4)), this._configMap.set(If, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.BIG_GROUP_LONG_POLLING, ".").concat(bc.CMD.AVCHATROOM_LONG_POLL) }), body: { USP: 1, startSeq: 1, startBroadcastSeq: void 0, holdTime: 90, key: void 0 }, keyMap: { request: { USP: "USP" }, response: { ToGroupId: "groupID", RspBroadcastMsgList: "broadcastMessageList", IsSystemMsg: "isSystemMessage" } } };
        }(e4)), this._configMap.set(Tf, function(e5) {
          e5.a2, e5.tinyid;
          return { head: t2(t2({}, g2(e5, fS)), {}, { servcmd: "".concat(bc.NAME.BIG_GROUP_LONG_POLLING_NO_AUTH, ".").concat(bc.CMD.AVCHATROOM_LONG_POLL) }), body: { USP: 1, startSeq: 1, holdTime: 90, key: void 0 }, keyMap: { request: { USP: "USP" }, response: { ToGroupId: "groupID" } } };
        }(e4)), this._configMap.set(Cf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.GET_ONLINE_MEMBER_NUM) }), body: { groupID: void 0 } };
        }(e4)), this._configMap.set(Df, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.SET_GROUP_ATTRIBUTES) }), body: { groupID: void 0, groupAttributeList: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] }, keyMap: { request: { key: "key", value: "value" } } };
        }(e4)), this._configMap.set(Nf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.MODIFY_GROUP_ATTRIBUTES) }), body: { groupID: void 0, groupAttributeList: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] }, keyMap: { request: { key: "key", value: "value" } } };
        }(e4)), this._configMap.set(Af, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.DELETE_GROUP_ATTRIBUTES) }), body: { groupID: void 0, groupAttributeList: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] }, keyMap: { request: { key: "key" } } };
        }(e4)), this._configMap.set(kf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.CLEAR_GROUP_ATTRIBUTES) }), body: { groupID: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] } };
        }(e4)), this._configMap.set(Rf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP_ATTR, ".").concat(bc.CMD.GET_GROUP_ATTRIBUTES) }), body: { groupID: void 0, avChatRoomKey: void 0, groupType: 1 }, keyMap: { request: { avChatRoomKey: "Key", groupType: "GroupType" } } };
        }(e4)), this._configMap.set(Gf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.GET_GROUP_NOTIFY) }), body: { notifyType: 1, groupID: "", beginTime: 0, endTime: 0, limit: 20 }, keyMap: { request: {}, response: { NextMsgTime: "nextRevokedTime", NotifyMsgList: "notifyList" } } };
        }(e4)), this._configMap.set(Pf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.UPDATE_GROUP_COUNTER) }), body: { groupID: void 0, counterList: void 0, avChatRoomKey: void 0, mode: void 0 }, keyMap: { request: { counterList: "GroupCounter" } } };
        }(e4)), this._configMap.set(Uf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.GET_GROUP_COUNTER) }), body: { groupID: void 0, keyList: [], avChatRoomKey: void 0 }, keyMap: { request: { keyList: "GroupCounterKeys" } } };
        }(e4)), this._configMap.set(s_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP_COMMUNITY, ".").concat(bc.CMD.CREATE_TOPIC) }), body: { groupID: void 0, topicName: void 0, avatar: void 0, customData: void 0, topicID: void 0, notification: void 0, introduction: void 0 }, keyMap: { request: { avatar: "FaceUrl" } } };
        }(e4)), this._configMap.set(i_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP_COMMUNITY, ".").concat(bc.CMD.DELETE_TOPIC) }), body: { groupID: void 0, topicIDList: void 0 }, keyMap: { request: { topicIDList: "TopicIdList" }, response: { DestroyResultItem: "resultList" } } };
        }(e4)), this._configMap.set(u_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP_COMMUNITY, ".").concat(bc.CMD.UPDATE_TOPIC_PROFILE) }), body: { groupID: void 0, topicID: void 0, avatar: void 0, customData: void 0, notification: void 0, introduction: void 0, muteAllMembers: void 0, topicName: void 0 }, keyMap: { request: { avatar: "FaceUrl", muteAllMembers: "ShutUpAllMember" } } };
        }(e4)), this._configMap.set(c_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP_COMMUNITY, ".").concat(bc.CMD.GET_TOPIC_LIST) }), body: { groupID: void 0, topicIDList: void 0, MemberInfoFilter: ["NoUnreadSeqList"] }, keyMap: { request: { topicIDList: "TopicIdList" }, response: { TopicAndSelfInfo: "topicInfoList", TopicInfo: "topic", GroupID: "groupID", ShutUpTime: "muteTime", ShutUpAllFlag: "muteAllMembers", LastMsgTime: "lastMessageTime", MsgSeq: "readedSequence", LastMsgSeq: "sequence", NoUnreadSeqList: "excludedUnreadSequenceList" } } };
        }(e4)), this._configMap.set(bf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.GET_GROUP_MEMBER_LIST) }), body: { groupID: void 0, limit: 0, offset: void 0, next: void 0, memberRoleFilter: void 0, memberInfoFilter: ["Role", "NameCard", "ShutUpUntil", "JoinTime"], memberCustomFieldFilter: void 0 }, keyMap: { request: { memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember" }, response: { AppMemberDefinedData: "memberCustomField", AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter", MemberList: "members", ShutUpUntil: "muteUntil" } } };
        }(e4)), this._configMap.set(wf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP_AVCHATROOM, ".").concat(bc.CMD.GET_AVCHATROOM_MEMBER_LIST) }), body: { groupID: void 0, offset: void 0, filter: void 0 }, keyMap: { request: { offset: "Timestamp", filter: "Mark" }, response: { NextTimestamp: "offset" } } };
        }(e4)), this._configMap.set(Ff, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.GET_GROUP_MEMBER_INFO) }), body: { groupID: void 0, userIDList: void 0, memberInfoFilter: void 0, memberCustomFieldFilter: void 0 }, keyMap: { request: { userIDList: "Member_List_Account", memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember" }, response: { MemberList: "members", ShutUpUntil: "muteUntil", AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter", AppMemberDefinedData: "memberCustomField" } } };
        }(e4)), this._configMap.set(qf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.ADD_GROUP_MEMBER) }), body: { groupID: void 0, silence: void 0, userIDList: void 0 }, keyMap: { request: { userID: "Member_Account", userIDList: "MemberList" }, response: { MemberList: "members" } } };
        }(e4)), this._configMap.set(xf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.DELETE_GROUP_MEMBER) }), body: { groupID: void 0, userIDList: void 0, reason: void 0 }, keyMap: { request: { userIDList: "MemberToDel_Account" } } };
        }(e4)), this._configMap.set(Vf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.BAN_AVCHATROOM_MEMBER) }), body: { groupID: void 0, userIDList: void 0, duration: void 0, reason: "" }, keyMap: { request: { userIDList: "Members_Account", duration: "Duration", reason: "Description" } } };
        }(e4)), this._configMap.set(Bf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP, ".").concat(bc.CMD.MODIFY_GROUP_MEMBER_INFO) }), body: { groupID: void 0, topicID: void 0, userID: void 0, messageRemindType: void 0, nameCard: void 0, role: void 0, memberCustomField: void 0, muteTime: void 0 }, keyMap: { request: { userID: "Member_Account", memberCustomField: "AppMemberDefinedData", muteTime: "ShutUpTime", messageRemindType: "MsgFlag" } } };
        }(e4)), this._configMap.set(Kf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.GROUP_AVCHATROOM, ".").concat(bc.CMD.MARK_AVCHATROOM_MEMBER_INFO) }), body: { groupID: void 0, operationType: 1, memberList: [] }, keyMap: { request: { operationType: "CommandType", memberList: "MemberList", markType: "Marks", userID: "Member_Account" }, response: { CommandType: "operationType", Marks: "markType", Member_Account: "userID" } } };
        }(e4)), this._configMap.set(Yf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_STAT, ".").concat(bc.CMD.TIM_WEB_REPORT_V2) }), body: { header: {}, event: [], quality: [] }, keyMap: { request: { SDKType: "sdk_type", SDKVersion: "sdk_version", deviceType: "device_type", platform: "platform", instanceID: "instance_id", traceID: "trace_id", SDKAppID: "sdk_app_id", userID: "user_id", tinyID: "tiny_id", extension: "extension", timestamp: "timestamp", networkType: "network_type", eventType: "event_type", code: "error_code", message: "error_message", moreMessage: "more_message", duplicate: "duplicate", costTime: "cost_time", level: "level", qualityType: "quality_type", reportIndex: "report_index", wholePeriod: "whole_period", totalCount: "total_count", rttCount: "success_count_business", successRateOfRequest: "percent_business", countLessThan1Second: "success_count_business", percentOfCountLessThan1Second: "percent_business", countLessThan3Second: "success_count_platform", percentOfCountLessThan3Second: "percent_platform", successCountOfBusiness: "success_count_business", successRateOfBusiness: "percent_business", successCountOfPlatform: "success_count_platform", successRateOfPlatform: "percent_platform", successCountOfMessageReceived: "success_count_business", successRateOfMessageReceived: "percent_business", avgRTT: "average_value", avgDelay: "average_value", avgValue: "average_value", uiPlatform: "ui_platform" } } };
        }(o3)), this._configMap.set($f, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.HEARTBEAT, ".").concat(bc.CMD.ALIVE) }), body: {} };
        }(e4)), this._configMap.set(zf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_PUSH, ".").concat(bc.CMD.MESSAGE_PUSH) }), body: {}, keyMap: { response: { C2cMsgArray: "C2CMessageArray", GroupMsgArray: "groupMessageArray", GroupTips: "groupTips", C2cNotifyMsgArray: "C2CNotifyMessageArray", C2cMsgInfo: "C2CReadReceiptArray", ClientSeq: "clientSequence", MsgPriority: "priority", NoticeSeq: "noticeSequence", MsgContent: "content", MsgType: "type", MsgBody: "elements", ToGroupId: "to", Desc: "description", Ext: "extension", IsSyncMsg: "isSyncMessage", Flag: "needSync", NeedAck: "needAck", PendencyAdd_Account: "userID", ProfileImNick: "nick", PendencyType: "applicationType", C2CReadAllMsg: "readAllC2CMessage", IsNeedReadReceipt: "needReadReceipt", Status: "statusType", MsgExtensionNotify: "messageExtensionNotify", ExtensionC2cMsgInfo: "messageInfo", ExtensionGroupMsgInfo: "messageInfo", MsgOptType: "operateType", SetKVInfo: "operateResultList", DeleteKVInfo: "operateResultList", ClearKVInfo: "operateResultList", MsgKeyValue: "extensions", ClearMsgSeq: "clearSequence", MsgLastSeq: "globalSequence" } } };
        }(e4)), this._configMap.set(Jf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_PUSH, ".").concat(bc.CMD.MULTI_MESSAGE_PUSH) }), body: {}, keyMap: { response: { GroupMsgArray: "groupMessageArray", GroupTips: "groupTips", ClientSeq: "clientSequence", MsgPriority: "priority", NoticeSeq: "noticeSequence", MsgContent: "content", MsgType: "type", MsgBody: "elements", ToGroupId: "to", Desc: "description", Ext: "extension", IsSyncMsg: "isSyncMessage", Flag: "needSync", NeedAck: "needAck", PendencyType: "applicationType" } } };
        }(e4)), this._configMap.set(Xf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.OPEN_IM, ".").concat(bc.CMD.MESSAGE_PUSH_ACK) }), body: { sessionData: void 0 }, keyMap: { request: { sessionData: "SessionData" } } };
        }(e4)), this._configMap.set(Qf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_STATUS, ".").concat(bc.CMD.STATUS_FORCE_OFFLINE) }), body: {}, keyMap: { response: { C2cNotifyMsgArray: "C2CNotifyMessageArray", NoticeSeq: "noticeSequence", KickoutMsgNotify: "kickoutMsgNotify", NewInstInfo: "newInstanceInfo" } } };
        }(e4)), this._configMap.set(e_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_LONG_MESSAGE, ".").concat(bc.CMD.DOWNLOAD_MERGER_MESSAGE) }), body: { downloadKey: "" }, keyMap: { response: { Data: "data", Desc: "description", Ext: "extension", Download_Flag: "downloadFlag", ThumbUUID: "thumbUUID", VideoUUID: "videoUUID" } } };
        }(e4)), this._configMap.set(Zf, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_LONG_MESSAGE, ".").concat(bc.CMD.UPLOAD_MERGER_MESSAGE) }), body: { messageList: [] }, keyMap: { request: { fromAccount: "From_Account", toAccount: "To_Account", msgTimeStamp: "MsgTimeStamp", msgSeq: "MsgSeq", msgRandom: "MsgRandom", msgBody: "MsgBody", type: "MsgType", content: "MsgContent", data: "Data", description: "Desc", extension: "Ext", sizeType: "Type", uuid: "UUID", url: "", imageUrl: "URL", fileUrl: "Url", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", videoUrl: "", downloadFlag: "Download_Flag", from: "From_Account", time: "MsgTimeStamp", messageRandom: "MsgRandom", messageSequence: "MsgSeq", elements: "MsgBody", clientSequence: "ClientSeq", payload: "MsgContent", messageList: "MsgList", messageNumber: "MsgNum", abstractList: "AbstractList", messageBody: "MsgBody" } } };
        }(e4)), this._configMap.set(__, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_STATUS, ".").concat(bc.CMD.SET_TOKEN) }), body: { tokenID: "", pushMsg: 0, sdkAppID: 0, businessID: "", deviceBrand: "", deviceToken: "", isTpns: 0, isWebUniapp: 0 }, keyMap: { request: { tokenID: "TokenID", pushMsg: "PushMsg", sdkAppID: "EnterVersion", businessID: "BusiID", deviceBrand: "InstType", deviceToken: "VarToken", isTpns: "IsTpns" } } };
        }(e4)), this._configMap.set(f_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_STATUS, ".").concat(bc.CMD.STAT_FOREGROUND) }), body: { isWebUniapp: 0 } };
        }(e4)), this._configMap.set(h_, function(e5) {
          return { head: t2(t2({}, e5), {}, { servcmd: "".concat(bc.NAME.IM_OPEN_STATUS, ".").concat(bc.CMD.STAT_BACKGROUND) }), body: { C2CUnread: 0, GroupUnread: 0, isWebUniapp: 0 }, keyMap: { request: { c2cUnreadCount: "C2cUnread", groupUnreadCount: "GrpUnread" } } };
        }(e4));
      } }, { key: "has", value: function(e4) {
        return this._configMap.has(e4);
      } }, { key: "get", value: function(e4) {
        return this._configMap.get(e4);
      } }, { key: "update", value: function() {
        this._fillConfigMap();
      } }, { key: "getKeyMap", value: function(e4) {
        return this.has(e4) ? this.get(e4).keyMap || {} : (wl.warn("".concat(this._className, ".getKeyMap unknown protocolName:").concat(e4)), {});
      } }, { key: "getProtocolData", value: function(e4) {
        var t3 = e4.protocolName, n3 = e4.requestData, o3 = this.get(t3), r3 = null;
        if (n3) {
          var a3 = this._simpleDeepCopy(o3), s3 = this._updateService(n3, a3), i3 = s3.body, u3 = /* @__PURE__ */ Object.create(null);
          for (var c3 in i3)
            if (Object.prototype.hasOwnProperty.call(i3, c3)) {
              if (u3[c3] = i3[c3], void 0 === n3[c3])
                continue;
              u3[c3] = n3[c3];
            }
          s3.body = u3, r3 = this._getUplinkData(s3);
        } else
          r3 = this._getUplinkData(o3);
        return r3;
      } }, { key: "_getUplinkData", value: function(e4) {
        var t3 = this._requestDataCleaner(e4), n3 = Pd(t3.head), o3 = jI(t3.body, this._getRequestKeyMap(n3));
        return t3.body = o3, t3;
      } }, { key: "_updateService", value: function(e4, t3) {
        var n3 = Pd(t3.head);
        if (this._isFromGroupRequest(t3)) {
          var o3 = e4.type, r3 = e4.groupID, a3 = void 0 === r3 ? void 0 : r3, s3 = e4.groupIDList, i3 = void 0 === s3 ? [] : s3;
          td(a3) && (a3 = i3[0] || ""), Td({ type: o3, groupID: a3 }) && (t3.head.servcmd = "".concat(bc.NAME.GROUP_COMMUNITY, ".").concat(n3));
        }
        return t3;
      } }, { key: "_isFromGroupRequest", value: function(e4) {
        return e4.head.servcmd.includes(bc.NAME.GROUP) || e4.head.servcmd.includes(bc.NAME.GROUP_ATTR);
      } }, { key: "_getRequestKeyMap", value: function(e4) {
        var n3 = this.getKeyMap(e4);
        return t2(t2({}, xI.request), n3.request);
      } }, { key: "_requestDataCleaner", value: function(e4) {
        var t3 = Array.isArray(e4) ? [] : /* @__PURE__ */ Object.create(null);
        for (var o3 in e4)
          Object.prototype.hasOwnProperty.call(e4, o3) && sd(o3) && null !== e4[o3] && void 0 !== e4[o3] && ("object" !== n2(e4[o3]) ? t3[o3] = e4[o3] : t3[o3] = this._requestDataCleaner.bind(this)(e4[o3]));
        return t3;
      } }, { key: "_simpleDeepCopy", value: function(e4) {
        for (var t3, n3 = Object.keys(e4), o3 = {}, r3 = 0, a3 = n3.length; r3 < a3; r3++)
          t3 = n3[r3], ed(e4[t3]) ? o3[t3] = Array.from(e4[t3]) : Ql(e4[t3]) ? o3[t3] = this._simpleDeepCopy(e4[t3]) : o3[t3] = e4[t3];
        return o3;
      } }]), e3;
    }(), mS = [Xf], vS = function() {
      function e3(t3) {
        o2(this, e3), this._sessionModule = t3, this._className = "DownlinkHandler", this._eventHandlerMap = /* @__PURE__ */ new Map(), this._eventHandlerMap.set("C2CMessageArray", this._c2cMessageArrayHandler.bind(this)), this._eventHandlerMap.set("groupMessageArray", this._groupMessageArrayHandler.bind(this)), this._eventHandlerMap.set("groupTips", this._groupTipsHandler.bind(this)), this._eventHandlerMap.set("C2CNotifyMessageArray", this._C2CNotifyMessageArrayHandler.bind(this)), this._eventHandlerMap.set("C2CReadReceiptArray", this._C2CReadReceiptArrayHandler.bind(this)), this._eventHandlerMap.set("profileModify", this._profileHandler.bind(this)), this._eventHandlerMap.set("friendListMod", this._relationChainHandler.bind(this)), this._eventHandlerMap.set("recentContactMod", this._recentContactHandler.bind(this)), this._eventHandlerMap.set("readAllC2CMessage", this._allMessageReadHandler.bind(this)), this._eventHandlerMap.set("c2cMessageModified", this._c2cMessageModifiedHandler.bind(this)), this._eventHandlerMap.set("groupMessageModified", this._groupMessageModifiedHandler.bind(this)), this._eventHandlerMap.set("userStatusList", this._userStatusListHandler.bind(this)), this._eventHandlerMap.set("messageExtensionNotify", this._messageExtensionNotifyHandler.bind(this)), this._keys = v2(this._eventHandlerMap.keys());
      }
      return a2(e3, [{ key: "_c2cMessageArrayHandler", value: function(e4) {
        var t3 = this._sessionModule.getModule(qg);
        if (t3) {
          if (e4.dataList.forEach(function(e5) {
            if (1 === e5.isSyncMessage) {
              var t4 = e5.from;
              e5.from = e5.to, e5.to = t4;
            }
          }), 1 === e4.needSync)
            this._sessionModule.getModule(Qg).startOnlineSync();
          t3.onNewC2CMessage({ dataList: e4.dataList, isInstantMessage: true });
        }
      } }, { key: "_c2cMessageModifiedHandler", value: function(e4) {
        var t3 = this._sessionModule.getModule(qg);
        t3 && t3.onC2CMessageModified(e4);
      } }, { key: "_groupMessageArrayHandler", value: function(e4) {
        var t3 = this._sessionModule.getModule(xg);
        t3 && t3.onNewGroupMessage({ event: e4.event, dataList: e4.dataList, isInstantMessage: true });
      } }, { key: "_groupMessageModifiedHandler", value: function(e4) {
        var t3 = this._sessionModule.getModule(xg);
        t3 && t3.onGroupMessageModified(e4);
      } }, { key: "_groupTipsHandler", value: function(e4) {
        var t3 = this._sessionModule.getModule(xg);
        if (t3) {
          var n3 = e4.event, o3 = e4.dataList, r3 = e4.isInstantMessage, a3 = void 0 === r3 || r3, s3 = e4.isSyncingEnded;
          switch (n3) {
            case 4:
            case 6:
              t3.onNewGroupTips({ event: n3, dataList: o3 });
              break;
            case 5:
              for (var i3 = 0; i3 < o3.length; i3++)
                if (ed(o3[i3].elements.revokedInfos))
                  t3.onGroupMessageRevoked({ dataList: o3 });
                else if (ed(o3[i3].elements.groupMessageReadNotice))
                  t3.onGroupMessageReadNotice({ dataList: o3 });
                else {
                  if (!ed(o3[i3].elements.readReceiptList)) {
                    t3.onNewGroupSystemNotice({ dataList: o3, isInstantMessage: a3, isSyncingEnded: s3 });
                    break;
                  }
                  t3.onReadReceiptList({ dataList: o3 });
                }
              break;
            case 12:
              this._sessionModule.getModule(Hg).onNewGroupAtTips({ dataList: o3 });
              break;
            default:
              wl.log("".concat(this._className, "._groupTipsHandler unknown event:").concat(n3, " dataList:"), o3);
          }
        }
      } }, { key: "_C2CNotifyMessageArrayHandler", value: function(e4) {
        var t3 = this, n3 = e4.dataList;
        if (ed(n3)) {
          var o3 = this._sessionModule.getModule(qg);
          n3.forEach(function(e5) {
            if (Zl(e5)) {
              if (e5.hasOwnProperty("kickoutMsgNotify")) {
                var r3 = e5.kickoutMsgNotify, a3 = r3.kickType, s3 = r3.newInstanceInfo, i3 = void 0 === s3 ? {} : s3;
                1 === a3 ? t3._sessionModule.onMultipleAccountKickedOut(i3) : 2 === a3 ? t3._sessionModule.onMultipleDeviceKickedOut(i3) : 3 === a3 && t3._sessionModule.onRestApiKickedOut(i3);
              } else if (e5.hasOwnProperty("c2cMessageRevokedNotify"))
                o3 && o3.onC2CMessageRevoked({ dataList: n3 });
              else if (e5.hasOwnProperty("c2cMessageReadReceipt"))
                o3 && o3.onC2CMessageReadReceipt({ dataList: n3 });
              else if (e5.hasOwnProperty("c2cMessageReadNotice"))
                o3 && o3.onC2CMessageReadNotice({ dataList: n3 });
              else if (e5.hasOwnProperty("muteNotificationsSync")) {
                t3._sessionModule.getModule(Hg).onC2CMessageRemindTypeSynced({ dataList: n3 });
              }
            }
          });
        }
      } }, { key: "_C2CReadReceiptArrayHandler", value: function(e4) {
        this._sessionModule.getModule(qg).onReadReceiptList(e4);
      } }, { key: "_profileHandler", value: function(e4) {
        this._sessionModule.getModule(Fg).onProfileModified({ dataList: e4.dataList });
        var t3 = this._sessionModule.getModule(Vg);
        t3 && t3.onFriendProfileModified({ dataList: e4.dataList });
      } }, { key: "_relationChainHandler", value: function(e4) {
        this._sessionModule.getModule(Fg).onRelationChainModified({ dataList: e4.dataList });
        var t3 = this._sessionModule.getModule(Vg);
        t3 && t3.onRelationChainModified({ dataList: e4.dataList });
      } }, { key: "_recentContactHandler", value: function(e4) {
        var t3 = e4.dataList;
        if (ed(t3)) {
          var n3 = this._sessionModule.getModule(Hg);
          n3 && t3.forEach(function(e5) {
            var t4 = e5.pushType;
            if (1 === t4) {
              var o3 = e5.recentContactDeleteItem;
              n3.onConversationDeleted(o3.recentContactList);
            } else if (2 === t4) {
              var r3 = e5.recentContactTopItem;
              n3.onConversationPinned(r3.recentContactList);
            } else if (3 === t4) {
              var a3 = e5.recentContactTopItem;
              n3.onConversationUnpinned(a3.recentContactList);
            } else if (4 === t4) {
              var s3 = e5.recentContactMarkContact;
              n3.onConversationMarkUpdated(s3.recentContactMarkContactItem);
            } else if (5 === t4) {
              var i3 = e5.recentContactCreateContactGroup;
              n3.onConversationGroupCreated(i3.msgContactGroupContactItem);
            } else if (6 === t4) {
              var u3 = e5.recentContactDelContactGroup;
              n3.onConversationGroupDeleted(u3.msgGroupItem);
            } else if (7 === t4) {
              var c3 = e5.recentContactUpdateContactGroup, l3 = c3.updateType, d3 = c3.msgUpdateGroup, p3 = c3.msgUpdateContact;
              if (1 === l3) {
                var g3 = d3.updateGroupType;
                1 === g3 ? n3.onConversationGroupNameUpdated(d3) : 2 === g3 && n3.onConversationInGroupUpdated(d3);
              } else
                2 === l3 && n3.onConversationAddedToOrDeletedFromGroup(p3);
            }
          });
        }
      } }, { key: "_allMessageReadHandler", value: function(e4) {
        var t3 = e4.dataList, n3 = this._sessionModule.getModule(Hg);
        n3 && n3.onPushedAllMessageRead(t3);
      } }, { key: "_userStatusListHandler", value: function(e4) {
        this._sessionModule.getModule(Fg).onUserStatusUpdated(e4);
      } }, { key: "_messageExtensionNotifyHandler", value: function(e4) {
        this._sessionModule.getModule(wg).onMessageExtensionNotify(e4);
      } }, { key: "onMessage", value: function(e4) {
        var t3 = this, n3 = e4.body;
        if (this._filterMessageFromIMOpenPush(e4)) {
          var o3 = n3.eventArray, r3 = n3.isInstantMessage, a3 = n3.isSyncingEnded, s3 = n3.needSync;
          if (ed(o3))
            for (var i3 = null, u3 = null, c3 = 0, l3 = 0, d3 = o3.length; l3 < d3; l3++) {
              c3 = (i3 = o3[l3]).event;
              var p3 = Object.keys(i3).find(function(e5) {
                return -1 !== t3._keys.indexOf(e5);
              });
              p3 ? (u3 = 14 === c3 ? { readAllC2CMessage: i3[p3], groupMessageReadInfoList: i3.groupMessageReadNotice || [] } : 16 === c3 ? { userID: i3.userID, readReceiptList: i3[p3] } : i3[p3], this._eventHandlerMap.get(p3)({ event: c3, dataList: u3, isInstantMessage: r3, isSyncingEnded: a3, needSync: s3 })) : wl.log("".concat(this._className, ".onMessage unknown eventItem:").concat(i3));
            }
        }
      } }, { key: "_filterMessageFromIMOpenPush", value: function(e4) {
        var t3 = e4.head, n3 = e4.body, o3 = t3.servcmd, r3 = false;
        if (td(o3) || (r3 = o3.includes(bc.NAME.IM_CONFIG_MANAGER) || o3.includes(bc.NAME.OVERLOAD_PUSH) || o3.includes(bc.NAME.STAT_SERVICE)), !r3)
          return true;
        if (o3.includes(bc.CMD.PUSHED_CLOUD_CONTROL_CONFIG))
          this._sessionModule.getModule(nh).onPushedCloudControlConfig(n3);
        else if (o3.includes(bc.CMD.PUSHED_COMMERCIAL_CONFIG)) {
          this._sessionModule.getModule(sh).onPushedConfig(n3);
        } else if (o3.includes(bc.CMD.OVERLOAD_NOTIFY))
          this._sessionModule.onPushedServerOverload(n3);
        else if (o3.includes(bc.CMD.KICK_OTHER)) {
          var a3 = Date.now();
          this._sessionModule.reLoginOnKickOther();
          var s3 = new G_(P_.KICK_OTHER), i3 = this._sessionModule.getModule(Ug).getLastWsHelloTs(), u3 = a3 - i3;
          s3.setMessage("last wshello time:".concat(i3, " diff:").concat(u3, "ms")).setNetworkType(this._sessionModule.getNetworkType()).end();
        }
        return false;
      } }]), e3;
    }(), MS = [{ cmd: bc.CMD.GET_GROUP_INFO, interval: 1, count: 20 }, { cmd: bc.CMD.GET_AVCHATROOM_MEMBER_LIST, interval: 3, count: 1 }, { cmd: bc.CMD.GET_GROUP_APPLICATION, interval: 1, count: 1 }, { cmd: bc.CMD.GET_TOPIC_LIST, interval: 1, count: 10 }, { cmd: bc.CMD.SET_GROUP_ATTRIBUTES, interval: 5, count: 10 }, { cmd: bc.CMD.MODIFY_GROUP_ATTRIBUTES, interval: 5, count: 10 }, { cmd: bc.CMD.DELETE_GROUP_ATTRIBUTES, interval: 5, count: 10 }, { cmd: bc.CMD.CLEAR_GROUP_ATTRIBUTES, interval: 5, count: 10 }, { cmd: bc.CMD.GET_GROUP_ATTRIBUTES, interval: 5, count: 20 }, { cmd: bc.CMD.SET_ALL_MESSAGE_READ, interval: 1, count: 1 }, { cmd: bc.CMD.GET_USER_STATUS, interval: 5, count: 20 }, { cmd: bc.CMD.SUBSCRIBE_USER_STATUS, interval: 5, count: 20 }, { cmd: bc.CMD.UNSUBSCRIBE_USER_STATUS, interval: 5, count: 20 }], yS = function(e3) {
      i2(r3, e3);
      var n3 = _2(r3);
      function r3(e4) {
        var t3;
        return o2(this, r3), (t3 = n3.call(this, e4))._className = "SessionModule", t3._platform = t3.getPlatform(), t3._protocolHandler = new _S(h2(t3)), t3._messageDispatcher = new vS(h2(t3)), t3._commandFrequencyLimitMap = /* @__PURE__ */ new Map(), t3._commandRequestInfoMap = /* @__PURE__ */ new Map(), t3._serverOverloadInfoMap = /* @__PURE__ */ new Map(), t3._init(), t3.getInnerEmitterInstance().on(dy, t3._onCloudConfigUpdated, h2(t3)), t3;
      }
      return a2(r3, [{ key: "_init", value: function() {
        this._updateCommandFrequencyLimitMap(MS);
      } }, { key: "_onCloudConfigUpdated", value: function() {
        var e4 = this.getCloudConfig("cmd_frequency_limit");
        td(e4) || (e4 = JSON.parse(e4), this._updateCommandFrequencyLimitMap(e4));
      } }, { key: "_updateCommandFrequencyLimitMap", value: function(e4) {
        var t3 = this;
        e4.forEach(function(e5) {
          t3._commandFrequencyLimitMap.set(e5.cmd, { interval: e5.interval, count: e5.count });
        });
      } }, { key: "updateProtocolConfig", value: function() {
        this._protocolHandler.update();
      } }, { key: "request", value: function(e4) {
        wl.debug("".concat(this._className, ".request options:"), e4);
        var t3 = e4.protocolName, n4 = e4.tjgID;
        if (!this._protocolHandler.has(t3))
          return wl.warn("".concat(this._className, ".request unknown protocol:").concat(t3)), YM({ code: dh.CANNOT_FIND_PROTOCOL });
        var o3 = this.getProtocolData(e4), r4 = o3.head.servcmd;
        if (this._isFrequencyOverLimit(r4))
          return YM({ code: dh.OVER_FREQUENCY_LIMIT });
        if (this._isServerOverload(r4))
          return YM({ code: dh.OPEN_SERVICE_OVERLOAD_ERROR });
        Wd(n4) || (o3.head.tjgID = n4);
        var a3 = this.getModule(eh);
        return mS.includes(t3) ? a3.simplySend(o3) : a3.send(o3);
      } }, { key: "getKeyMap", value: function(e4) {
        return this._protocolHandler.getKeyMap(e4);
      } }, { key: "genCommonHead", value: function() {
        var e4 = this.getModule(jg);
        return { ver: "v4", platform: this._platform, websdkappid: Nc, websdkversion: Dc, a2: e4.getA2Key() || void 0, tinyid: e4.getTinyID() || void 0, status_instid: e4.getStatusInstanceID(), sdkappid: e4.getSDKAppID(), contenttype: e4.getContentType(), reqtime: 0, identifier: e4.getA2Key() ? void 0 : e4.getUserID(), usersig: e4.getA2Key() ? void 0 : e4.getUserSig(), sdkability: 192371, tjgID: "" };
      } }, { key: "genCosSpecifiedHead", value: function() {
        var e4 = this.getModule(jg);
        return { ver: "v4", platform: this._platform, websdkappid: Nc, websdkversion: Dc, sdkappid: e4.getSDKAppID(), contenttype: e4.getContentType(), reqtime: 0, identifier: e4.getUserID(), usersig: e4.getUserSig(), status_instid: e4.getStatusInstanceID(), sdkability: 192371 };
      } }, { key: "genSSOReportHead", value: function() {
        var e4 = this.getModule(jg);
        return { ver: "v4", platform: this._platform, websdkappid: Nc, websdkversion: Dc, sdkappid: e4.getSDKAppID(), contenttype: "", reqtime: 0, identifier: "", usersig: "", status_instid: e4.getStatusInstanceID(), sdkability: 192371 };
      } }, { key: "getProtocolData", value: function(e4) {
        return this._protocolHandler.getProtocolData(e4);
      } }, { key: "trans", value: function(e4) {
        var n4 = e4.servcmd, o3 = e4.data, r4 = { head: t2(t2({}, this.genCommonHead()), {}, { servcmd: n4 }), body: o3 };
        return this.getModule(eh).send(r4);
      } }, { key: "sendComboMessage", value: function(e4) {
        var n4 = e4.servcmd, o3 = e4.data, r4 = { head: t2(t2({}, this.genCommonHead()), {}, { servcmd: n4 }), body: o3 };
        return this.getModule(eh).send(r4);
      } }, { key: "onErrorCodeNotZero", value: function(e4) {
        var t3 = e4.errorCode;
        if (t3 === dh.HELLO_ANSWER_KICKED_OUT) {
          var n4 = e4.kickType, o3 = e4.newInstanceInfo, r4 = void 0 === o3 ? {} : o3;
          1 === n4 ? this.onMultipleAccountKickedOut(r4) : 2 === n4 ? this.onMultipleDeviceKickedOut(r4) : 3 === n4 && this.onRestApiKickedOut(r4);
        }
        t3 !== dh.MESSAGE_A2KEY_EXPIRED && t3 !== dh.ACCOUNT_A2KEY_EXPIRED || (this._onUserSigExpired(), this.getModule(eh).reConnect());
      } }, { key: "onMessage", value: function(e4) {
        var t3 = e4.body, n4 = t3.needAck, o3 = void 0 === n4 ? 0 : n4, r4 = t3.sessionData;
        1 === o3 && this._sendACK(r4), this._messageDispatcher.onMessage(e4);
      } }, { key: "onReconnected", value: function() {
        this._reLoginOnReconnected();
      } }, { key: "reLoginOnKickOther", value: function() {
        wl.log("".concat(this._className, ".reLoginOnKickOther")), this._reLogin();
      } }, { key: "_reLoginOnReconnected", value: function() {
        wl.log("".concat(this._className, "._reLoginOnReconnected")), this._reLogin();
      } }, { key: "_reLogin", value: function() {
        var e4 = this;
        if (this.isLoggedIn()) {
          var t3 = 0, n4 = this.getModule(ih);
          n4.canIUseOfflinePush() && (t3 = n4.getUniAppPlatform()), this.request({ protocolName: fh, requestData: { isWebUniapp: t3 } }).then(function(t4) {
            var n5 = t4.data.instanceID;
            e4.getModule(jg).setStatusInstanceID(n5), wl.log("".concat(e4._className, "._reLogin ok. start to sync unread messages")), e4.getModule(Hg).syncConversationList().then(function() {
              e4.getModule(rh).start();
            }), e4.getModule(xg).updateLocalMainSequenceOnReconnected();
            var o3 = e4.getModule(Kg);
            o3.resetGetTopicTime(), o3.getTopicListOnReconnected();
          });
        }
      } }, { key: "onMultipleAccountKickedOut", value: function(e4) {
        this.getModule(Ug).onMultipleAccountKickedOut(e4);
      } }, { key: "onMultipleDeviceKickedOut", value: function(e4) {
        this.getModule(Ug).onMultipleDeviceKickedOut(e4);
      } }, { key: "_onUserSigExpired", value: function() {
        this.getModule(Ug).onUserSigExpired();
      } }, { key: "onRestApiKickedOut", value: function(e4) {
        this.getModule(Ug).onRestApiKickedOut(e4);
      } }, { key: "_sendACK", value: function(e4) {
        this.request({ protocolName: Xf, requestData: { sessionData: e4 } });
      } }, { key: "_isFrequencyOverLimit", value: function(e4) {
        var t3 = e4.split(".")[1];
        if (!this._commandFrequencyLimitMap.has(t3))
          return false;
        if (!this._commandRequestInfoMap.has(t3))
          return this._commandRequestInfoMap.set(t3, { startTime: Date.now(), requestCount: 1 }), false;
        var n4 = this._commandFrequencyLimitMap.get(t3), o3 = n4.count, r4 = n4.interval, a3 = this._commandRequestInfoMap.get(t3), s3 = a3.startTime, i3 = a3.requestCount;
        if (Date.now() - s3 > 1e3 * r4)
          return this._commandRequestInfoMap.set(t3, { startTime: Date.now(), requestCount: 1 }), false;
        i3 += 1, this._commandRequestInfoMap.set(t3, { startTime: s3, requestCount: i3 });
        var u3 = false;
        return i3 > o3 && (u3 = true), u3;
      } }, { key: "_isServerOverload", value: function(e4) {
        if (!this._serverOverloadInfoMap.has(e4))
          return false;
        var t3 = this._serverOverloadInfoMap.get(e4), n4 = t3.overloadTime, o3 = t3.waitingTime, r4 = false;
        return Date.now() - n4 <= 1e3 * o3 ? r4 = true : (this._serverOverloadInfoMap.delete(e4), r4 = false), r4;
      } }, { key: "onPushedServerOverload", value: function(e4) {
        var t3 = e4.overloadCommand, n4 = e4.waitingTime;
        this._serverOverloadInfoMap.set(t3, { overloadTime: Date.now(), waitingTime: n4 }), wl.warn("".concat(this._className, ".onPushedServerOverload waitingTime:").concat(n4, "s"));
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._updateCommandFrequencyLimitMap(MS), this._commandRequestInfoMap.clear(), this._serverOverloadInfoMap.clear();
      } }]), r3;
    }(hh), IS = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        return o2(this, n3), (r3 = t3.call(this, e4))._className = "MessageLossDetectionModule", r3._maybeLostSequencesMap = /* @__PURE__ */ new Map(), r3._firstRoundRet = [], r3;
      }
      return a2(n3, [{ key: "onMessageMaybeLost", value: function(e4, t4, n4) {
        this._maybeLostSequencesMap.has(e4) || this._maybeLostSequencesMap.set(e4, []);
        for (var o3 = this._maybeLostSequencesMap.get(e4), r3 = 0; r3 < n4; r3++)
          -1 === o3.indexOf(t4 + r3) && o3.push(t4 + r3);
      } }, { key: "detectFirstRound", value: function(e4, t4) {
        var n4 = this._maybeLostSequencesMap.get(e4);
        if (!Wd(n4) && !Wd(t4)) {
          var o3 = n4.filter(function(e5) {
            return -1 === t4.indexOf(e5);
          });
          0 === o3.length ? wl.info("".concat(this._className, ".detectFirstRound no message loss. conversationID:").concat(e4)) : this._firstRoundRet = this._firstRoundRet.concat(o3), n4.length = 0;
        }
      } }, { key: "detectSecondRound", value: function(e4, t4) {
        if (!Wd(this._firstRoundRet) && !Wd(t4)) {
          var n4 = this._firstRoundRet.filter(function(e5) {
            return -1 === t4.indexOf(e5);
          });
          this._firstRoundRet.length = 0;
          var o3, r3 = n4.length;
          if (0 !== r3)
            r3 <= 5 ? o3 = e4 + "-" + n4.join("-") : (n4.sort(function(e5, t5) {
              return e5 - t5;
            }), o3 = e4 + " start:" + n4[0] + " end:" + n4[r3 - 1] + " count:" + r3), new G_(P_.MESSAGE_LOSS).setMessage(o3).setNetworkType(this.getNetworkType()).setLevel("warning").end(), wl.info("".concat(this._className, ".detectSecondRound message loss detected. conversationID:").concat(e4, " lostSequences:").concat(n4));
        }
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._maybeLostSequencesMap.clear(), this._firstRoundRet.length = 0;
      } }]), n3;
    }(hh), TS = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        return o2(this, n3), (r3 = t3.call(this, e4))._className = "CloudControlModule", r3._cloudConfig = /* @__PURE__ */ new Map(), r3._expiredTime = 0, r3._version = 0, r3._isFetching = false, r3;
      }
      return a2(n3, [{ key: "getCloudConfig", value: function(e4) {
        return td(e4) ? this._cloudConfig : this._cloudConfig.has(e4) ? this._cloudConfig.get(e4) : void 0;
      } }, { key: "_canFetchConfig", value: function() {
        return this.isLoggedIn() && !this._isFetching && Date.now() >= this._expiredTime;
      } }, { key: "fetchConfig", value: function() {
        var e4 = this, t4 = this._canFetchConfig();
        if (wl.log("".concat(this._className, ".fetchConfig canFetchConfig:").concat(t4)), t4) {
          var n4 = new G_(P_.FETCH_CLOUD_CONTROL_CONFIG), o3 = this.getModule(jg).getSDKAppID();
          this._isFetching = true, this.request({ protocolName: t_, requestData: { SDKAppID: o3, version: this._version } }).then(function(t5) {
            e4._isFetching = false, n4.setMessage("version:".concat(e4._version, " newVersion:").concat(t5.data.version, " config:").concat(t5.data.cloudControlConfig)).setNetworkType(e4.getNetworkType()).end(), wl.log("".concat(e4._className, ".fetchConfig ok")), e4._parseCloudControlConfig(t5.data);
          }).catch(function(t5) {
            e4._isFetching = false, e4.probeNetwork().then(function(e5) {
              var o4 = m2(e5, 2), r3 = o4[0], a3 = o4[1];
              n4.setError(t5, r3, a3).end();
            }), wl.log("".concat(e4._className, ".fetchConfig failed. error:"), t5), e4._setExpiredTimeOnResponseError(12e4);
          });
        }
      } }, { key: "onPushedCloudControlConfig", value: function(e4) {
        wl.log("".concat(this._className, ".onPushedCloudControlConfig")), new G_(P_.PUSHED_CLOUD_CONTROL_CONFIG).setNetworkType(this.getNetworkType()).setMessage("newVersion:".concat(e4.version, " config:").concat(e4.cloudControlConfig)).end(), this._parseCloudControlConfig(e4);
      } }, { key: "onCheckTimer", value: function(e4) {
        this._canFetchConfig() && this.fetchConfig();
      } }, { key: "_parseCloudControlConfig", value: function(e4) {
        var t4 = this, n4 = "".concat(this._className, "._parseCloudControlConfig"), o3 = e4.errorCode, r3 = e4.errorMessage, a3 = e4.cloudControlConfig, s3 = e4.version, i3 = e4.expiredTime;
        if (0 === o3) {
          if (this._version !== s3) {
            var u3 = null;
            try {
              u3 = JSON.parse(a3);
            } catch (BS) {
              this.isPrivateNetWork() || wl.error("".concat(n4, " JSON parse error. cloudControlConfig:"), a3);
            }
            u3 && (this._cloudConfig.clear(), Object.keys(u3).forEach(function(e5) {
              t4._cloudConfig.set(e5, u3[e5]);
            }), this._version = s3, this.emitInnerEvent(dy));
          }
          this._expiredTime = Date.now() + 1e3 * i3;
        } else
          td(o3) ? (wl.log("".concat(n4, " failed. Invalid message format:"), e4), this._setExpiredTimeOnResponseError(36e5)) : (wl.error("".concat(n4, " errorCode:").concat(o3, " errorMessage:").concat(r3)), this._setExpiredTimeOnResponseError(12e4));
      } }, { key: "_setExpiredTimeOnResponseError", value: function(e4) {
        this._expiredTime = Date.now() + e4;
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._cloudConfig.clear(), this._expiredTime = 0, this._version = 0, this._isFetching = false;
      } }]), n3;
    }(hh), CS = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        return o2(this, n3), (r3 = t3.call(this, e4))._className = "RecoverMessageModule", r3.PULL_LIMIT_COUNT = 15, r3;
      }
      return a2(n3, [{ key: "start", value: function() {
        this._recoverGroupChat(), this._recoverC2CChat();
      } }, { key: "_recoverGroupChat", value: function() {
        var e4, t4, n4 = this, o3 = this._getLocalConversationList().filter(function(e5) {
          return e5.type === gr.CONV_GROUP && e5.groupProfile.type !== gr.GRP_AVCHATROOM;
        }), r3 = this.getModule(Hg), a3 = 0, s3 = 0, i3 = 0;
        o3.forEach(function(o4) {
          var u3 = o4.conversationID, c3 = o4.lastMessage;
          t4 = u3.replace(gr.CONV_GROUP, ""), e4 = r3.getLocalLastMessage(u3), c3 && 0 !== c3.lastSequence && e4 ? (s3 = c3.lastSequence, a3 = e4.sequence, i3 = s3 - a3, a3 > 0 && i3 >= 1 && i3 < 300 ? n4._recoverGroupMessage({ groupID: t4, localLastMessageSequence: a3, remoteLastMessageSequence: s3 }) : n4._getGroupNotify(t4)) : n4._getGroupNotify(t4);
        });
      } }, { key: "_recoverC2CChat", value: function() {
        var e4, t4 = this, n4 = this._getLocalConversationList().filter(function(e5) {
          return e5.type === gr.CONV_C2C;
        }), o3 = this.getModule(Hg), r3 = 0, a3 = 0, s3 = 0, i3 = [Promise.resolve()];
        n4.forEach(function(n5) {
          var u3 = n5.conversationID, c3 = n5.lastMessage;
          e4 = o3.getLocalLastMessage(u3), c3 && 0 !== c3.lastTime && e4 && (a3 = c3.lastTime, r3 = e4.time, s3 = a3 - r3, r3 > 0 && s3 >= 1 && s3 <= 600 && i3.push(t4._recoverC2CMessage({ conversationID: u3, localLastMessageTime: r3, remoteLastMessageTime: a3 })));
        }), Promise.all(i3).then(function() {
          wl.log("".concat(t4._className, "._recoverC2CChat all promise fulfilled, start to sync unread messages")), t4.getModule(Qg).startSyncOnReconnected();
        });
      } }, { key: "_getLocalConversationList", value: function() {
        return this.getModule(Hg).getLocalConversationList();
      } }, { key: "_recoverGroupMessage", value: function(e4) {
        var t4 = this, n4 = "".concat(this._className, "._recoverGroupMessage");
        wl.log("".concat(n4, " options:"), e4);
        var o3 = e4.groupID, r3 = e4.localLastMessageSequence, a3 = e4.remoteLastMessageSequence;
        this._getGroupRomaingMessage({ groupID: o3, sequence: r3 }).then(function(e5) {
          var r4 = e5.data, s3 = r4.complete, i3 = r4.messageList;
          if (!td(i3)) {
            var u3 = i3[0].sequence;
            wl.log("".concat(n4, " pkgLastMessageSequence:").concat(u3, " complete:").concat(s3)), u3 < a3 && 2 !== s3 && t4._recoverGroupMessage({ groupID: o3, localLastMessageSequence: u3, remoteLastMessageSequence: a3 }), new G_(P_.RECOVER_MESSAGE).setNetworkType(t4.getNetworkType()).setMessage("groupID:".concat(o3, " complete:").concat(s3, " messageList length:").concat(i3.length)).end(), t4.getModule(xg).onNewGroupMessage({ dataList: i3, isInstantMessage: false, updateUnreadCount: false }), t4._getGroupNotify(o3);
          }
        });
      } }, { key: "_getGroupNotify", value: function(e4) {
        this.getModule(xg).getGroupNotify(e4);
      } }, { key: "_getGroupRomaingMessage", value: function(e4) {
        var t4 = e4.groupID, n4 = e4.sequence;
        return this.request({ protocolName: hf, requestData: { groupID: t4, count: this.PULL_LIMIT_COUNT, sequence: n4 + this.PULL_LIMIT_COUNT - 1 } });
      } }, { key: "_recoverC2CMessage", value: function(e4) {
        var t4 = this, n4 = "".concat(this._className, "._recoverC2CMessage");
        wl.log("".concat(this._className, "._recoverC2CMessage options:"), e4);
        var o3 = e4.conversationID, r3 = e4.localLastMessageTime, a3 = e4.remoteLastMessageTime;
        return this._getC2CRoamingMessage({ conversationID: o3, time: r3 }).then(function(e5) {
          var r4 = e5.data, s3 = r4.complete, i3 = r4.messageList;
          if (!td(i3)) {
            new G_(P_.RECOVER_MESSAGE).setNetworkType(t4.getNetworkType()).setMessage("".concat(o3, " complete:").concat(s3, " messageList length:").concat(u3)).end(), t4.getModule(qg).onNewC2CMessage({ dataList: i3, isInstantMessage: true });
            var u3 = i3.length, c3 = i3[u3 - 1].time;
            if (wl.log("".concat(n4, " pkgLastMessageTime:").concat(c3, " complete:").concat(s3)), c3 < a3 && 1 !== s3)
              return t4._recoverC2CMessage({ conversationID: o3, localLastMessageTime: c3, remoteLastMessageTime: a3 });
          }
        });
      } }, { key: "_getC2CRoamingMessage", value: function(e4) {
        var t4 = e4.conversationID, n4 = e4.time;
        return this.request({ protocolName: Lh, requestData: { peerAccount: t4.replace(gr.CONV_C2C, ""), count: this.PULL_LIMIT_COUNT + 1, lastMessageTime: n4, direction: 1 } });
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset"));
      } }]), n3;
    }(hh), ES = function() {
      function e3() {
        o2(this, e3), this._className = "AvgE2EDelay", this._e2eDelayArray = [];
      }
      return a2(e3, [{ key: "addMessageDelay", value: function(e4) {
        var t3 = Gl() - e4;
        t3 >= 0 && this._e2eDelayArray.push(t3);
      } }, { key: "_calcAvg", value: function(e4, t3) {
        if (0 === t3)
          return 0;
        var n3 = 0;
        return e4.forEach(function(e5) {
          n3 += e5;
        }), Ud(n3 / t3, 1);
      } }, { key: "_calcCountWithLimit", value: function(e4) {
        var t3 = e4.e2eDelayArray, n3 = e4.min, o3 = e4.max;
        return t3.filter(function(e5) {
          return n3 <= e5 && e5 < o3;
        }).length;
      } }, { key: "_calcPercent", value: function(e4, t3) {
        var n3 = Ud(e4 / t3 * 100, 2);
        return n3 > 100 && (n3 = 100), n3;
      } }, { key: "_checkE2EDelayException", value: function(e4, t3) {
        var n3 = e4.filter(function(e5) {
          return e5 > t3;
        });
        if (n3.length > 0) {
          var o3 = n3.length, r3 = Math.min.apply(Math, v2(n3)), a3 = Math.max.apply(Math, v2(n3)), s3 = this._calcAvg(n3, o3), i3 = Ud(o3 / e4.length * 100, 2);
          if (i3 > 50)
            new G_(P_.MESSAGE_E2E_DELAY_EXCEPTION).setMessage("message e2e delay exception. count:".concat(o3, " min:").concat(r3, " max:").concat(a3, " avg:").concat(s3, " percent:").concat(i3)).setLevel("warning").end();
        }
      } }, { key: "getStatResult", value: function() {
        var e4 = this._e2eDelayArray.length;
        if (0 === e4)
          return null;
        var t3 = v2(this._e2eDelayArray), n3 = this._calcCountWithLimit({ e2eDelayArray: t3, min: 0, max: 1 }), o3 = this._calcCountWithLimit({ e2eDelayArray: t3, min: 1, max: 3 }), r3 = this._calcPercent(n3, e4), a3 = this._calcPercent(o3, e4), s3 = this._calcAvg(t3, e4);
        return this._checkE2EDelayException(t3, 3), t3.length = 0, this.reset(), { totalCount: e4, countLessThan1Second: n3, percentOfCountLessThan1Second: r3, countLessThan3Second: o3, percentOfCountLessThan3Second: a3, avgDelay: s3 };
      } }, { key: "reset", value: function() {
        this._e2eDelayArray.length = 0;
      } }]), e3;
    }(), SS = function() {
      function e3() {
        o2(this, e3), this._className = "AvgRTT", this._requestCount = 0, this._rttArray = [];
      }
      return a2(e3, [{ key: "addRequestCount", value: function() {
        this._requestCount += 1;
      } }, { key: "addRTT", value: function(e4) {
        this._rttArray.push(e4);
      } }, { key: "_calcTotalCount", value: function() {
        return this._requestCount;
      } }, { key: "_calcRTTCount", value: function(e4) {
        return e4.length;
      } }, { key: "_calcSuccessRateOfRequest", value: function(e4, t3) {
        if (0 === t3)
          return 0;
        var n3 = Ud(e4 / t3 * 100, 2);
        return n3 > 100 && (n3 = 100), n3;
      } }, { key: "_calcAvg", value: function(e4, t3) {
        if (0 === t3)
          return 0;
        var n3 = 0;
        return e4.forEach(function(e5) {
          n3 += e5;
        }), parseInt(n3 / t3);
      } }, { key: "_calcMax", value: function() {
        return Math.max.apply(Math, v2(this._rttArray));
      } }, { key: "_calcMin", value: function() {
        return Math.min.apply(Math, v2(this._rttArray));
      } }, { key: "getStatResult", value: function() {
        var e4 = this._calcTotalCount(), t3 = v2(this._rttArray);
        if (0 === e4)
          return null;
        var n3 = this._calcRTTCount(t3), o3 = this._calcSuccessRateOfRequest(n3, e4), r3 = this._calcAvg(t3, n3);
        return wl.log("".concat(this._className, ".getStatResult max:").concat(this._calcMax(), " min:").concat(this._calcMin(), " avg:").concat(r3)), this.reset(), { totalCount: e4, rttCount: n3, successRateOfRequest: o3, avgRTT: r3 };
      } }, { key: "reset", value: function() {
        this._requestCount = 0, this._rttArray.length = 0;
      } }]), e3;
    }(), DS = function() {
      function e3() {
        o2(this, e3), this._map = /* @__PURE__ */ new Map();
      }
      return a2(e3, [{ key: "initMap", value: function(e4) {
        var t3 = this;
        e4.forEach(function(e5) {
          t3._map.set(e5, { totalCount: 0, successCount: 0, failedCountOfUserSide: 0, costArray: [], fileSizeArray: [] });
        });
      } }, { key: "addTotalCount", value: function(e4) {
        return !(td(e4) || !this._map.has(e4)) && (this._map.get(e4).totalCount += 1, true);
      } }, { key: "addSuccessCount", value: function(e4) {
        return !(td(e4) || !this._map.has(e4)) && (this._map.get(e4).successCount += 1, true);
      } }, { key: "addFailedCountOfUserSide", value: function(e4) {
        return !(td(e4) || !this._map.has(e4)) && (this._map.get(e4).failedCountOfUserSide += 1, true);
      } }, { key: "addCost", value: function(e4, t3) {
        return !(td(e4) || !this._map.has(e4)) && (this._map.get(e4).costArray.push(t3), true);
      } }, { key: "addFileSize", value: function(e4, t3) {
        return !(td(e4) || !this._map.has(e4)) && (this._map.get(e4).fileSizeArray.push(t3), true);
      } }, { key: "_calcSuccessRateOfBusiness", value: function(e4) {
        if (td(e4) || !this._map.has(e4))
          return -1;
        var t3 = this._map.get(e4), n3 = Ud(t3.successCount / t3.totalCount * 100, 2);
        return n3 > 100 && (n3 = 100), n3;
      } }, { key: "_calcSuccessRateOfPlatform", value: function(e4) {
        if (td(e4) || !this._map.has(e4))
          return -1;
        var t3 = this._map.get(e4), n3 = this._calcSuccessCountOfPlatform(e4) / t3.totalCount * 100;
        return (n3 = Ud(n3, 2)) > 100 && (n3 = 100), n3;
      } }, { key: "_calcTotalCount", value: function(e4) {
        return td(e4) || !this._map.has(e4) ? -1 : this._map.get(e4).totalCount;
      } }, { key: "_calcSuccessCountOfBusiness", value: function(e4) {
        return td(e4) || !this._map.has(e4) ? -1 : this._map.get(e4).successCount;
      } }, { key: "_calcSuccessCountOfPlatform", value: function(e4) {
        if (td(e4) || !this._map.has(e4))
          return -1;
        var t3 = this._map.get(e4);
        return t3.successCount + t3.failedCountOfUserSide;
      } }, { key: "_calcAvg", value: function(e4) {
        return td(e4) || !this._map.has(e4) ? -1 : e4 === S_ ? this._calcAvgSpeed(e4) : this._calcAvgCost(e4);
      } }, { key: "_calcAvgCost", value: function(e4) {
        var t3 = this._map.get(e4).costArray.length;
        if (0 === t3)
          return 0;
        var n3 = 0;
        return this._map.get(e4).costArray.forEach(function(e5) {
          n3 += e5;
        }), parseInt(n3 / t3);
      } }, { key: "_calcAvgSpeed", value: function(e4) {
        var t3 = 0, n3 = 0;
        return this._map.get(e4).costArray.forEach(function(e5) {
          t3 += e5;
        }), this._map.get(e4).fileSizeArray.forEach(function(e5) {
          n3 += e5;
        }), parseInt(1e3 * n3 / t3);
      } }, { key: "getStatResult", value: function(e4) {
        var t3 = this._calcTotalCount(e4);
        if (0 === t3)
          return null;
        var n3 = this._calcSuccessCountOfBusiness(e4), o3 = this._calcSuccessRateOfBusiness(e4), r3 = this._calcSuccessCountOfPlatform(e4), a3 = this._calcSuccessRateOfPlatform(e4), s3 = this._calcAvg(e4);
        return this.reset(e4), { totalCount: t3, successCountOfBusiness: n3, successRateOfBusiness: o3, successCountOfPlatform: r3, successRateOfPlatform: a3, avgValue: s3 };
      } }, { key: "reset", value: function(e4) {
        td(e4) ? this._map.clear() : this._map.set(e4, { totalCount: 0, successCount: 0, failedCountOfUserSide: 0, costArray: [], fileSizeArray: [] });
      } }]), e3;
    }(), NS = function() {
      function e3() {
        o2(this, e3), this._lastMap = /* @__PURE__ */ new Map(), this._currentMap = /* @__PURE__ */ new Map();
      }
      return a2(e3, [{ key: "initMap", value: function(e4) {
        var t3 = this;
        e4.forEach(function(e5) {
          t3._lastMap.set(e5, /* @__PURE__ */ new Map()), t3._currentMap.set(e5, /* @__PURE__ */ new Map());
        });
      } }, { key: "addMessageSequence", value: function(e4) {
        var t3 = e4.key, n3 = e4.message;
        if (td(t3) || !this._lastMap.has(t3) || !this._currentMap.has(t3))
          return false;
        var o3 = n3.conversationID, r3 = n3.sequence, a3 = o3.replace(gr.CONV_GROUP, "");
        if (0 === this._lastMap.get(t3).size)
          this._addCurrentMap(e4);
        else if (this._lastMap.get(t3).has(a3)) {
          var s3 = this._lastMap.get(t3).get(a3), i3 = s3.length - 1;
          r3 > s3[0] && r3 < s3[i3] ? (s3.push(r3), s3.sort(), this._lastMap.get(t3).set(a3, s3)) : this._addCurrentMap(e4);
        } else
          this._addCurrentMap(e4);
        return true;
      } }, { key: "_addCurrentMap", value: function(e4) {
        var t3 = e4.key, n3 = e4.message, o3 = n3.conversationID, r3 = n3.sequence, a3 = o3.replace(gr.CONV_GROUP, "");
        this._currentMap.get(t3).has(a3) || this._currentMap.get(t3).set(a3, []), this._currentMap.get(t3).get(a3).push(r3);
      } }, { key: "_copyData", value: function(e4) {
        if (!td(e4)) {
          this._lastMap.set(e4, /* @__PURE__ */ new Map());
          var t3, n3 = this._lastMap.get(e4), o3 = E2(this._currentMap.get(e4));
          try {
            for (o3.s(); !(t3 = o3.n()).done; ) {
              var r3 = m2(t3.value, 2), a3 = r3[0], s3 = r3[1];
              n3.set(a3, s3);
            }
          } catch (i3) {
            o3.e(i3);
          } finally {
            o3.f();
          }
          n3 = null, this._currentMap.set(e4, /* @__PURE__ */ new Map());
        }
      } }, { key: "getStatResult", value: function(e4) {
        if (td(this._currentMap.get(e4)) || td(this._lastMap.get(e4)))
          return null;
        if (0 === this._lastMap.get(e4).size)
          return this._copyData(e4), null;
        var t3 = 0, n3 = 0;
        if (this._lastMap.get(e4).forEach(function(e5, o4) {
          var r3 = v2(e5.values()), a3 = r3.length, s3 = r3[a3 - 1] - r3[0] + 1;
          t3 += s3, n3 += a3;
        }), 0 === t3)
          return null;
        var o3 = Ud(n3 / t3 * 100, 2);
        return o3 > 100 && (o3 = 100), this._copyData(e4), { totalCount: t3, successCountOfMessageReceived: n3, successRateOfMessageReceived: o3 };
      } }, { key: "reset", value: function() {
        this._currentMap.clear(), this._lastMap.clear();
      } }]), e3;
    }(), AS = function(e3) {
      i2(r3, e3);
      var n3 = _2(r3);
      function r3(e4) {
        var t3;
        o2(this, r3), (t3 = n3.call(this, e4))._className = "QualityStatModule", t3.TAG = "im-ssolog-quality-stat", t3.reportIndex = 0, t3.wholePeriod = false, t3._qualityItems = [M_, y_, I_, T_, C_, E_, S_, D_, N_, A_], t3._messageSentItems = [I_, T_, C_, E_, S_], t3._messageReceivedItems = [D_, N_, A_], t3.REPORT_INTERVAL = 120, t3.REPORT_SDKAPPID_BLACKLIST = [], t3.REPORT_TINYID_WHITELIST = [], t3._statInfoArr = [], t3._avgRTT = new SS(), t3._avgE2EDelay = new ES(), t3._rateMessageSent = new DS(), t3._rateMessageReceived = new NS();
        var a3 = t3.getInnerEmitterInstance();
        return a3.on(ly, t3._onLoginSuccess, h2(t3)), a3.on(dy, t3._onCloudConfigUpdated, h2(t3)), t3;
      }
      return a2(r3, [{ key: "_onLoginSuccess", value: function() {
        var e4 = this;
        this._rateMessageSent.initMap(this._messageSentItems), this._rateMessageReceived.initMap(this._messageReceivedItems);
        var t3 = this.getModule(Wg), n4 = t3.getItem(this.TAG, false);
        !Wd(n4) && od(n4.forEach) && (wl.log("".concat(this._className, "._onLoginSuccess get quality stat logs from local storage, count:").concat(n4.length)), n4.forEach(function(t4) {
          e4._statInfoArr.push(t4);
        }), t3.removeItem(this.TAG, false));
      } }, { key: "_onCloudConfigUpdated", value: function() {
        var e4 = this.getCloudConfig("q_rpt_interval"), t3 = this.getCloudConfig("q_rpt_sdkappid_bl"), n4 = this.getCloudConfig("q_rpt_tinyid_wl");
        td(e4) || (this.REPORT_INTERVAL = Number(e4)), td(t3) || (this.REPORT_SDKAPPID_BLACKLIST = t3.split(",").map(function(e5) {
          return Number(e5);
        })), td(n4) || (this.REPORT_TINYID_WHITELIST = n4.split(","));
      } }, { key: "onCheckTimer", value: function(e4) {
        this.isLoggedIn() && e4 % this.REPORT_INTERVAL == 0 && (this.wholePeriod = true, this._report());
      } }, { key: "addRequestCount", value: function() {
        this._avgRTT.addRequestCount();
      } }, { key: "addRTT", value: function(e4) {
        this._avgRTT.addRTT(e4);
      } }, { key: "addMessageDelay", value: function(e4) {
        this._avgE2EDelay.addMessageDelay(e4);
      } }, { key: "addTotalCount", value: function(e4) {
        this._rateMessageSent.addTotalCount(e4) || wl.warn("".concat(this._className, ".addTotalCount invalid key:"), e4);
      } }, { key: "addSuccessCount", value: function(e4) {
        this._rateMessageSent.addSuccessCount(e4) || wl.warn("".concat(this._className, ".addSuccessCount invalid key:"), e4);
      } }, { key: "addFailedCountOfUserSide", value: function(e4) {
        this._rateMessageSent.addFailedCountOfUserSide(e4) || wl.warn("".concat(this._className, ".addFailedCountOfUserSide invalid key:"), e4);
      } }, { key: "addCost", value: function(e4, t3) {
        this._rateMessageSent.addCost(e4, t3) || wl.warn("".concat(this._className, ".addCost invalid key or cost:"), e4, t3);
      } }, { key: "addFileSize", value: function(e4, t3) {
        this._rateMessageSent.addFileSize(e4, t3) || wl.warn("".concat(this._className, ".addFileSize invalid key or size:"), e4, t3);
      } }, { key: "addMessageSequence", value: function(e4) {
        this._rateMessageReceived.addMessageSequence(e4) || wl.warn("".concat(this._className, ".addMessageSequence invalid key:"), e4.key);
      } }, { key: "_getQualityItem", value: function(e4) {
        var n4 = {}, o3 = O_[this.getNetworkType()];
        td(o3) && (o3 = 8);
        var r4 = { qualityType: k_[e4], timestamp: Ol(), networkType: o3, extension: "" };
        switch (e4) {
          case M_:
            n4 = this._avgRTT.getStatResult();
            break;
          case y_:
            n4 = this._avgE2EDelay.getStatResult();
            break;
          case I_:
          case T_:
          case C_:
          case E_:
          case S_:
            n4 = this._rateMessageSent.getStatResult(e4);
            break;
          case D_:
          case N_:
          case A_:
            n4 = this._rateMessageReceived.getStatResult(e4);
        }
        return null === n4 ? null : t2(t2({}, r4), n4);
      } }, { key: "_report", value: function(e4) {
        var t3 = this, n4 = [], o3 = null;
        td(e4) ? this._qualityItems.forEach(function(e5) {
          null !== (o3 = t3._getQualityItem(e5)) && (o3.reportIndex = t3.reportIndex, o3.wholePeriod = t3.wholePeriod, n4.push(o3));
        }) : null !== (o3 = this._getQualityItem(e4)) && (o3.reportIndex = this.reportIndex, o3.wholePeriod = this.wholePeriod, n4.push(o3)), wl.debug("".concat(this._className, "._report"), n4), this._statInfoArr.length > 0 && (n4 = n4.concat(this._statInfoArr), this._statInfoArr = []);
        var r4 = this.getModule(jg), a3 = r4.getSDKAppID(), s3 = r4.getTinyID();
        bd(this.REPORT_SDKAPPID_BLACKLIST, a3) && !wd(this.REPORT_TINYID_WHITELIST, s3) && (n4 = []), n4.length > 0 && this._doReport(n4);
      } }, { key: "_doReport", value: function(e4) {
        var n4 = this, o3 = { header: MI(this), quality: e4 };
        this.request({ protocolName: Yf, requestData: t2({}, o3) }).then(function() {
          n4.reportIndex++, n4.wholePeriod = false;
        }).catch(function(t3) {
          wl.warn("".concat(n4._className, "._doReport, online:").concat(n4.getNetworkType(), " error:"), t3), n4._statInfoArr = n4._statInfoArr.concat(e4), n4._flushAtOnce();
        });
      } }, { key: "_flushAtOnce", value: function() {
        var e4 = this.getModule(Wg), t3 = e4.getItem(this.TAG, false), n4 = this._statInfoArr;
        if (Wd(t3))
          wl.log("".concat(this._className, "._flushAtOnce count:").concat(n4.length)), e4.setItem(this.TAG, n4, true, false);
        else {
          var o3 = n4.concat(t3);
          o3.length > 10 && (o3 = o3.slice(0, 10)), wl.log("".concat(this.className, "._flushAtOnce count:").concat(o3.length)), e4.setItem(this.TAG, o3, true, false);
        }
        this._statInfoArr = [];
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._report(), this.reportIndex = 0, this.wholePeriod = false, this.REPORT_SDKAPPID_BLACKLIST = [], this.REPORT_TINYID_WHITELIST = [], this._avgRTT.reset(), this._avgE2EDelay.reset(), this._rateMessageSent.reset(), this._rateMessageReceived.reset();
      } }]), r3;
    }(hh), kS = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        return o2(this, n3), (r3 = t3.call(this, e4))._className = "WorkerTimerModule", r3._isWorkerEnabled = true, r3._workerTimer = null, r3._init(), r3.getInnerEmitterInstance().on(dy, r3._onCloudConfigUpdated, h2(r3)), r3;
      }
      return a2(n3, [{ key: "isWorkerEnabled", value: function() {
        return this._isWorkerEnabled && Tl;
      } }, { key: "startWorkerTimer", value: function() {
        wl.log("".concat(this._className, ".startWorkerTimer")), this._workerTimer && this._workerTimer.postMessage("start");
      } }, { key: "stopWorkerTimer", value: function() {
        wl.log("".concat(this._className, ".stopWorkerTimer")), this._workerTimer && this._workerTimer.postMessage("stop");
      } }, { key: "_init", value: function() {
        if (Tl) {
          var e4 = URL.createObjectURL(new Blob(['let interval = -1;onmessage = function(event) {  if (event.data === "start") {    if (interval > 0) {      clearInterval(interval);    }    interval = setInterval(() => {      postMessage("");    }, 1000)  } else if (event.data === "stop") {    clearInterval(interval);    interval = -1;  }};'], { type: "application/javascript; charset=utf-8" }));
          this._workerTimer = new Worker(e4);
          var t4 = this;
          this._workerTimer.onmessage = function() {
            t4._moduleManager.onCheckTimer();
          };
        }
      } }, { key: "_onCloudConfigUpdated", value: function() {
        var e4 = this.getCloudConfig("enable_worker");
        wl.log("".concat(this._className, "._onCloudConfigUpdated enableWorker:").concat(e4)), td(e4) || "1" === e4 ? !this._isWorkerEnabled && Tl && (this._isWorkerEnabled = true, this.startWorkerTimer(), this._moduleManager.onWorkerTimerEnabled()) : this._isWorkerEnabled && Tl && (this._isWorkerEnabled = false, this.stopWorkerTimer(), this._moduleManager.onWorkerTimerDisabled());
      } }, { key: "terminate", value: function() {
        wl.log("".concat(this._className, ".terminate")), this._workerTimer && (this._workerTimer.terminate(), this._workerTimer = null);
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset"));
      } }]), n3;
    }(hh), RS = function() {
      function e3() {
        o2(this, e3), this._className = "PurchasedFeatureHandler", this._purchasedFeatureMap = /* @__PURE__ */ new Map();
      }
      return a2(e3, [{ key: "isValidPurchaseBits", value: function(e4) {
        return e4 && "string" == typeof e4 && e4.length >= 1 && e4.length <= 64 && /[01]{1,64}/.test(e4);
      } }, { key: "parsePurchaseBits", value: function(e4) {
        var t3 = "".concat(this._className, ".parsePurchaseBits");
        if (this.isValidPurchaseBits(e4)) {
          this._purchasedFeatureMap.clear();
          for (var n3 = null, o3 = e4.length - 1, r3 = 0; o3 >= 0; o3--, r3++)
            n3 = r3 < 32 ? new Cc(0, Math.pow(2, r3)).toString() : new Cc(Math.pow(2, r3 - 32), 0).toString(), "1" === e4[o3] ? this._purchasedFeatureMap.set(n3, true) : this._purchasedFeatureMap.set(n3, false);
        } else
          wl.warn("".concat(t3, " invalid purchase bits:").concat(e4));
      } }, { key: "hasPurchasedFeature", value: function(e4) {
        return !!this._purchasedFeatureMap.get(e4);
      } }, { key: "isFeatureEnabled", value: function(e4) {
        for (var t3 = parseInt(e4).toString(2), n3 = void 0, o3 = true, r3 = t3.length - 1, a3 = 0; r3 >= 0; r3--, a3++)
          if ("1" === t3.charAt(r3) && (n3 = a3 < 32 ? new Cc(0, Math.pow(2, a3)).toString() : new Cc(Math.pow(2, a3 - 32), 0).toString(), !this._purchasedFeatureMap.get(n3))) {
            o3 = false;
            break;
          }
        return wl.log("".concat(this._className, ".isFeatureEnabled decimalNumber:").concat(e4, " binaryString:").concat(t3, " ret:").concat(o3)), WM({ enabled: o3 });
      } }, { key: "clear", value: function() {
        this._purchasedFeatureMap.clear();
      } }]), e3;
    }(), OS = function() {
      function e3(t3) {
        o2(this, e3), this._moduleManager = t3, this._className = "CommercialConfigModule", this._expiredTime = 0, this._isFetching = false, this._purchasedFeatureHandler = new RS();
      }
      return a2(e3, [{ key: "_canFetch", value: function() {
        return this._getModule(jg).isLoggedIn() ? !this._isFetching && Date.now() >= this._expiredTime : (this._expiredTime = Date.now() + 2e3, false);
      } }, { key: "onCheckTimer", value: function(e4) {
        this._canFetch() && this.fetchConfig();
      } }, { key: "fetchConfig", value: function() {
        var e4 = this, t3 = this._canFetch(), n3 = "".concat(this._className, ".fetchConfig");
        if (wl.log("".concat(n3, " canFetch:").concat(t3)), t3) {
          var o3 = this._getModule($g), r3 = new G_(P_.FETCH_COMMERCIAL_CONFIG);
          r3.setNetworkType(o3.getNetworkType());
          var a3 = this._getModule(jg).getSDKAppID(), s3 = this._getModule(Zg);
          this._isFetching = true, s3.request({ protocolName: o_, requestData: { SDKAppID: a3 } }).then(function(t4) {
            r3.setMessage("purchaseBits:".concat(t4.data.purchaseBits)).end(), wl.log("".concat(n3, " ok.")), e4._parseConfig(t4.data), e4._isFetching = false;
          }).catch(function(t4) {
            o3.probe().then(function(e5) {
              var n4 = m2(e5, 2), o4 = n4[0], a4 = n4[1];
              r3.setError(t4, o4, a4).end();
            }), e4._isFetching = false;
          });
        }
      } }, { key: "onPushedConfig", value: function(e4) {
        var t3 = "".concat(this._className, ".onPushedConfig");
        wl.log("".concat(t3)), new G_(P_.PUSHED_COMMERCIAL_CONFIG).setNetworkType(this._getModule($g).getNetworkType()).setMessage("purchaseBits:".concat(e4.purchaseBits)).end(), this._parseConfig(e4);
      } }, { key: "_parseConfig", value: function(e4) {
        var t3 = "".concat(this._className, "._parseConfig"), n3 = e4.errorCode, o3 = e4.errorMessage, r3 = e4.purchaseBits, a3 = e4.expiredTime;
        0 === n3 ? (this._purchasedFeatureHandler.parsePurchaseBits(r3), this._expiredTime = Date.now() + 1e3 * a3) : td(n3) ? (wl.log("".concat(t3, " failed. Invalid message format:"), e4), this._setExpiredTimeOnResponseError(36e5)) : (wl.error("".concat(t3, " errorCode:").concat(n3, " errorMessage:").concat(o3)), this._setExpiredTimeOnResponseError(12e4));
      } }, { key: "_setExpiredTimeOnResponseError", value: function(e4) {
        this._expiredTime = Date.now() + e4;
      } }, { key: "canIUse", value: function(e4) {
        return this._purchasedFeatureHandler.hasPurchasedFeature(e4);
      } }, { key: "isFeatureEnabled", value: function(e4) {
        return this._purchasedFeatureHandler.isFeatureEnabled(e4);
      } }, { key: "_getModule", value: function(e4) {
        return this._moduleManager.getModule(e4);
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._expiredTime = 0, this._isFetching = false, this._purchasedFeatureHandler.clear();
      } }]), e3;
    }(), LS = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        return o2(this, n3), (r3 = t3.call(this, e4))._moduleManager = e4, r3._className = "OfflinePushModule", r3._offlinePushPlugin = void 0, r3._androidPushConfig = { huaweiPushBussinessId: "", xiaomiPushBussinessId: "", xiaomiPushAppId: "", xiaomiPushAppKey: "", meizuPushBussinessId: "", meizuPushAppId: "", meizuPushAppKey: "", vivoPushBussinessId: "", fcmPushBussinessId: "", oppoPushBussinessId: "", oppoPushAppKey: "", oppoPushAppSecret: "" }, r3._deviceToken = "", r3._businessID = 0, r3._iosBusinessID = 0, r3._c2cUnreadCount = 0, r3._groupUnreadCount = 0, r3._isWebUniapp = 0, r3;
      }
      return a2(n3, [{ key: "registerPlugin", value: function(e4) {
        if (Zc) {
          this._offlinePushPlugin = e4["tim-offline-push-plugin"];
          var t4 = e4.offlinePushConfig || {}, n4 = t4.huaweiBusinessID, o3 = t4.xiaomiBusinessID, r3 = t4.xiaomiAppID, a3 = t4.xiaomiAppKey, s3 = t4.meizuBusinessID, i3 = t4.meizuAppID, u3 = t4.meizuAppKey, c3 = t4.vivoBusinessID, l3 = t4.oppoBusinessID, d3 = t4.oppoAppKey, p3 = t4.oppoAppSecret, g3 = t4.iosBusinessID;
          this._androidPushConfig.huaweiPushBussinessId = n4, this._androidPushConfig.xiaomiPushBussinessId = o3, this._androidPushConfig.xiaomiPushAppId = r3, this._androidPushConfig.xiaomiPushAppKey = a3, this._androidPushConfig.meizuPushBussinessId = s3, this._androidPushConfig.meizuPushAppId = i3, this._androidPushConfig.meizuPushAppKey = u3, this._androidPushConfig.vivoPushBussinessId = c3, this._androidPushConfig.oppoPushBussinessId = l3, this._androidPushConfig.oppoPushAppKey = d3, this._androidPushConfig.oppoPushAppSecret = p3, new G_(P_.REGISTER_PLUGIN).setMessage("tim-offline-push-plugin").setMoreMessage("isExist:".concat(!td(this._offlinePushPlugin))).end(true), wl.log("".concat(this._className, ".registerPlugin ok. offlinePushConfig:").concat(JSON.stringify(e4.offlinePushConfig))), this._iosBusinessID = g3, this._setAppShowListener();
        } else
          this.isIntl() || wl.warn("\uFF01\uFF01\uFF01\u79BB\u7EBF\u63A8\u9001\u63D2\u4EF6\u4EC5\u652F\u6301\u5728 uni-app \u6253\u5305\u7684 native app \u73AF\u5883\u4F7F\u7528");
      } }, { key: "init", value: function() {
        this._isWebUniapp = this.getUniAppPlatform(), this._getDeviceToken();
      } }, { key: "_getDeviceToken", value: function() {
        var e4 = this, t4 = "".concat(this._className, "._getDeviceToken");
        if (od(this._offlinePushPlugin.getDeviceToken)) {
          var n4 = "androidPushConfig:".concat(JSON.stringify(this._androidPushConfig), ", iosBusinessID:").concat(this._iosBusinessID);
          wl.log("".concat(t4, " start. ").concat(n4)), new G_(P_.GET_DEVICE_TOKEN).setMessage("".concat(n4)).end(true), this._offlinePushPlugin.getDeviceToken(this._androidPushConfig, function(o3) {
            var r3 = new G_(P_.GET_DEVICE_TOKEN_RES), a3 = o3.code, s3 = o3.msg;
            if (0 === a3) {
              var i3 = o3.data, u3 = i3.deviceToken, c3 = i3.deviceBrand, l3 = i3.deviceType, d3 = i3.bussinessId;
              e4._deviceToken = u3, e4._businessID = d3 || e4._iosBusinessID, n4 = "deviceToken:".concat(u3, ", deviceBrand:").concat(c3 || l3, ", businessID:").concat(e4._businessID), wl.log("".concat(t4, " ok. ").concat(n4)), r3.setMessage(n4).end(true), e4._setToken();
            } else
              r3.setMessage("code:".concat(a3, ", msg:").concat(s3)).end(true), wl.error("".concat(t4, " failed. error:"), o3);
          });
        } else
          wl.error("".concat(t4, " getDeviceToken is not a function"));
      } }, { key: "canIUseOfflinePush", value: function() {
        return Zc && !td(this._offlinePushPlugin);
      } }, { key: "_setAppShowListener", value: function() {
        var e4 = this, t4 = "".concat(this._className, "._setAppShowListener");
        td(this._offlinePushPlugin) ? wl.error("".concat(t4, " offlinePushPlugin is undefined")) : od(this._offlinePushPlugin.setAppShowListener) ? (new G_(P_.SET_APP_SHOW_LISTENER).end(true), wl.log("".concat(t4, " start")), this._offlinePushPlugin.setAppShowListener(function(n4) {
          var o3 = (n4 || {}).appShow;
          new G_(P_.SET_APP_SHOW_LISTENER_RES).setMessage("appShow:".concat(o3)).end(true), wl.log("".concat(t4, " ok. appShow:").concat(o3)), e4._moduleManager.isReady() && (0 === o3 ? (e4._getConvUnreadCount(), e4._onBackground()) : 1 === o3 && e4._onForeground());
        })) : wl.error("".concat(t4, " setAppShowListener is not a function"));
      } }, { key: "getDeviceBrand", value: function() {
        if (!td(this._offlinePushPlugin) && od(this._offlinePushPlugin.getDeviceType)) {
          var e4 = (this._offlinePushPlugin.getDeviceType() || {}).deviceType;
          return wl.log("".concat(this._className, ".getDeviceBrand ok. deviceType:").concat(e4)), e4;
        }
      } }, { key: "_setToken", value: function() {
        var e4, t4 = this, n4 = "".concat(this._className, "._setToken"), o3 = this.getModule(jg), r3 = 1, a3 = "", s3 = "";
        Wd(this._deviceToken) && (r3 = 0);
        var i3 = this.getUniAppPlatform(), u3 = this.getDeviceBrand();
        i3 === Sc.IOS || i3 === Sc.IPAD || i3 === Sc.MAC ? s3 = this._deviceToken : i3 === Sc.ANDROID && (a3 = this._deviceToken);
        var c3 = new G_(P_.OFFLINE_PUSH_SET_TOKEN);
        return e4 = "deviceToken:".concat(s3 || a3, ", businessID:").concat(this._businessID, ", ") + "deviceBrand:".concat(u3, ", isWebUniapp:").concat(this._isWebUniapp, ", pushMsg:").concat(r3, ", platform:").concat(i3), c3.setMessage("".concat(e4)), wl.log("".concat(n4, " ").concat(e4)), this.request({ protocolName: __, requestData: { tokenID: a3, pushMsg: r3, sdkAppID: o3.getSDKAppID(), businessID: parseInt(this._businessID), deviceBrand: u3, deviceToken: s3, isWebUniapp: this._isWebUniapp } }).then(function(e5) {
          return c3.end(), wl.log("".concat(n4, " ok")), e5;
        }).catch(function(e5) {
          return t4.probeNetwork().then(function(t5) {
            var n5 = m2(t5, 2), o4 = n5[0], r4 = n5[1];
            c3.setError(e5, o4, r4).end();
          }), wl.error("".concat(n4, " failed. error:"), e5), YM(e5);
        });
      } }, { key: "_getConvUnreadCount", value: function() {
        var e4 = this;
        this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this.getModule(Hg).getLocalConversationList().forEach(function(t4) {
          t4.type === gr.CONV_C2C && (e4._c2cUnreadCount += t4.unreadCount), t4.type === gr.CONV_GROUP && (e4._groupUnreadCount += t4.unreadCount);
        });
      } }, { key: "_onBackground", value: function() {
        var e4 = this, t4 = "".concat(this._className, "._onBackground"), n4 = new G_(P_.ON_BACKGROUND);
        this.request({ protocolName: h_, requestData: { c2cUnreadCount: this._c2cUnreadCount, groupUnreadCount: this._groupUnreadCount, isWebUniapp: this._isWebUniapp } }).then(function(o3) {
          return n4.setMessage("c2cUnreadCount: ".concat(e4._c2cUnreadCount, ", groupUnreadCount: ").concat(e4._groupUnreadCount)).end(), wl.log("".concat(t4, " ok")), o3;
        }).catch(function(o3) {
          e4.probeNetwork().then(function(e5) {
            var t5 = m2(e5, 2), r3 = t5[0], a3 = t5[1];
            n4.setError(o3, r3, a3).end();
          }), wl.error("".concat(t4, " failed. error:"), o3);
        });
      } }, { key: "_onForeground", value: function() {
        var e4 = this, t4 = "".concat(this._className, "._onForeground"), n4 = new G_(P_.ON_FOREGROUND);
        this.request({ protocolName: f_, requestData: { isWebUniapp: this._isWebUniapp } }).then(function(e5) {
          return n4.end(), wl.log("".concat(t4, " ok")), e5;
        }).catch(function(o3) {
          e4.probeNetwork().then(function(e5) {
            var t5 = m2(e5, 2), r3 = t5[0], a3 = t5[1];
            n4.setError(o3, r3, a3).end();
          }), wl.error("".concat(t4, " failed. error:"), o3);
        });
      } }, { key: "getUniAppPlatform", value: function() {
        var e4 = index$1.getSystemInfoSync().platform, t4 = this.getDeviceBrand();
        return "ios" === e4 ? Sc.IOS : "android" === e4 ? Sc.ANDROID : 1002 === t4 ? Sc.IPAD : 1001 === t4 ? Sc.MAC : void 0;
      } }, { key: "reset", value: function() {
        this._deviceToken = "", this._businessID = 0, this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this._isWebUniapp = 0, wl.log("".concat(this._className, ".reset"));
      } }]), n3;
    }(hh), GS = function(e3) {
      i2(n3, e3);
      var t3 = _2(n3);
      function n3(e4) {
        var r3;
        return o2(this, n3), (r3 = t3.call(this, e4))._className = "ProfanityFilterModule", r3._plugin = null, r3._filterConfigMap = /* @__PURE__ */ new Map(), r3._startIndex = 0, r3._version = 0, r3._canIUseLexicon = false, r3._isFetching = false, r3._expiredTime = 0, r3;
      }
      return a2(n3, [{ key: "init", value: function() {
        var e4 = this.getModule(Xg).getPlugin("tim-profanity-filter-plugin");
        e4 ? (this._plugin = new e4({ logger: wl, isArray: ed, isMap: $l, isDevMode: this.isDevMode() }), this._getLexicon()) : wl.warn("TIMProfanityFilterPlugin not found! See https://www.npmjs.com/package/tim-profanity-filter-plugin ");
      } }, { key: "onCheckTimer", value: function() {
        this._plugin && this._canIUseLexicon && this.isLoggedIn() && !this._isFetching && Date.now() >= this._expiredTime && this._getLexicon();
      } }, { key: "filterMessage", value: function(e4) {
        var t4 = true;
        if (!this._plugin || !this._canIUseLexicon)
          return t4;
        var n4, o3 = e4.type, r3 = e4.conversationType;
        if (o3 !== gr.MSG_TEXT && o3 !== gr.MSG_CUSTOM)
          return t4;
        if (wl.log("".concat(this._className, ".filterMessage")), o3 === gr.MSG_TEXT) {
          if (r3 === gr.CONV_C2C ? n4 = Fc : r3 === gr.CONV_GROUP && (n4 = xc), !this._isConfigOn(n4))
            return t4;
          var a3 = this._plugin.filter(e4.payload.text), s3 = a3.type, i3 = a3.modifiedText;
          1 === s3 ? t4 = false : 2 === s3 && (e4.payload.text = i3);
        } else if (o3 === gr.MSG_CUSTOM) {
          if (r3 === gr.CONV_C2C ? n4 = qc : r3 === gr.CONV_GROUP && (n4 = Vc), !this._isConfigOn(n4))
            return t4;
          var u3 = this._plugin.filter(e4.payload.data), c3 = this._plugin.filter(e4.payload.description), l3 = this._plugin.filter(e4.payload.extension);
          1 === u3.type || 1 === c3.type || 1 === l3.type ? t4 = false : (2 === u3.type && (e4.payload.data = u3.modifiedText), 2 === c3.type && (e4.payload.description = c3.modifiedText), 2 === l3.type && (e4.payload.extension = l3.modifiedText));
        }
        return wl.log("".concat(this._className, ".filterMessage done. isAllowedToSend:").concat(t4)), t4;
      } }, { key: "filterText", value: function(e4, t4) {
        var n4 = { isAllowedToSend: true, modifiedText: e4 };
        if (!this._plugin || !this._canIUseLexicon)
          return n4;
        if (!this._isConfigOn(t4))
          return n4;
        wl.log("".concat(this._className, ".filterText"));
        var o3 = this._plugin.filter(e4), r3 = o3.type, a3 = o3.modifiedText;
        return 1 === r3 ? n4.isAllowedToSend = false : 2 === r3 && (n4.modifiedText = a3), wl.log("".concat(this._className, ".filterText done. ret:"), n4), n4;
      } }, { key: "_getLexicon", value: function() {
        var e4 = this, t4 = new G_(P_.PROFANITY_FILTER), n4 = "".concat(this._className, "._getLexicon");
        this._isFetching = true, this.request({ protocolName: m_, requestData: { startIndex: this._startIndex, version: this._version } }).then(function(o3) {
          var r3 = o3.data, a3 = r3.errorInfo, s3 = r3.filterConfig, i3 = r3.lexicon, u3 = r3.strToken, c3 = r3.completeFlag, l3 = r3.nextStartIndex, d3 = r3.version, p3 = r3.expiredTime, g3 = a3.errorCode, h3 = a3.errorMessage;
          return 0 !== g3 ? (e4._isFetching = false, wl.warn("".concat(n4, " failed. error:"), a3), void t4.setCode(g3).setMessage(h3).end()) : (e4._onFilterConfig(s3), e4._getToken(u3), 1 === c3 ? (wl.log("".concat(e4._className, "._getLexicon done. version:").concat(d3, " expiredTime:").concat(p3)), e4._version = d3, e4._canIUseLexicon = true, e4._isFetching = false, e4._expiredTime = Date.now() + 1e3 * p3, void e4._plugin.onLexiconCompleted(i3)) : (e4._startIndex = l3, e4._plugin.onLexiconSliced(i3), void e4._getLexicon()));
        }).catch(function(o3) {
          e4.probeNetwork().then(function(e5) {
            var n5 = m2(e5, 2), r3 = n5[0], a3 = n5[1];
            t4.setError(o3, r3, a3).end();
          }), e4._isFetching = false, wl.log("".concat(n4, " failed. error:"), o3);
        });
      } }, { key: "_onFilterConfig", value: function(e4) {
        var t4 = this;
        Wd(e4) || (this._filterConfigMap.clear(), Object.keys(e4).forEach(function(n4) {
          t4._filterConfigMap.set(n4, e4[n4]);
        }), wl.log("".concat(this._className, "._onFilterConfig. keys:").concat(Array.from(this._filterConfigMap.keys()), " values:").concat(Array.from(this._filterConfigMap.values()))));
      } }, { key: "_isConfigOn", value: function(e4) {
        return 1 === this._filterConfigMap.get(e4);
      } }, { key: "_getToken", value: function(e4) {
        if (Xl(e4)) {
          var t4 = e4.length, n4 = "";
          if (t4 % 2 == 0)
            for (var o3 = 0; o3 <= t4 - 1; o3 += 2)
              n4 += e4[o3 + 1], n4 += e4[o3];
          else {
            for (var r3 = 0; r3 < t4 - 1; r3 += 2)
              n4 += e4[r3 + 1], n4 += e4[r3];
            n4 += e4[t4 - 1];
          }
          this._plugin.onToken(n4);
        }
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), this._plugin && (this._plugin.reset(), this._plugin = null), this._filterConfigMap.clear(), this._startIndex = 0, this._version = 0, this._canIUseLexicon = false, this._isFetching = false, this._expiredTime = 0;
      } }]), n3;
    }(hh), PS = function() {
      function e3(t3) {
        o2(this, e3), this._moduleManager = t3, this._className = "TransCmdModule";
      }
      return a2(e3, [{ key: "sendTRTCCustomData", value: function(e4) {
        return this._trans(t2({ serv: bc.NAME.TUIROOM_SVR }, e4));
      } }, { key: "_trans", value: function(e4) {
        wl.log("".concat(this._className, "._trans. options:").concat(JSON.stringify(e4)));
        var t3 = e4.serv, n3 = e4.data;
        return this._moduleManager.getModule(Zg).trans({ servcmd: "".concat(t3, ".*"), data: Xl(n3) ? JSON.parse(n3) : n3 });
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset"));
      } }]), e3;
    }(), US = function() {
      function e3(t3) {
        o2(this, e3);
        var n3 = new G_(P_.SDK_CONSTRUCT);
        this._className = "ModuleManager", this._isReady = false, this._reason = dh.USER_NOT_LOGGED_IN, this._startLoginTs = 0, this._moduleMap = /* @__PURE__ */ new Map(), this._innerEmitter = null, this._outerEmitter = null, this._checkCount = 0, this._checkTimer = -1, this._moduleMap.set(jg, new gI(this, t3)), this._moduleMap.set(sh, new OS(this)), this._moduleMap.set(nh, new TS(this)), this._moduleMap.set(oh, new kS(this)), this._moduleMap.set(ah, new AS(this)), this._moduleMap.set(eh, new gS(this)), this._moduleMap.set(Zg, new yS(this)), this._moduleMap.set(Ug, new hI(this)), this._moduleMap.set(bg, new UI(this)), this._moduleMap.set(wg, new bI(this)), this._moduleMap.set(lh, new wI(this)), this._moduleMap.set(Fg, new pI(this)), this._moduleMap.set(qg, new $M(this)), this._moduleMap.set(Hg, new Py(this)), this._moduleMap.set(xg, new eI(this)), this._moduleMap.set(Bg, new nI(this)), this._moduleMap.set(Kg, new sI(this)), this._moduleMap.set(Wg, new mI(this)), this._moduleMap.set(Yg, new yI(this)), this._moduleMap.set($g, new EI(this)), this._moduleMap.set(zg, new DI(this)), this._moduleMap.set(Jg, new AI(this)), this._moduleMap.set(Xg, new FI(this)), this._moduleMap.set(Qg, new qI(this)), this._moduleMap.set(th, new IS(this)), this._moduleMap.set(rh, new CS(this)), this._moduleMap.set(ih, new LS(this)), this._moduleMap.set(uh, new GS(this)), this._moduleMap.set(ch, new PS(this)), this._eventThrottleMap = /* @__PURE__ */ new Map();
        var r3 = t3.instanceID, a3 = t3.oversea, s3 = t3.SDKAppID, i3 = "instanceID:".concat(r3, " SDKAppID:").concat(s3, " host:").concat(Rd(), " oversea:").concat(a3, " inBrowser:").concat(nl, " inMiniApp:").concat(tl) + " workerAvailable:".concat(Tl, " UserAgent:").concat(al);
        G_.bindEventStatModule(this._moduleMap.get(Yg)), n3.setMessage("".concat(i3, " ").concat(function() {
          var e4 = "";
          if (tl)
            try {
              var t4 = ol.getSystemInfoSync(), n4 = t4.model, o3 = t4.version, r4 = t4.system, a4 = t4.platform, s4 = t4.SDKVersion;
              e4 = "model:".concat(n4, " version:").concat(o3, " system:").concat(r4, " platform:").concat(a4, " SDKVersion:").concat(s4);
            } catch (BS) {
              e4 = "";
            }
          return e4;
        }())).end(), wl.info("SDK ".concat(i3)), KM.prototype._isIntl = this._moduleMap.get(jg).isIntl(), this._readyList = void 0, this._ssoLogForReady = null, this._initReadyList();
      }
      return a2(e3, [{ key: "_startTimer", value: function() {
        var e4 = this._moduleMap.get(oh), t3 = e4.isWorkerEnabled();
        wl.log("".concat(this._className, ".startTimer isWorkerEnabled:").concat(t3, " seed:").concat(this._checkTimer)), t3 ? e4.startWorkerTimer() : this._startMainThreadTimer();
      } }, { key: "_startMainThreadTimer", value: function() {
        wl.log("".concat(this._className, "._startMainThreadTimer")), this._checkTimer < 0 && (this._checkTimer = setInterval(this.onCheckTimer.bind(this), 1e3));
      } }, { key: "stopTimer", value: function() {
        var e4 = this._moduleMap.get(oh), t3 = e4.isWorkerEnabled();
        wl.log("".concat(this._className, ".stopTimer isWorkerEnabled:").concat(t3, " seed:").concat(this._checkTimer)), t3 ? e4.stopWorkerTimer() : this._stopMainThreadTimer();
      } }, { key: "_stopMainThreadTimer", value: function() {
        wl.log("".concat(this._className, "._stopMainThreadTimer")), this._checkTimer > 0 && (clearInterval(this._checkTimer), this._checkTimer = -1, this._checkCount = 0);
      } }, { key: "_stopMainThreadSocket", value: function() {
        wl.log("".concat(this._className, "._stopMainThreadSocket"));
        var e4 = this._moduleMap.get(eh);
        e4.setIsWorkerEnabled(true), e4.reConnect();
      } }, { key: "_startMainThreadSocket", value: function() {
        wl.log("".concat(this._className, "._startMainThreadSocket"));
        var e4 = this._moduleMap.get(eh);
        e4.setIsWorkerEnabled(false), e4.reConnect();
      } }, { key: "onWorkerTimerEnabled", value: function() {
        wl.log("".concat(this._className, ".onWorkerTimerEnabled, disable main thread timer and socket")), this._stopMainThreadTimer(), this._stopMainThreadSocket();
      } }, { key: "onWorkerTimerDisabled", value: function() {
        wl.log("".concat(this._className, ".onWorkerTimerDisabled, enable main thread timer and socket")), this._startMainThreadTimer(), this._startMainThreadSocket();
      } }, { key: "onCheckTimer", value: function() {
        this._checkCount += 1;
        var e4, t3 = E2(this._moduleMap);
        try {
          for (t3.s(); !(e4 = t3.n()).done; ) {
            var n3 = m2(e4.value, 2)[1];
            n3.onCheckTimer && n3.onCheckTimer(this._checkCount);
          }
        } catch (o3) {
          t3.e(o3);
        } finally {
          t3.f();
        }
      } }, { key: "_initReadyList", value: function() {
        var e4 = this;
        this._readyList = [this._moduleMap.get(Ug), this._moduleMap.get(Hg)], this._readyList.forEach(function(t3) {
          t3.ready(function() {
            return e4._onModuleReady();
          });
        });
      } }, { key: "_onModuleReady", value: function() {
        var e4 = true;
        if (this._readyList.forEach(function(t4) {
          t4.isReady() || (e4 = false);
        }), e4 && !this._isReady) {
          this._isReady = true, this._outerEmitter.emit(pr.SDK_READY);
          var t3 = Date.now() - this._startLoginTs;
          wl.warn("SDK is ready. cost ".concat(t3, " ms")), this._startLoginTs = Date.now();
          var n3 = this._moduleMap.get($g).getNetworkType(), o3 = this._ssoLogForReady.getStartTs() + Rl;
          this._ssoLogForReady.setNetworkType(n3).setMessage(t3).start(o3).end();
        }
      } }, { key: "login", value: function() {
        0 === this._startLoginTs && (Ll(), this._startLoginTs = Date.now(), this._startTimer(), this._moduleMap.get($g).start(), this._ssoLogForReady = new G_(P_.SDK_READY), this._reason = dh.LOGGING_IN);
      } }, { key: "onLoginFailed", value: function() {
        this._startLoginTs = 0;
      } }, { key: "getOuterEmitterInstance", value: function() {
        return null === this._outerEmitter && (this._outerEmitter = new SI(), jM(this._outerEmitter), this._outerEmitter._emit = this._outerEmitter.emit, this._outerEmitter.emit = function(e4, t3) {
          var n3 = this;
          if (e4 === pr.CONVERSATION_LIST_UPDATED || e4 === pr.FRIEND_LIST_UPDATED || e4 === pr.GROUP_LIST_UPDATED || e4 === pr.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED)
            if (this._eventThrottleMap.has(e4)) {
              var o3 = Date.now(), r3 = this._eventThrottleMap.get(e4);
              o3 - r3.last < 1e3 ? (r3.timeoutID && clearTimeout(r3.timeoutID), r3.timeoutID = setTimeout(function() {
                r3.last = o3, n3._outerEmitter._emit.apply(n3._outerEmitter, [e4, { name: e4, data: n3._getEventData(e4) }]);
              }, 500)) : (r3.last = o3, this._outerEmitter._emit.apply(this._outerEmitter, [e4, { name: e4, data: this._getEventData(e4) }]));
            } else
              this._eventThrottleMap.set(e4, { last: Date.now(), timeoutID: -1 }), this._outerEmitter._emit.apply(this._outerEmitter, [e4, { name: e4, data: this._getEventData(e4) }]);
          else
            this._outerEmitter._emit.apply(this._outerEmitter, [e4, { name: e4, data: arguments[1] }]);
        }.bind(this)), this._outerEmitter;
      } }, { key: "_getEventData", value: function(e4) {
        return e4 === pr.CONVERSATION_LIST_UPDATED ? this._moduleMap.get(Hg).getLocalConversationList() : e4 === pr.FRIEND_LIST_UPDATED ? this._moduleMap.get(Vg).getLocalFriendList(false) : e4 === pr.GROUP_LIST_UPDATED ? this._moduleMap.get(xg).getLocalGroupList() : e4 === pr.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED ? this._moduleMap.get(Hg).getTotalUnreadMessageCount() : void 0;
      } }, { key: "getInnerEmitterInstance", value: function() {
        return null === this._innerEmitter && (this._innerEmitter = new SI(), this._innerEmitter._emit = this._innerEmitter.emit, this._innerEmitter.emit = function(e4, t3) {
          var n3;
          Zl(arguments[1]) && arguments[1].data ? (wl.warn("inner eventData has data property, please check!"), n3 = [e4, { name: arguments[0], data: arguments[1].data }]) : n3 = [e4, { name: arguments[0], data: arguments[1] }], this._innerEmitter._emit.apply(this._innerEmitter, n3);
        }.bind(this)), this._innerEmitter;
      } }, { key: "hasModule", value: function(e4) {
        return this._moduleMap.has(e4);
      } }, { key: "getModule", value: function(e4) {
        return this._moduleMap.get(e4);
      } }, { key: "isReady", value: function() {
        return this._isReady;
      } }, { key: "isIntl", value: function() {
        return this.getModule(jg).isIntl();
      } }, { key: "getNotReadyReason", value: function() {
        return this._reason;
      } }, { key: "setNotReadyReason", value: function(e4) {
        this._reason = e4;
      } }, { key: "onError", value: function(e4) {
        var t3 = "code:".concat(e4.code, " message:").concat(e4.message);
        wl.warn("Oops! ".concat(t3)), new G_(P_.ERROR).setMessage(t3).setNetworkType(this.getModule($g).getNetworkType()).setLevel("error").end(), this.getOuterEmitterInstance().emit(pr.ERROR, e4);
      } }, { key: "reset", value: function() {
        wl.log("".concat(this._className, ".reset")), Ll();
        var e4, t3 = E2(this._moduleMap);
        try {
          for (t3.s(); !(e4 = t3.n()).done; ) {
            var n3 = m2(e4.value, 2)[1];
            n3.reset && n3.reset();
          }
        } catch (s3) {
          t3.e(s3);
        } finally {
          t3.f();
        }
        this._startLoginTs = 0, this._initReadyList(), this._isReady = false, this.stopTimer(), this._outerEmitter.emit(pr.SDK_NOT_READY);
        var o3, r3 = E2(this._eventThrottleMap);
        try {
          for (r3.s(); !(o3 = r3.n()).done; ) {
            var a3 = m2(o3.value, 2)[1];
            a3.timeoutID && clearTimeout(a3.timeoutID);
          }
        } catch (s3) {
          r3.e(s3);
        } finally {
          r3.f();
        }
        this._eventThrottleMap.clear();
      } }]), e3;
    }(), bS = function() {
      function e3(t3) {
        o2(this, e3), this._isIntl = t3, this._funcMap = /* @__PURE__ */ new Map();
      }
      return a2(e3, [{ key: "defense", value: function(e4, t3) {
        var n3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
        if ("string" != typeof e4)
          return null;
        if (0 === e4.length)
          return null;
        if ("function" != typeof t3)
          return null;
        if (this._funcMap.has(e4) && this._funcMap.get(e4).has(t3))
          return this._funcMap.get(e4).get(t3);
        this._funcMap.has(e4) || this._funcMap.set(e4, /* @__PURE__ */ new Map());
        var o3 = null;
        return this._funcMap.get(e4).has(t3) ? o3 = this._funcMap.get(e4).get(t3) : (o3 = this._pack(e4, t3, n3), this._funcMap.get(e4).set(t3, o3)), o3;
      } }, { key: "defenseOnce", value: function(e4, t3) {
        var n3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
        return "function" != typeof t3 ? null : this._pack(e4, t3, n3);
      } }, { key: "find", value: function(e4, t3) {
        return "string" != typeof e4 || 0 === e4.length || "function" != typeof t3 ? null : this._funcMap.has(e4) && this._funcMap.get(e4).has(t3) ? this._funcMap.get(e4).get(t3) : (wl.warn("Callback function for event ".concat(e4, " cannot be found")), null);
      } }, { key: "delete", value: function(e4, t3) {
        return "function" == typeof t3 && (!!this._funcMap.has(e4) && (!!this._funcMap.get(e4).has(t3) && (this._funcMap.get(e4).delete(t3), 0 === this._funcMap.get(e4).size && this._funcMap.delete(e4), true)));
      } }, { key: "_pack", value: function(e4, t3, n3) {
        var o3 = this;
        return function() {
          try {
            t3.apply(n3, Array.from(arguments));
          } catch (i3) {
            var r3 = Object.values(pr).indexOf(e4);
            if (-1 !== r3) {
              var a3 = Object.keys(pr)[r3];
              o3._isIntl ? wl.warn("There is a logic error with the corresponding callback function for event TIM.EVENT.".concat(a3), "error: ".concat(i3)) : wl.warn("\u63A5\u5165\u4FA7\u4E8B\u4EF6 TIM.EVENT.".concat(a3, " \u5BF9\u5E94\u7684\u56DE\u8C03\u51FD\u6570\u903B\u8F91\u5B58\u5728\u95EE\u9898\uFF01"), "error: ".concat(i3));
            }
            var s3 = new G_(P_.CALLBACK_FUNCTION_ERROR);
            s3.setMessage("eventName:".concat(e4)).setMoreMessage(i3.message).end();
          }
        };
      } }]), e3;
    }(), wS = function() {
      function e3(t3) {
        o2(this, e3);
        var n3 = { SDKAppID: t3.SDKAppID, unlimitedAVChatRoom: t3.unlimitedAVChatRoom || false, scene: t3.scene || "", oversea: t3.oversea || false, instanceID: kd(), devMode: t3.devMode || false, proxyServer: t3.proxyServer || void 0 };
        this._moduleManager = new US(n3), this._safetyCallbackFactory = new bS(this.isIntl());
      }
      return a2(e3, [{ key: "onError", value: function(e4) {
        this._moduleManager.onError(e4);
      } }, { key: "login", value: function(e4) {
        return this._moduleManager.login(), this._moduleManager.getModule(Ug).login(e4);
      } }, { key: "logout", value: function() {
        var e4 = this;
        return this._moduleManager.getModule(Ug).logout().then(function(t3) {
          return e4._moduleManager.reset(), t3;
        });
      } }, { key: "isReady", value: function() {
        return this._moduleManager.isReady();
      } }, { key: "isIntl", value: function() {
        return this._moduleManager.isIntl();
      } }, { key: "getNotReadyReason", value: function() {
        return this._moduleManager.getNotReadyReason();
      } }, { key: "destroy", value: function() {
        var e4 = this;
        return this.logout().finally(function() {
          e4._moduleManager.stopTimer(), e4._moduleManager.getModule(oh).terminate(), e4._moduleManager.getModule(eh).dealloc();
          var t3 = e4._moduleManager.getOuterEmitterInstance(), n3 = e4._moduleManager.getModule(jg);
          t3.emit(pr.SDK_DESTROY, { SDKAppID: n3.getSDKAppID() });
        });
      } }, { key: "on", value: function(e4, t3, n3) {
        e4 === pr.GROUP_SYSTEM_NOTICE_RECEIVED && wl.warn("\uFF01\uFF01\uFF01TIM.EVENT.GROUP_SYSTEM_NOTICE_RECEIVED v2.6.0\u8D77\u5F03\u7528\uFF0C\u4E3A\u4E86\u66F4\u597D\u7684\u4F53\u9A8C\uFF0C\u8BF7\u5728 TIM.EVENT.MESSAGE_RECEIVED \u4E8B\u4EF6\u56DE\u8C03\u5185\u63A5\u6536\u5904\u7406\u7FA4\u7CFB\u7EDF\u901A\u77E5\uFF0C\u8BE6\u7EC6\u8BF7\u53C2\u8003\uFF1Ahttps://web.sdk.qcloud.com/im/doc/zh-cn/Message.html#.GroupSystemNoticePayload"), wl.debug("on", "eventName:".concat(e4)), this._moduleManager.getOuterEmitterInstance().on(e4, this._safetyCallbackFactory.defense(e4, t3, n3), n3);
      } }, { key: "once", value: function(e4, t3, n3) {
        wl.debug("once", "eventName:".concat(e4)), this._moduleManager.getOuterEmitterInstance().once(e4, this._safetyCallbackFactory.defenseOnce(e4, t3, n3), n3 || this);
      } }, { key: "off", value: function(e4, t3, n3, o3) {
        wl.debug("off", "eventName:".concat(e4));
        var r3 = this._safetyCallbackFactory.find(e4, t3);
        null !== r3 && (this._moduleManager.getOuterEmitterInstance().off(e4, r3, n3, o3), this._safetyCallbackFactory.delete(e4, t3));
      } }, { key: "registerPlugin", value: function(e4) {
        td(e4["tim-offline-push-plugin"]) ? this._moduleManager.getModule(Xg).registerPlugin(e4) : this._moduleManager.getModule(ih).registerPlugin(e4);
      } }, { key: "setLogLevel", value: function(e4) {
        if (e4 <= 0) {
          if (console.log(["", " ________  ______  __       __  __       __  ________  _______", "|        \\|      \\|  \\     /  \\|  \\  _  |  \\|        \\|       \\", " \\$$$$$$$$ \\$$$$$$| $$\\   /  $$| $$ / \\ | $$| $$$$$$$$| $$$$$$$\\", "   | $$     | $$  | $$$\\ /  $$$| $$/  $\\| $$| $$__    | $$__/ $$", "   | $$     | $$  | $$$$\\  $$$$| $$  $$$\\ $$| $$  \\   | $$    $$", "   | $$     | $$  | $$\\$$ $$ $$| $$ $$\\$$\\$$| $$$$$   | $$$$$$$\\", "   | $$    _| $$_ | $$ \\$$$| $$| $$$$  \\$$$$| $$_____ | $$__/ $$", "   | $$   |   $$ \\| $$  \\$ | $$| $$$    \\$$$| $$     \\| $$    $$", "    \\$$    \\$$$$$$ \\$$      \\$$ \\$$      \\$$ \\$$$$$$$$ \\$$$$$$$", "", ""].join("\n")), this._printDocLink(), !this.isIntl()) {
            console.log(["", "\u53C2\u8003\u4EE5\u4E0B\u6587\u6863\uFF0C\u4F1A\u66F4\u5FEB\u89E3\u51B3\u95EE\u9898\u54E6\uFF01(#^.^#)\n", "IM \u667A\u80FD\u5BA2\u670D\uFF1Ahttps://cloud.tencent.com/act/event/smarty-service?from=im-doc\n", "WebSocket \u5347\u7EA7\u6307\u5F15\uFF1Ahttps://web.sdk.qcloud.com/im/doc/zh-cn/tutorial-02-upgradeguideline.html\n", "SDK \u66F4\u65B0\u65E5\u5FD7: https://cloud.tencent.com/document/product/269/38492\n", "\u5E38\u89C1\u95EE\u9898: https://web.sdk.qcloud.com/im/doc/zh-cn/tutorial-01-faq.html\n", "\u5982\u679C\u60A8\u9700\u8981\u5728\u751F\u4EA7\u73AF\u5883\u5173\u95ED\u4E0A\u9762\u7684\u65E5\u5FD7\uFF0C\u8BF7 tim.setLogLevel(1)\n"].join("\n"));
          }
        }
        wl.setLevel(e4);
      } }, { key: "_printDocLink", value: function() {
        var e4 = "https://web.sdk.qcloud.com/im/doc/".concat(this.isIntl() ? "en" : "zh-cn", "/SDK.html");
        Kd() ? console.log("%c ".concat("IM SDK API ->", " %c"), "background:#ff9d00; padding:1px; border-radius:3px; color: #fff", "background:transparent", e4) : console.log("IM SDK API ->", e4);
      } }, { key: "createTextMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).createTextMessage(e4);
      } }, { key: "createTextAtMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).createTextMessage(e4);
      } }, { key: "createImageMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).createImageMessage(e4);
      } }, { key: "createAudioMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).createAudioMessage(e4);
      } }, { key: "createVideoMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).createVideoMessage(e4);
      } }, { key: "createCustomMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).createCustomMessage(e4);
      } }, { key: "createFaceMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).createFaceMessage(e4);
      } }, { key: "createFileMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).createFileMessage(e4);
      } }, { key: "createLocationMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).createLocationMessage(e4);
      } }, { key: "createMergerMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).createMergerMessage(e4);
      } }, { key: "downloadMergerMessage", value: function(e4) {
        return e4.type !== gr.MSG_MERGER ? YM({ code: dh.MESSAGE_MERGER_TYPE_INVALID }) : Wd(e4.payload.downloadKey) ? YM({ code: dh.MESSAGE_MERGER_KEY_INVALID }) : this._moduleManager.getModule(bg).downloadMergerMessage(e4).catch(function(e5) {
          return YM({ code: dh.MESSAGE_MERGER_DOWNLOAD_FAIL });
        });
      } }, { key: "createForwardMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).createForwardMessage(e4);
      } }, { key: "sendMessage", value: function(e4, t3) {
        return e4 instanceof bM ? this._moduleManager.getModule(bg).sendMessageInstance(e4, t3) : YM({ code: dh.MESSAGE_SEND_NEED_MESSAGE_INSTANCE });
      } }, { key: "callExperimentalAPI", value: function(e4, t3) {
        return "sendComboMessage" === e4 ? this._moduleManager.getModule(lh).sendMessage(t3) : "handleGroupInvitation" === e4 ? this._moduleManager.getModule(xg).handleGroupInvitation(t3) : "isCommercialAbilityEnabled" === e4 ? this._moduleManager.getModule(sh).isFeatureEnabled(t3) : "isIntl" === e4 ? this.isIntl() : "sendTRTCCustomData" === e4 ? this._moduleManager.getModule(ch).sendTRTCCustomData(t3) : YM({ code: dh.INVALID_OPERATION });
      } }, { key: "revokeMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).revokeMessage(e4);
      } }, { key: "resendMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).resendMessage(e4);
      } }, { key: "deleteMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).deleteMessage(e4);
      } }, { key: "translateText", value: function(e4) {
        return this._moduleManager.getModule(bg).translateText(e4);
      } }, { key: "setMessageExtensions", value: function(e4, t3) {
        return this._moduleManager.getModule(wg).setMessageExtensions(e4, t3);
      } }, { key: "getMessageExtensions", value: function(e4) {
        return this._moduleManager.getModule(wg).getMessageExtensions(e4);
      } }, { key: "deleteMessageExtensions", value: function(e4, t3) {
        return this._moduleManager.getModule(wg).deleteMessageExtensions(e4, t3);
      } }, { key: "modifyMessage", value: function(e4) {
        return this._moduleManager.getModule(bg).modifyRemoteMessage(e4);
      } }, { key: "getMessageList", value: function(e4) {
        return this._moduleManager.getModule(Hg).getMessageList(e4);
      } }, { key: "getMessageListHopping", value: function(e4) {
        return this._moduleManager.getModule(Hg).getMessageListHopping(e4);
      } }, { key: "sendMessageReadReceipt", value: function(e4) {
        return this._moduleManager.getModule(Hg).sendReadReceipt(e4);
      } }, { key: "getMessageReadReceiptList", value: function(e4) {
        return this._moduleManager.getModule(Hg).getReadReceiptList(e4);
      } }, { key: "getGroupMessageReadMemberList", value: function(e4) {
        return this._moduleManager.getModule(xg).getReadReceiptDetail(e4);
      } }, { key: "findMessage", value: function(e4) {
        return this._moduleManager.getModule(Hg).findMessage(e4);
      } }, { key: "setMessageRead", value: function(e4) {
        return this._moduleManager.getModule(Hg).setMessageRead(e4);
      } }, { key: "getConversationList", value: function(e4) {
        return this._moduleManager.getModule(Hg).getConversationList(e4);
      } }, { key: "getConversationProfile", value: function(e4) {
        return this._moduleManager.getModule(Hg).getConversationProfile(e4);
      } }, { key: "deleteConversation", value: function(e4) {
        return this._moduleManager.getModule(Hg).deleteConversation(e4);
      } }, { key: "clearHistoryMessage", value: function(e4) {
        return this._moduleManager.getModule(Hg).clearHistoryMessage(e4);
      } }, { key: "pinConversation", value: function(e4) {
        return this._moduleManager.getModule(Hg).pinConversation(e4);
      } }, { key: "setAllMessageRead", value: function(e4) {
        return this._moduleManager.getModule(Hg).setAllMessageRead(e4);
      } }, { key: "setMessageRemindType", value: function(e4) {
        return this._moduleManager.getModule(Hg).setMessageRemindType(e4);
      } }, { key: "getTotalUnreadMessageCount", value: function() {
        return this._moduleManager.getModule(Hg).getTotalUnreadMessageCount();
      } }, { key: "setConversationCustomData", value: function(e4) {
        return this._moduleManager.getModule(Hg).setConversationCustomData(e4);
      } }, { key: "markConversation", value: function(e4) {
        return this._moduleManager.getModule(Hg).markConversation(e4);
      } }, { key: "getConversationGroupList", value: function() {
        return this._moduleManager.getModule(Hg).getConversationGroupList();
      } }, { key: "createConversationGroup", value: function(e4) {
        return this._moduleManager.getModule(Hg).createConversationGroup(e4);
      } }, { key: "deleteConversationGroup", value: function(e4) {
        return this._moduleManager.getModule(Hg).deleteConversationGroup(e4);
      } }, { key: "renameConversationGroup", value: function(e4) {
        return this._moduleManager.getModule(Hg).renameConversationGroup(e4);
      } }, { key: "addConversationsToGroup", value: function(e4) {
        return this._moduleManager.getModule(Hg).addConversationsToGroup(e4);
      } }, { key: "deleteConversationsFromGroup", value: function(e4) {
        return this._moduleManager.getModule(Hg).deleteConversationsFromGroup(e4);
      } }, { key: "getMyProfile", value: function() {
        return this._moduleManager.getModule(Fg).getMyProfile();
      } }, { key: "getUserProfile", value: function(e4) {
        return this._moduleManager.getModule(Fg).getUserProfile(e4);
      } }, { key: "updateMyProfile", value: function(e4) {
        return this._moduleManager.getModule(Fg).updateMyProfile(e4);
      } }, { key: "getBlacklist", value: function() {
        return this._moduleManager.getModule(Fg).getLocalBlacklist();
      } }, { key: "addToBlacklist", value: function(e4) {
        return this._moduleManager.getModule(Fg).addBlacklist(e4);
      } }, { key: "removeFromBlacklist", value: function(e4) {
        return this._moduleManager.getModule(Fg).deleteBlacklist(e4);
      } }, { key: "setSelfStatus", value: function(e4) {
        return this._moduleManager.getModule(Fg).setSelfStatus(e4);
      } }, { key: "getUserStatus", value: function(e4) {
        return this._moduleManager.getModule(Fg).getUserStatus(e4);
      } }, { key: "subscribeUserStatus", value: function(e4) {
        return this._moduleManager.getModule(Fg).subscribeUserStatus(e4);
      } }, { key: "unsubscribeUserStatus", value: function(e4) {
        return this._moduleManager.getModule(Fg).unsubscribeUserStatus(e4);
      } }, { key: "getFriendList", value: function() {
        var e4 = this._moduleManager.getModule(Vg);
        return e4 ? e4.getLocalFriendList() : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "addFriend", value: function(e4) {
        var t3 = this._moduleManager.getModule(Vg);
        return t3 ? t3.addFriend(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "deleteFriend", value: function(e4) {
        var t3 = this._moduleManager.getModule(Vg);
        return t3 ? t3.deleteFriend(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "checkFriend", value: function(e4) {
        var t3 = this._moduleManager.getModule(Vg);
        return t3 ? t3.checkFriend(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "getFriendProfile", value: function(e4) {
        var t3 = this._moduleManager.getModule(Vg);
        return t3 ? t3.getFriendProfile(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "updateFriend", value: function(e4) {
        var t3 = this._moduleManager.getModule(Vg);
        return t3 ? t3.updateFriend(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "getFriendApplicationList", value: function() {
        var e4 = this._moduleManager.getModule(Vg);
        return e4 ? e4.getLocalFriendApplicationList() : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "acceptFriendApplication", value: function(e4) {
        var t3 = this._moduleManager.getModule(Vg);
        return t3 ? t3.acceptFriendApplication(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "refuseFriendApplication", value: function(e4) {
        var t3 = this._moduleManager.getModule(Vg);
        return t3 ? t3.refuseFriendApplication(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "deleteFriendApplication", value: function(e4) {
        var t3 = this._moduleManager.getModule(Vg);
        return t3 ? t3.deleteFriendApplication(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "setFriendApplicationRead", value: function() {
        var e4 = this._moduleManager.getModule(Vg);
        return e4 ? e4.setFriendApplicationRead() : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "getFriendGroupList", value: function() {
        var e4 = this._moduleManager.getModule(Vg);
        return e4 ? e4.getLocalFriendGroupList() : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "createFriendGroup", value: function(e4) {
        var t3 = this._moduleManager.getModule(Vg);
        return t3 ? t3.createFriendGroup(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "deleteFriendGroup", value: function(e4) {
        var t3 = this._moduleManager.getModule(Vg);
        return t3 ? t3.deleteFriendGroup(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "addToFriendGroup", value: function(e4) {
        var t3 = this._moduleManager.getModule(Vg);
        return t3 ? t3.addToFriendGroup(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "removeFromFriendGroup", value: function(e4) {
        var t3 = this._moduleManager.getModule(Vg);
        return t3 ? t3.removeFromFriendGroup(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "renameFriendGroup", value: function(e4) {
        var t3 = this._moduleManager.getModule(Vg);
        return t3 ? t3.renameFriendGroup(e4) : YM({ code: dh.CANNOT_FIND_MODULE });
      } }, { key: "getGroupList", value: function(e4) {
        return this._moduleManager.getModule(xg).getGroupList(e4);
      } }, { key: "getGroupProfile", value: function(e4) {
        return this._moduleManager.getModule(xg).getGroupProfile(e4);
      } }, { key: "createGroup", value: function(e4) {
        return this._moduleManager.getModule(xg).createGroup(e4);
      } }, { key: "dismissGroup", value: function(e4) {
        return this._moduleManager.getModule(xg).dismissGroup(e4);
      } }, { key: "updateGroupProfile", value: function(e4) {
        return this._moduleManager.getModule(xg).updateGroupProfile(e4);
      } }, { key: "joinGroup", value: function(e4) {
        return this._moduleManager.getModule(xg).joinGroup(e4);
      } }, { key: "quitGroup", value: function(e4) {
        return this._moduleManager.getModule(xg).quitGroup(e4);
      } }, { key: "searchGroupByID", value: function(e4) {
        return this._moduleManager.getModule(xg).searchGroupByID(e4);
      } }, { key: "getGroupOnlineMemberCount", value: function(e4) {
        return this._moduleManager.getModule(xg).getGroupOnlineMemberCount(e4);
      } }, { key: "changeGroupOwner", value: function(e4) {
        return this._moduleManager.getModule(xg).changeGroupOwner(e4);
      } }, { key: "getGroupApplicationList", value: function() {
        return this._moduleManager.getModule(xg).getGroupApplicationList();
      } }, { key: "handleGroupApplication", value: function(e4) {
        return this._moduleManager.getModule(xg).handleGroupApplication(e4);
      } }, { key: "initGroupAttributes", value: function(e4) {
        return this._moduleManager.getModule(xg).initGroupAttributes(e4);
      } }, { key: "setGroupAttributes", value: function(e4) {
        return this._moduleManager.getModule(xg).setGroupAttributes(e4);
      } }, { key: "deleteGroupAttributes", value: function(e4) {
        return this._moduleManager.getModule(xg).deleteGroupAttributes(e4);
      } }, { key: "getGroupAttributes", value: function(e4) {
        return this._moduleManager.getModule(xg).getGroupAttributes(e4);
      } }, { key: "setGroupCounters", value: function(e4) {
        return this._moduleManager.getModule(xg).setGroupCounters(e4);
      } }, { key: "increaseGroupCounter", value: function(e4) {
        return this._moduleManager.getModule(xg).increaseGroupCounter(e4);
      } }, { key: "decreaseGroupCounter", value: function(e4) {
        return this._moduleManager.getModule(xg).decreaseGroupCounter(e4);
      } }, { key: "getGroupCounters", value: function(e4) {
        return this._moduleManager.getModule(xg).getGroupCounters(e4);
      } }, { key: "getGroupMemberList", value: function(e4) {
        return this._moduleManager.getModule(Bg).getGroupMemberList(e4);
      } }, { key: "getGroupMemberProfile", value: function(e4) {
        return this._moduleManager.getModule(Bg).getGroupMemberProfile(e4);
      } }, { key: "addGroupMember", value: function(e4) {
        return this._moduleManager.getModule(Bg).addGroupMember(e4);
      } }, { key: "deleteGroupMember", value: function(e4) {
        return this._moduleManager.getModule(Bg).deleteGroupMember(e4);
      } }, { key: "setGroupMemberMuteTime", value: function(e4) {
        return this._moduleManager.getModule(Bg).setGroupMemberMuteTime(e4);
      } }, { key: "setGroupMemberRole", value: function(e4) {
        return this._moduleManager.getModule(Bg).setGroupMemberRole(e4);
      } }, { key: "setGroupMemberNameCard", value: function(e4) {
        return this._moduleManager.getModule(Bg).setGroupMemberNameCard(e4);
      } }, { key: "setGroupMemberCustomField", value: function(e4) {
        return this._moduleManager.getModule(Bg).setGroupMemberCustomField(e4);
      } }, { key: "markGroupMemberList", value: function(e4) {
        return this._moduleManager.getModule(Bg).markGroupMemberList(e4);
      } }, { key: "getJoinedCommunityList", value: function() {
        return this._moduleManager.getModule(Kg).getJoinedCommunityList();
      } }, { key: "createTopicInCommunity", value: function(e4) {
        return this._moduleManager.getModule(Kg).createTopicInCommunity(e4);
      } }, { key: "deleteTopicFromCommunity", value: function(e4) {
        return this._moduleManager.getModule(Kg).deleteTopicFromCommunity(e4);
      } }, { key: "updateTopicProfile", value: function(e4) {
        return this._moduleManager.getModule(Kg).updateTopicProfile(e4);
      } }, { key: "getTopicList", value: function(e4) {
        return this._moduleManager.getModule(Kg).getTopicList(e4);
      } }]), e3;
    }(), FS = { login: "login", logout: "logout", destroy: "destroy", on: "on", off: "off", ready: "ready", setLogLevel: "setLogLevel", joinGroup: "joinGroup", quitGroup: "quitGroup", registerPlugin: "registerPlugin", getGroupOnlineMemberCount: "getGroupOnlineMemberCount" };
    function qS(e3, t3) {
      if (e3.isReady() || void 0 !== FS[t3])
        return true;
      var n3 = e3.getNotReadyReason(), o3 = e3.isIntl(), r3 = "";
      Object.getOwnPropertyNames(dh).forEach(function(e4) {
        dh[e4] === n3 && (r3 = o3 ? gh[n3] : ph[n3]);
      });
      var a3 = { code: n3, message: "".concat(r3, " | ").concat(t3, " | ").concat(o3 ? gh[dh.SDK_IS_NOT_READY] : ph[dh.SDK_IS_NOT_READY]) };
      return e3.onError(a3), a3;
    }
    var xS = {}, VS = {};
    return VS.create = function(e3) {
      var n3 = 0, o3 = e3.SDKAppID, r3 = Bd(o3);
      if (Jl(o3))
        n3 = o3;
      else if (r3 ? wl.warn("TIM.create The type of the SDKAppID must be Number!") : wl.warn("TIM.create SDKAppID \u7684\u7C7B\u578B\u5E94\u8BE5\u4E3A Number\uFF0C\u8BF7\u4FEE\u6539\uFF01"), n3 = parseInt(o3), isNaN(o3))
        return r3 ? wl.error("TIM.create failed. Parse the SDKAppID failed, please check the arguments") : wl.error("TIM.create failed. \u89E3\u6790 SDKAppID \u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u4F20\u53C2\uFF01"), null;
      if (n3 && xS[n3])
        return xS[n3];
      wl.log("TIM.create");
      var a3 = new wS(t2(t2({}, e3), {}, { SDKAppID: n3 }));
      a3.on(pr.SDK_DESTROY, function(e4) {
        xS[e4.data.SDKAppID] = null, delete xS[e4.data.SDKAppID];
      });
      var s3 = function(e4) {
        var t3 = /* @__PURE__ */ Object.create(null);
        return Object.keys(mg).forEach(function(n4) {
          if (e4[n4]) {
            var o4 = mg[n4], r4 = new Sr();
            t3[o4] = function() {
              var t4 = Array.from(arguments);
              return r4.use(function(t5, o5) {
                var r5 = qS(e4, n4);
                return true === r5 ? o5() : YM(r5);
              }).use(function(e5, t5) {
                if (true === Yd(e5, _g[n4], o4))
                  return t5();
              }).use(function(t5, o5) {
                return e4[n4].apply(e4, t5);
              }), r4.run(t4);
            };
          }
        }), t3;
      }(a3);
      return xS[n3] = s3, _g.setIsIntl(r3), wl.log("TIM.create ok"), s3;
    }, VS.TYPES = gr, VS.EVENT = pr, VS.VERSION = "2.26.1", wl.log("TIM.VERSION:".concat(VS.VERSION)), VS;
  });
})(timJs);
const TIM = timJs.exports;
const createHook = (lifecycle) => (hook, target = getCurrentInstance()) => {
  !isInSSRComponentSetup && injectHook(lifecycle, hook, target);
};
const onShow = /* @__PURE__ */ createHook(ON_SHOW);
const onLoad = /* @__PURE__ */ createHook(ON_LOAD);
const onReady = /* @__PURE__ */ createHook(ON_READY);
const onBackPress = /* @__PURE__ */ createHook(ON_BACK_PRESS);
const onNavigationBarButtonTap = /* @__PURE__ */ createHook(ON_NAVIGATION_BAR_BUTTON_TAP);
const pages = [
  {
    path: "pages/home/home",
    style: {
      enablePullDownRefresh: false
    }
  },
  {
    path: "pages/daka/daka",
    style: {
      enablePullDownRefresh: false
    }
  },
  {
    path: "pages/social/social",
    style: {
      enablePullDownRefresh: false
    }
  },
  {
    path: "pages/profile/profile",
    style: {
      enablePullDownRefresh: false
    }
  },
  {
    path: "pages/detail/detail",
    style: {
      navigationBarTitleText: "",
      enablePullDownRefresh: false
    }
  },
  {
    path: "pages/add/add",
    style: {
      navigationBarTitleText: "",
      enablePullDownRefresh: false
    }
  },
  {
    path: "pages/TUIKit/TUIPages/TUILogin/index",
    style: {
      navigationBarTitleText: "\u4E91\u901A\u4FE1 IM"
    }
  },
  {
    path: "pages/TUIKit/TUIPages/TUIConversation/index",
    style: {
      navigationBarTitleText: "\u4E91\u901A\u4FE1 IM",
      "app-plus": {
        titleNView: {
          buttons: [
            {
              text: "\uE409",
              fontSrc: "/static/uni.ttf",
              fontSize: "24px",
              color: "#766f6f"
            }
          ]
        }
      }
    }
  },
  {
    path: "pages/TUIKit/TUIPages/TUIConversation/create",
    style: {
      navigationBarTitleText: "\u9009\u62E9\u8054\u7CFB\u4EBA",
      "app-plus": {
        scrollIndicator: "none"
      }
    }
  },
  {
    path: "pages/TUIKit/TUIPages/TUIChat/index",
    style: {
      navigationBarTitleText: "\u4E91\u901A\u4FE1 IM",
      "app-plus": {
        scrollIndicator: "none",
        softinputNavBar: "none",
        bounce: "none",
        titleNView: {
          buttons: [
            {
              text: "\uE537",
              fontSrc: "/static/uni.ttf",
              fontSize: "24px",
              color: "#766f6f"
            }
          ]
        }
      }
    }
  },
  {
    path: "pages/TUIKit/TUIPages/TUIMine/index",
    style: {
      navigationBarTitleText: "\u6211\u7684",
      "app-plus": {}
    }
  },
  {
    path: "pages/TUIKit/TUIPages/TUIChat/components/message-elements/video-play",
    style: {
      navigationBarTitleText: "\u4E91\u901A\u4FE1 IM",
      "app-plus": {}
    }
  },
  {
    path: "pages/TUIKit/TUIPages/TUIGroupManage/index",
    style: {
      navigationBarTitleText: "\u7FA4\u7BA1\u7406",
      "app-plus": {
        scrollIndicator: "none"
      }
    }
  },
  {
    path: "pages/TUIKit/TUIPages/TUIUserCenter/webview/webview",
    style: {}
  },
  {
    path: "pages/TUIKit/TUIPages/TUIGroupManage/memberOperate",
    style: {
      "app-plus": {}
    }
  }
];
const globalStyle = {
  navigationBarTextStyle: "white",
  navigationBarTitleText: "\u53EF\u6709\u79D1\u5361",
  navigationBarBackgroundColor: "#B0EC64",
  backgroundColor: "#B0EC64"
};
const easycom = {
  autoscan: true,
  custom: {
    "fui-(.*)": "firstui-uni/firstui/fui-$1/fui-$1.vue"
  }
};
const tabBar = {
  selectedColor: "#B0EC64",
  list: [
    {
      pagePath: "pages/home/home",
      text: "\u9996\u9875",
      iconPath: "static/images/tabbar/home.png",
      selectedIconPath: "static/images/tabbar/home_active.png"
    },
    {
      pagePath: "pages/daka/daka",
      text: "\u6253\u5361",
      iconPath: "static/images/tabbar/daka.png",
      selectedIconPath: "static/images/tabbar/daka_active.png"
    },
    {
      pagePath: "pages/social/social",
      text: "\u793E\u4EA4",
      iconPath: "static/images/tabbar/social.png",
      selectedIconPath: "static/images/tabbar/social_active.png"
    },
    {
      pagePath: "pages/profile/profile",
      text: "\u6211\u7684",
      iconPath: "static/images/tabbar/mine.png",
      selectedIconPath: "static/images/tabbar/wode_active.png"
    }
  ]
};
const t = {
  pages,
  globalStyle,
  easycom,
  tabBar
};
function n(e2) {
  return e2 && e2.__esModule && Object.prototype.hasOwnProperty.call(e2, "default") ? e2.default : e2;
}
function s(e2, t2, n2) {
  return e2(n2 = { path: t2, exports: {}, require: function(e3, t3) {
    return function() {
      throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
    }(null == t3 && n2.path);
  } }, n2.exports), n2.exports;
}
var r = s(function(e2, t2) {
  var n2;
  e2.exports = (n2 = n2 || function(e3, t3) {
    var n3 = Object.create || function() {
      function e4() {
      }
      return function(t4) {
        var n4;
        return e4.prototype = t4, n4 = new e4(), e4.prototype = null, n4;
      };
    }(), s2 = {}, r2 = s2.lib = {}, i2 = r2.Base = { extend: function(e4) {
      var t4 = n3(this);
      return e4 && t4.mixIn(e4), t4.hasOwnProperty("init") && this.init !== t4.init || (t4.init = function() {
        t4.$super.init.apply(this, arguments);
      }), t4.init.prototype = t4, t4.$super = this, t4;
    }, create: function() {
      var e4 = this.extend();
      return e4.init.apply(e4, arguments), e4;
    }, init: function() {
    }, mixIn: function(e4) {
      for (var t4 in e4)
        e4.hasOwnProperty(t4) && (this[t4] = e4[t4]);
      e4.hasOwnProperty("toString") && (this.toString = e4.toString);
    }, clone: function() {
      return this.init.prototype.extend(this);
    } }, o2 = r2.WordArray = i2.extend({ init: function(e4, n4) {
      e4 = this.words = e4 || [], this.sigBytes = n4 != t3 ? n4 : 4 * e4.length;
    }, toString: function(e4) {
      return (e4 || c2).stringify(this);
    }, concat: function(e4) {
      var t4 = this.words, n4 = e4.words, s3 = this.sigBytes, r3 = e4.sigBytes;
      if (this.clamp(), s3 % 4)
        for (var i3 = 0; i3 < r3; i3++) {
          var o3 = n4[i3 >>> 2] >>> 24 - i3 % 4 * 8 & 255;
          t4[s3 + i3 >>> 2] |= o3 << 24 - (s3 + i3) % 4 * 8;
        }
      else
        for (i3 = 0; i3 < r3; i3 += 4)
          t4[s3 + i3 >>> 2] = n4[i3 >>> 2];
      return this.sigBytes += r3, this;
    }, clamp: function() {
      var t4 = this.words, n4 = this.sigBytes;
      t4[n4 >>> 2] &= 4294967295 << 32 - n4 % 4 * 8, t4.length = e3.ceil(n4 / 4);
    }, clone: function() {
      var e4 = i2.clone.call(this);
      return e4.words = this.words.slice(0), e4;
    }, random: function(t4) {
      for (var n4, s3 = [], r3 = function(t5) {
        t5 = t5;
        var n5 = 987654321, s4 = 4294967295;
        return function() {
          var r4 = ((n5 = 36969 * (65535 & n5) + (n5 >> 16) & s4) << 16) + (t5 = 18e3 * (65535 & t5) + (t5 >> 16) & s4) & s4;
          return r4 /= 4294967296, (r4 += 0.5) * (e3.random() > 0.5 ? 1 : -1);
        };
      }, i3 = 0; i3 < t4; i3 += 4) {
        var a3 = r3(4294967296 * (n4 || e3.random()));
        n4 = 987654071 * a3(), s3.push(4294967296 * a3() | 0);
      }
      return new o2.init(s3, t4);
    } }), a2 = s2.enc = {}, c2 = a2.Hex = { stringify: function(e4) {
      for (var t4 = e4.words, n4 = e4.sigBytes, s3 = [], r3 = 0; r3 < n4; r3++) {
        var i3 = t4[r3 >>> 2] >>> 24 - r3 % 4 * 8 & 255;
        s3.push((i3 >>> 4).toString(16)), s3.push((15 & i3).toString(16));
      }
      return s3.join("");
    }, parse: function(e4) {
      for (var t4 = e4.length, n4 = [], s3 = 0; s3 < t4; s3 += 2)
        n4[s3 >>> 3] |= parseInt(e4.substr(s3, 2), 16) << 24 - s3 % 8 * 4;
      return new o2.init(n4, t4 / 2);
    } }, u2 = a2.Latin1 = { stringify: function(e4) {
      for (var t4 = e4.words, n4 = e4.sigBytes, s3 = [], r3 = 0; r3 < n4; r3++) {
        var i3 = t4[r3 >>> 2] >>> 24 - r3 % 4 * 8 & 255;
        s3.push(String.fromCharCode(i3));
      }
      return s3.join("");
    }, parse: function(e4) {
      for (var t4 = e4.length, n4 = [], s3 = 0; s3 < t4; s3++)
        n4[s3 >>> 2] |= (255 & e4.charCodeAt(s3)) << 24 - s3 % 4 * 8;
      return new o2.init(n4, t4);
    } }, l2 = a2.Utf8 = { stringify: function(e4) {
      try {
        return decodeURIComponent(escape(u2.stringify(e4)));
      } catch (e5) {
        throw new Error("Malformed UTF-8 data");
      }
    }, parse: function(e4) {
      return u2.parse(unescape(encodeURIComponent(e4)));
    } }, h2 = r2.BufferedBlockAlgorithm = i2.extend({ reset: function() {
      this._data = new o2.init(), this._nDataBytes = 0;
    }, _append: function(e4) {
      "string" == typeof e4 && (e4 = l2.parse(e4)), this._data.concat(e4), this._nDataBytes += e4.sigBytes;
    }, _process: function(t4) {
      var n4 = this._data, s3 = n4.words, r3 = n4.sigBytes, i3 = this.blockSize, a3 = r3 / (4 * i3), c3 = (a3 = t4 ? e3.ceil(a3) : e3.max((0 | a3) - this._minBufferSize, 0)) * i3, u3 = e3.min(4 * c3, r3);
      if (c3) {
        for (var l3 = 0; l3 < c3; l3 += i3)
          this._doProcessBlock(s3, l3);
        var h3 = s3.splice(0, c3);
        n4.sigBytes -= u3;
      }
      return new o2.init(h3, u3);
    }, clone: function() {
      var e4 = i2.clone.call(this);
      return e4._data = this._data.clone(), e4;
    }, _minBufferSize: 0 });
    r2.Hasher = h2.extend({ cfg: i2.extend(), init: function(e4) {
      this.cfg = this.cfg.extend(e4), this.reset();
    }, reset: function() {
      h2.reset.call(this), this._doReset();
    }, update: function(e4) {
      return this._append(e4), this._process(), this;
    }, finalize: function(e4) {
      return e4 && this._append(e4), this._doFinalize();
    }, blockSize: 16, _createHelper: function(e4) {
      return function(t4, n4) {
        return new e4.init(n4).finalize(t4);
      };
    }, _createHmacHelper: function(e4) {
      return function(t4, n4) {
        return new d2.HMAC.init(e4, n4).finalize(t4);
      };
    } });
    var d2 = s2.algo = {};
    return s2;
  }(Math), n2);
}), i = r, o = (s(function(e2, t2) {
  var n2;
  e2.exports = (n2 = i, function(e3) {
    var t3 = n2, s2 = t3.lib, r2 = s2.WordArray, i2 = s2.Hasher, o2 = t3.algo, a2 = [];
    !function() {
      for (var t4 = 0; t4 < 64; t4++)
        a2[t4] = 4294967296 * e3.abs(e3.sin(t4 + 1)) | 0;
    }();
    var c2 = o2.MD5 = i2.extend({ _doReset: function() {
      this._hash = new r2.init([1732584193, 4023233417, 2562383102, 271733878]);
    }, _doProcessBlock: function(e4, t4) {
      for (var n3 = 0; n3 < 16; n3++) {
        var s3 = t4 + n3, r3 = e4[s3];
        e4[s3] = 16711935 & (r3 << 8 | r3 >>> 24) | 4278255360 & (r3 << 24 | r3 >>> 8);
      }
      var i3 = this._hash.words, o3 = e4[t4 + 0], c3 = e4[t4 + 1], f2 = e4[t4 + 2], p2 = e4[t4 + 3], g2 = e4[t4 + 4], m2 = e4[t4 + 5], y2 = e4[t4 + 6], _2 = e4[t4 + 7], w = e4[t4 + 8], v2 = e4[t4 + 9], S2 = e4[t4 + 10], k2 = e4[t4 + 11], I2 = e4[t4 + 12], b = e4[t4 + 13], T2 = e4[t4 + 14], A2 = e4[t4 + 15], C2 = i3[0], P2 = i3[1], E2 = i3[2], O2 = i3[3];
      C2 = u2(C2, P2, E2, O2, o3, 7, a2[0]), O2 = u2(O2, C2, P2, E2, c3, 12, a2[1]), E2 = u2(E2, O2, C2, P2, f2, 17, a2[2]), P2 = u2(P2, E2, O2, C2, p2, 22, a2[3]), C2 = u2(C2, P2, E2, O2, g2, 7, a2[4]), O2 = u2(O2, C2, P2, E2, m2, 12, a2[5]), E2 = u2(E2, O2, C2, P2, y2, 17, a2[6]), P2 = u2(P2, E2, O2, C2, _2, 22, a2[7]), C2 = u2(C2, P2, E2, O2, w, 7, a2[8]), O2 = u2(O2, C2, P2, E2, v2, 12, a2[9]), E2 = u2(E2, O2, C2, P2, S2, 17, a2[10]), P2 = u2(P2, E2, O2, C2, k2, 22, a2[11]), C2 = u2(C2, P2, E2, O2, I2, 7, a2[12]), O2 = u2(O2, C2, P2, E2, b, 12, a2[13]), E2 = u2(E2, O2, C2, P2, T2, 17, a2[14]), C2 = l2(C2, P2 = u2(P2, E2, O2, C2, A2, 22, a2[15]), E2, O2, c3, 5, a2[16]), O2 = l2(O2, C2, P2, E2, y2, 9, a2[17]), E2 = l2(E2, O2, C2, P2, k2, 14, a2[18]), P2 = l2(P2, E2, O2, C2, o3, 20, a2[19]), C2 = l2(C2, P2, E2, O2, m2, 5, a2[20]), O2 = l2(O2, C2, P2, E2, S2, 9, a2[21]), E2 = l2(E2, O2, C2, P2, A2, 14, a2[22]), P2 = l2(P2, E2, O2, C2, g2, 20, a2[23]), C2 = l2(C2, P2, E2, O2, v2, 5, a2[24]), O2 = l2(O2, C2, P2, E2, T2, 9, a2[25]), E2 = l2(E2, O2, C2, P2, p2, 14, a2[26]), P2 = l2(P2, E2, O2, C2, w, 20, a2[27]), C2 = l2(C2, P2, E2, O2, b, 5, a2[28]), O2 = l2(O2, C2, P2, E2, f2, 9, a2[29]), E2 = l2(E2, O2, C2, P2, _2, 14, a2[30]), C2 = h2(C2, P2 = l2(P2, E2, O2, C2, I2, 20, a2[31]), E2, O2, m2, 4, a2[32]), O2 = h2(O2, C2, P2, E2, w, 11, a2[33]), E2 = h2(E2, O2, C2, P2, k2, 16, a2[34]), P2 = h2(P2, E2, O2, C2, T2, 23, a2[35]), C2 = h2(C2, P2, E2, O2, c3, 4, a2[36]), O2 = h2(O2, C2, P2, E2, g2, 11, a2[37]), E2 = h2(E2, O2, C2, P2, _2, 16, a2[38]), P2 = h2(P2, E2, O2, C2, S2, 23, a2[39]), C2 = h2(C2, P2, E2, O2, b, 4, a2[40]), O2 = h2(O2, C2, P2, E2, o3, 11, a2[41]), E2 = h2(E2, O2, C2, P2, p2, 16, a2[42]), P2 = h2(P2, E2, O2, C2, y2, 23, a2[43]), C2 = h2(C2, P2, E2, O2, v2, 4, a2[44]), O2 = h2(O2, C2, P2, E2, I2, 11, a2[45]), E2 = h2(E2, O2, C2, P2, A2, 16, a2[46]), C2 = d2(C2, P2 = h2(P2, E2, O2, C2, f2, 23, a2[47]), E2, O2, o3, 6, a2[48]), O2 = d2(O2, C2, P2, E2, _2, 10, a2[49]), E2 = d2(E2, O2, C2, P2, T2, 15, a2[50]), P2 = d2(P2, E2, O2, C2, m2, 21, a2[51]), C2 = d2(C2, P2, E2, O2, I2, 6, a2[52]), O2 = d2(O2, C2, P2, E2, p2, 10, a2[53]), E2 = d2(E2, O2, C2, P2, S2, 15, a2[54]), P2 = d2(P2, E2, O2, C2, c3, 21, a2[55]), C2 = d2(C2, P2, E2, O2, w, 6, a2[56]), O2 = d2(O2, C2, P2, E2, A2, 10, a2[57]), E2 = d2(E2, O2, C2, P2, y2, 15, a2[58]), P2 = d2(P2, E2, O2, C2, b, 21, a2[59]), C2 = d2(C2, P2, E2, O2, g2, 6, a2[60]), O2 = d2(O2, C2, P2, E2, k2, 10, a2[61]), E2 = d2(E2, O2, C2, P2, f2, 15, a2[62]), P2 = d2(P2, E2, O2, C2, v2, 21, a2[63]), i3[0] = i3[0] + C2 | 0, i3[1] = i3[1] + P2 | 0, i3[2] = i3[2] + E2 | 0, i3[3] = i3[3] + O2 | 0;
    }, _doFinalize: function() {
      var t4 = this._data, n3 = t4.words, s3 = 8 * this._nDataBytes, r3 = 8 * t4.sigBytes;
      n3[r3 >>> 5] |= 128 << 24 - r3 % 32;
      var i3 = e3.floor(s3 / 4294967296), o3 = s3;
      n3[15 + (r3 + 64 >>> 9 << 4)] = 16711935 & (i3 << 8 | i3 >>> 24) | 4278255360 & (i3 << 24 | i3 >>> 8), n3[14 + (r3 + 64 >>> 9 << 4)] = 16711935 & (o3 << 8 | o3 >>> 24) | 4278255360 & (o3 << 24 | o3 >>> 8), t4.sigBytes = 4 * (n3.length + 1), this._process();
      for (var a3 = this._hash, c3 = a3.words, u3 = 0; u3 < 4; u3++) {
        var l3 = c3[u3];
        c3[u3] = 16711935 & (l3 << 8 | l3 >>> 24) | 4278255360 & (l3 << 24 | l3 >>> 8);
      }
      return a3;
    }, clone: function() {
      var e4 = i2.clone.call(this);
      return e4._hash = this._hash.clone(), e4;
    } });
    function u2(e4, t4, n3, s3, r3, i3, o3) {
      var a3 = e4 + (t4 & n3 | ~t4 & s3) + r3 + o3;
      return (a3 << i3 | a3 >>> 32 - i3) + t4;
    }
    function l2(e4, t4, n3, s3, r3, i3, o3) {
      var a3 = e4 + (t4 & s3 | n3 & ~s3) + r3 + o3;
      return (a3 << i3 | a3 >>> 32 - i3) + t4;
    }
    function h2(e4, t4, n3, s3, r3, i3, o3) {
      var a3 = e4 + (t4 ^ n3 ^ s3) + r3 + o3;
      return (a3 << i3 | a3 >>> 32 - i3) + t4;
    }
    function d2(e4, t4, n3, s3, r3, i3, o3) {
      var a3 = e4 + (n3 ^ (t4 | ~s3)) + r3 + o3;
      return (a3 << i3 | a3 >>> 32 - i3) + t4;
    }
    t3.MD5 = i2._createHelper(c2), t3.HmacMD5 = i2._createHmacHelper(c2);
  }(Math), n2.MD5);
}), s(function(e2, t2) {
  var n2;
  e2.exports = (n2 = i, void function() {
    var e3 = n2, t3 = e3.lib.Base, s2 = e3.enc.Utf8;
    e3.algo.HMAC = t3.extend({ init: function(e4, t4) {
      e4 = this._hasher = new e4.init(), "string" == typeof t4 && (t4 = s2.parse(t4));
      var n3 = e4.blockSize, r2 = 4 * n3;
      t4.sigBytes > r2 && (t4 = e4.finalize(t4)), t4.clamp();
      for (var i2 = this._oKey = t4.clone(), o2 = this._iKey = t4.clone(), a2 = i2.words, c2 = o2.words, u2 = 0; u2 < n3; u2++)
        a2[u2] ^= 1549556828, c2[u2] ^= 909522486;
      i2.sigBytes = o2.sigBytes = r2, this.reset();
    }, reset: function() {
      var e4 = this._hasher;
      e4.reset(), e4.update(this._iKey);
    }, update: function(e4) {
      return this._hasher.update(e4), this;
    }, finalize: function(e4) {
      var t4 = this._hasher, n3 = t4.finalize(e4);
      return t4.reset(), t4.finalize(this._oKey.clone().concat(n3));
    } });
  }());
}), s(function(e2, t2) {
  e2.exports = i.HmacMD5;
})), a = s(function(e2, t2) {
  e2.exports = i.enc.Utf8;
}), c = s(function(e2, t2) {
  var n2;
  e2.exports = (n2 = i, function() {
    var e3 = n2, t3 = e3.lib.WordArray;
    function s2(e4, n3, s3) {
      for (var r2 = [], i2 = 0, o2 = 0; o2 < n3; o2++)
        if (o2 % 4) {
          var a2 = s3[e4.charCodeAt(o2 - 1)] << o2 % 4 * 2, c2 = s3[e4.charCodeAt(o2)] >>> 6 - o2 % 4 * 2;
          r2[i2 >>> 2] |= (a2 | c2) << 24 - i2 % 4 * 8, i2++;
        }
      return t3.create(r2, i2);
    }
    e3.enc.Base64 = { stringify: function(e4) {
      var t4 = e4.words, n3 = e4.sigBytes, s3 = this._map;
      e4.clamp();
      for (var r2 = [], i2 = 0; i2 < n3; i2 += 3)
        for (var o2 = (t4[i2 >>> 2] >>> 24 - i2 % 4 * 8 & 255) << 16 | (t4[i2 + 1 >>> 2] >>> 24 - (i2 + 1) % 4 * 8 & 255) << 8 | t4[i2 + 2 >>> 2] >>> 24 - (i2 + 2) % 4 * 8 & 255, a2 = 0; a2 < 4 && i2 + 0.75 * a2 < n3; a2++)
          r2.push(s3.charAt(o2 >>> 6 * (3 - a2) & 63));
      var c2 = s3.charAt(64);
      if (c2)
        for (; r2.length % 4; )
          r2.push(c2);
      return r2.join("");
    }, parse: function(e4) {
      var t4 = e4.length, n3 = this._map, r2 = this._reverseMap;
      if (!r2) {
        r2 = this._reverseMap = [];
        for (var i2 = 0; i2 < n3.length; i2++)
          r2[n3.charCodeAt(i2)] = i2;
      }
      var o2 = n3.charAt(64);
      if (o2) {
        var a2 = e4.indexOf(o2);
        -1 !== a2 && (t4 = a2);
      }
      return s2(e4, t4, r2);
    }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" };
  }(), n2.enc.Base64);
});
const u = "FUNCTION", l = "OBJECT", h = "CLIENT_DB";
function d(e2) {
  return Object.prototype.toString.call(e2).slice(8, -1).toLowerCase();
}
function f(e2) {
  return "object" === d(e2);
}
function p(e2) {
  return "function" == typeof e2;
}
function g(e2) {
  return function() {
    try {
      return e2.apply(e2, arguments);
    } catch (e3) {
      console.error(e3);
    }
  };
}
function m(e2) {
  return e2 && "string" == typeof e2 ? JSON.parse(e2) : e2;
}
const y = true, _ = "mp-weixin", v = m([]);
let S;
S = _;
const k = m(""), I = m("[]") || [];
let T = "";
try {
  T = "__UNI__EF109DD";
} catch (e2) {
}
let A = {};
function C(e2, t2 = {}) {
  var n2, s2;
  return n2 = A, s2 = e2, Object.prototype.hasOwnProperty.call(n2, s2) || (A[e2] = t2), A[e2];
}
"app" === S && (A = index$1._globalUniCloudObj ? index$1._globalUniCloudObj : index$1._globalUniCloudObj = {});
const P = ["invoke", "success", "fail", "complete"], E = C("_globalUniCloudInterceptor");
function O(e2, t2) {
  E[e2] || (E[e2] = {}), f(t2) && Object.keys(t2).forEach((n2) => {
    P.indexOf(n2) > -1 && function(e3, t3, n3) {
      let s2 = E[e3][t3];
      s2 || (s2 = E[e3][t3] = []), -1 === s2.indexOf(n3) && p(n3) && s2.push(n3);
    }(e2, n2, t2[n2]);
  });
}
function x(e2, t2) {
  E[e2] || (E[e2] = {}), f(t2) ? Object.keys(t2).forEach((n2) => {
    P.indexOf(n2) > -1 && function(e3, t3, n3) {
      const s2 = E[e3][t3];
      if (!s2)
        return;
      const r2 = s2.indexOf(n3);
      r2 > -1 && s2.splice(r2, 1);
    }(e2, n2, t2[n2]);
  }) : delete E[e2];
}
function U(e2, t2) {
  return e2 && 0 !== e2.length ? e2.reduce((e3, n2) => e3.then(() => n2(t2)), Promise.resolve()) : Promise.resolve();
}
function R(e2, t2) {
  return E[e2] && E[e2][t2] || [];
}
function L(e2) {
  O("callObject", e2);
}
const N = C("_globalUniCloudListener"), D = "response", F = "needLogin", q = "refreshToken", K = "clientdb", M = "cloudfunction", j = "cloudobject";
function B(e2) {
  return N[e2] || (N[e2] = []), N[e2];
}
function $(e2, t2) {
  const n2 = B(e2);
  n2.includes(t2) || n2.push(t2);
}
function W(e2, t2) {
  const n2 = B(e2), s2 = n2.indexOf(t2);
  -1 !== s2 && n2.splice(s2, 1);
}
function z(e2, t2) {
  const n2 = B(e2);
  for (let e3 = 0; e3 < n2.length; e3++) {
    (0, n2[e3])(t2);
  }
}
let J, H = false;
function G() {
  return J || (J = new Promise((e2) => {
    H && e2(), function t2() {
      if ("function" == typeof getCurrentPages) {
        const t3 = getCurrentPages();
        t3 && t3[0] && (H = true, e2());
      }
      H || setTimeout(() => {
        t2();
      }, 30);
    }();
  }), J);
}
function V(e2) {
  const t2 = {};
  for (const n2 in e2) {
    const s2 = e2[n2];
    p(s2) && (t2[n2] = g(s2));
  }
  return t2;
}
function Y(e2, t2) {
  return t2 ? function(n2) {
    let s2 = false;
    if ("callFunction" === t2) {
      const e3 = n2 && n2.type || u;
      s2 = e3 !== u;
    }
    const r2 = "callFunction" === t2 && !s2;
    let i2;
    i2 = this.isReady ? Promise.resolve() : this.initUniCloud, n2 = n2 || {};
    const { success: o2, fail: a2, complete: c2 } = V(n2), l2 = i2.then(() => s2 ? Promise.resolve() : U(R(t2, "invoke"), n2)).then(() => e2.call(this, n2)).then((e3) => s2 ? Promise.resolve(e3) : U(R(t2, "success"), e3).then(() => U(R(t2, "complete"), e3)).then(() => (r2 && z(D, { type: M, content: e3 }), Promise.resolve(e3))), (e3) => s2 ? Promise.reject(e3) : U(R(t2, "fail"), e3).then(() => U(R(t2, "complete"), e3)).then(() => (z(D, { type: M, content: e3 }), Promise.reject(e3))));
    if (!(o2 || a2 || c2))
      return l2;
    l2.then((e3) => {
      o2 && o2(e3), c2 && c2(e3), r2 && z(D, { type: M, content: e3 });
    }, (e3) => {
      a2 && a2(e3), c2 && c2(e3), r2 && z(D, { type: M, content: e3 });
    });
  } : function(t3) {
    t3 = t3 || {};
    const { success: n2, fail: s2, complete: r2 } = V(t3);
    if (!(n2 || s2 || r2))
      return e2.call(this, t3);
    e2.call(this, t3).then((e3) => {
      n2 && n2(e3), r2 && r2(e3);
    }, (e3) => {
      s2 && s2(e3), r2 && r2(e3);
    });
  };
}
class Q extends Error {
  constructor(e2) {
    super(e2.message), this.errMsg = e2.message || e2.errMsg || "unknown system error", this.code = this.errCode = e2.code || e2.errCode || "SYSTEM_ERROR", this.errSubject = this.subject = e2.subject || e2.errSubject, this.cause = e2.cause, this.requestId = e2.requestId;
  }
  toJson(e2 = 0) {
    if (!(e2 >= 10))
      return e2++, { errCode: this.errCode, errMsg: this.errMsg, errSubject: this.errSubject, cause: this.cause && this.cause.toJson ? this.cause.toJson(e2) : this.cause };
  }
}
var X = { request: (e2) => index$1.request(e2), uploadFile: (e2) => index$1.uploadFile(e2), setStorageSync: (e2, t2) => index$1.setStorageSync(e2, t2), getStorageSync: (e2) => index$1.getStorageSync(e2), removeStorageSync: (e2) => index$1.removeStorageSync(e2), clearStorageSync: () => index$1.clearStorageSync() };
function Z(e2) {
  return e2 && Z(e2.__v_raw) || e2;
}
function ee() {
  return { token: X.getStorageSync("uni_id_token") || X.getStorageSync("uniIdToken"), tokenExpired: X.getStorageSync("uni_id_token_expired") };
}
function te({ token: e2, tokenExpired: t2 } = {}) {
  e2 && X.setStorageSync("uni_id_token", e2), t2 && X.setStorageSync("uni_id_token_expired", t2);
}
function ne() {
  if ("web" !== S)
    return;
  index$1.getStorageSync("__LAST_DCLOUD_APPID") !== T && (index$1.setStorageSync("__LAST_DCLOUD_APPID", T), console.warn("\u68C0\u6D4B\u5230\u5F53\u524D\u9879\u76EE\u4E0E\u4E0A\u6B21\u8FD0\u884C\u5230\u6B64\u7AEF\u53E3\u7684\u9879\u76EE\u4E0D\u4E00\u81F4\uFF0C\u81EA\u52A8\u6E05\u7406uni-id\u4FDD\u5B58\u7684token\u4FE1\u606F\uFF08\u4EC5\u5F00\u53D1\u8C03\u8BD5\u65F6\u751F\u6548\uFF09"), X.removeStorageSync("uni_id_token"), X.removeStorageSync("uniIdToken"), X.removeStorageSync("uni_id_token_expired"));
}
let se, re;
function ie() {
  return se || (se = index$1.getSystemInfoSync()), se;
}
function oe() {
  let e2, t2;
  try {
    if (index$1.getLaunchOptionsSync) {
      if (index$1.getLaunchOptionsSync.toString().indexOf("not yet implemented") > -1)
        return;
      const { scene: n2, channel: s2 } = index$1.getLaunchOptionsSync();
      e2 = s2, t2 = n2;
    }
  } catch (e3) {
  }
  return { channel: e2, scene: t2 };
}
function ae() {
  const e2 = index$1.getLocale && index$1.getLocale() || "en";
  if (re)
    return { ...re, locale: e2, LOCALE: e2 };
  const t2 = ie(), { deviceId: n2, osName: s2, uniPlatform: r2, appId: i2 } = t2, o2 = ["pixelRatio", "brand", "model", "system", "language", "version", "platform", "host", "SDKVersion", "swanNativeVersion", "app", "AppPlatform", "fontSizeSetting"];
  for (let e3 = 0; e3 < o2.length; e3++) {
    delete t2[o2[e3]];
  }
  return re = { PLATFORM: r2, OS: s2, APPID: i2, DEVICEID: n2, ...oe(), ...t2 }, { ...re, locale: e2, LOCALE: e2 };
}
var ce = { sign: function(e2, t2) {
  let n2 = "";
  return Object.keys(e2).sort().forEach(function(t3) {
    e2[t3] && (n2 = n2 + "&" + t3 + "=" + e2[t3]);
  }), n2 = n2.slice(1), o(n2, t2).toString();
}, wrappedRequest: function(e2, t2) {
  return new Promise((n2, s2) => {
    t2(Object.assign(e2, { complete(e3) {
      e3 || (e3 = {}), "web" === S && e3.errMsg && 0 === e3.errMsg.indexOf("request:fail") && console.warn("\u53D1\u5E03H5\uFF0C\u9700\u8981\u5728uniCloud\u540E\u53F0\u64CD\u4F5C\uFF0C\u7ED1\u5B9A\u5B89\u5168\u57DF\u540D\uFF0C\u5426\u5219\u4F1A\u56E0\u4E3A\u8DE8\u57DF\u95EE\u9898\u800C\u65E0\u6CD5\u8BBF\u95EE\u3002\u6559\u7A0B\u53C2\u8003\uFF1Ahttps://uniapp.dcloud.io/uniCloud/quickstart?id=useinh5");
      const t3 = e3.data && e3.data.header && e3.data.header["x-serverless-request-id"] || e3.header && e3.header["request-id"];
      if (!e3.statusCode || e3.statusCode >= 400)
        return s2(new Q({ code: "SYS_ERR", message: e3.errMsg || "request:fail", requestId: t3 }));
      const r2 = e3.data;
      if (r2.error)
        return s2(new Q({ code: r2.error.code, message: r2.error.message, requestId: t3 }));
      r2.result = r2.data, r2.requestId = t3, delete r2.data, n2(r2);
    } }));
  });
}, toBase64: function(e2) {
  return c.stringify(a.parse(e2));
} }, ue = { "uniCloud.init.paramRequired": "{param} required", "uniCloud.uploadFile.fileError": "filePath should be instance of File" };
const { t: le } = initVueI18n({ "zh-Hans": { "uniCloud.init.paramRequired": "\u7F3A\u5C11\u53C2\u6570\uFF1A{param}", "uniCloud.uploadFile.fileError": "filePath\u5E94\u4E3AFile\u5BF9\u8C61" }, "zh-Hant": { "uniCloud.init.paramRequired": "\u7F3A\u5C11\u53C2\u6570\uFF1A{param}", "uniCloud.uploadFile.fileError": "filePath\u5E94\u4E3AFile\u5BF9\u8C61" }, en: ue, fr: { "uniCloud.init.paramRequired": "{param} required", "uniCloud.uploadFile.fileError": "filePath should be instance of File" }, es: { "uniCloud.init.paramRequired": "{param} required", "uniCloud.uploadFile.fileError": "filePath should be instance of File" }, ja: ue }, "zh-Hans");
var he = class {
  constructor(e2) {
    ["spaceId", "clientSecret"].forEach((t2) => {
      if (!Object.prototype.hasOwnProperty.call(e2, t2))
        throw new Error(le("uniCloud.init.paramRequired", { param: t2 }));
    }), this.config = Object.assign({}, { endpoint: "https://api.bspapp.com" }, e2), this.config.provider = "aliyun", this.config.requestUrl = this.config.endpoint + "/client", this.config.envType = this.config.envType || "public", this.config.accessTokenKey = "access_token_" + this.config.spaceId, this.adapter = X, this._getAccessTokenPromise = null, this._getAccessTokenPromiseStatus = null;
  }
  get hasAccessToken() {
    return !!this.accessToken;
  }
  setAccessToken(e2) {
    this.accessToken = e2;
  }
  requestWrapped(e2) {
    return ce.wrappedRequest(e2, this.adapter.request);
  }
  requestAuth(e2) {
    return this.requestWrapped(e2);
  }
  request(e2, t2) {
    return Promise.resolve().then(() => this.hasAccessToken ? t2 ? this.requestWrapped(e2) : this.requestWrapped(e2).catch((t3) => new Promise((e3, n2) => {
      !t3 || "GATEWAY_INVALID_TOKEN" !== t3.code && "InvalidParameter.InvalidToken" !== t3.code ? n2(t3) : e3();
    }).then(() => this.getAccessToken()).then(() => {
      const t4 = this.rebuildRequest(e2);
      return this.request(t4, true);
    })) : this.getAccessToken().then(() => {
      const t3 = this.rebuildRequest(e2);
      return this.request(t3, true);
    }));
  }
  rebuildRequest(e2) {
    const t2 = Object.assign({}, e2);
    return t2.data.token = this.accessToken, t2.header["x-basement-token"] = this.accessToken, t2.header["x-serverless-sign"] = ce.sign(t2.data, this.config.clientSecret), t2;
  }
  setupRequest(e2, t2) {
    const n2 = Object.assign({}, e2, { spaceId: this.config.spaceId, timestamp: Date.now() }), s2 = { "Content-Type": "application/json" };
    return "auth" !== t2 && (n2.token = this.accessToken, s2["x-basement-token"] = this.accessToken), s2["x-serverless-sign"] = ce.sign(n2, this.config.clientSecret), { url: this.config.requestUrl, method: "POST", data: n2, dataType: "json", header: s2 };
  }
  getAccessToken() {
    if ("pending" === this._getAccessTokenPromiseStatus)
      return this._getAccessTokenPromise;
    this._getAccessTokenPromiseStatus = "pending";
    return this._getAccessTokenPromise = this.requestAuth(this.setupRequest({ method: "serverless.auth.user.anonymousAuthorize", params: "{}" }, "auth")).then((e2) => new Promise((t2, n2) => {
      e2.result && e2.result.accessToken ? (this.setAccessToken(e2.result.accessToken), this._getAccessTokenPromiseStatus = "fulfilled", t2(this.accessToken)) : (this._getAccessTokenPromiseStatus = "rejected", n2(new Q({ code: "AUTH_FAILED", message: "\u83B7\u53D6accessToken\u5931\u8D25" })));
    }), (e2) => (this._getAccessTokenPromiseStatus = "rejected", Promise.reject(e2))), this._getAccessTokenPromise;
  }
  authorize() {
    this.getAccessToken();
  }
  callFunction(e2) {
    const t2 = { method: "serverless.function.runtime.invoke", params: JSON.stringify({ functionTarget: e2.name, functionArgs: e2.data || {} }) };
    return this.request(this.setupRequest(t2));
  }
  getOSSUploadOptionsFromPath(e2) {
    const t2 = { method: "serverless.file.resource.generateProximalSign", params: JSON.stringify(e2) };
    return this.request(this.setupRequest(t2));
  }
  uploadFileToOSS({ url: e2, formData: t2, name: n2, filePath: s2, fileType: r2, onUploadProgress: i2 }) {
    return new Promise((o2, a2) => {
      const c2 = this.adapter.uploadFile({ url: e2, formData: t2, name: n2, filePath: s2, fileType: r2, header: { "X-OSS-server-side-encrpytion": "AES256" }, success(e3) {
        e3 && e3.statusCode < 400 ? o2(e3) : a2(new Q({ code: "UPLOAD_FAILED", message: "\u6587\u4EF6\u4E0A\u4F20\u5931\u8D25" }));
      }, fail(e3) {
        a2(new Q({ code: e3.code || "UPLOAD_FAILED", message: e3.message || e3.errMsg || "\u6587\u4EF6\u4E0A\u4F20\u5931\u8D25" }));
      } });
      "function" == typeof i2 && c2 && "function" == typeof c2.onProgressUpdate && c2.onProgressUpdate((e3) => {
        i2({ loaded: e3.totalBytesSent, total: e3.totalBytesExpectedToSend });
      });
    });
  }
  reportOSSUpload(e2) {
    const t2 = { method: "serverless.file.resource.report", params: JSON.stringify(e2) };
    return this.request(this.setupRequest(t2));
  }
  async uploadFile({ filePath: e2, cloudPath: t2, fileType: n2 = "image", onUploadProgress: s2, config: r2 }) {
    if ("string" !== d(t2))
      throw new Q({ code: "INVALID_PARAM", message: "cloudPath\u5FC5\u987B\u4E3A\u5B57\u7B26\u4E32\u7C7B\u578B" });
    if (!(t2 = t2.trim()))
      throw new Q({ code: "CLOUDPATH_REQUIRED", message: "cloudPath\u4E0D\u53EF\u4E3A\u7A7A" });
    if (/:\/\//.test(t2))
      throw new Q({ code: "INVALID_PARAM", message: "cloudPath\u4E0D\u5408\u6CD5" });
    const i2 = r2 && r2.envType || this.config.envType, o2 = (await this.getOSSUploadOptionsFromPath({ env: i2, filename: t2 })).result, a2 = "https://" + o2.cdnDomain + "/" + o2.ossPath, { securityToken: c2, accessKeyId: u2, signature: l2, host: h2, ossPath: f2, id: p2, policy: g2, ossCallbackUrl: m2 } = o2, y2 = { "Cache-Control": "max-age=2592000", "Content-Disposition": "attachment", OSSAccessKeyId: u2, Signature: l2, host: h2, id: p2, key: f2, policy: g2, success_action_status: 200 };
    if (c2 && (y2["x-oss-security-token"] = c2), m2) {
      const e3 = JSON.stringify({ callbackUrl: m2, callbackBody: JSON.stringify({ fileId: p2, spaceId: this.config.spaceId }), callbackBodyType: "application/json" });
      y2.callback = ce.toBase64(e3);
    }
    const _2 = { url: "https://" + o2.host, formData: y2, fileName: "file", name: "file", filePath: e2, fileType: n2 };
    if (await this.uploadFileToOSS(Object.assign({}, _2, { onUploadProgress: s2 })), m2)
      return { success: true, filePath: e2, fileID: a2 };
    if ((await this.reportOSSUpload({ id: p2 })).success)
      return { success: true, filePath: e2, fileID: a2 };
    throw new Q({ code: "UPLOAD_FAILED", message: "\u6587\u4EF6\u4E0A\u4F20\u5931\u8D25" });
  }
  getTempFileURL({ fileList: e2 } = {}) {
    return new Promise((t2, n2) => {
      Array.isArray(e2) && 0 !== e2.length || n2(new Q({ code: "INVALID_PARAM", message: "fileList\u7684\u5143\u7D20\u5FC5\u987B\u662F\u975E\u7A7A\u7684\u5B57\u7B26\u4E32" })), t2({ fileList: e2.map((e3) => ({ fileID: e3, tempFileURL: e3 })) });
    });
  }
  async getFileInfo({ fileList: e2 } = {}) {
    if (!Array.isArray(e2) || 0 === e2.length)
      throw new Q({ code: "INVALID_PARAM", message: "fileList\u7684\u5143\u7D20\u5FC5\u987B\u662F\u975E\u7A7A\u7684\u5B57\u7B26\u4E32" });
    const t2 = { method: "serverless.file.resource.info", params: JSON.stringify({ id: e2.map((e3) => e3.split("?")[0]).join(",") }) };
    return { fileList: (await this.request(this.setupRequest(t2))).result };
  }
};
var de = { init(e2) {
  const t2 = new he(e2), n2 = { signInAnonymously: function() {
    return t2.authorize();
  }, getLoginState: function() {
    return Promise.resolve(false);
  } };
  return t2.auth = function() {
    return n2;
  }, t2.customAuth = t2.auth, t2;
} };
const fe = "undefined" != typeof location && "http:" === location.protocol ? "http:" : "https:";
var pe;
!function(e2) {
  e2.local = "local", e2.none = "none", e2.session = "session";
}(pe || (pe = {}));
var ge = function() {
};
const me = () => {
  let e2;
  if (!Promise) {
    e2 = () => {
    }, e2.promise = {};
    const t3 = () => {
      throw new Q({ message: 'Your Node runtime does support ES6 Promises. Set "global.Promise" to your preferred implementation of promises.' });
    };
    return Object.defineProperty(e2.promise, "then", { get: t3 }), Object.defineProperty(e2.promise, "catch", { get: t3 }), e2;
  }
  const t2 = new Promise((t3, n2) => {
    e2 = (e3, s2) => e3 ? n2(e3) : t3(s2);
  });
  return e2.promise = t2, e2;
};
function ye(e2) {
  return void 0 === e2;
}
function _e(e2) {
  return "[object Null]" === Object.prototype.toString.call(e2);
}
var we;
function ve(e2) {
  const t2 = (n2 = e2, "[object Array]" === Object.prototype.toString.call(n2) ? e2 : [e2]);
  var n2;
  for (const e3 of t2) {
    const { isMatch: t3, genAdapter: n3, runtime: s2 } = e3;
    if (t3())
      return { adapter: n3(), runtime: s2 };
  }
}
!function(e2) {
  e2.WEB = "web", e2.WX_MP = "wx_mp";
}(we || (we = {}));
const Se = { adapter: null, runtime: void 0 }, ke = ["anonymousUuidKey"];
class Ie extends ge {
  constructor() {
    super(), Se.adapter.root.tcbObject || (Se.adapter.root.tcbObject = {});
  }
  setItem(e2, t2) {
    Se.adapter.root.tcbObject[e2] = t2;
  }
  getItem(e2) {
    return Se.adapter.root.tcbObject[e2];
  }
  removeItem(e2) {
    delete Se.adapter.root.tcbObject[e2];
  }
  clear() {
    delete Se.adapter.root.tcbObject;
  }
}
function be(e2, t2) {
  switch (e2) {
    case "local":
      return t2.localStorage || new Ie();
    case "none":
      return new Ie();
    default:
      return t2.sessionStorage || new Ie();
  }
}
class Te {
  constructor(e2) {
    if (!this._storage) {
      this._persistence = Se.adapter.primaryStorage || e2.persistence, this._storage = be(this._persistence, Se.adapter);
      const t2 = `access_token_${e2.env}`, n2 = `access_token_expire_${e2.env}`, s2 = `refresh_token_${e2.env}`, r2 = `anonymous_uuid_${e2.env}`, i2 = `login_type_${e2.env}`, o2 = `user_info_${e2.env}`;
      this.keys = { accessTokenKey: t2, accessTokenExpireKey: n2, refreshTokenKey: s2, anonymousUuidKey: r2, loginTypeKey: i2, userInfoKey: o2 };
    }
  }
  updatePersistence(e2) {
    if (e2 === this._persistence)
      return;
    const t2 = "local" === this._persistence;
    this._persistence = e2;
    const n2 = be(e2, Se.adapter);
    for (const e3 in this.keys) {
      const s2 = this.keys[e3];
      if (t2 && ke.includes(e3))
        continue;
      const r2 = this._storage.getItem(s2);
      ye(r2) || _e(r2) || (n2.setItem(s2, r2), this._storage.removeItem(s2));
    }
    this._storage = n2;
  }
  setStore(e2, t2, n2) {
    if (!this._storage)
      return;
    const s2 = { version: n2 || "localCachev1", content: t2 }, r2 = JSON.stringify(s2);
    try {
      this._storage.setItem(e2, r2);
    } catch (e3) {
      throw e3;
    }
  }
  getStore(e2, t2) {
    try {
      if (!this._storage)
        return;
    } catch (e3) {
      return "";
    }
    t2 = t2 || "localCachev1";
    const n2 = this._storage.getItem(e2);
    if (!n2)
      return "";
    if (n2.indexOf(t2) >= 0) {
      return JSON.parse(n2).content;
    }
    return "";
  }
  removeStore(e2) {
    this._storage.removeItem(e2);
  }
}
const Ae = {}, Ce = {};
function Pe(e2) {
  return Ae[e2];
}
class Ee {
  constructor(e2, t2) {
    this.data = t2 || null, this.name = e2;
  }
}
class Oe extends Ee {
  constructor(e2, t2) {
    super("error", { error: e2, data: t2 }), this.error = e2;
  }
}
const xe = new class {
  constructor() {
    this._listeners = {};
  }
  on(e2, t2) {
    return function(e3, t3, n2) {
      n2[e3] = n2[e3] || [], n2[e3].push(t3);
    }(e2, t2, this._listeners), this;
  }
  off(e2, t2) {
    return function(e3, t3, n2) {
      if (n2 && n2[e3]) {
        const s2 = n2[e3].indexOf(t3);
        -1 !== s2 && n2[e3].splice(s2, 1);
      }
    }(e2, t2, this._listeners), this;
  }
  fire(e2, t2) {
    if (e2 instanceof Oe)
      return console.error(e2.error), this;
    const n2 = "string" == typeof e2 ? new Ee(e2, t2 || {}) : e2;
    const s2 = n2.name;
    if (this._listens(s2)) {
      n2.target = this;
      const e3 = this._listeners[s2] ? [...this._listeners[s2]] : [];
      for (const t3 of e3)
        t3.call(this, n2);
    }
    return this;
  }
  _listens(e2) {
    return this._listeners[e2] && this._listeners[e2].length > 0;
  }
}();
function Ue(e2, t2) {
  xe.on(e2, t2);
}
function Re(e2, t2 = {}) {
  xe.fire(e2, t2);
}
function Le(e2, t2) {
  xe.off(e2, t2);
}
const Ne = "loginStateChanged", De = "loginStateExpire", Fe = "loginTypeChanged", qe = "anonymousConverted", Ke = "refreshAccessToken";
var Me;
!function(e2) {
  e2.ANONYMOUS = "ANONYMOUS", e2.WECHAT = "WECHAT", e2.WECHAT_PUBLIC = "WECHAT-PUBLIC", e2.WECHAT_OPEN = "WECHAT-OPEN", e2.CUSTOM = "CUSTOM", e2.EMAIL = "EMAIL", e2.USERNAME = "USERNAME", e2.NULL = "NULL";
}(Me || (Me = {}));
const je = ["auth.getJwt", "auth.logout", "auth.signInWithTicket", "auth.signInAnonymously", "auth.signIn", "auth.fetchAccessTokenWithRefreshToken", "auth.signUpWithEmailAndPassword", "auth.activateEndUserMail", "auth.sendPasswordResetEmail", "auth.resetPasswordWithToken", "auth.isUsernameRegistered"], Be = { "X-SDK-Version": "1.3.5" };
function $e(e2, t2, n2) {
  const s2 = e2[t2];
  e2[t2] = function(t3) {
    const r2 = {}, i2 = {};
    n2.forEach((n3) => {
      const { data: s3, headers: o3 } = n3.call(e2, t3);
      Object.assign(r2, s3), Object.assign(i2, o3);
    });
    const o2 = t3.data;
    return o2 && (() => {
      var e3;
      if (e3 = o2, "[object FormData]" !== Object.prototype.toString.call(e3))
        t3.data = { ...o2, ...r2 };
      else
        for (const e4 in r2)
          o2.append(e4, r2[e4]);
    })(), t3.headers = { ...t3.headers || {}, ...i2 }, s2.call(e2, t3);
  };
}
function We() {
  const e2 = Math.random().toString(16).slice(2);
  return { data: { seqId: e2 }, headers: { ...Be, "x-seqid": e2 } };
}
class ze {
  constructor(e2 = {}) {
    var t2;
    this.config = e2, this._reqClass = new Se.adapter.reqClass({ timeout: this.config.timeout, timeoutMsg: `\u8BF7\u6C42\u5728${this.config.timeout / 1e3}s\u5185\u672A\u5B8C\u6210\uFF0C\u5DF2\u4E2D\u65AD`, restrictedMethods: ["post"] }), this._cache = Pe(this.config.env), this._localCache = (t2 = this.config.env, Ce[t2]), $e(this._reqClass, "post", [We]), $e(this._reqClass, "upload", [We]), $e(this._reqClass, "download", [We]);
  }
  async post(e2) {
    return await this._reqClass.post(e2);
  }
  async upload(e2) {
    return await this._reqClass.upload(e2);
  }
  async download(e2) {
    return await this._reqClass.download(e2);
  }
  async refreshAccessToken() {
    let e2, t2;
    this._refreshAccessTokenPromise || (this._refreshAccessTokenPromise = this._refreshAccessToken());
    try {
      e2 = await this._refreshAccessTokenPromise;
    } catch (e3) {
      t2 = e3;
    }
    if (this._refreshAccessTokenPromise = null, this._shouldRefreshAccessTokenHook = null, t2)
      throw t2;
    return e2;
  }
  async _refreshAccessToken() {
    const { accessTokenKey: e2, accessTokenExpireKey: t2, refreshTokenKey: n2, loginTypeKey: s2, anonymousUuidKey: r2 } = this._cache.keys;
    this._cache.removeStore(e2), this._cache.removeStore(t2);
    let i2 = this._cache.getStore(n2);
    if (!i2)
      throw new Q({ message: "\u672A\u767B\u5F55CloudBase" });
    const o2 = { refresh_token: i2 }, a2 = await this.request("auth.fetchAccessTokenWithRefreshToken", o2);
    if (a2.data.code) {
      const { code: e3 } = a2.data;
      if ("SIGN_PARAM_INVALID" === e3 || "REFRESH_TOKEN_EXPIRED" === e3 || "INVALID_REFRESH_TOKEN" === e3) {
        if (this._cache.getStore(s2) === Me.ANONYMOUS && "INVALID_REFRESH_TOKEN" === e3) {
          const e4 = this._cache.getStore(r2), t3 = this._cache.getStore(n2), s3 = await this.send("auth.signInAnonymously", { anonymous_uuid: e4, refresh_token: t3 });
          return this.setRefreshToken(s3.refresh_token), this._refreshAccessToken();
        }
        Re(De), this._cache.removeStore(n2);
      }
      throw new Q({ code: a2.data.code, message: `\u5237\u65B0access token\u5931\u8D25\uFF1A${a2.data.code}` });
    }
    if (a2.data.access_token)
      return Re(Ke), this._cache.setStore(e2, a2.data.access_token), this._cache.setStore(t2, a2.data.access_token_expire + Date.now()), { accessToken: a2.data.access_token, accessTokenExpire: a2.data.access_token_expire };
    a2.data.refresh_token && (this._cache.removeStore(n2), this._cache.setStore(n2, a2.data.refresh_token), this._refreshAccessToken());
  }
  async getAccessToken() {
    const { accessTokenKey: e2, accessTokenExpireKey: t2, refreshTokenKey: n2 } = this._cache.keys;
    if (!this._cache.getStore(n2))
      throw new Q({ message: "refresh token\u4E0D\u5B58\u5728\uFF0C\u767B\u5F55\u72B6\u6001\u5F02\u5E38" });
    let s2 = this._cache.getStore(e2), r2 = this._cache.getStore(t2), i2 = true;
    return this._shouldRefreshAccessTokenHook && !await this._shouldRefreshAccessTokenHook(s2, r2) && (i2 = false), (!s2 || !r2 || r2 < Date.now()) && i2 ? this.refreshAccessToken() : { accessToken: s2, accessTokenExpire: r2 };
  }
  async request(e2, t2, n2) {
    const s2 = `x-tcb-trace_${this.config.env}`;
    let r2 = "application/x-www-form-urlencoded";
    const i2 = { action: e2, env: this.config.env, dataVersion: "2019-08-16", ...t2 };
    if (-1 === je.indexOf(e2)) {
      const { refreshTokenKey: e3 } = this._cache.keys;
      this._cache.getStore(e3) && (i2.access_token = (await this.getAccessToken()).accessToken);
    }
    let o2;
    if ("storage.uploadFile" === e2) {
      o2 = new FormData();
      for (let e3 in o2)
        o2.hasOwnProperty(e3) && void 0 !== o2[e3] && o2.append(e3, i2[e3]);
      r2 = "multipart/form-data";
    } else {
      r2 = "application/json", o2 = {};
      for (let e3 in i2)
        void 0 !== i2[e3] && (o2[e3] = i2[e3]);
    }
    let a2 = { headers: { "content-type": r2 } };
    n2 && n2.onUploadProgress && (a2.onUploadProgress = n2.onUploadProgress);
    const c2 = this._localCache.getStore(s2);
    c2 && (a2.headers["X-TCB-Trace"] = c2);
    const { parse: u2, inQuery: l2, search: h2 } = t2;
    let d2 = { env: this.config.env };
    u2 && (d2.parse = true), l2 && (d2 = { ...l2, ...d2 });
    let f2 = function(e3, t3, n3 = {}) {
      const s3 = /\?/.test(t3);
      let r3 = "";
      for (let e4 in n3)
        "" === r3 ? !s3 && (t3 += "?") : r3 += "&", r3 += `${e4}=${encodeURIComponent(n3[e4])}`;
      return /^http(s)?\:\/\//.test(t3 += r3) ? t3 : `${e3}${t3}`;
    }(fe, "//tcb-api.tencentcloudapi.com/web", d2);
    h2 && (f2 += h2);
    const p2 = await this.post({ url: f2, data: o2, ...a2 }), g2 = p2.header && p2.header["x-tcb-trace"];
    if (g2 && this._localCache.setStore(s2, g2), 200 !== Number(p2.status) && 200 !== Number(p2.statusCode) || !p2.data)
      throw new Q({ code: "NETWORK_ERROR", message: "network request error" });
    return p2;
  }
  async send(e2, t2 = {}) {
    const n2 = await this.request(e2, t2, { onUploadProgress: t2.onUploadProgress });
    if ("ACCESS_TOKEN_EXPIRED" === n2.data.code && -1 === je.indexOf(e2)) {
      await this.refreshAccessToken();
      const n3 = await this.request(e2, t2, { onUploadProgress: t2.onUploadProgress });
      if (n3.data.code)
        throw new Q({ code: n3.data.code, message: n3.data.message });
      return n3.data;
    }
    if (n2.data.code)
      throw new Q({ code: n2.data.code, message: n2.data.message });
    return n2.data;
  }
  setRefreshToken(e2) {
    const { accessTokenKey: t2, accessTokenExpireKey: n2, refreshTokenKey: s2 } = this._cache.keys;
    this._cache.removeStore(t2), this._cache.removeStore(n2), this._cache.setStore(s2, e2);
  }
}
const Je = {};
function He(e2) {
  return Je[e2];
}
class Ge {
  constructor(e2) {
    this.config = e2, this._cache = Pe(e2.env), this._request = He(e2.env);
  }
  setRefreshToken(e2) {
    const { accessTokenKey: t2, accessTokenExpireKey: n2, refreshTokenKey: s2 } = this._cache.keys;
    this._cache.removeStore(t2), this._cache.removeStore(n2), this._cache.setStore(s2, e2);
  }
  setAccessToken(e2, t2) {
    const { accessTokenKey: n2, accessTokenExpireKey: s2 } = this._cache.keys;
    this._cache.setStore(n2, e2), this._cache.setStore(s2, t2);
  }
  async refreshUserInfo() {
    const { data: e2 } = await this._request.send("auth.getUserInfo", {});
    return this.setLocalUserInfo(e2), e2;
  }
  setLocalUserInfo(e2) {
    const { userInfoKey: t2 } = this._cache.keys;
    this._cache.setStore(t2, e2);
  }
}
class Ve {
  constructor(e2) {
    if (!e2)
      throw new Q({ code: "PARAM_ERROR", message: "envId is not defined" });
    this._envId = e2, this._cache = Pe(this._envId), this._request = He(this._envId), this.setUserInfo();
  }
  linkWithTicket(e2) {
    if ("string" != typeof e2)
      throw new Q({ code: "PARAM_ERROR", message: "ticket must be string" });
    return this._request.send("auth.linkWithTicket", { ticket: e2 });
  }
  linkWithRedirect(e2) {
    e2.signInWithRedirect();
  }
  updatePassword(e2, t2) {
    return this._request.send("auth.updatePassword", { oldPassword: t2, newPassword: e2 });
  }
  updateEmail(e2) {
    return this._request.send("auth.updateEmail", { newEmail: e2 });
  }
  updateUsername(e2) {
    if ("string" != typeof e2)
      throw new Q({ code: "PARAM_ERROR", message: "username must be a string" });
    return this._request.send("auth.updateUsername", { username: e2 });
  }
  async getLinkedUidList() {
    const { data: e2 } = await this._request.send("auth.getLinkedUidList", {});
    let t2 = false;
    const { users: n2 } = e2;
    return n2.forEach((e3) => {
      e3.wxOpenId && e3.wxPublicId && (t2 = true);
    }), { users: n2, hasPrimaryUid: t2 };
  }
  setPrimaryUid(e2) {
    return this._request.send("auth.setPrimaryUid", { uid: e2 });
  }
  unlink(e2) {
    return this._request.send("auth.unlink", { platform: e2 });
  }
  async update(e2) {
    const { nickName: t2, gender: n2, avatarUrl: s2, province: r2, country: i2, city: o2 } = e2, { data: a2 } = await this._request.send("auth.updateUserInfo", { nickName: t2, gender: n2, avatarUrl: s2, province: r2, country: i2, city: o2 });
    this.setLocalUserInfo(a2);
  }
  async refresh() {
    const { data: e2 } = await this._request.send("auth.getUserInfo", {});
    return this.setLocalUserInfo(e2), e2;
  }
  setUserInfo() {
    const { userInfoKey: e2 } = this._cache.keys, t2 = this._cache.getStore(e2);
    ["uid", "loginType", "openid", "wxOpenId", "wxPublicId", "unionId", "qqMiniOpenId", "email", "hasPassword", "customUserId", "nickName", "gender", "avatarUrl"].forEach((e3) => {
      this[e3] = t2[e3];
    }), this.location = { country: t2.country, province: t2.province, city: t2.city };
  }
  setLocalUserInfo(e2) {
    const { userInfoKey: t2 } = this._cache.keys;
    this._cache.setStore(t2, e2), this.setUserInfo();
  }
}
class Ye {
  constructor(e2) {
    if (!e2)
      throw new Q({ code: "PARAM_ERROR", message: "envId is not defined" });
    this._cache = Pe(e2);
    const { refreshTokenKey: t2, accessTokenKey: n2, accessTokenExpireKey: s2 } = this._cache.keys, r2 = this._cache.getStore(t2), i2 = this._cache.getStore(n2), o2 = this._cache.getStore(s2);
    this.credential = { refreshToken: r2, accessToken: i2, accessTokenExpire: o2 }, this.user = new Ve(e2);
  }
  get isAnonymousAuth() {
    return this.loginType === Me.ANONYMOUS;
  }
  get isCustomAuth() {
    return this.loginType === Me.CUSTOM;
  }
  get isWeixinAuth() {
    return this.loginType === Me.WECHAT || this.loginType === Me.WECHAT_OPEN || this.loginType === Me.WECHAT_PUBLIC;
  }
  get loginType() {
    return this._cache.getStore(this._cache.keys.loginTypeKey);
  }
}
class Qe extends Ge {
  async signIn() {
    this._cache.updatePersistence("local");
    const { anonymousUuidKey: e2, refreshTokenKey: t2 } = this._cache.keys, n2 = this._cache.getStore(e2) || void 0, s2 = this._cache.getStore(t2) || void 0, r2 = await this._request.send("auth.signInAnonymously", { anonymous_uuid: n2, refresh_token: s2 });
    if (r2.uuid && r2.refresh_token) {
      this._setAnonymousUUID(r2.uuid), this.setRefreshToken(r2.refresh_token), await this._request.refreshAccessToken(), Re(Ne), Re(Fe, { env: this.config.env, loginType: Me.ANONYMOUS, persistence: "local" });
      const e3 = new Ye(this.config.env);
      return await e3.user.refresh(), e3;
    }
    throw new Q({ message: "\u533F\u540D\u767B\u5F55\u5931\u8D25" });
  }
  async linkAndRetrieveDataWithTicket(e2) {
    const { anonymousUuidKey: t2, refreshTokenKey: n2 } = this._cache.keys, s2 = this._cache.getStore(t2), r2 = this._cache.getStore(n2), i2 = await this._request.send("auth.linkAndRetrieveDataWithTicket", { anonymous_uuid: s2, refresh_token: r2, ticket: e2 });
    if (i2.refresh_token)
      return this._clearAnonymousUUID(), this.setRefreshToken(i2.refresh_token), await this._request.refreshAccessToken(), Re(qe, { env: this.config.env }), Re(Fe, { loginType: Me.CUSTOM, persistence: "local" }), { credential: { refreshToken: i2.refresh_token } };
    throw new Q({ message: "\u533F\u540D\u8F6C\u5316\u5931\u8D25" });
  }
  _setAnonymousUUID(e2) {
    const { anonymousUuidKey: t2, loginTypeKey: n2 } = this._cache.keys;
    this._cache.removeStore(t2), this._cache.setStore(t2, e2), this._cache.setStore(n2, Me.ANONYMOUS);
  }
  _clearAnonymousUUID() {
    this._cache.removeStore(this._cache.keys.anonymousUuidKey);
  }
}
class Xe extends Ge {
  async signIn(e2) {
    if ("string" != typeof e2)
      throw new Q({ code: "PARAM_ERROR", message: "ticket must be a string" });
    const { refreshTokenKey: t2 } = this._cache.keys, n2 = await this._request.send("auth.signInWithTicket", { ticket: e2, refresh_token: this._cache.getStore(t2) || "" });
    if (n2.refresh_token)
      return this.setRefreshToken(n2.refresh_token), await this._request.refreshAccessToken(), Re(Ne), Re(Fe, { env: this.config.env, loginType: Me.CUSTOM, persistence: this.config.persistence }), await this.refreshUserInfo(), new Ye(this.config.env);
    throw new Q({ message: "\u81EA\u5B9A\u4E49\u767B\u5F55\u5931\u8D25" });
  }
}
class Ze extends Ge {
  async signIn(e2, t2) {
    if ("string" != typeof e2)
      throw new Q({ code: "PARAM_ERROR", message: "email must be a string" });
    const { refreshTokenKey: n2 } = this._cache.keys, s2 = await this._request.send("auth.signIn", { loginType: "EMAIL", email: e2, password: t2, refresh_token: this._cache.getStore(n2) || "" }), { refresh_token: r2, access_token: i2, access_token_expire: o2 } = s2;
    if (r2)
      return this.setRefreshToken(r2), i2 && o2 ? this.setAccessToken(i2, o2) : await this._request.refreshAccessToken(), await this.refreshUserInfo(), Re(Ne), Re(Fe, { env: this.config.env, loginType: Me.EMAIL, persistence: this.config.persistence }), new Ye(this.config.env);
    throw s2.code ? new Q({ code: s2.code, message: `\u90AE\u7BB1\u767B\u5F55\u5931\u8D25: ${s2.message}` }) : new Q({ message: "\u90AE\u7BB1\u767B\u5F55\u5931\u8D25" });
  }
  async activate(e2) {
    return this._request.send("auth.activateEndUserMail", { token: e2 });
  }
  async resetPasswordWithToken(e2, t2) {
    return this._request.send("auth.resetPasswordWithToken", { token: e2, newPassword: t2 });
  }
}
class et extends Ge {
  async signIn(e2, t2) {
    if ("string" != typeof e2)
      throw new Q({ code: "PARAM_ERROR", message: "username must be a string" });
    "string" != typeof t2 && (t2 = "", console.warn("password is empty"));
    const { refreshTokenKey: n2 } = this._cache.keys, s2 = await this._request.send("auth.signIn", { loginType: Me.USERNAME, username: e2, password: t2, refresh_token: this._cache.getStore(n2) || "" }), { refresh_token: r2, access_token_expire: i2, access_token: o2 } = s2;
    if (r2)
      return this.setRefreshToken(r2), o2 && i2 ? this.setAccessToken(o2, i2) : await this._request.refreshAccessToken(), await this.refreshUserInfo(), Re(Ne), Re(Fe, { env: this.config.env, loginType: Me.USERNAME, persistence: this.config.persistence }), new Ye(this.config.env);
    throw s2.code ? new Q({ code: s2.code, message: `\u7528\u6237\u540D\u5BC6\u7801\u767B\u5F55\u5931\u8D25: ${s2.message}` }) : new Q({ message: "\u7528\u6237\u540D\u5BC6\u7801\u767B\u5F55\u5931\u8D25" });
  }
}
class tt$1 {
  constructor(e2) {
    this.config = e2, this._cache = Pe(e2.env), this._request = He(e2.env), this._onAnonymousConverted = this._onAnonymousConverted.bind(this), this._onLoginTypeChanged = this._onLoginTypeChanged.bind(this), Ue(Fe, this._onLoginTypeChanged);
  }
  get currentUser() {
    const e2 = this.hasLoginState();
    return e2 && e2.user || null;
  }
  get loginType() {
    return this._cache.getStore(this._cache.keys.loginTypeKey);
  }
  anonymousAuthProvider() {
    return new Qe(this.config);
  }
  customAuthProvider() {
    return new Xe(this.config);
  }
  emailAuthProvider() {
    return new Ze(this.config);
  }
  usernameAuthProvider() {
    return new et(this.config);
  }
  async signInAnonymously() {
    return new Qe(this.config).signIn();
  }
  async signInWithEmailAndPassword(e2, t2) {
    return new Ze(this.config).signIn(e2, t2);
  }
  signInWithUsernameAndPassword(e2, t2) {
    return new et(this.config).signIn(e2, t2);
  }
  async linkAndRetrieveDataWithTicket(e2) {
    this._anonymousAuthProvider || (this._anonymousAuthProvider = new Qe(this.config)), Ue(qe, this._onAnonymousConverted);
    return await this._anonymousAuthProvider.linkAndRetrieveDataWithTicket(e2);
  }
  async signOut() {
    if (this.loginType === Me.ANONYMOUS)
      throw new Q({ message: "\u533F\u540D\u7528\u6237\u4E0D\u652F\u6301\u767B\u51FA\u64CD\u4F5C" });
    const { refreshTokenKey: e2, accessTokenKey: t2, accessTokenExpireKey: n2 } = this._cache.keys, s2 = this._cache.getStore(e2);
    if (!s2)
      return;
    const r2 = await this._request.send("auth.logout", { refresh_token: s2 });
    return this._cache.removeStore(e2), this._cache.removeStore(t2), this._cache.removeStore(n2), Re(Ne), Re(Fe, { env: this.config.env, loginType: Me.NULL, persistence: this.config.persistence }), r2;
  }
  async signUpWithEmailAndPassword(e2, t2) {
    return this._request.send("auth.signUpWithEmailAndPassword", { email: e2, password: t2 });
  }
  async sendPasswordResetEmail(e2) {
    return this._request.send("auth.sendPasswordResetEmail", { email: e2 });
  }
  onLoginStateChanged(e2) {
    Ue(Ne, () => {
      const t3 = this.hasLoginState();
      e2.call(this, t3);
    });
    const t2 = this.hasLoginState();
    e2.call(this, t2);
  }
  onLoginStateExpired(e2) {
    Ue(De, e2.bind(this));
  }
  onAccessTokenRefreshed(e2) {
    Ue(Ke, e2.bind(this));
  }
  onAnonymousConverted(e2) {
    Ue(qe, e2.bind(this));
  }
  onLoginTypeChanged(e2) {
    Ue(Fe, () => {
      const t2 = this.hasLoginState();
      e2.call(this, t2);
    });
  }
  async getAccessToken() {
    return { accessToken: (await this._request.getAccessToken()).accessToken, env: this.config.env };
  }
  hasLoginState() {
    const { refreshTokenKey: e2 } = this._cache.keys;
    return this._cache.getStore(e2) ? new Ye(this.config.env) : null;
  }
  async isUsernameRegistered(e2) {
    if ("string" != typeof e2)
      throw new Q({ code: "PARAM_ERROR", message: "username must be a string" });
    const { data: t2 } = await this._request.send("auth.isUsernameRegistered", { username: e2 });
    return t2 && t2.isRegistered;
  }
  getLoginState() {
    return Promise.resolve(this.hasLoginState());
  }
  async signInWithTicket(e2) {
    return new Xe(this.config).signIn(e2);
  }
  shouldRefreshAccessToken(e2) {
    this._request._shouldRefreshAccessTokenHook = e2.bind(this);
  }
  getUserInfo() {
    return this._request.send("auth.getUserInfo", {}).then((e2) => e2.code ? e2 : { ...e2.data, requestId: e2.seqId });
  }
  getAuthHeader() {
    const { refreshTokenKey: e2, accessTokenKey: t2 } = this._cache.keys, n2 = this._cache.getStore(e2);
    return { "x-cloudbase-credentials": this._cache.getStore(t2) + "/@@/" + n2 };
  }
  _onAnonymousConverted(e2) {
    const { env: t2 } = e2.data;
    t2 === this.config.env && this._cache.updatePersistence(this.config.persistence);
  }
  _onLoginTypeChanged(e2) {
    const { loginType: t2, persistence: n2, env: s2 } = e2.data;
    s2 === this.config.env && (this._cache.updatePersistence(n2), this._cache.setStore(this._cache.keys.loginTypeKey, t2));
  }
}
const nt = function(e2, t2) {
  t2 = t2 || me();
  const n2 = He(this.config.env), { cloudPath: s2, filePath: r2, onUploadProgress: i2, fileType: o2 = "image" } = e2;
  return n2.send("storage.getUploadMetadata", { path: s2 }).then((e3) => {
    const { data: { url: a2, authorization: c2, token: u2, fileId: l2, cosFileId: h2 }, requestId: d2 } = e3, f2 = { key: s2, signature: c2, "x-cos-meta-fileid": h2, success_action_status: "201", "x-cos-security-token": u2 };
    n2.upload({ url: a2, data: f2, file: r2, name: s2, fileType: o2, onUploadProgress: i2 }).then((e4) => {
      201 === e4.statusCode ? t2(null, { fileID: l2, requestId: d2 }) : t2(new Q({ code: "STORAGE_REQUEST_FAIL", message: `STORAGE_REQUEST_FAIL: ${e4.data}` }));
    }).catch((e4) => {
      t2(e4);
    });
  }).catch((e3) => {
    t2(e3);
  }), t2.promise;
}, st = function(e2, t2) {
  t2 = t2 || me();
  const n2 = He(this.config.env), { cloudPath: s2 } = e2;
  return n2.send("storage.getUploadMetadata", { path: s2 }).then((e3) => {
    t2(null, e3);
  }).catch((e3) => {
    t2(e3);
  }), t2.promise;
}, rt = function({ fileList: e2 }, t2) {
  if (t2 = t2 || me(), !e2 || !Array.isArray(e2))
    return { code: "INVALID_PARAM", message: "fileList\u5FC5\u987B\u662F\u975E\u7A7A\u7684\u6570\u7EC4" };
  for (let t3 of e2)
    if (!t3 || "string" != typeof t3)
      return { code: "INVALID_PARAM", message: "fileList\u7684\u5143\u7D20\u5FC5\u987B\u662F\u975E\u7A7A\u7684\u5B57\u7B26\u4E32" };
  const n2 = { fileid_list: e2 };
  return He(this.config.env).send("storage.batchDeleteFile", n2).then((e3) => {
    e3.code ? t2(null, e3) : t2(null, { fileList: e3.data.delete_list, requestId: e3.requestId });
  }).catch((e3) => {
    t2(e3);
  }), t2.promise;
}, it = function({ fileList: e2 }, t2) {
  t2 = t2 || me(), e2 && Array.isArray(e2) || t2(null, { code: "INVALID_PARAM", message: "fileList\u5FC5\u987B\u662F\u975E\u7A7A\u7684\u6570\u7EC4" });
  let n2 = [];
  for (let s3 of e2)
    "object" == typeof s3 ? (s3.hasOwnProperty("fileID") && s3.hasOwnProperty("maxAge") || t2(null, { code: "INVALID_PARAM", message: "fileList\u7684\u5143\u7D20\u5FC5\u987B\u662F\u5305\u542BfileID\u548CmaxAge\u7684\u5BF9\u8C61" }), n2.push({ fileid: s3.fileID, max_age: s3.maxAge })) : "string" == typeof s3 ? n2.push({ fileid: s3 }) : t2(null, { code: "INVALID_PARAM", message: "fileList\u7684\u5143\u7D20\u5FC5\u987B\u662F\u5B57\u7B26\u4E32" });
  const s2 = { file_list: n2 };
  return He(this.config.env).send("storage.batchGetDownloadUrl", s2).then((e3) => {
    e3.code ? t2(null, e3) : t2(null, { fileList: e3.data.download_list, requestId: e3.requestId });
  }).catch((e3) => {
    t2(e3);
  }), t2.promise;
}, ot = async function({ fileID: e2 }, t2) {
  const n2 = (await it.call(this, { fileList: [{ fileID: e2, maxAge: 600 }] })).fileList[0];
  if ("SUCCESS" !== n2.code)
    return t2 ? t2(n2) : new Promise((e3) => {
      e3(n2);
    });
  const s2 = He(this.config.env);
  let r2 = n2.download_url;
  if (r2 = encodeURI(r2), !t2)
    return s2.download({ url: r2 });
  t2(await s2.download({ url: r2 }));
}, at = function({ name: e2, data: t2, query: n2, parse: s2, search: r2 }, i2) {
  const o2 = i2 || me();
  let a2;
  try {
    a2 = t2 ? JSON.stringify(t2) : "";
  } catch (e3) {
    return Promise.reject(e3);
  }
  if (!e2)
    return Promise.reject(new Q({ code: "PARAM_ERROR", message: "\u51FD\u6570\u540D\u4E0D\u80FD\u4E3A\u7A7A" }));
  const c2 = { inQuery: n2, parse: s2, search: r2, function_name: e2, request_data: a2 };
  return He(this.config.env).send("functions.invokeFunction", c2).then((e3) => {
    if (e3.code)
      o2(null, e3);
    else {
      let t3 = e3.data.response_data;
      if (s2)
        o2(null, { result: t3, requestId: e3.requestId });
      else
        try {
          t3 = JSON.parse(e3.data.response_data), o2(null, { result: t3, requestId: e3.requestId });
        } catch (e4) {
          o2(new Q({ message: "response data must be json" }));
        }
    }
    return o2.promise;
  }).catch((e3) => {
    o2(e3);
  }), o2.promise;
}, ct = { timeout: 15e3, persistence: "session" }, ut = {};
class lt {
  constructor(e2) {
    this.config = e2 || this.config, this.authObj = void 0;
  }
  init(e2) {
    switch (Se.adapter || (this.requestClient = new Se.adapter.reqClass({ timeout: e2.timeout || 5e3, timeoutMsg: `\u8BF7\u6C42\u5728${(e2.timeout || 5e3) / 1e3}s\u5185\u672A\u5B8C\u6210\uFF0C\u5DF2\u4E2D\u65AD` })), this.config = { ...ct, ...e2 }, true) {
      case this.config.timeout > 6e5:
        console.warn("timeout\u5927\u4E8E\u53EF\u914D\u7F6E\u4E0A\u9650[10\u5206\u949F]\uFF0C\u5DF2\u91CD\u7F6E\u4E3A\u4E0A\u9650\u6570\u503C"), this.config.timeout = 6e5;
        break;
      case this.config.timeout < 100:
        console.warn("timeout\u5C0F\u4E8E\u53EF\u914D\u7F6E\u4E0B\u9650[100ms]\uFF0C\u5DF2\u91CD\u7F6E\u4E3A\u4E0B\u9650\u6570\u503C"), this.config.timeout = 100;
    }
    return new lt(this.config);
  }
  auth({ persistence: e2 } = {}) {
    if (this.authObj)
      return this.authObj;
    const t2 = e2 || Se.adapter.primaryStorage || ct.persistence;
    var n2;
    return t2 !== this.config.persistence && (this.config.persistence = t2), function(e3) {
      const { env: t3 } = e3;
      Ae[t3] = new Te(e3), Ce[t3] = new Te({ ...e3, persistence: "local" });
    }(this.config), n2 = this.config, Je[n2.env] = new ze(n2), this.authObj = new tt$1(this.config), this.authObj;
  }
  on(e2, t2) {
    return Ue.apply(this, [e2, t2]);
  }
  off(e2, t2) {
    return Le.apply(this, [e2, t2]);
  }
  callFunction(e2, t2) {
    return at.apply(this, [e2, t2]);
  }
  deleteFile(e2, t2) {
    return rt.apply(this, [e2, t2]);
  }
  getTempFileURL(e2, t2) {
    return it.apply(this, [e2, t2]);
  }
  downloadFile(e2, t2) {
    return ot.apply(this, [e2, t2]);
  }
  uploadFile(e2, t2) {
    return nt.apply(this, [e2, t2]);
  }
  getUploadMetadata(e2, t2) {
    return st.apply(this, [e2, t2]);
  }
  registerExtension(e2) {
    ut[e2.name] = e2;
  }
  async invokeExtension(e2, t2) {
    const n2 = ut[e2];
    if (!n2)
      throw new Q({ message: `\u6269\u5C55${e2} \u5FC5\u987B\u5148\u6CE8\u518C` });
    return await n2.invoke(t2, this);
  }
  useAdapters(e2) {
    const { adapter: t2, runtime: n2 } = ve(e2) || {};
    t2 && (Se.adapter = t2), n2 && (Se.runtime = n2);
  }
}
var ht = new lt();
function dt(e2, t2, n2) {
  void 0 === n2 && (n2 = {});
  var s2 = /\?/.test(t2), r2 = "";
  for (var i2 in n2)
    "" === r2 ? !s2 && (t2 += "?") : r2 += "&", r2 += i2 + "=" + encodeURIComponent(n2[i2]);
  return /^http(s)?:\/\//.test(t2 += r2) ? t2 : "" + e2 + t2;
}
class ft {
  post(e2) {
    const { url: t2, data: n2, headers: s2 } = e2;
    return new Promise((e3, r2) => {
      X.request({ url: dt("https:", t2), data: n2, method: "POST", header: s2, success(t3) {
        e3(t3);
      }, fail(e4) {
        r2(e4);
      } });
    });
  }
  upload(e2) {
    return new Promise((t2, n2) => {
      const { url: s2, file: r2, data: i2, headers: o2, fileType: a2 } = e2, c2 = X.uploadFile({ url: dt("https:", s2), name: "file", formData: Object.assign({}, i2), filePath: r2, fileType: a2, header: o2, success(e3) {
        const n3 = { statusCode: e3.statusCode, data: e3.data || {} };
        200 === e3.statusCode && i2.success_action_status && (n3.statusCode = parseInt(i2.success_action_status, 10)), t2(n3);
      }, fail(e3) {
        n2(new Error(e3.errMsg || "uploadFile:fail"));
      } });
      "function" == typeof e2.onUploadProgress && c2 && "function" == typeof c2.onProgressUpdate && c2.onProgressUpdate((t3) => {
        e2.onUploadProgress({ loaded: t3.totalBytesSent, total: t3.totalBytesExpectedToSend });
      });
    });
  }
}
const pt = { setItem(e2, t2) {
  X.setStorageSync(e2, t2);
}, getItem: (e2) => X.getStorageSync(e2), removeItem(e2) {
  X.removeStorageSync(e2);
}, clear() {
  X.clearStorageSync();
} };
var gt = { genAdapter: function() {
  return { root: {}, reqClass: ft, localStorage: pt, primaryStorage: "local" };
}, isMatch: function() {
  return true;
}, runtime: "uni_app" };
ht.useAdapters(gt);
const mt = ht, yt = mt.init;
mt.init = function(e2) {
  e2.env = e2.spaceId;
  const t2 = yt.call(this, e2);
  t2.config.provider = "tencent", t2.config.spaceId = e2.spaceId;
  const n2 = t2.auth;
  return t2.auth = function(e3) {
    const t3 = n2.call(this, e3);
    return ["linkAndRetrieveDataWithTicket", "signInAnonymously", "signOut", "getAccessToken", "getLoginState", "signInWithTicket", "getUserInfo"].forEach((e4) => {
      t3[e4] = Y(t3[e4]).bind(t3);
    }), t3;
  }, t2.customAuth = t2.auth, t2;
};
var _t = mt;
var wt = class extends he {
  getAccessToken() {
    return new Promise((e2, t2) => {
      const n2 = "Anonymous_Access_token";
      this.setAccessToken(n2), e2(n2);
    });
  }
  setupRequest(e2, t2) {
    const n2 = Object.assign({}, e2, { spaceId: this.config.spaceId, timestamp: Date.now() }), s2 = { "Content-Type": "application/json" };
    "auth" !== t2 && (n2.token = this.accessToken, s2["x-basement-token"] = this.accessToken), s2["x-serverless-sign"] = ce.sign(n2, this.config.clientSecret);
    const r2 = ae();
    s2["x-client-info"] = encodeURIComponent(JSON.stringify(r2));
    const { token: i2 } = ee();
    return s2["x-client-token"] = i2, { url: this.config.requestUrl, method: "POST", data: n2, dataType: "json", header: JSON.parse(JSON.stringify(s2)) };
  }
  uploadFileToOSS({ url: e2, formData: t2, name: n2, filePath: s2, fileType: r2, onUploadProgress: i2 }) {
    return new Promise((o2, a2) => {
      const c2 = this.adapter.uploadFile({ url: e2, formData: t2, name: n2, filePath: s2, fileType: r2, success(e3) {
        e3 && e3.statusCode < 400 ? o2(e3) : a2(new Q({ code: "UPLOAD_FAILED", message: "\u6587\u4EF6\u4E0A\u4F20\u5931\u8D25" }));
      }, fail(e3) {
        a2(new Q({ code: e3.code || "UPLOAD_FAILED", message: e3.message || e3.errMsg || "\u6587\u4EF6\u4E0A\u4F20\u5931\u8D25" }));
      } });
      "function" == typeof i2 && c2 && "function" == typeof c2.onProgressUpdate && c2.onProgressUpdate((e3) => {
        i2({ loaded: e3.totalBytesSent, total: e3.totalBytesExpectedToSend });
      });
    });
  }
  uploadFile({ filePath: e2, cloudPath: t2, fileType: n2 = "image", onUploadProgress: s2 }) {
    if (!t2)
      throw new Q({ code: "CLOUDPATH_REQUIRED", message: "cloudPath\u4E0D\u53EF\u4E3A\u7A7A" });
    let r2;
    return this.getOSSUploadOptionsFromPath({ cloudPath: t2 }).then((t3) => {
      const { url: i2, formData: o2, name: a2 } = t3.result;
      r2 = t3.result.fileUrl;
      const c2 = { url: i2, formData: o2, name: a2, filePath: e2, fileType: n2 };
      return this.uploadFileToOSS(Object.assign({}, c2, { onUploadProgress: s2 }));
    }).then(() => this.reportOSSUpload({ cloudPath: t2 })).then((t3) => new Promise((n3, s3) => {
      t3.success ? n3({ success: true, filePath: e2, fileID: r2 }) : s3(new Q({ code: "UPLOAD_FAILED", message: "\u6587\u4EF6\u4E0A\u4F20\u5931\u8D25" }));
    }));
  }
  deleteFile({ fileList: e2 }) {
    const t2 = { method: "serverless.file.resource.delete", params: JSON.stringify({ fileList: e2 }) };
    return this.request(this.setupRequest(t2)).then((e3) => {
      if (e3.success)
        return e3.result;
      throw new Q({ code: "DELETE_FILE_FAILED", message: "\u5220\u9664\u6587\u4EF6\u5931\u8D25" });
    });
  }
  getTempFileURL({ fileList: e2 } = {}) {
    if (!Array.isArray(e2) || 0 === e2.length)
      throw new Q({ code: "INVALID_PARAM", message: "fileList\u7684\u5143\u7D20\u5FC5\u987B\u662F\u975E\u7A7A\u7684\u5B57\u7B26\u4E32" });
    const t2 = { method: "serverless.file.resource.getTempFileURL", params: JSON.stringify({ fileList: e2 }) };
    return this.request(this.setupRequest(t2)).then((e3) => {
      if (e3.success)
        return { fileList: e3.result.fileList.map((e4) => ({ fileID: e4.fileID, tempFileURL: e4.tempFileURL })) };
      throw new Q({ code: "GET_TEMP_FILE_URL_FAILED", message: "\u83B7\u53D6\u4E34\u65F6\u6587\u4EF6\u94FE\u63A5\u5931\u8D25" });
    });
  }
};
var vt = { init(e2) {
  const t2 = new wt(e2), n2 = { signInAnonymously: function() {
    return t2.authorize();
  }, getLoginState: function() {
    return Promise.resolve(false);
  } };
  return t2.auth = function() {
    return n2;
  }, t2.customAuth = t2.auth, t2;
} };
function St({ data: e2 }) {
  let t2;
  t2 = ae();
  const n2 = JSON.parse(JSON.stringify(e2 || {}));
  if (Object.assign(n2, { clientInfo: t2 }), !n2.uniIdToken) {
    const { token: e3 } = ee();
    e3 && (n2.uniIdToken = e3);
  }
  return n2;
}
function kt({ name: e2, data: t2 } = {}) {
  const { localAddress: n2, localPort: s2 } = this.__dev__, r2 = { aliyun: "aliyun", tencent: "tcb" }[this.config.provider], i2 = this.config.spaceId, o2 = `http://${n2}:${s2}/system/check-function`, a2 = `http://${n2}:${s2}/cloudfunctions/${e2}`;
  return new Promise((t3, n3) => {
    X.request({ method: "POST", url: o2, data: { name: e2, platform: S, provider: r2, spaceId: i2 }, timeout: 3e3, success(e3) {
      t3(e3);
    }, fail() {
      t3({ data: { code: "NETWORK_ERROR", message: "\u8FDE\u63A5\u672C\u5730\u8C03\u8BD5\u670D\u52A1\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u5BA2\u6237\u7AEF\u662F\u5426\u548C\u4E3B\u673A\u5728\u540C\u4E00\u5C40\u57DF\u7F51\u4E0B\uFF0C\u81EA\u52A8\u5207\u6362\u4E3A\u5DF2\u90E8\u7F72\u7684\u4E91\u51FD\u6570\u3002" } });
    } });
  }).then(({ data: e3 } = {}) => {
    const { code: t3, message: n3 } = e3 || {};
    return { code: 0 === t3 ? 0 : t3 || "SYS_ERR", message: n3 || "SYS_ERR" };
  }).then(({ code: n3, message: s3 }) => {
    if (0 !== n3) {
      switch (n3) {
        case "MODULE_ENCRYPTED":
          console.error(`\u6B64\u4E91\u51FD\u6570\uFF08${e2}\uFF09\u4F9D\u8D56\u52A0\u5BC6\u516C\u5171\u6A21\u5757\u4E0D\u53EF\u672C\u5730\u8C03\u8BD5\uFF0C\u81EA\u52A8\u5207\u6362\u4E3A\u4E91\u7AEF\u5DF2\u90E8\u7F72\u7684\u4E91\u51FD\u6570`);
          break;
        case "FUNCTION_ENCRYPTED":
          console.error(`\u6B64\u4E91\u51FD\u6570\uFF08${e2}\uFF09\u5DF2\u52A0\u5BC6\u4E0D\u53EF\u672C\u5730\u8C03\u8BD5\uFF0C\u81EA\u52A8\u5207\u6362\u4E3A\u4E91\u7AEF\u5DF2\u90E8\u7F72\u7684\u4E91\u51FD\u6570`);
          break;
        case "ACTION_ENCRYPTED":
          console.error(s3 || "\u9700\u8981\u8BBF\u95EE\u52A0\u5BC6\u7684uni-clientDB-action\uFF0C\u81EA\u52A8\u5207\u6362\u4E3A\u4E91\u7AEF\u73AF\u5883");
          break;
        case "NETWORK_ERROR": {
          const e3 = "\u8FDE\u63A5\u672C\u5730\u8C03\u8BD5\u670D\u52A1\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u5BA2\u6237\u7AEF\u662F\u5426\u548C\u4E3B\u673A\u5728\u540C\u4E00\u5C40\u57DF\u7F51\u4E0B";
          throw console.error(e3), new Error(e3);
        }
        case "SWITCH_TO_CLOUD":
          break;
        default: {
          const e3 = `\u68C0\u6D4B\u672C\u5730\u8C03\u8BD5\u670D\u52A1\u51FA\u73B0\u9519\u8BEF\uFF1A${s3}\uFF0C\u8BF7\u68C0\u67E5\u7F51\u7EDC\u73AF\u5883\u6216\u91CD\u542F\u5BA2\u6237\u7AEF\u518D\u8BD5`;
          throw console.error(e3), new Error(e3);
        }
      }
      return this._callCloudFunction({ name: e2, data: t2 });
    }
    return new Promise((e3, n4) => {
      const s4 = St.call(this, { data: t2 });
      X.request({ method: "POST", url: a2, data: { provider: r2, platform: S, param: s4 }, success: ({ statusCode: t3, data: s5 } = {}) => !t3 || t3 >= 400 ? n4(new Q({ code: s5.code || "SYS_ERR", message: s5.message || "request:fail" })) : e3({ result: s5 }), fail(e4) {
        n4(new Q({ code: e4.code || e4.errCode || "SYS_ERR", message: e4.message || e4.errMsg || "request:fail" }));
      } });
    });
  });
}
const It = [{ rule: /fc_function_not_found|FUNCTION_NOT_FOUND/, content: "\uFF0C\u4E91\u51FD\u6570[{functionName}]\u5728\u4E91\u7AEF\u4E0D\u5B58\u5728\uFF0C\u8BF7\u68C0\u67E5\u6B64\u4E91\u51FD\u6570\u540D\u79F0\u662F\u5426\u6B63\u786E\u4EE5\u53CA\u8BE5\u4E91\u51FD\u6570\u662F\u5426\u5DF2\u4E0A\u4F20\u5230\u670D\u52A1\u7A7A\u95F4", mode: "append" }];
var bt = /[\\^$.*+?()[\]{}|]/g, Tt = RegExp(bt.source);
function At(e2, t2, n2) {
  return e2.replace(new RegExp((s2 = t2) && Tt.test(s2) ? s2.replace(bt, "\\$&") : s2, "g"), n2);
  var s2;
}
const Pt = "request", Et = "response", Ot = "both";
const fn = { code: 2e4, message: "System error" }, pn = { code: 20101, message: "Invalid client" };
function yn(e2) {
  const { errSubject: t2, subject: n2, errCode: s2, errMsg: r2, code: i2, message: o2, cause: a2 } = e2 || {};
  return new Q({ subject: t2 || n2 || "uni-secure-network", code: s2 || i2 || fn.code, message: r2 || o2, cause: a2 });
}
let wn;
function bn({ secretType: e2 } = {}) {
  return e2 === Pt || e2 === Et || e2 === Ot;
}
function Tn({ name: e2, data: t2 = {} } = {}) {
  return "app" === S && "DCloud-clientDB" === e2 && "encryption" === t2.redirectTo && "getAppClientKey" === t2.action;
}
function An({ provider: e2, spaceId: t2, functionName: n2 } = {}) {
  const { appId: s2, uniPlatform: r2, osName: i2 } = ie();
  let o2 = r2;
  "app" === r2 && (o2 = i2);
  const a2 = function({ provider: e3, spaceId: t3 } = {}) {
    const n3 = v;
    if (!n3)
      return {};
    e3 = function(e4) {
      return "tencent" === e4 ? "tcb" : e4;
    }(e3);
    const s3 = n3.find((n4) => n4.provider === e3 && n4.spaceId === t3);
    return s3 && s3.config;
  }({ provider: e2, spaceId: t2 });
  if (!a2 || !a2.accessControl || !a2.accessControl.enable)
    return false;
  const c2 = a2.accessControl.function || {}, u2 = Object.keys(c2);
  if (0 === u2.length)
    return true;
  const l2 = function(e3, t3) {
    let n3, s3, r3;
    for (let i3 = 0; i3 < e3.length; i3++) {
      const o3 = e3[i3];
      o3 !== t3 ? "*" !== o3 ? o3.split(",").map((e4) => e4.trim()).indexOf(t3) > -1 && (s3 = o3) : r3 = o3 : n3 = o3;
    }
    return n3 || s3 || r3;
  }(u2, n2);
  if (!l2)
    return false;
  if ((c2[l2] || []).find((e3 = {}) => e3.appId === s2 && (e3.platform || "").toLowerCase() === o2.toLowerCase()))
    return true;
  throw console.error(`\u6B64\u5E94\u7528[appId: ${s2}, platform: ${o2}]\u4E0D\u5728\u4E91\u7AEF\u914D\u7F6E\u7684\u5141\u8BB8\u8BBF\u95EE\u7684\u5E94\u7528\u5217\u8868\u5185\uFF0C\u53C2\u8003\uFF1Ahttps://uniapp.dcloud.net.cn/uniCloud/secure-network.html#verify-client`), yn(pn);
}
function Cn({ functionName: e2, result: t2, logPvd: n2 }) {
  if (this.__dev__.debugLog && t2 && t2.requestId) {
    const s2 = JSON.stringify({ spaceId: this.config.spaceId, functionName: e2, requestId: t2.requestId });
    console.log(`[${n2}-request]${s2}[/${n2}-request]`);
  }
}
function Pn(e2) {
  const t2 = e2.callFunction, n2 = function(n3) {
    const s2 = n3.name;
    n3.data = St.call(e2, { data: n3.data });
    const r2 = { aliyun: "aliyun", tencent: "tcb", tcb: "tcb" }[this.config.provider], i2 = bn(n3), o2 = Tn(n3), a2 = i2 || o2;
    return t2.call(this, n3).then((e3) => (e3.errCode = 0, !a2 && Cn.call(this, { functionName: s2, result: e3, logPvd: r2 }), Promise.resolve(e3)), (e3) => (!a2 && Cn.call(this, { functionName: s2, result: e3, logPvd: r2 }), e3 && e3.message && (e3.message = function({ message: e4 = "", extraInfo: t3 = {}, formatter: n4 = [] } = {}) {
      for (let s3 = 0; s3 < n4.length; s3++) {
        const { rule: r3, content: i3, mode: o3 } = n4[s3], a3 = e4.match(r3);
        if (!a3)
          continue;
        let c2 = i3;
        for (let e5 = 1; e5 < a3.length; e5++)
          c2 = At(c2, `{$${e5}}`, a3[e5]);
        for (const e5 in t3)
          c2 = At(c2, `{${e5}}`, t3[e5]);
        return "replace" === o3 ? c2 : e4 + c2;
      }
      return e4;
    }({ message: `[${n3.name}]: ${e3.message}`, formatter: It, extraInfo: { functionName: s2 } })), Promise.reject(e3)));
  };
  e2.callFunction = function(t3) {
    const { provider: s2, spaceId: r2 } = e2.config, i2 = t3.name;
    let o2, a2;
    if (t3.data = t3.data || {}, e2.__dev__.debugInfo && !e2.__dev__.debugInfo.forceRemote && I ? (e2._callCloudFunction || (e2._callCloudFunction = n2, e2._callLocalFunction = kt), o2 = kt) : o2 = n2, o2 = o2.bind(e2), Tn(t3))
      a2 = n2.call(e2, t3);
    else if (function({ name: e3, data: t4 = {} }) {
      return "mp-weixin" === S && "uni-id-co" === e3 && "secureNetworkHandshakeByWeixin" === t4.method;
    }(t3))
      a2 = o2.call(e2, t3);
    else if (bn(t3)) {
      a2 = new wn({ secretType: t3.secretType, uniCloudIns: e2 }).wrapEncryptDataCallFunction(n2.bind(e2))(t3);
    } else if (An({ provider: s2, spaceId: r2, functionName: i2 })) {
      a2 = new wn({ secretType: t3.secretType, uniCloudIns: e2 }).wrapVerifyClientCallFunction(n2.bind(e2))(t3);
    } else
      a2 = o2(t3);
    return Object.defineProperty(a2, "result", { get: () => (console.warn("\u5F53\u524D\u8FD4\u56DE\u7ED3\u679C\u4E3APromise\u7C7B\u578B\uFF0C\u4E0D\u53EF\u76F4\u63A5\u8BBF\u95EE\u5176result\u5C5E\u6027\uFF0C\u8BE6\u60C5\u8BF7\u53C2\u8003\uFF1Ahttps://uniapp.dcloud.net.cn/uniCloud/faq?id=promise"), {}) }), a2;
  };
}
wn = "mp-weixin" !== S && "app" !== S ? class {
  constructor() {
    throw yn({ message: `Platform ${S} is not supported by secure network` });
  }
} : class {
  constructor() {
    throw yn({ message: `Platform ${S} is not enabled, please check whether secure network module is enabled in your manifest.json` });
  }
};
const En = Symbol("CLIENT_DB_INTERNAL");
function On(e2, t2) {
  return e2.then = "DoNotReturnProxyWithAFunctionNamedThen", e2._internalType = En, e2.inspect = null, e2.__v_raw = void 0, new Proxy(e2, { get(e3, n2, s2) {
    if ("_uniClient" === n2)
      return null;
    if ("symbol" == typeof n2)
      return e3[n2];
    if (n2 in e3 || "string" != typeof n2) {
      const t3 = e3[n2];
      return "function" == typeof t3 ? t3.bind(e3) : t3;
    }
    return t2.get(e3, n2, s2);
  } });
}
function xn(e2) {
  return { on: (t2, n2) => {
    e2[t2] = e2[t2] || [], e2[t2].indexOf(n2) > -1 || e2[t2].push(n2);
  }, off: (t2, n2) => {
    e2[t2] = e2[t2] || [];
    const s2 = e2[t2].indexOf(n2);
    -1 !== s2 && e2[t2].splice(s2, 1);
  } };
}
const Un = ["db.Geo", "db.command", "command.aggregate"];
function Rn(e2, t2) {
  return Un.indexOf(`${e2}.${t2}`) > -1;
}
function Ln(e2) {
  switch (d(e2 = Z(e2))) {
    case "array":
      return e2.map((e3) => Ln(e3));
    case "object":
      return e2._internalType === En || Object.keys(e2).forEach((t2) => {
        e2[t2] = Ln(e2[t2]);
      }), e2;
    case "regexp":
      return { $regexp: { source: e2.source, flags: e2.flags } };
    case "date":
      return { $date: e2.toISOString() };
    default:
      return e2;
  }
}
function Nn(e2) {
  return e2 && e2.content && e2.content.$method;
}
class Dn {
  constructor(e2, t2, n2) {
    this.content = e2, this.prevStage = t2 || null, this.udb = null, this._database = n2;
  }
  toJSON() {
    let e2 = this;
    const t2 = [e2.content];
    for (; e2.prevStage; )
      e2 = e2.prevStage, t2.push(e2.content);
    return { $db: t2.reverse().map((e3) => ({ $method: e3.$method, $param: Ln(e3.$param) })) };
  }
  getAction() {
    const e2 = this.toJSON().$db.find((e3) => "action" === e3.$method);
    return e2 && e2.$param && e2.$param[0];
  }
  getCommand() {
    return { $db: this.toJSON().$db.filter((e2) => "action" !== e2.$method) };
  }
  get isAggregate() {
    let e2 = this;
    for (; e2; ) {
      const t2 = Nn(e2), n2 = Nn(e2.prevStage);
      if ("aggregate" === t2 && "collection" === n2 || "pipeline" === t2)
        return true;
      e2 = e2.prevStage;
    }
    return false;
  }
  get isCommand() {
    let e2 = this;
    for (; e2; ) {
      if ("command" === Nn(e2))
        return true;
      e2 = e2.prevStage;
    }
    return false;
  }
  get isAggregateCommand() {
    let e2 = this;
    for (; e2; ) {
      const t2 = Nn(e2), n2 = Nn(e2.prevStage);
      if ("aggregate" === t2 && "command" === n2)
        return true;
      e2 = e2.prevStage;
    }
    return false;
  }
  getNextStageFn(e2) {
    const t2 = this;
    return function() {
      return Fn({ $method: e2, $param: Ln(Array.from(arguments)) }, t2, t2._database);
    };
  }
  get count() {
    return this.isAggregate ? this.getNextStageFn("count") : function() {
      return this._send("count", Array.from(arguments));
    };
  }
  get remove() {
    return this.isCommand ? this.getNextStageFn("remove") : function() {
      return this._send("remove", Array.from(arguments));
    };
  }
  get() {
    return this._send("get", Array.from(arguments));
  }
  get add() {
    return this.isCommand ? this.getNextStageFn("add") : function() {
      return this._send("add", Array.from(arguments));
    };
  }
  update() {
    return this._send("update", Array.from(arguments));
  }
  end() {
    return this._send("end", Array.from(arguments));
  }
  get set() {
    return this.isCommand ? this.getNextStageFn("set") : function() {
      throw new Error("JQL\u7981\u6B62\u4F7F\u7528set\u65B9\u6CD5");
    };
  }
  _send(e2, t2) {
    const n2 = this.getAction(), s2 = this.getCommand();
    if (s2.$db.push({ $method: e2, $param: Ln(t2) }), y) {
      const e3 = s2.$db.find((e4) => "collection" === e4.$method), t3 = e3 && e3.$param;
      t3 && 1 === t3.length && "string" == typeof e3.$param[0] && e3.$param[0].indexOf(",") > -1 && console.warn("\u68C0\u6D4B\u5230\u4F7F\u7528JQL\u8BED\u6CD5\u8054\u8868\u67E5\u8BE2\u65F6\uFF0C\u672A\u4F7F\u7528getTemp\u5148\u8FC7\u6EE4\u4E3B\u8868\u6570\u636E\uFF0C\u5728\u4E3B\u8868\u6570\u636E\u91CF\u5927\u7684\u60C5\u51B5\u4E0B\u53EF\u80FD\u4F1A\u67E5\u8BE2\u7F13\u6162\u3002\n- \u5982\u4F55\u4F18\u5316\u8BF7\u53C2\u8003\u6B64\u6587\u6863\uFF1Ahttps://uniapp.dcloud.net.cn/uniCloud/jql?id=lookup-with-temp \n- \u5982\u679C\u4E3B\u8868\u6570\u636E\u91CF\u5F88\u5C0F\u8BF7\u5FFD\u7565\u6B64\u4FE1\u606F\uFF0C\u9879\u76EE\u53D1\u884C\u65F6\u4E0D\u4F1A\u51FA\u73B0\u6B64\u63D0\u793A\u3002");
    }
    return this._database._callCloudFunction({ action: n2, command: s2 });
  }
}
function Fn(e2, t2, n2) {
  return On(new Dn(e2, t2, n2), { get(e3, t3) {
    let s2 = "db";
    return e3 && e3.content && (s2 = e3.content.$method), Rn(s2, t3) ? Fn({ $method: t3 }, e3, n2) : function() {
      return Fn({ $method: t3, $param: Ln(Array.from(arguments)) }, e3, n2);
    };
  } });
}
function qn({ path: e2, method: t2 }) {
  return class {
    constructor() {
      this.param = Array.from(arguments);
    }
    toJSON() {
      return { $newDb: [...e2.map((e3) => ({ $method: e3 })), { $method: t2, $param: this.param }] };
    }
  };
}
function Kn(e2, t2 = {}) {
  return On(new e2(t2), { get: (e3, t3) => Rn("db", t3) ? Fn({ $method: t3 }, null, e3) : function() {
    return Fn({ $method: t3, $param: Ln(Array.from(arguments)) }, null, e3);
  } });
}
class Mn extends class {
  constructor({ uniClient: e2 = {}, isJQL: t2 = false } = {}) {
    this._uniClient = e2, this._authCallBacks = {}, this._dbCallBacks = {}, e2.isDefault && (this._dbCallBacks = C("_globalUniCloudDatabaseCallback")), t2 || (this.auth = xn(this._authCallBacks)), this._isJQL = t2, Object.assign(this, xn(this._dbCallBacks)), this.env = On({}, { get: (e3, t3) => ({ $env: t3 }) }), this.Geo = On({}, { get: (e3, t3) => qn({ path: ["Geo"], method: t3 }) }), this.serverDate = qn({ path: [], method: "serverDate" }), this.RegExp = qn({ path: [], method: "RegExp" });
  }
  getCloudEnv(e2) {
    if ("string" != typeof e2 || !e2.trim())
      throw new Error("getCloudEnv\u53C2\u6570\u9519\u8BEF");
    return { $env: e2.replace("$cloudEnv_", "") };
  }
  _callback(e2, t2) {
    const n2 = this._dbCallBacks;
    n2[e2] && n2[e2].forEach((e3) => {
      e3(...t2);
    });
  }
  _callbackAuth(e2, t2) {
    const n2 = this._authCallBacks;
    n2[e2] && n2[e2].forEach((e3) => {
      e3(...t2);
    });
  }
  multiSend() {
    const e2 = Array.from(arguments), t2 = e2.map((e3) => {
      const t3 = e3.getAction(), n2 = e3.getCommand();
      if ("getTemp" !== n2.$db[n2.$db.length - 1].$method)
        throw new Error("multiSend\u53EA\u652F\u6301\u5B50\u547D\u4EE4\u5185\u4F7F\u7528getTemp");
      return { action: t3, command: n2 };
    });
    return this._callCloudFunction({ multiCommand: t2, queryList: e2 });
  }
} {
  _parseResult(e2) {
    return this._isJQL ? e2.result : e2;
  }
  _callCloudFunction({ action: e2, command: t2, multiCommand: n2, queryList: s2 }) {
    function r2(e3, t3) {
      if (n2 && s2)
        for (let n3 = 0; n3 < s2.length; n3++) {
          const r3 = s2[n3];
          r3.udb && "function" == typeof r3.udb.setResult && (t3 ? r3.udb.setResult(t3) : r3.udb.setResult(e3.result.dataList[n3]));
        }
    }
    const i2 = this, o2 = this._isJQL ? "databaseForJQL" : "database";
    function a2(e3) {
      return i2._callback("error", [e3]), U(R(o2, "fail"), e3).then(() => U(R(o2, "complete"), e3)).then(() => (r2(null, e3), z(D, { type: K, content: e3 }), Promise.reject(e3)));
    }
    const c2 = U(R(o2, "invoke")), u2 = this._uniClient;
    return c2.then(() => u2.callFunction({ name: "DCloud-clientDB", type: h, data: { action: e2, command: t2, multiCommand: n2 } })).then((e3) => {
      const { code: t3, message: n3, token: s3, tokenExpired: c3, systemInfo: u3 = [] } = e3.result;
      if (u3)
        for (let e4 = 0; e4 < u3.length; e4++) {
          const { level: t4, message: n4, detail: s4 } = u3[e4], r3 = console["app" === S && "warn" === t4 ? "error" : t4] || console.log;
          let i3 = "[System Info]" + n4;
          s4 && (i3 = `${i3}
\u8BE6\u7EC6\u4FE1\u606F\uFF1A${s4}`), r3(i3);
        }
      if (t3) {
        return a2(new Q({ code: t3, message: n3, requestId: e3.requestId }));
      }
      e3.result.errCode = e3.result.errCode || e3.result.code, e3.result.errMsg = e3.result.errMsg || e3.result.message, s3 && c3 && (te({ token: s3, tokenExpired: c3 }), this._callbackAuth("refreshToken", [{ token: s3, tokenExpired: c3 }]), this._callback("refreshToken", [{ token: s3, tokenExpired: c3 }]), z(q, { token: s3, tokenExpired: c3 }));
      const l2 = [{ prop: "affectedDocs", tips: "affectedDocs\u4E0D\u518D\u63A8\u8350\u4F7F\u7528\uFF0C\u8BF7\u4F7F\u7528inserted/deleted/updated/data.length\u66FF\u4EE3" }, { prop: "code", tips: "code\u4E0D\u518D\u63A8\u8350\u4F7F\u7528\uFF0C\u8BF7\u4F7F\u7528errCode\u66FF\u4EE3" }, { prop: "message", tips: "message\u4E0D\u518D\u63A8\u8350\u4F7F\u7528\uFF0C\u8BF7\u4F7F\u7528errMsg\u66FF\u4EE3" }];
      for (let t4 = 0; t4 < l2.length; t4++) {
        const { prop: n4, tips: s4 } = l2[t4];
        if (n4 in e3.result) {
          const t5 = e3.result[n4];
          Object.defineProperty(e3.result, n4, { get: () => (console.warn(s4), t5) });
        }
      }
      return function(e4) {
        return U(R(o2, "success"), e4).then(() => U(R(o2, "complete"), e4)).then(() => {
          r2(e4, null);
          const t4 = i2._parseResult(e4);
          return z(D, { type: K, content: t4 }), Promise.resolve(t4);
        });
      }(e3);
    }, (e3) => {
      /fc_function_not_found|FUNCTION_NOT_FOUND/g.test(e3.message) && console.warn("clientDB\u672A\u521D\u59CB\u5316\uFF0C\u8BF7\u5728web\u63A7\u5236\u53F0\u4FDD\u5B58\u4E00\u6B21schema\u4EE5\u5F00\u542FclientDB");
      return a2(new Q({ code: e3.code || "SYSTEM_ERROR", message: e3.message, requestId: e3.requestId }));
    });
  }
}
const jn = "token\u65E0\u6548\uFF0C\u8DF3\u8F6C\u767B\u5F55\u9875\u9762", Bn = "token\u8FC7\u671F\uFF0C\u8DF3\u8F6C\u767B\u5F55\u9875\u9762", $n = { TOKEN_INVALID_TOKEN_EXPIRED: Bn, TOKEN_INVALID_INVALID_CLIENTID: jn, TOKEN_INVALID: jn, TOKEN_INVALID_WRONG_TOKEN: jn, TOKEN_INVALID_ANONYMOUS_USER: jn }, Wn = { "uni-id-token-expired": Bn, "uni-id-check-token-failed": jn, "uni-id-token-not-exist": jn, "uni-id-check-device-feature-failed": jn };
function zn(e2, t2) {
  let n2 = "";
  return n2 = e2 ? `${e2}/${t2}` : t2, n2.replace(/^\//, "");
}
function Jn(e2 = [], t2 = "") {
  const n2 = [], s2 = [];
  return e2.forEach((e3) => {
    true === e3.needLogin ? n2.push(zn(t2, e3.path)) : false === e3.needLogin && s2.push(zn(t2, e3.path));
  }), { needLoginPage: n2, notNeedLoginPage: s2 };
}
function Hn(e2) {
  return e2.split("?")[0].replace(/^\//, "");
}
function Gn() {
  return function(e2) {
    let t2 = e2 && e2.$page && e2.$page.fullPath || "";
    return t2 ? ("/" !== t2.charAt(0) && (t2 = "/" + t2), t2) : t2;
  }(function() {
    const e2 = getCurrentPages();
    return e2[e2.length - 1];
  }());
}
function Vn() {
  return Hn(Gn());
}
function Yn(e2 = "", t2 = {}) {
  if (!e2)
    return false;
  if (!(t2 && t2.list && t2.list.length))
    return false;
  const n2 = t2.list, s2 = Hn(e2);
  return n2.some((e3) => e3.pagePath === s2);
}
const Qn = !!t.uniIdRouter;
const { loginPage: Xn, routerNeedLogin: Zn, resToLogin: es, needLoginPage: ts, notNeedLoginPage: ns, loginPageInTabBar: ss } = function({ pages: e2 = [], subPackages: n2 = [], uniIdRouter: s2 = {}, tabBar: r2 = {} } = t) {
  const { loginPage: i2, needLogin: o2 = [], resToLogin: a2 = true } = s2, { needLoginPage: c2, notNeedLoginPage: u2 } = Jn(e2), { needLoginPage: l2, notNeedLoginPage: h2 } = function(e3 = []) {
    const t2 = [], n3 = [];
    return e3.forEach((e4) => {
      const { root: s3, pages: r3 = [] } = e4, { needLoginPage: i3, notNeedLoginPage: o3 } = Jn(r3, s3);
      t2.push(...i3), n3.push(...o3);
    }), { needLoginPage: t2, notNeedLoginPage: n3 };
  }(n2);
  return { loginPage: i2, routerNeedLogin: o2, resToLogin: a2, needLoginPage: [...c2, ...l2], notNeedLoginPage: [...u2, ...h2], loginPageInTabBar: Yn(i2, r2) };
}();
if (ts.indexOf(Xn) > -1)
  throw new Error(`Login page [${Xn}] should not be "needLogin", please check your pages.json`);
function rs(e2) {
  const t2 = Vn();
  if ("/" === e2.charAt(0))
    return e2;
  const [n2, s2] = e2.split("?"), r2 = n2.replace(/^\//, "").split("/"), i2 = t2.split("/");
  i2.pop();
  for (let e3 = 0; e3 < r2.length; e3++) {
    const t3 = r2[e3];
    ".." === t3 ? i2.pop() : "." !== t3 && i2.push(t3);
  }
  return "" === i2[0] && i2.shift(), "/" + i2.join("/") + (s2 ? "?" + s2 : "");
}
function is(e2) {
  const t2 = Hn(rs(e2));
  return !(ns.indexOf(t2) > -1) && (ts.indexOf(t2) > -1 || Zn.some((t3) => function(e3, t4) {
    return new RegExp(t4).test(e3);
  }(e2, t3)));
}
function os({ redirect: e2 }) {
  const t2 = Hn(e2), n2 = Hn(Xn);
  return Vn() !== n2 && t2 !== n2;
}
function as({ api: e2, redirect: t2 } = {}) {
  if (!t2 || !os({ redirect: t2 }))
    return;
  const n2 = function(e3, t3) {
    return "/" !== e3.charAt(0) && (e3 = "/" + e3), t3 ? e3.indexOf("?") > -1 ? e3 + `&uniIdRedirectUrl=${encodeURIComponent(t3)}` : e3 + `?uniIdRedirectUrl=${encodeURIComponent(t3)}` : e3;
  }(Xn, t2);
  ss ? "navigateTo" !== e2 && "redirectTo" !== e2 || (e2 = "switchTab") : "switchTab" === e2 && (e2 = "navigateTo");
  const s2 = { navigateTo: index$1.navigateTo, redirectTo: index$1.redirectTo, switchTab: index$1.switchTab, reLaunch: index$1.reLaunch };
  setTimeout(() => {
    s2[e2]({ url: n2 });
  });
}
function cs({ url: e2 } = {}) {
  const t2 = { abortLoginPageJump: false, autoToLoginPage: false }, n2 = function() {
    const { token: e3, tokenExpired: t3 } = ee();
    let n3;
    if (e3) {
      if (t3 < Date.now()) {
        const e4 = "uni-id-token-expired";
        n3 = { errCode: e4, errMsg: Wn[e4] };
      }
    } else {
      const e4 = "uni-id-check-token-failed";
      n3 = { errCode: e4, errMsg: Wn[e4] };
    }
    return n3;
  }();
  if (is(e2) && n2) {
    n2.uniIdRedirectUrl = e2;
    if (B(F).length > 0)
      return setTimeout(() => {
        z(F, n2);
      }, 0), t2.abortLoginPageJump = true, t2;
    t2.autoToLoginPage = true;
  }
  return t2;
}
function us() {
  !function() {
    const e3 = Gn(), { abortLoginPageJump: t2, autoToLoginPage: n2 } = cs({ url: e3 });
    t2 || n2 && as({ api: "redirectTo", redirect: e3 });
  }();
  const e2 = ["navigateTo", "redirectTo", "reLaunch", "switchTab"];
  for (let t2 = 0; t2 < e2.length; t2++) {
    const n2 = e2[t2];
    index$1.addInterceptor(n2, { invoke(e3) {
      const { abortLoginPageJump: t3, autoToLoginPage: s2 } = cs({ url: e3.url });
      return t3 ? e3 : s2 ? (as({ api: n2, redirect: rs(e3.url) }), false) : e3;
    } });
  }
}
function ls() {
  this.onResponse((e2) => {
    const { type: t2, content: n2 } = e2;
    let s2 = false;
    switch (t2) {
      case "cloudobject":
        s2 = function(e3) {
          const { errCode: t3 } = e3;
          return t3 in Wn;
        }(n2);
        break;
      case "clientdb":
        s2 = function(e3) {
          const { errCode: t3 } = e3;
          return t3 in $n;
        }(n2);
    }
    s2 && function(e3 = {}) {
      const t3 = B(F);
      G().then(() => {
        const n3 = Gn();
        if (n3 && os({ redirect: n3 }))
          return t3.length > 0 ? z(F, Object.assign({ uniIdRedirectUrl: n3 }, e3)) : void (Xn && as({ api: "navigateTo", redirect: n3 }));
      });
    }(n2);
  });
}
function hs(e2) {
  !function(e3) {
    e3.onResponse = function(e4) {
      $(D, e4);
    }, e3.offResponse = function(e4) {
      W(D, e4);
    };
  }(e2), function(e3) {
    e3.onNeedLogin = function(e4) {
      $(F, e4);
    }, e3.offNeedLogin = function(e4) {
      W(F, e4);
    }, Qn && (C("_globalUniCloudStatus").needLoginInit || (C("_globalUniCloudStatus").needLoginInit = true, G().then(() => {
      us.call(e3);
    }), es && ls.call(e3)));
  }(e2), function(e3) {
    e3.onRefreshToken = function(e4) {
      $(q, e4);
    }, e3.offRefreshToken = function(e4) {
      W(q, e4);
    };
  }(e2);
}
let ds;
const fs = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", ps = /^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;
function gs() {
  const e2 = ee().token || "", t2 = e2.split(".");
  if (!e2 || 3 !== t2.length)
    return { uid: null, role: [], permission: [], tokenExpired: 0 };
  let n2;
  try {
    n2 = JSON.parse((s2 = t2[1], decodeURIComponent(ds(s2).split("").map(function(e3) {
      return "%" + ("00" + e3.charCodeAt(0).toString(16)).slice(-2);
    }).join(""))));
  } catch (e3) {
    throw new Error("\u83B7\u53D6\u5F53\u524D\u7528\u6237\u4FE1\u606F\u51FA\u9519\uFF0C\u8BE6\u7EC6\u9519\u8BEF\u4FE1\u606F\u4E3A\uFF1A" + e3.message);
  }
  var s2;
  return n2.tokenExpired = 1e3 * n2.exp, delete n2.exp, delete n2.iat, n2;
}
ds = "function" != typeof atob ? function(e2) {
  if (e2 = String(e2).replace(/[\t\n\f\r ]+/g, ""), !ps.test(e2))
    throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");
  var t2;
  e2 += "==".slice(2 - (3 & e2.length));
  for (var n2, s2, r2 = "", i2 = 0; i2 < e2.length; )
    t2 = fs.indexOf(e2.charAt(i2++)) << 18 | fs.indexOf(e2.charAt(i2++)) << 12 | (n2 = fs.indexOf(e2.charAt(i2++))) << 6 | (s2 = fs.indexOf(e2.charAt(i2++))), r2 += 64 === n2 ? String.fromCharCode(t2 >> 16 & 255) : 64 === s2 ? String.fromCharCode(t2 >> 16 & 255, t2 >> 8 & 255) : String.fromCharCode(t2 >> 16 & 255, t2 >> 8 & 255, 255 & t2);
  return r2;
} : atob;
var ms = s(function(e2, t2) {
  Object.defineProperty(t2, "__esModule", { value: true });
  const n2 = "chooseAndUploadFile:ok", s2 = "chooseAndUploadFile:fail";
  function r2(e3, t3) {
    return e3.tempFiles.forEach((e4, n3) => {
      e4.name || (e4.name = e4.path.substring(e4.path.lastIndexOf("/") + 1)), t3 && (e4.fileType = t3), e4.cloudPath = Date.now() + "_" + n3 + e4.name.substring(e4.name.lastIndexOf("."));
    }), e3.tempFilePaths || (e3.tempFilePaths = e3.tempFiles.map((e4) => e4.path)), e3;
  }
  function i2(e3, t3, { onChooseFile: s3, onUploadProgress: r3 }) {
    return t3.then((e4) => {
      if (s3) {
        const t4 = s3(e4);
        if (void 0 !== t4)
          return Promise.resolve(t4).then((t5) => void 0 === t5 ? e4 : t5);
      }
      return e4;
    }).then((t4) => false === t4 ? { errMsg: n2, tempFilePaths: [], tempFiles: [] } : function(e4, t5, s4 = 5, r4) {
      (t5 = Object.assign({}, t5)).errMsg = n2;
      const i3 = t5.tempFiles, o2 = i3.length;
      let a2 = 0;
      return new Promise((n3) => {
        for (; a2 < s4; )
          c2();
        function c2() {
          const s5 = a2++;
          if (s5 >= o2)
            return void (!i3.find((e5) => !e5.url && !e5.errMsg) && n3(t5));
          const u2 = i3[s5];
          e4.uploadFile({ filePath: u2.path, cloudPath: u2.cloudPath, fileType: u2.fileType, onUploadProgress(e5) {
            e5.index = s5, e5.tempFile = u2, e5.tempFilePath = u2.path, r4 && r4(e5);
          } }).then((e5) => {
            u2.url = e5.fileID, s5 < o2 && c2();
          }).catch((e5) => {
            u2.errMsg = e5.errMsg || e5.message, s5 < o2 && c2();
          });
        }
      });
    }(e3, t4, 5, r3));
  }
  t2.initChooseAndUploadFile = function(e3) {
    return function(t3 = { type: "all" }) {
      return "image" === t3.type ? i2(e3, function(e4) {
        const { count: t4, sizeType: n3, sourceType: i3 = ["album", "camera"], extension: o2 } = e4;
        return new Promise((e5, a2) => {
          index$1.chooseImage({ count: t4, sizeType: n3, sourceType: i3, extension: o2, success(t5) {
            e5(r2(t5, "image"));
          }, fail(e6) {
            a2({ errMsg: e6.errMsg.replace("chooseImage:fail", s2) });
          } });
        });
      }(t3), t3) : "video" === t3.type ? i2(e3, function(e4) {
        const { camera: t4, compressed: n3, maxDuration: i3, sourceType: o2 = ["album", "camera"], extension: a2 } = e4;
        return new Promise((e5, c2) => {
          index$1.chooseVideo({ camera: t4, compressed: n3, maxDuration: i3, sourceType: o2, extension: a2, success(t5) {
            const { tempFilePath: n4, duration: s3, size: i4, height: o3, width: a3 } = t5;
            e5(r2({ errMsg: "chooseVideo:ok", tempFilePaths: [n4], tempFiles: [{ name: t5.tempFile && t5.tempFile.name || "", path: n4, size: i4, type: t5.tempFile && t5.tempFile.type || "", width: a3, height: o3, duration: s3, fileType: "video", cloudPath: "" }] }, "video"));
          }, fail(e6) {
            c2({ errMsg: e6.errMsg.replace("chooseVideo:fail", s2) });
          } });
        });
      }(t3), t3) : i2(e3, function(e4) {
        const { count: t4, extension: n3 } = e4;
        return new Promise((e5, i3) => {
          let o2 = index$1.chooseFile;
          if ("undefined" != typeof wx$1 && "function" == typeof wx$1.chooseMessageFile && (o2 = wx$1.chooseMessageFile), "function" != typeof o2)
            return i3({ errMsg: s2 + " \u8BF7\u6307\u5B9A type \u7C7B\u578B\uFF0C\u8BE5\u5E73\u53F0\u4EC5\u652F\u6301\u9009\u62E9 image \u6216 video\u3002" });
          o2({ type: "all", count: t4, extension: n3, success(t5) {
            e5(r2(t5));
          }, fail(e6) {
            i3({ errMsg: e6.errMsg.replace("chooseFile:fail", s2) });
          } });
        });
      }(t3), t3);
    };
  };
}), ys = n(ms);
const _s = "manual";
function ws(e2) {
  return { props: { localdata: { type: Array, default: () => [] }, options: { type: [Object, Array], default: () => ({}) }, spaceInfo: { type: Object, default: () => ({}) }, collection: { type: [String, Array], default: "" }, action: { type: String, default: "" }, field: { type: String, default: "" }, orderby: { type: String, default: "" }, where: { type: [String, Object], default: "" }, pageData: { type: String, default: "add" }, pageCurrent: { type: Number, default: 1 }, pageSize: { type: Number, default: 20 }, getcount: { type: [Boolean, String], default: false }, gettree: { type: [Boolean, String], default: false }, gettreepath: { type: [Boolean, String], default: false }, startwith: { type: String, default: "" }, limitlevel: { type: Number, default: 10 }, groupby: { type: String, default: "" }, groupField: { type: String, default: "" }, distinct: { type: [Boolean, String], default: false }, foreignKey: { type: String, default: "" }, loadtime: { type: String, default: "auto" }, manual: { type: Boolean, default: false } }, data: () => ({ mixinDatacomLoading: false, mixinDatacomHasMore: false, mixinDatacomResData: [], mixinDatacomErrorMessage: "", mixinDatacomPage: {} }), created() {
    this.mixinDatacomPage = { current: this.pageCurrent, size: this.pageSize, count: 0 }, this.$watch(() => {
      var e3 = [];
      return ["pageCurrent", "pageSize", "localdata", "collection", "action", "field", "orderby", "where", "getont", "getcount", "gettree", "groupby", "groupField", "distinct"].forEach((t2) => {
        e3.push(this[t2]);
      }), e3;
    }, (e3, t2) => {
      if (this.loadtime === _s)
        return;
      let n2 = false;
      const s2 = [];
      for (let r2 = 2; r2 < e3.length; r2++)
        e3[r2] !== t2[r2] && (s2.push(e3[r2]), n2 = true);
      e3[0] !== t2[0] && (this.mixinDatacomPage.current = this.pageCurrent), this.mixinDatacomPage.size = this.pageSize, this.onMixinDatacomPropsChange(n2, s2);
    });
  }, methods: { onMixinDatacomPropsChange(e3, t2) {
  }, mixinDatacomEasyGet({ getone: e3 = false, success: t2, fail: n2 } = {}) {
    this.mixinDatacomLoading || (this.mixinDatacomLoading = true, this.mixinDatacomErrorMessage = "", this.mixinDatacomGet().then((n3) => {
      this.mixinDatacomLoading = false;
      const { data: s2, count: r2 } = n3.result;
      this.getcount && (this.mixinDatacomPage.count = r2), this.mixinDatacomHasMore = s2.length < this.pageSize;
      const i2 = e3 ? s2.length ? s2[0] : void 0 : s2;
      this.mixinDatacomResData = i2, t2 && t2(i2);
    }).catch((e4) => {
      this.mixinDatacomLoading = false, this.mixinDatacomErrorMessage = e4, n2 && n2(e4);
    }));
  }, mixinDatacomGet(t2 = {}) {
    let n2 = e2.database(this.spaceInfo);
    const s2 = t2.action || this.action;
    s2 && (n2 = n2.action(s2));
    const r2 = t2.collection || this.collection;
    n2 = Array.isArray(r2) ? n2.collection(...r2) : n2.collection(r2);
    const i2 = t2.where || this.where;
    i2 && Object.keys(i2).length && (n2 = n2.where(i2));
    const o2 = t2.field || this.field;
    o2 && (n2 = n2.field(o2));
    const a2 = t2.foreignKey || this.foreignKey;
    a2 && (n2 = n2.foreignKey(a2));
    const c2 = t2.groupby || this.groupby;
    c2 && (n2 = n2.groupBy(c2));
    const u2 = t2.groupField || this.groupField;
    u2 && (n2 = n2.groupField(u2));
    true === (void 0 !== t2.distinct ? t2.distinct : this.distinct) && (n2 = n2.distinct());
    const l2 = t2.orderby || this.orderby;
    l2 && (n2 = n2.orderBy(l2));
    const h2 = void 0 !== t2.pageCurrent ? t2.pageCurrent : this.mixinDatacomPage.current, d2 = void 0 !== t2.pageSize ? t2.pageSize : this.mixinDatacomPage.size, f2 = void 0 !== t2.getcount ? t2.getcount : this.getcount, p2 = void 0 !== t2.gettree ? t2.gettree : this.gettree, g2 = void 0 !== t2.gettreepath ? t2.gettreepath : this.gettreepath, m2 = { getCount: f2 }, y2 = { limitLevel: void 0 !== t2.limitlevel ? t2.limitlevel : this.limitlevel, startWith: void 0 !== t2.startwith ? t2.startwith : this.startwith };
    return p2 && (m2.getTree = y2), g2 && (m2.getTreePath = y2), n2 = n2.skip(d2 * (h2 - 1)).limit(d2).get(m2), n2;
  } } };
}
function vs(e2) {
  return function(t2, n2 = {}) {
    n2 = function(e3, t3 = {}) {
      return e3.customUI = t3.customUI || e3.customUI, e3.parseSystemError = t3.parseSystemError || e3.parseSystemError, Object.assign(e3.loadingOptions, t3.loadingOptions), Object.assign(e3.errorOptions, t3.errorOptions), "object" == typeof t3.secretMethods && (e3.secretMethods = t3.secretMethods), e3;
    }({ customUI: false, loadingOptions: { title: "\u52A0\u8F7D\u4E2D...", mask: true }, errorOptions: { type: "modal", retry: false } }, n2);
    const { customUI: s2, loadingOptions: r2, errorOptions: i2, parseSystemError: o2 } = n2, a2 = !s2;
    return new Proxy({}, { get: (s3, c2) => function({ fn: e3, interceptorName: t3, getCallbackArgs: n3 } = {}) {
      return async function(...s4) {
        const r3 = n3 ? n3({ params: s4 }) : {};
        let i3, o3;
        try {
          return await U(R(t3, "invoke"), { ...r3 }), i3 = await e3(...s4), await U(R(t3, "success"), { ...r3, result: i3 }), i3;
        } catch (e4) {
          throw o3 = e4, await U(R(t3, "fail"), { ...r3, error: o3 }), o3;
        } finally {
          await U(R(t3, "complete"), o3 ? { ...r3, error: o3 } : { ...r3, result: i3 });
        }
      };
    }({ fn: async function s4(...u2) {
      let h2;
      a2 && index$1.showLoading({ title: r2.title, mask: r2.mask });
      const d2 = { name: t2, type: l, data: { method: c2, params: u2 } };
      "object" == typeof n2.secretMethods && function(e3, t3) {
        const n3 = t3.data.method, s5 = e3.secretMethods || {}, r3 = s5[n3] || s5["*"];
        r3 && (t3.secretType = r3);
      }(n2, d2);
      let f2 = false;
      try {
        h2 = await e2.callFunction(d2);
      } catch (e3) {
        f2 = true, h2 = { result: new Q(e3) };
      }
      const { errSubject: p2, errCode: g2, errMsg: m2, newToken: y2 } = h2.result || {};
      if (a2 && index$1.hideLoading(), y2 && y2.token && y2.tokenExpired && (te(y2), z(q, { ...y2 })), g2) {
        let e3 = m2;
        if (f2 && o2) {
          e3 = (await o2({ objectName: t2, methodName: c2, params: u2, errSubject: p2, errCode: g2, errMsg: m2 })).errMsg || m2;
        }
        if (a2)
          if ("toast" === i2.type)
            index$1.showToast({ title: e3, icon: "none" });
          else {
            if ("modal" !== i2.type)
              throw new Error(`Invalid errorOptions.type: ${i2.type}`);
            {
              const { confirm: t3 } = await async function({ title: e4, content: t4, showCancel: n4, cancelText: s5, confirmText: r3 } = {}) {
                return new Promise((i3, o3) => {
                  index$1.showModal({ title: e4, content: t4, showCancel: n4, cancelText: s5, confirmText: r3, success(e5) {
                    i3(e5);
                  }, fail() {
                    i3({ confirm: false, cancel: true });
                  } });
                });
              }({ title: "\u63D0\u793A", content: e3, showCancel: i2.retry, cancelText: "\u53D6\u6D88", confirmText: i2.retry ? "\u91CD\u8BD5" : "\u786E\u5B9A" });
              if (i2.retry && t3)
                return s4(...u2);
            }
          }
        const n3 = new Q({ subject: p2, code: g2, message: m2, requestId: h2.requestId });
        throw n3.detail = h2.result, z(D, { type: j, content: n3 }), n3;
      }
      return z(D, { type: j, content: h2.result }), h2.result;
    }, interceptorName: "callObject", getCallbackArgs: function({ params: e3 } = {}) {
      return { objectName: t2, methodName: c2, params: e3 };
    } }) });
  };
}
function Ss(e2) {
  return C("_globalUniCloudSecureNetworkCache__{spaceId}".replace("{spaceId}", e2.config.spaceId));
}
async function ks({ callLoginByWeixin: e2 = false } = {}) {
  const t2 = Ss(this);
  if ("mp-weixin" !== S)
    throw new Error(`[SecureNetwork] API \`initSecureNetworkByWeixin\` is not supported on platform \`${S}\``);
  const n2 = await new Promise((e3, t3) => {
    index$1.login({ success(t4) {
      e3(t4.code);
    }, fail(e4) {
      t3(new Error(e4.errMsg));
    } });
  }), s2 = this.importObject("uni-id-co", { customUI: true });
  return await s2.secureNetworkHandshakeByWeixin({ code: n2, callLoginByWeixin: e2 }), t2.mpWeixinCode = n2, { code: n2 };
}
async function Is(e2) {
  const t2 = Ss(this);
  return t2.initPromise || (t2.initPromise = ks.call(this, e2)), t2.initPromise;
}
function bs(e2) {
  return function({ callLoginByWeixin: t2 = false } = {}) {
    return Is.call(e2, { callLoginByWeixin: t2 });
  };
}
async function Ts(e2, t2) {
  const n2 = `http://${e2}:${t2}/system/ping`;
  try {
    const e3 = await (s2 = { url: n2, timeout: 500 }, new Promise((e4, t3) => {
      X.request({ ...s2, success(t4) {
        e4(t4);
      }, fail(e5) {
        t3(e5);
      } });
    }));
    return !(!e3.data || 0 !== e3.data.code);
  } catch (e3) {
    return false;
  }
  var s2;
}
function As(e2) {
  if (e2.initUniCloudStatus && "rejected" !== e2.initUniCloudStatus)
    return;
  let t2 = Promise.resolve();
  var n2;
  n2 = 1, t2 = new Promise((e3) => {
    setTimeout(() => {
      e3();
    }, n2);
  }), e2.isReady = false, e2.isDefault = false;
  const s2 = e2.auth();
  e2.initUniCloudStatus = "pending", e2.initUniCloud = t2.then(() => s2.getLoginState()).then((e3) => e3 ? Promise.resolve() : s2.signInAnonymously()).then(() => {
    if ("app" === S) {
      const { osName: e3, osVersion: t3 } = ie();
      "ios" === e3 && function(e4) {
        if (!e4 || "string" != typeof e4)
          return 0;
        const t4 = e4.match(/^(\d+)./);
        return t4 && t4[1] ? parseInt(t4[1]) : 0;
      }(t3) >= 14 && console.warn("iOS 14\u53CA\u4EE5\u4E0A\u7248\u672C\u8FDE\u63A5uniCloud\u672C\u5730\u8C03\u8BD5\u670D\u52A1\u9700\u8981\u5141\u8BB8\u5BA2\u6237\u7AEF\u67E5\u627E\u5E76\u8FDE\u63A5\u5230\u672C\u5730\u7F51\u7EDC\u4E0A\u7684\u8BBE\u5907\uFF08\u4EC5\u5F00\u53D1\u6A21\u5F0F\u751F\u6548\uFF0C\u53D1\u884C\u6A21\u5F0F\u4F1A\u8FDE\u63A5uniCloud\u4E91\u7AEF\u670D\u52A1\uFF09");
    }
    if (e2.__dev__.debugInfo) {
      const { address: t3, servePort: n3 } = e2.__dev__.debugInfo;
      return async function(e3, t4) {
        let n4;
        for (let s3 = 0; s3 < e3.length; s3++) {
          const r2 = e3[s3];
          if (await Ts(r2, t4)) {
            n4 = r2;
            break;
          }
        }
        return { address: n4, port: t4 };
      }(t3, n3);
    }
  }).then(({ address: t3, port: n3 } = {}) => {
    const s3 = console["app" === S ? "error" : "warn"];
    if (t3)
      e2.__dev__.localAddress = t3, e2.__dev__.localPort = n3;
    else if (e2.__dev__.debugInfo) {
      let t4 = "";
      "remote" === e2.__dev__.debugInfo.initialLaunchType ? (e2.__dev__.debugInfo.forceRemote = true, t4 = "\u5F53\u524D\u5BA2\u6237\u7AEF\u548CHBuilderX\u4E0D\u5728\u540C\u4E00\u5C40\u57DF\u7F51\u4E0B\uFF08\u6216\u5176\u4ED6\u7F51\u7EDC\u539F\u56E0\u65E0\u6CD5\u8FDE\u63A5HBuilderX\uFF09\uFF0CuniCloud\u672C\u5730\u8C03\u8BD5\u670D\u52A1\u4E0D\u5BF9\u5F53\u524D\u5BA2\u6237\u7AEF\u751F\u6548\u3002\n- \u5982\u679C\u4E0D\u4F7F\u7528uniCloud\u672C\u5730\u8C03\u8BD5\u670D\u52A1\uFF0C\u8BF7\u76F4\u63A5\u5FFD\u7565\u6B64\u4FE1\u606F\u3002\n- \u5982\u9700\u4F7F\u7528uniCloud\u672C\u5730\u8C03\u8BD5\u670D\u52A1\uFF0C\u8BF7\u5C06\u5BA2\u6237\u7AEF\u4E0E\u4E3B\u673A\u8FDE\u63A5\u5230\u540C\u4E00\u5C40\u57DF\u7F51\u4E0B\u5E76\u91CD\u65B0\u8FD0\u884C\u5230\u5BA2\u6237\u7AEF\u3002") : t4 = "\u65E0\u6CD5\u8FDE\u63A5uniCloud\u672C\u5730\u8C03\u8BD5\u670D\u52A1\uFF0C\u8BF7\u68C0\u67E5\u5F53\u524D\u5BA2\u6237\u7AEF\u662F\u5426\u4E0E\u4E3B\u673A\u5728\u540C\u4E00\u5C40\u57DF\u7F51\u4E0B\u3002\n- \u5982\u9700\u4F7F\u7528uniCloud\u672C\u5730\u8C03\u8BD5\u670D\u52A1\uFF0C\u8BF7\u5C06\u5BA2\u6237\u7AEF\u4E0E\u4E3B\u673A\u8FDE\u63A5\u5230\u540C\u4E00\u5C40\u57DF\u7F51\u4E0B\u5E76\u91CD\u65B0\u8FD0\u884C\u5230\u5BA2\u6237\u7AEF\u3002", t4 += "\n- \u5982\u679C\u5728HBuilderX\u5F00\u542F\u7684\u72B6\u6001\u4E0B\u5207\u6362\u8FC7\u7F51\u7EDC\u73AF\u5883\uFF0C\u8BF7\u91CD\u542FHBuilderX\u540E\u518D\u8BD5\n- \u68C0\u67E5\u7CFB\u7EDF\u9632\u706B\u5899\u662F\u5426\u62E6\u622A\u4E86HBuilderX\u81EA\u5E26\u7684nodejs\n- \u68C0\u67E5\u662F\u5426\u9519\u8BEF\u7684\u4F7F\u7528\u62E6\u622A\u5668\u4FEE\u6539uni.request\u65B9\u6CD5\u7684\u53C2\u6570", "web" === S && (t4 += "\n- \u90E8\u5206\u6D4F\u89C8\u5668\u5F00\u542F\u8282\u6D41\u6A21\u5F0F\u4E4B\u540E\u8BBF\u95EE\u672C\u5730\u5730\u5740\u53D7\u9650\uFF0C\u8BF7\u68C0\u67E5\u662F\u5426\u542F\u7528\u4E86\u8282\u6D41\u6A21\u5F0F"), 0 === S.indexOf("mp-") && (t4 += "\n- \u5C0F\u7A0B\u5E8F\u4E2D\u5982\u4F55\u4F7F\u7528uniCloud\uFF0C\u8BF7\u53C2\u8003\uFF1Ahttps://uniapp.dcloud.net.cn/uniCloud/publish.html#useinmp"), s3(t4);
    }
  }).then(() => {
    ne(), e2.isReady = true, e2.initUniCloudStatus = "fulfilled";
  }).catch((t3) => {
    console.error(t3), e2.initUniCloudStatus = "rejected";
  });
}
const Cs = { tcb: _t, tencent: _t, aliyun: de, private: vt };
let Ps = new class {
  init(e2) {
    let t2 = {};
    const n2 = Cs[e2.provider];
    if (!n2)
      throw new Error("\u672A\u63D0\u4F9B\u6B63\u786E\u7684provider\u53C2\u6570");
    t2 = n2.init(e2), t2.__dev__ = {}, t2.__dev__.debugLog = "web" === S && navigator.userAgent.indexOf("HBuilderX") > 0 || "app" === S;
    const s2 = k;
    s2 && !s2.code && (t2.__dev__.debugInfo = s2), As(t2), t2.reInit = function() {
      As(this);
    }, Pn(t2), function(e3) {
      const t3 = e3.uploadFile;
      e3.uploadFile = function(e4) {
        return t3.call(this, e4);
      };
    }(t2), function(e3) {
      e3.database = function(t3) {
        if (t3 && Object.keys(t3).length > 0)
          return e3.init(t3).database();
        if (this._database)
          return this._database;
        const n3 = Kn(Mn, { uniClient: e3 });
        return this._database = n3, n3;
      }, e3.databaseForJQL = function(t3) {
        if (t3 && Object.keys(t3).length > 0)
          return e3.init(t3).databaseForJQL();
        if (this._databaseForJQL)
          return this._databaseForJQL;
        const n3 = Kn(Mn, { uniClient: e3, isJQL: true });
        return this._databaseForJQL = n3, n3;
      };
    }(t2), function(e3) {
      e3.getCurrentUserInfo = gs, e3.chooseAndUploadFile = ys.initChooseAndUploadFile(e3), Object.assign(e3, { get mixinDatacom() {
        return ws(e3);
      } }), e3.importObject = vs(e3), e3.initSecureNetworkByWeixin = bs(e3);
    }(t2);
    return ["callFunction", "uploadFile", "deleteFile", "getTempFileURL", "downloadFile", "chooseAndUploadFile"].forEach((e3) => {
      if (!t2[e3])
        return;
      const n3 = t2[e3];
      t2[e3] = function() {
        return t2.reInit(), n3.apply(t2, Array.from(arguments));
      }, t2[e3] = Y(t2[e3], e3).bind(t2);
    }), t2.init = this.init, t2;
  }
}();
(() => {
  const e2 = I;
  let t2 = {};
  if (e2 && 1 === e2.length)
    t2 = e2[0], Ps = Ps.init(t2), Ps.isDefault = true;
  else {
    const t3 = ["auth", "callFunction", "uploadFile", "deleteFile", "getTempFileURL", "downloadFile", "database", "getCurrentUSerInfo", "importObject"];
    let n2;
    n2 = e2 && e2.length > 0 ? "\u5E94\u7528\u6709\u591A\u4E2A\u670D\u52A1\u7A7A\u95F4\uFF0C\u8BF7\u901A\u8FC7uniCloud.init\u65B9\u6CD5\u6307\u5B9A\u8981\u4F7F\u7528\u7684\u670D\u52A1\u7A7A\u95F4" : "\u5E94\u7528\u672A\u5173\u8054\u670D\u52A1\u7A7A\u95F4\uFF0C\u8BF7\u5728uniCloud\u76EE\u5F55\u53F3\u952E\u5173\u8054\u670D\u52A1\u7A7A\u95F4", t3.forEach((e3) => {
      Ps[e3] = function() {
        return console.error(n2), Promise.reject(new Q({ code: "SYS_ERR", message: n2 }));
      };
    });
  }
  Object.assign(Ps, { get mixinDatacom() {
    return ws(Ps);
  } }), hs(Ps), Ps.addInterceptor = O, Ps.removeInterceptor = x, Ps.interceptObject = L, "web" === S && (window.uniCloud = Ps);
})();
var Es = Ps;
exports.Aegis = Aegis;
exports.Es = Es;
exports.Pinia = Pinia;
exports.TIM = TIM$1;
exports.TIM$1 = TIM;
exports.TIMUploadPlugin = TIMUploadPlugin;
exports._export_sfc = _export_sfc;
exports.computed$1 = computed$1;
exports.createPinia = createPinia;
exports.createSSRApp = createSSRApp;
exports.createStore = createStore;
exports.defineComponent = defineComponent;
exports.defineStore = defineStore;
exports.e = e;
exports.f = f$1;
exports.index = index$1;
exports.index$1 = index;
exports.initVueI18n = initVueI18n;
exports.n = n$1;
exports.nextTick = nextTick;
exports.o = o$1;
exports.onBackPress = onBackPress;
exports.onBeforeMount = onBeforeMount;
exports.onBeforeUpdate = onBeforeUpdate;
exports.onLoad = onLoad;
exports.onMounted = onMounted;
exports.onNavigationBarButtonTap = onNavigationBarButtonTap;
exports.onReady = onReady;
exports.onShow = onShow;
exports.p = p$1;
exports.reactive = reactive;
exports.ref = ref;
exports.resolveComponent = resolveComponent;
exports.s = s$1;
exports.sr = sr;
exports.storeToRefs = storeToRefs;
exports.t = t$1;
exports.toRefs = toRefs;
exports.unref = unref;
exports.watch = watch;
exports.watchEffect = watchEffect;
exports.wx$1 = wx$1;
